// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  PATIENT
  PHYSICIAN
  ORGANIZATION_OWNER
}

model User {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  password    String?
  googleId    String?     @unique
  role        RoleType
  tenantId    String
  nationality String
  gender      String
  phonePrefix String?
  phone       String?
  image       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  patients    Patient[]
  physicians  Physician[]
}

model Patient {
  id               String   @id @default(uuid())
  name             String
  healthCareNumber String
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  tenantId         String
  birthdate        DateTime
  nationality      String
  gender           String
  phonePrefix      String?
  phone            String?
}

model Physician {
  id        String @id @default(uuid())
  name      String
  specialty String
  userId    String
  user      User   @relation(fields: [userId], references: [id])
  tenantId  String
}
//paypal model
model Transaction {
  id           String   @id @default(uuid())
  orderId      String   // ID de la orden de PayPal
  status       String   // Estado de la transacción (COMPLETED, FAILED, etc.)
  amount       Float    // Monto de la transacción
  currency     String   // Moneda de la transacción (USD, EUR, etc.)
  userId       String   // Relación con el usuario que realizó el pago
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
}