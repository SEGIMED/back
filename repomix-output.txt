This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.dockerignore
.eslintrc.js
.github/workflows/node-ci.yml
.gitignore
.prettierrc
DockerFile
examples/medical-files.json
examples/medical-order-base64.json
examples/medical-orders.json
examples/medical-prescriptions.json
examples/patient-study-base64.json
MEJORAS_IMPLEMENTADAS.md
nest-cli.json
package.json
prisma/schema.prisma
README.md
src/app.controller.spec.ts
src/app.controller.ts
src/app.module.ts
src/app.service.ts
src/auth/controllers/permission-updater.controller.ts
src/auth/controllers/roles.controller.ts
src/auth/decorators/get-context-tenant.decorator.ts
src/auth/decorators/get-context-user.decorator.ts
src/auth/decorators/get-tenant.decorator.ts
src/auth/decorators/get-tenants.decorator.ts
src/auth/decorators/get-user.decorator.ts
src/auth/decorators/require-permission.decorator.ts
src/auth/guard-auth.module.ts
src/auth/guards/permission.guard.ts
src/auth/guards/superadmin.guard.ts
src/auth/guards/tenant-access.guard.ts
src/auth/guards/tenant-admin.guard.ts
src/auth/middlewares/jwt-user-extractor.middleware.ts
src/auth/middlewares/tenant-extractor.middleware.ts
src/auth/permissions/permission-checker.service.ts
src/auth/permissions/permission.enum.ts
src/auth/permissions/permissions.service.ts
src/auth/roles/roles.service.ts
src/auth/roles/user-role-manager.service.ts
src/auth/services/permission-updater.service.ts
src/auth/services/request-context.service.ts
src/auth/services/vital-signs-optimization.service.ts
src/catalogs/cat-cie-diez/cat-cie-diez.controller.ts
src/catalogs/cat-cie-diez/cat-cie-diez.module.ts
src/catalogs/cat-cie-diez/cat-cie-diez.service.ts
src/catalogs/cat-cie-diez/dto/create-cat-cie-diez.dto.ts
src/catalogs/cat-cie-diez/dto/update-cat-cie-diez.dto.ts
src/catalogs/cat-cie-diez/entities/cat-cie-diez.entity.ts
src/catalogs/cat-identification-type/cat-identification-type-with-cache.service.example.ts
src/catalogs/cat-identification-type/cat-identification-type.controller.ts
src/catalogs/cat-identification-type/cat-identification-type.interface.ts
src/catalogs/cat-identification-type/cat-identification-type.module.ts
src/catalogs/cat-identification-type/cat-identification-type.service.ts
src/catalogs/cat-identification-type/dto/create-cat-identification-type.dto.ts
src/catalogs/cat-identification-type/dto/update-cat-identification-type.dto.ts
src/catalogs/cat-measure-unit/cat-measure-unit.controller.ts
src/catalogs/cat-measure-unit/cat-measure-unit.interface.ts
src/catalogs/cat-measure-unit/cat-measure-unit.module.ts
src/catalogs/cat-measure-unit/cat-measure-unit.service.ts
src/catalogs/cat-measure-unit/dto/create-cat-measure-unit.dto.ts
src/catalogs/cat-study-type/cat-study-type.controller.ts
src/catalogs/cat-study-type/cat-study-type.interface.ts
src/catalogs/cat-study-type/cat-study-type.module.ts
src/catalogs/cat-study-type/cat-study-type.service.ts
src/catalogs/cat-study-type/dto/create-cat-study-type.dto.ts
src/catalogs/cat-vital-signs/cat-vital-signs.controller.ts
src/catalogs/cat-vital-signs/cat-vital-signs.interface.ts
src/catalogs/cat-vital-signs/cat-vital-signs.module.ts
src/catalogs/cat-vital-signs/cat-vital-signs.service.ts
src/catalogs/cat-vital-signs/dto/create-cat-vital-signs.dto.ts
src/catalogs/cat-vital-signs/dto/vital-sign-response.dto.ts
src/catalogs/order-type/dto/create-order-type.dto.ts
src/catalogs/order-type/dto/update-order-type.dto.ts
src/catalogs/order-type/entities/order-type.entity.ts
src/catalogs/order-type/order-type.controller.ts
src/catalogs/order-type/order-type.module.ts
src/catalogs/order-type/order-type.service.ts
src/catalogs/seed/catalog-seed.controller.ts
src/catalogs/seed/catalog-seed.module.ts
src/catalogs/seed/catalog-seed.service.ts
src/catalogs/seed/cie10.json
src/catalogs/seed/cie10B.json
src/catalogs/subcat-cie-diez/dto/create-subcat-cie-diez.dto.ts
src/catalogs/subcat-cie-diez/dto/update-subcat-cie-diez.dto.ts
src/catalogs/subcat-cie-diez/entities/subcat-cie-diez.entity.ts
src/catalogs/subcat-cie-diez/subcat-cie-diez.controller.ts
src/catalogs/subcat-cie-diez/subcat-cie-diez.module.ts
src/catalogs/subcat-cie-diez/subcat-cie-diez.service.ts
src/common/cache/cache.decorator.ts
src/common/cache/cache.interceptor.ts
src/common/cache/cache.module.ts
src/common/cache/cache.service.ts
src/common/config/logging.config.ts
src/docs/appointments.md
src/docs/auth.md
src/docs/background.md
src/docs/cat-cie-diez.md
src/docs/cat-identification-type.md
src/docs/cat-measure-unit.md
src/docs/cat-study-type.md
src/docs/cat-vital-signs.md
src/docs/catalog-seed.md
src/docs/file-upload.md
src/docs/Manual_de_Introducci√≥n_a_Segimed.md
src/docs/medical_order.md
src/docs/medical-events.md
src/docs/medicine.md
src/docs/mobile-appointments.md
src/docs/mobile-latest-vital-signs.md
src/docs/mobile-self-evaluation.md
src/docs/mobile-vital-sign-history.md
src/docs/mobile.appointment.md
src/docs/mood.md
src/docs/MULTITENANT_GUIDE.md
src/docs/NEW_PERMISSIONS_SUMMARY.md
src/docs/notification-service.md
src/docs/order-type.md
src/docs/patient-studies.md
src/docs/patients.md
src/docs/permission-updater.md
src/docs/physical-exploration-area.md
src/docs/physical-exploration.md
src/docs/physician-schedule.md
src/docs/pres-mod-history.md
src/docs/prescription.md
src/docs/roles.md
src/docs/self-evaluation-event.md
src/docs/subcat-cie-diez.md
src/docs/SWAGGER_DOCUMENTATION_REPORT.md
src/docs/user.md
src/docs/vital-signs.md
src/main.ts
src/management/auth/auth.controller.ts
src/management/auth/auth.module.ts
src/management/auth/auth.service.ts
src/management/auth/dto/create-auth.dto.ts
src/management/auth/dto/create-superadmin.dto.ts
src/management/auth/dto/login-response.dto.ts
src/management/auth/dto/password-auth.dto.ts
src/management/auth/dto/update-auth.dto.ts
src/management/auth/entities/auth.entity.ts
src/management/patient/dto/create-patient.dto.ts
src/management/patient/dto/get-patient.dto.ts
src/management/patient/dto/medical-patient.dto.ts
src/management/patient/dto/update-patient.dto.ts
src/management/patient/entities/patient.interface.ts
src/management/patient/patient.controller.ts
src/management/patient/patient.module.ts
src/management/patient/patient.service.ts
src/management/suscription/paypal/paypal.controller.ts
src/management/suscription/paypal/paypal.module.ts
src/management/suscription/paypal/services/paypal.service.ts
src/management/suscription/paypal/services/transaction.service.ts
src/management/user/dto/create-user.dto.ts
src/management/user/dto/onboarding-user.dto.ts
src/management/user/dto/update-user.dto.ts
src/management/user/entities/user.interface.ts
src/management/user/roles.enum.ts
src/management/user/user.controller.ts
src/management/user/user.module.ts
src/management/user/user.service.ts
src/medical_order/dto/create-medical_order.dto.ts
src/medical_order/dto/medical-order-response.dto.ts
src/medical_order/dto/update-medical_order.dto.ts
src/medical_order/entities/medical_order.entity.ts
src/medical_order/medical_order.controller.ts
src/medical_order/medical_order.module.ts
src/medical_order/medical_order.service.ts
src/medical-scheduling/appointments/appointments.controller.ts
src/medical-scheduling/appointments/appointments.module.ts
src/medical-scheduling/appointments/appointments.service.ts
src/medical-scheduling/appointments/dto/create-appointment.dto.ts
src/medical-scheduling/appointments/dto/get-appointments-calendar.dto.ts
src/medical-scheduling/appointments/dto/get-statistics.dto.ts
src/medical-scheduling/medical-events/dto/attend-medical-event.dto.ts
src/medical-scheduling/medical-events/dto/create-medical-event.dto.ts
src/medical-scheduling/medical-events/medical-events.controller.ts
src/medical-scheduling/medical-events/medical-events.module.ts
src/medical-scheduling/medical-events/medical-events.service.ts
src/medical-scheduling/modules/background/background.controller.ts
src/medical-scheduling/modules/background/background.module.ts
src/medical-scheduling/modules/background/background.service.ts
src/medical-scheduling/modules/background/dto/create-background.dto.ts
src/medical-scheduling/modules/medicine/medicine.controller.ts
src/medical-scheduling/modules/medicine/medicine.module.ts
src/medical-scheduling/modules/medicine/medicine.service.ts
src/medical-scheduling/modules/patient-studies/dto/create-patient-study.dto.ts
src/medical-scheduling/modules/patient-studies/dto/update-patient-study.dto.ts
src/medical-scheduling/modules/patient-studies/entities/patient-study.interface.ts
src/medical-scheduling/modules/patient-studies/patient-studies.controller.ts
src/medical-scheduling/modules/patient-studies/patient-studies.module.ts
src/medical-scheduling/modules/patient-studies/patient-studies.service.ts
src/medical-scheduling/modules/physical-examination-data/physical_subsystem/physical_subsystem.interface.ts
src/medical-scheduling/modules/physical-examination-data/physical_subsystem/physical_subsystem.service.ts
src/medical-scheduling/modules/physical-examination-data/physical-examination/physical_examination.interface.ts
src/medical-scheduling/modules/physical-examination-data/physical-examination/physical_examination.module.ts
src/medical-scheduling/modules/physical-examination-data/physical-examination/physical-examination.service.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/dto/create-physical-exploration-area.dto.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.controller.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.module.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.service.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration/dto/create-physical-exploration.dto.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration/dto/update-physical-exploration.dto.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.controller.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.module.ts
src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.service.ts
src/medical-scheduling/modules/physician-schedule/dto/bulk-create-schedule.dto.ts
src/medical-scheduling/modules/physician-schedule/dto/bulk-update-schedule.dto.ts
src/medical-scheduling/modules/physician-schedule/dto/create-exception.dto.ts
src/medical-scheduling/modules/physician-schedule/dto/create-schedule.dto.ts
src/medical-scheduling/modules/physician-schedule/dto/get-slots.dto.ts
src/medical-scheduling/modules/physician-schedule/dto/index.ts
src/medical-scheduling/modules/physician-schedule/dto/update-schedule.dto.ts
src/medical-scheduling/modules/physician-schedule/physician-schedule.controller.ts
src/medical-scheduling/modules/physician-schedule/physician-schedule.module.ts
src/medical-scheduling/modules/physician-schedule/physician-schedule.service.ts
src/medical-scheduling/modules/pres_mod_history/dto/create-pres-history.dto.ts
src/medical-scheduling/modules/pres_mod_history/dto/update-pres_mod_history.dto.ts
src/medical-scheduling/modules/pres_mod_history/entities/pres_mod_history.entity.ts
src/medical-scheduling/modules/pres_mod_history/pres_mod_history.controller.ts
src/medical-scheduling/modules/pres_mod_history/pres_mod_history.module.ts
src/medical-scheduling/modules/pres_mod_history/pres_mod_history.service.ts
src/medical-scheduling/modules/prescription/dto/create-prescription.dto.ts
src/medical-scheduling/modules/prescription/dto/index.ts
src/medical-scheduling/modules/prescription/dto/medication-dose.dto.ts
src/medical-scheduling/modules/prescription/dto/medication-skip-reason.dto.ts
src/medical-scheduling/modules/prescription/dto/medication-tracking-response.dto.ts
src/medical-scheduling/modules/prescription/dto/medication-tracking.dto.ts
src/medical-scheduling/modules/prescription/dto/README_DTOS.md
src/medical-scheduling/modules/prescription/dto/update-prescription.dto.ts
src/medical-scheduling/modules/prescription/entities/prescription.entity.ts
src/medical-scheduling/modules/prescription/prescription.controller.ts
src/medical-scheduling/modules/prescription/prescription.module.ts
src/medical-scheduling/modules/prescription/prescription.service.ts
src/medical-scheduling/modules/settings/modules/patient-reminder-settings/patient-reminder-settings.module.ts
src/medical-scheduling/modules/settings/modules/patient-reminder-settings/patient-reminder-settings.service.ts
src/medical-scheduling/modules/settings/settings.controller.ts
src/medical-scheduling/modules/settings/settings.module.ts
src/medical-scheduling/modules/settings/settings.service.ts
src/medical-scheduling/modules/vital-signs/dto/create-vital-sign.dto.ts
src/medical-scheduling/modules/vital-signs/dto/find-vital-signs.dto.ts
src/medical-scheduling/modules/vital-signs/dto/update-vital-sign.dto.ts
src/medical-scheduling/modules/vital-signs/vital-signs.controller.ts
src/medical-scheduling/modules/vital-signs/vital-signs.module.ts
src/medical-scheduling/modules/vital-signs/vital-signs.service.ts
src/mobile-functions/appointments/appointments.controller.ts
src/mobile-functions/appointments/appointments.module.ts
src/mobile-functions/appointments/appointments.service.ts
src/mobile-functions/appointments/dto/cancel-appointment.dto.ts
src/mobile-functions/appointments/dto/mobile-appointments-response.dto.ts
src/mobile-functions/mobile-functions.module.ts
src/mobile-functions/mood/dto/create-mood.dto.ts
src/mobile-functions/mood/mood.controller.ts
src/mobile-functions/mood/mood.module.ts
src/mobile-functions/mood/mood.service.ts
src/mobile-functions/prescriptions/dto/cancel-tracking.dto.ts
src/mobile-functions/prescriptions/dto/create-self-assigned-prescription.dto.ts
src/mobile-functions/prescriptions/dto/medication-dose-log.dto.ts
src/mobile-functions/prescriptions/dto/tracking.dto.ts
src/mobile-functions/prescriptions/prescriptions.controller.ts
src/mobile-functions/prescriptions/prescriptions.module.ts
src/mobile-functions/prescriptions/prescriptions.service.ts
src/mobile-functions/self-evaluation-event/dto/create-self-evaluation-event.dto.ts
src/mobile-functions/self-evaluation-event/dto/latest-vital-signs-response.dto.ts
src/mobile-functions/self-evaluation-event/dto/vital-sign-history-response.dto.ts
src/mobile-functions/self-evaluation-event/self-evaluation-event.controller.ts
src/mobile-functions/self-evaluation-event/self-evaluation-event.module.ts
src/mobile-functions/self-evaluation-event/self-evaluation-event.service.ts
src/prisma/prisma.module.ts
src/prisma/prisma.service.ts
src/queues/notification-queue.module.ts
src/queues/notification-queue.service.ts
src/queues/notification.processor.ts
src/scripts/test-scheduler.ts
src/services/email/email.module.ts
src/services/email/email.service.ts
src/services/email/templates/credentialsHtml.ts
src/services/email/templates/medicalOrderHtml.ts
src/services/email/templates/medicationCancellationHtml.ts
src/services/email/templates/medicationHtml.ts
src/services/email/templates/recoverPasswordHtml.ts
src/services/email/templates/welcomeEmailHtml.ts
src/services/medication-scheduler/medication-scheduler.module.ts
src/services/medication-scheduler/medication-scheduler.service.ts
src/services/notification/async-notification.service.ts
src/services/notification/notification.module.ts
src/services/notification/notification.service.ts
src/services/twilio/twilio.module.ts
src/services/twilio/twilio.service.ts
src/utils/auth.helper.ts
src/utils/cloudinary.ts
src/utils/file_upload/dto/file-upload-response.dto.ts
src/utils/file_upload/file_upload.controller.ts
src/utils/file_upload/file_upload.module.ts
src/utils/file_upload/file_upload.repository.ts
src/utils/file_upload/file_upload.service.ts
src/utils/fuctions.ts
src/utils/middlewares/loggingPrismaMiddleware.ts
src/utils/middlewares/tenantMiddleware.ts
src/utils/middlewares/tenantPrismaMiddleware.ts
src/utils/pagination.helper.ts
test/app.e2e-spec.ts
test/jest-e2e.json
tsconfig.build.json
tsconfig.json

================================================================
Files
================================================================

================
File: .dockerignore
================
node_modules
dist
.env
logs

================
File: .eslintrc.js
================
module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
  },
};

================
File: .github/workflows/node-ci.yml
================
name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x'] # Coincidir con la versi√≥n en tu Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        # Puedes usar 'npm run test:cov' si quieres reportes de cobertura
        run: npm run test

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

================
File: .gitignore
================
# compiled output
/dist
/node_modules
/build

prisma/migrations/

# Logs
logs
*.log
npm-debug.log*
pnpm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# OS
.DS_Store

# Tests
/coverage
/.nyc_output

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# temp directory
.temp
.tmp

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

================
File: .prettierrc
================
{
  "singleQuote": true,
  "trailingComma": "all"
}

================
File: DockerFile
================
# Stage 1: Base Development Image
FROM node:18-alpine AS development
WORKDIR /app
ENV HOST=0.0.0.0
ENV PORT=5000
ENV NODE_ENV=development
EXPOSE 5000
COPY package.json package-lock.json ./
RUN npm install
COPY . .
CMD ["npm", "run", "start:dev"]

# Stage 2: Install Dependencies
FROM node:18-alpine AS dependencies
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm install --production

# Stage 3: Build Application
FROM node:18-alpine AS builder
WORKDIR /app
COPY --from=dependencies /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Stage 4: Production Image
FROM node:18-alpine AS production
WORKDIR /app
ENV HOST=0.0.0.0
ENV PORT=5000
ENV NODE_ENV=production
COPY --from=builder /app/package.json /app/package-lock.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
USER node
EXPOSE 5000
CMD ["node", "dist/main"]

================
File: examples/medical-files.json
================
[
  {
    "type": "study-authorization",
    "comment": "Ejemplo para probar la autorizaci√≥n de estudios con archivo",
    "note": "Este JSON debe ser enviado como form-data junto con el archivo en un campo llamado 'file'",
    "form_data": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "cat_study_type_id": 1,
      "request_reason": "Se requiere resonancia magn√©tica para evaluar lesi√≥n en rodilla",
      "description_type": "Resonancia Magn√©tica de Rodilla",
      "application_date": "2023-12-01T10:00:00Z",
      "category_cie_diez_id": 45
    }
  },
  {
    "type": "certification",
    "comment": "Ejemplo para probar la creaci√≥n de certificados con archivo",
    "note": "Este JSON debe ser enviado como form-data junto con el archivo en un campo llamado 'file'",
    "form_data": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "cat_certification_type_id": 2,
      "category_cie_diez_id": 45,
      "description_type": "Certificado m√©dico para ausentismo laboral",
      "application_date": "2023-12-01T10:00:00Z"
    }
  },
  {
    "type": "medication",
    "comment": "Ejemplo para probar la creaci√≥n de recetas m√©dicas con archivo",
    "note": "Este JSON debe ser enviado como form-data junto con el archivo en un campo llamado 'file'",
    "form_data": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "description_type": "Receta m√©dica para control de dolor",
      "medications": [
        {
          "monodrug": "Paracetamol",
          "dose": "500",
          "dose_units": "mg",
          "frecuency": "Cada 8 horas",
          "duration": "7",
          "duration_units": "d√≠as",
          "observations": "Tomar con alimentos"
        },
        {
          "monodrug": "Ibuprofeno",
          "dose": "400",
          "dose_units": "mg",
          "frecuency": "Cada 12 horas",
          "duration": "5",
          "duration_units": "d√≠as",
          "observations": "Tomar despu√©s de las comidas para evitar irritaci√≥n estomacal"
        }
      ]
    }
  }
]

================
File: examples/medical-order-base64.json
================
[
  {
    "type": "study-authorization",
    "comment": "Ejemplo para enviar una autorizaci√≥n de estudio con archivo en base64",
    "body": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "cat_study_type_id": 1,
      "request_reason": "Se requiere resonancia magn√©tica para evaluar lesi√≥n en rodilla",
      "description_type": "Resonancia Magn√©tica de Rodilla",
      "application_date": "2023-12-01T10:00:00Z",
      "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9MNCjEgMCBvYmoNPDwvTWV0YWRhdGEgMiAwIFIvT0NQcm9wZXJ0aWVzPDwvRDw8L09OWzUgMCBSXS9PcmRlciA2IDAgUi9SQkdyb3Vwc1tdPj4vT0NHc1s1IDAgUl0+Pi9QYWdlcyAzIDAgUi9UeXBlL0NhdGFsb2c+Pg1lbmRvYmoNMiAwIG9iag08PC9MZW5ndGggNDQzMzQvU3VidHlwZS9YTUwvVHlwZS9NZXRhZGF0YT4+c3RyZWFtDQo8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI..."
    }
  },
  {
    "type": "medication",
    "comment": "Ejemplo para enviar medicaci√≥n con receta en base64",
    "body": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "description_type": "Receta m√©dica para control de dolor",
      "medications": [
        {
          "monodrug": "Paracetamol",
          "dose": "500",
          "dose_units": "mg",
          "frecuency": "Cada 8 horas",
          "duration": "7",
          "duration_units": "d√≠as",
          "observations": "Tomar con alimentos"
        },
        {
          "monodrug": "Ibuprofeno",
          "dose": "400",
          "dose_units": "mg",
          "frecuency": "Cada 12 horas",
          "duration": "5",
          "duration_units": "d√≠as",
          "observations": "Tomar despu√©s de las comidas para evitar irritaci√≥n estomacal"
        }
      ],
      "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9MNCjEgMCBvYmoNPDwvTWV0YWRhdGEgMiAwIFIvT0NQcm9wZXJ0aWVzPDwvRDw8L09OWzUgMCBSXS9PcmRlciA2IDAgUi9SQkdyb3Vwc1tdPj4vT0NHc1s1IDAgUl0+Pi9QYWdlcyAzIDAgUi9UeXBlL0NhdGFsb2c+Pg1lbmRvYmoNMiAwIG9iag08PC9MZW5ndGggNDQzMzQvU3VidHlwZS9YTUwvVHlwZS9NZXRhZGF0YT4+c3RyZWFtDQo8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI..."
    }
  }
]

================
File: examples/medical-orders.json
================
{
  "autorizacionEstudio": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "cat_study_type_id": 1,
    "request_reason": "Se requiere resonancia magn√©tica para evaluar lesi√≥n en rodilla",
    "description_type": "Resonancia Magn√©tica de Rodilla",
    "application_date": "2023-12-01T10:00:00Z",
    "url": "https://example.com/orders/estudio-123.pdf"
  },
  "certificado": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "cat_certification_type_id": 2,
    "category_cie_diez_id": 45,
    "description_type": "Certificado m√©dico para ausentismo laboral",
    "application_date": "2023-12-01T10:00:00Z",
    "url": "https://example.com/orders/certificado-123.pdf"
  },
  "certificadoPersonalizado": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "cat_certification_type_id": 1,
    "category_cie_diez_id": 45,
    "description_type": "Certificado de aptitud para actividades deportivas",
    "application_date": "2023-12-01T10:00:00Z",
    "url": "https://example.com/orders/certificado-personalizado-123.pdf"
  },
  "solicitudHospitalizacion": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "category_cie_diez_id": 78,
    "hospitalization_reason": "Paciente requiere intervenci√≥n quir√∫rgica programada",
    "request_reason": "Hernia discal que requiere cirug√≠a",
    "description_type": "Internaci√≥n para cirug√≠a de columna",
    "application_date": "2023-12-01T10:00:00Z",
    "url": "https://example.com/orders/hospitalizacion-123.pdf"
  },
  "solicitudTurno": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "cat_speciality_id": 3,
    "category_cie_diez_id": 52,
    "description_type": "Derivaci√≥n a traumatolog√≠a por dolor en rodilla",
    "application_date": "2023-12-01T10:00:00Z",
    "url": "https://example.com/orders/turno-123.pdf"
  }
}

================
File: examples/medical-prescriptions.json
================
[
  {
    "type": "medication",
    "comment": "Ejemplo de prescripci√≥n m√©dica en orden m√©dica",
    "body": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "description_type": "Receta m√©dica para control de dolor",
      "medications": [
        {
          "monodrug": "Paracetamol",
          "dose": "500",
          "dose_units": "mg",
          "frecuency": "Cada 8 horas",
          "duration": "7",
          "duration_units": "d√≠as",
          "observations": "Tomar con alimentos"
        },
        {
          "monodrug": "Ibuprofeno",
          "dose": "400",
          "dose_units": "mg",
          "frecuency": "Cada 12 horas",
          "duration": "5",
          "duration_units": "d√≠as",
          "observations": "Tomar despu√©s de las comidas para evitar irritaci√≥n estomacal"
        }
      ]
    }
  },
  {
    "type": "medication-authorization",
    "comment": "Ejemplo de autorizaci√≥n de medicamentos",
    "body": {
      "patient_id": "123e4567-e89b-12d3-a456-426614174000",
      "description_type": "Autorizaci√≥n para medicamentos de uso cr√≥nico",
      "medications": [
        {
          "monodrug": "Losart√°n",
          "dose": "50",
          "dose_units": "mg",
          "frecuency": "Una vez al d√≠a",
          "duration": "30",
          "duration_units": "d√≠as",
          "observations": "Tomar por la ma√±ana para control de hipertensi√≥n arterial"
        },
        {
          "monodrug": "Atorvastatina",
          "dose": "20",
          "dose_units": "mg",
          "frecuency": "Una vez al d√≠a",
          "duration": "30",
          "duration_units": "d√≠as",
          "observations": "Tomar por la noche para control de colesterol"
        }
      ]
    }
  },
  {
    "type": "medication_in_consultation",
    "comment": "Ejemplo para agregar medicaci√≥n durante una consulta m√©dica",
    "body": {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "physician_comments": "Paciente con dolor en articulaciones",
      "main_diagnostic_cie": "M25.5",
      "treatment": "Reposo relativo, aplicaci√≥n de fr√≠o local",
      "consultation_ended": true,
      "medications": [
        {
          "monodrug": "Diclofenaco",
          "dose": "50",
          "dose_units": "mg",
          "frecuency": "Cada 8 horas",
          "duration": "5",
          "duration_units": "d√≠as",
          "observations": "Tomar con alimentos"
        },
        {
          "monodrug": "Meloxicam",
          "dose": "15",
          "dose_units": "mg",
          "frecuency": "Una vez al d√≠a",
          "duration": "7",
          "duration_units": "d√≠as",
          "observations": "Tomar despu√©s del desayuno"
        }
      ]
    }
  }
]

================
File: examples/patient-study-base64.json
================
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "physician_id": "123e4567-e89b-12d3-a456-426614174001",
  "title": "Resonancia magn√©tica de rodilla",
  "description": "Estudio de resonancia magn√©tica para evaluar lesi√≥n en rodilla izquierda",
  "cat_study_type_id": 1,
  "tenant_id": "123e4567-e89b-12d3-a456-426614174002",
  "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9MNCjEgMCBvYmoNPDwvTWV0YWRhdGEgMiAwIFIvT0NQcm9wZXJ0aWVzPDwvRDw8L09OWzUgMCBSXS9PcmRlciA2IDAgUi9SQkdyb3Vwc1tdPj4vT0NHc1s1IDAgUl0+Pi9QYWdlcyAzIDAgUi9UeXBlL0NhdGFsb2c+Pg1lbmRvYmoNMiAwIG9iag08PC9MZW5ndGggNDQzMzQvU3VidHlwZS9YTUwvVHlwZS9NZXRhZGF0YT4+c3RyZWFtDQo8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI..."
}

================
File: MEJORAS_IMPLEMENTADAS.md
================
# Mejoras Cr√≠ticas Implementadas

## 1. ‚úÖ Manejo del tenant_id con nestjs-cls (CR√çTICO)

### Problema resuelto:

- Eliminaci√≥n de `global.tenant_id` que causaba race conditions en entornos concurrentes
- Implementaci√≥n de contexto de solicitud seguro usando `nestjs-cls`

### Cambios realizados:

#### A. Instalaci√≥n y configuraci√≥n de nestjs-cls

- ‚úÖ Instalado `nestjs-cls`
- ‚úÖ Configurado en `src/app.module.ts` con ClsModule.forRoot()

#### B. Servicio de contexto centralizado

- ‚úÖ Creado `src/auth/services/request-context.service.ts`
- ‚úÖ Interfaces para RequestContextUser y RequestContextTenant
- ‚úÖ M√©todos para setear/obtener tenant_id, user, userTenants de manera segura

#### C. Middlewares actualizados

- ‚úÖ `src/utils/middlewares/tenantMiddleware.ts` - usa RequestContextService
- ‚úÖ `src/auth/middlewares/jwt-user-extractor.middleware.ts` - usa contexto CLS
- ‚úÖ `src/auth/middlewares/tenant-extractor.middleware.ts` - usa contexto CLS
- ‚úÖ `src/utils/middlewares/tenantPrismaMiddleware.ts` - obtiene tenant_id del contexto CLS

#### D. Servicios actualizados

- ‚úÖ `src/prisma/prisma.service.ts` - inyecta ClsService al middleware
- ‚úÖ `src/management/patient/patient.service.ts` - usa RequestContextService
- ‚úÖ Mantenida compatibilidad con `req['tenant']` para otros middlewares

#### E. Decoradores para contexto

- ‚úÖ `src/auth/decorators/get-context-tenant.decorator.ts`
- ‚úÖ `src/auth/decorators/get-context-user.decorator.ts`

## 2. ‚úÖ Optimizaci√≥n de Consultas a la Base de Datos

### A. Eliminaci√≥n de consultas N+1 en signos vitales

- ‚úÖ Creado `src/auth/services/vital-signs-optimization.service.ts`
- ‚úÖ Consulta optimizada con DISTINCT ON para obtener √∫ltimos signos vitales
- ‚úÖ Combina medical_event y self_evaluation sources en una sola consulta
- ‚úÖ Refactorizado `patient.service.ts#findOne` para usar el servicio optimizado

### B. Consultas SQL seguras en appointments.service.ts

- ‚úÖ `getAppointmentsByPhysician()` - eliminado riesgo de SQL injection
- ‚úÖ `getDiagnosesDistribution()` - reemplazada lista IN con subconsulta eficiente
- ‚úÖ Uso de par√°metros seguros en lugar de interpolaci√≥n de strings

### C. Mejoras de performance

- ‚úÖ Queries paralelas mantenidas en `patient.service.ts`
- ‚úÖ Reducci√≥n de consultas individuales en loops
- ‚úÖ Uso de select granular en lugar de includes completos

## 3. ‚úÖ Arquitectura y Configuraci√≥n

### A. M√≥dulos actualizados

- ‚úÖ `src/auth/guard-auth.module.ts` - exporta nuevos servicios
- ‚úÖ Inyecci√≥n de dependencias correcta en todos los servicios

### B. Compatibilidad mantenida

- ‚úÖ Los decoradores existentes (`@GetTenant`, `@GetTenants`) siguen funcionando
- ‚úÖ `req['tenant']` y `req['user']` mantenidos para compatibilidad
- ‚úÖ Middleware de Prisma soporta tanto CLS como global (fallback)

## 4. ‚úÖ Beneficios de las mejoras

### Seguridad y Concurrencia

- ‚ùå Eliminado global.tenant_id (race conditions)
- ‚úÖ Contexto de solicitud aislado por request
- ‚úÖ Thread-safety en entornos de producci√≥n concurrentes

### Performance

- ‚ö° Consultas N+1 eliminadas en signos vitales
- ‚ö° Consultas SQL optimizadas con subconsultas
- ‚ö° Queries paralelas mantenidas donde es posible
- ‚ö° Consulta √∫nica para cat√°logo + datos en lugar de m√∫ltiples queries

### Mantenibilidad

- üîß C√≥digo m√°s limpio y organizado
- üîß Servicios especializados para optimizaciones
- üîß Separaci√≥n clara de responsabilidades
- üîß Documentaci√≥n de interfaces y tipos

### Seguridad SQL

- üõ°Ô∏è Eliminado riesgo de SQL injection en queries raw
- üõ°Ô∏è Uso de par√°metros seguros en lugar de interpolaci√≥n
- üõ°Ô∏è Subconsultas en lugar de listas IN largas

## 5. ‚úÖ Pr√≥ximos pasos recomendados

1. **Testing**: Agregar tests unitarios para los nuevos servicios
2. **Monitoring**: Implementar logs de performance para medir mejoras
3. **Documentation**: Actualizar documentaci√≥n de API si es necesario
4. **Migration**: Considerar migraci√≥n gradual de otros servicios al nuevo patr√≥n

## 6. ‚úÖ Archivos principales modificados

- `src/app.module.ts` - Configuraci√≥n ClsModule
- `src/auth/services/request-context.service.ts` - NUEVO
- `src/auth/services/vital-signs-optimization.service.ts` - NUEVO
- `src/utils/middlewares/tenantMiddleware.ts` - Refactorizado
- `src/auth/middlewares/jwt-user-extractor.middleware.ts` - Refactorizado
- `src/auth/middlewares/tenant-extractor.middleware.ts` - Refactorizado
- `src/utils/middlewares/tenantPrismaMiddleware.ts` - Refactorizado
- `src/prisma/prisma.service.ts` - Actualizado
- `src/management/patient/patient.service.ts` - Optimizado
- `src/medical-scheduling/appointments/appointments.service.ts` - Consultas seguras
- `src/auth/guard-auth.module.ts` - Nuevos exports

**‚úÖ TODAS LAS MEJORAS CR√çTICAS HAN SIDO IMPLEMENTADAS**

================
File: nest-cli.json
================
{
  "$schema": "https://json.schemastore.org/nest-cli",
  "collection": "@nestjs/schematics",
  "sourceRoot": "src",
  "compilerOptions": {
    "deleteOutDir": true,
    "plugins": [
    {
      "name": "@nestjs/swagger",
      "options": {
        "classValidatorShim": true,
        "introspectComments": true
      }
    }
  ]
  }
}

================
File: package.json
================
{
  "name": "segimed-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma": "prisma generate && prisma db push"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.0",
    "@nestjs/bullmq": "^11.0.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.4.15",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^8.1.0",
    "@nestjs/typeorm": "^10.0.2",
    "@paypal/checkout-server-sdk": "^1.0.3",
    "@prisma/client": "^6.4.1",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node-cache": "^4.1.3",
    "axios": "^1.8.1",
    "bcrypt": "^5.1.1",
    "buffer-to-stream": "^1.0.0",
    "bullmq": "^5.53.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cloudinary": "^2.5.1",
    "date-fns": "^3.6.0",
    "dotenv": "^16.4.7",
    "express-openid-connect": "^2.17.1",
    "googleapis": "^144.0.0",
    "ioredis": "^5.6.1",
    "moment": "^2.30.1",
    "multer": "^1.4.5-lts.1",
    "nestjs-cls": "^6.0.1",
    "node-cache": "^5.1.2",
    "pg": "^8.13.1",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "twilio": "^5.4.3",
    "typeorm": "^0.3.20",
    "uuid": "^11.0.3",
    "whatsapp-web.js": "^1.26.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/buffer-to-stream": "^1.0.3",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.4.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}

================
File: prisma/schema.prisma
================
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tenant {
  id                           String                         @id @default(uuid())
  type                         tenant_type
  db_name                      String?
  created_at                   DateTime                       @default(now())
  updated_at                   DateTime                       @updatedAt
  deleted                      Boolean                        @default(false)
  appointments                 appointment[]
  background                   background[]
  cat_certification_type       cat_certification_type[]
  medical_events               medical_event[]
  medical_order                medical_order[]
  mood_entries                 mood_entry[]
  organizations                organization[]
  organization_physician       organization_physician[]
  patient_tenant               patient_tenant[]
  physical_exploration         physical_exploration[]
  physicians                   physician[]
  physician_schedule           physician_schedule[]
  physician_schedule_exception physician_schedule_exception[]
  prescription                 prescription[]
  role                         role[]
  schedule_slot                schedule_slot[]
  self_evaluation_event        self_evaluation_event[]
  transaction                  transaction[]
  users                        user[]
  vital_signs                  vital_signs[]
}

model user {
  id                             String                   @id @default(uuid())
  name                           String
  last_name                      String?
  email                          String                   @unique
  password                       String?
  role                           role_type                @default(physician)
  is_superadmin                  Boolean                  @default(false)
  nationality                    String?
  gender                         String?
  identification_number          String?                  @unique
  birth_date                     DateTime?
  phone_prefix                   String?
  phone                          String?
  is_phone_verified              Boolean                  @default(false)
  image                          String                   @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png")
  created_at                     DateTime                 @default(now())
  updated_at                     DateTime                 @updatedAt
  deleted                        Boolean                  @default(false)
  deleted_at                     DateTime?
  tenant_id                      String?
  identification_type_id         Int?
  patientAppointments            appointment[]            @relation("patient")
  physicianAppointment           appointment[]            @relation("physician")
  background                     background[]
  medical_event_patient          medical_event[]          @relation("patient")
  medical_event_physician        medical_event[]          @relation("physician")
  medical_order_patient          medical_order[]          @relation("patient")
  medical_order_physician        medical_order[]          @relation("physician")
  medical_order                  medical_order[]
  medication_dose_logs           medication_dose_log[]
  mood_entries                   mood_entry[]
  patient                        patient?
  physical_examinations          physical_examination[]
  physical_exploration_patient   physical_exploration[]   @relation("patient")
  physical_exploration_physician physical_exploration[]   @relation("physician")
  physician                      physician?
  pres_mod_history               pres_mod_history[]
  prescription                   prescription[]
  self_evaluation_event          self_evaluation_event[]
  transactions                   transaction[]
  identification_type            cat_identification_type? @relation(fields: [identification_type_id], references: [id])
  tenant                         tenant?                  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  roles                          user_role[]
  vital_signs                    vital_signs[]

  @@index([role, tenant_id, deleted])
  @@index([tenant_id, role])
  @@index([email, deleted])
  @@index([identification_number, deleted])
}

model organization {
  id                     String                   @id @default(uuid())
  name                   String
  type                   tenant_type
  number_of_employees    Int?
  number_of_patients     Int?
  reason_register        String
  created_at             DateTime                 @default(now())
  updated_at             DateTime                 @updatedAt
  deleted                Boolean                  @default(false)
  deleted_at             DateTime?
  tenant_id              String?
  tenant                 tenant?                  @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  organization_physician organization_physician[]
}

model organization_physician {
  id              String       @id @default(uuid())
  organization_id String
  physician_id    String
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  deleted         Boolean      @default(false)
  deleted_at      DateTime?
  tenant_id       String
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  physician       physician    @relation(fields: [physician_id], references: [id], onDelete: Cascade)
  tenant          tenant       @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
}

model patient {
  id                                   String           @id @default(uuid())
  direction                            String?
  country                              String?
  province                             String?
  city                                 String?
  postal_code                          String?
  direction_number                     String?
  apartment                            String?
  health_care_number                   String?
  notes                                String?
  created_at                           DateTime         @default(now())
  updated_at                           DateTime         @updatedAt
  deleted                              Boolean          @default(false)
  deleted_at                           DateTime?
  user_id                              String           @unique
  medication_reminder_interval_minutes Int?             @default(30)
  medication_reminder_max_retries      Int?             @default(3)
  user                                 user             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  patient_tenant                       patient_tenant[]
}

model patient_tenant {
  id         String    @id @default(uuid())
  patient_id String
  tenant_id  String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted    Boolean   @default(false)
  deleted_at DateTime?
  patient    patient   @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  tenant     tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@unique([patient_id, tenant_id])
  @@index([deleted])
  @@index([tenant_id, deleted])
}

model physician {
  id                           String                         @id @default(uuid())
  user_id                      String                         @unique
  tenant_id                    String?
  medical_registry             String?
  signature                    String?
  created_at                   DateTime                       @default(now())
  updated_at                   DateTime                       @updatedAt
  deleted                      Boolean                        @default(false)
  deleted_at                   DateTime?
  organization_physician       organization_physician[]
  tenant                       tenant?                        @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  user                         user                           @relation(fields: [user_id], references: [id], onDelete: Cascade)
  physician_schedule           physician_schedule[]
  physician_schedule_exception physician_schedule_exception[]
  physician_speciality         physician_speciality[]
  schedule_slot                schedule_slot[]
}

model appointment {
  id                  String          @id @default(uuid())
  consultation_reason String
  start               DateTime
  end                 DateTime
  patient_id          String
  physician_id        String
  status              status_type     @default(pendiente)
  cancelation_reason  String?
  comments            String?
  created_at          DateTime        @default(now())
  updated_at          DateTime        @updatedAt
  deleted             Boolean         @default(false)
  deleted_at          DateTime?
  tenant_id           String
  patient             user            @relation("patient", fields: [patient_id], references: [id], onDelete: Cascade)
  physician           user            @relation("physician", fields: [physician_id], references: [id], onDelete: Cascade)
  tenant              tenant          @relation(fields: [tenant_id], references: [id])
  medical_events      medical_event[]

  @@index([patient_id, tenant_id, status, start])
  @@index([physician_id, tenant_id, status, start])
  @@index([patient_id, status, start, deleted])
  @@index([physician_id, status, start, deleted])
  @@index([tenant_id, status, start, deleted])
}

model medical_event {
  id                        String                      @id @default(uuid())
  appointment_id            String
  patient_id                String
  physician_id              String
  physician_comments        String?
  main_diagnostic_cie_id    Int?                        @default(1)
  evolution                 String?
  procedure                 String?
  treatment                 String?
  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @updatedAt
  deleted                   Boolean                     @default(false)
  deleted_at                DateTime?
  tenant_id                 String
  appointment               appointment                 @relation(fields: [appointment_id], references: [id], onDelete: Cascade)
  main_diagnostic_cie       subcategories_cie_diez?     @relation(fields: [main_diagnostic_cie_id], references: [id])
  patient                   user                        @relation("patient", fields: [patient_id], references: [id], onDelete: Cascade)
  physician                 user                        @relation("physician", fields: [physician_id], references: [id], onDelete: Cascade)
  tenant                    tenant                      @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  physical_examination      physical_examination[]
  physical_exploration      physical_exploration?
  pres_mod_history          pres_mod_history[]
  self_evaluation_event     self_evaluation_event[]
  subcategory_medical_event subcategory_medical_event[]
  vital_signs               vital_signs[]

  @@index([patient_id, tenant_id, created_at])
  @@index([physician_id, tenant_id, created_at])
  @@index([appointment_id])
  @@index([patient_id, deleted, created_at])
  @@index([tenant_id, deleted, created_at])
}

model transaction {
  id         String    @id @default(uuid())
  orderId    String
  status     String
  amount     Float
  currency   String
  userId     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted    Boolean   @default(false)
  deleted_at DateTime?
  tenant_id  String
  tenant     tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  user       user      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model patient_study {
  id                String         @id @default(uuid())
  patient_id        String
  physician_id      String?
  url               String?        @default("")
  title             String
  description       String
  tenant_id         String?
  cat_study_type_id Int
  is_deleted        Boolean        @default(false)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  cat_study_type    cat_study_type @relation(fields: [cat_study_type_id], references: [id], onDelete: Cascade)

  @@index([patient_id, tenant_id, is_deleted])
  @@index([patient_id, is_deleted, createdAt])
  @@index([physician_id, tenant_id, is_deleted])
  @@map("patient_studies")
}

model password_reset {
  id         String    @id @default(uuid())
  token      String    @unique
  email      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted    Boolean   @default(false)
  deleted_at DateTime?
}

model physical_examination {
  id                    String                  @id @default(uuid())
  physical_subsystem_id Int?
  patient_id            String
  description           String
  medical_event_id      String
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt
  deleted               Boolean                 @default(false)
  deleted_at            DateTime?
  medical_event         medical_event           @relation(fields: [medical_event_id], references: [id], onDelete: Cascade)
  user                  user                    @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  physical_subsystem    cat_physical_subsystem? @relation(fields: [physical_subsystem_id], references: [id])
}

model physical_exploration {
  id                           String                    @id @default(uuid())
  patient_id                   String
  physician_id                 String
  medical_event_id             String                    @unique
  description                  String
  physical_exploration_area_id Int
  tenant_id                    String
  medical_event                medical_event             @relation(fields: [medical_event_id], references: [id], onDelete: Cascade)
  patient                      user                      @relation("patient", fields: [patient_id], references: [id], onDelete: Cascade)
  physical_exploration_area    physical_exploration_area @relation(fields: [physical_exploration_area_id], references: [id])
  physician                    user                      @relation("physician", fields: [physician_id], references: [id], onDelete: Cascade)
  tenant                       tenant                    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
}

model physical_exploration_area {
  id                   Int                    @id @default(autoincrement())
  name_on_library      String                 @unique
  name                 String                 @unique
  physical_exploration physical_exploration[]
}

model physician_speciality {
  id            String         @id @default(uuid())
  physician_id  String
  speciality_id Int
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  deleted       Boolean        @default(false)
  deleted_at    DateTime?
  physician     physician      @relation(fields: [physician_id], references: [id], onDelete: Cascade)
  speciality    cat_speciality @relation(fields: [speciality_id], references: [id], onDelete: Cascade)

  @@index([physician_id, deleted])
  @@index([speciality_id, deleted])
}

model otp_code {
  id              String    @id
  code            String
  code_expires_at DateTime?
}

model background {
  id                        String   @id @default(uuid())
  patient_id                String
  vaccinations              String
  allergies                 String
  pathological_history      String
  family_medical_history    String
  non_pathological_history  String
  surgical_history          String
  childhood_medical_history String
  current_medication        String
  tenant_id                 String
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt
  patient                   user     @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  tenant                    tenant   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([patient_id, tenant_id, created_at])
  @@index([tenant_id, created_at])
}

model subcategory_medical_event {
  id                     String                 @id @default(uuid())
  subCategoryId          Int
  medical_eventId        String
  medical_event          medical_event          @relation(fields: [medical_eventId], references: [id], onDelete: Cascade)
  subcategories_cie_diez subcategories_cie_diez @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)

  @@unique([subCategoryId, medical_eventId])
}

model prescription {
  id                               String                          @id @default(uuid())
  start_timestamp                  DateTime                        @default(now())
  end_timestamp                    DateTime?
  description                      String?
  active                           Boolean                         @default(true)
  patient_id                       String?
  monodrug                         String
  show_in_calendar                 Boolean                         @default(false)
  authorized                       Boolean                         @default(false)
  patient_stopped_treatment        Boolean                         @default(false)
  patient_stopped_treatment_date   DateTime?
  patient_stopped_treatment_reason String?
  tenant_id                        String?
  created_by_patient               Boolean                         @default(false)
  first_dose_taken_at              DateTime?
  is_tracking_active               Boolean                         @default(false)
  last_reminder_sent_at            DateTime?
  reminder_enabled                 Boolean                         @default(true)
  reminders_sent_count             Int                             @default(0)
  skip_reason_details              String?
  skip_reason_id                   Int?
  time_of_day_slots                String[]
  medication_dose_logs             medication_dose_log[]
  pres_mod_history                 pres_mod_history[]
  user                             user?                           @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  skip_reason                      medication_skip_reason_catalog? @relation(fields: [skip_reason_id], references: [id])
  tenant                           tenant?                         @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([patient_id, active])
  @@index([tenant_id, active])
  @@index([patient_id, monodrug, active])
  @@index([patient_id, tenant_id, active])
  @@index([monodrug, active])
}

model pres_mod_history {
  id               String         @id @default(uuid())
  prescription_id  String
  physician_id     String?
  mod_timestamp    DateTime       @default(now())
  medical_event_id String?
  medical_order_id String?
  observations     String?
  dose             String
  dose_units       String
  frecuency        String
  duration         String
  duration_units   String
  commercial_name  String?
  medical_event    medical_event? @relation(fields: [medical_event_id], references: [id])
  medical_order    medical_order? @relation(fields: [medical_order_id], references: [id])
  physician        user?          @relation(fields: [physician_id], references: [id])
  prescription     prescription   @relation(fields: [prescription_id], references: [id])
}

model medication_dose_log {
  id                  String                          @id @default(uuid())
  prescription_id     String
  user_id             String
  scheduled_time      DateTime
  actual_taken_time   DateTime?
  status              medication_dose_status
  reported_at         DateTime                        @default(now())
  skip_reason_id      Int?
  skip_reason_details String?
  created_at          DateTime                        @default(now())
  updated_at          DateTime                        @updatedAt
  prescription        prescription                    @relation(fields: [prescription_id], references: [id], onDelete: Cascade)
  skip_reason         medication_skip_reason_catalog? @relation(fields: [skip_reason_id], references: [id])
  user                user                            @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([prescription_id, user_id, scheduled_time, status])
  @@index([user_id, scheduled_time, status])
  @@index([prescription_id, status, scheduled_time])
  @@index([user_id, status, reported_at])
}

model medication_skip_reason_catalog {
  id                   Int                   @id @default(autoincrement())
  reason_text          String
  category             String
  created_at           DateTime              @default(now())
  updated_at           DateTime              @updatedAt
  medication_dose_logs medication_dose_log[]
  prescriptions        prescription[]
}

model self_evaluation_event {
  id               String         @id @default(uuid())
  patient_id       String
  medical_event_id String?
  tenant_id        String?
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  medical_event    medical_event? @relation(fields: [medical_event_id], references: [id], onDelete: Cascade)
  patient          user           @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  tenant           tenant?        @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vital_signs      vital_signs[]
}

model vital_signs {
  id                       String                 @id @default(uuid())
  patient_id               String
  medical_event_id         String?
  self_evaluation_event_id String?
  vital_sign_id            Int
  measure                  Int
  tenant_id                String?
  created_at               DateTime               @default(now())
  updated_at               DateTime               @updatedAt
  deleted                  Boolean                @default(false)
  deleted_at               DateTime?
  medical_event            medical_event?         @relation(fields: [medical_event_id], references: [id], onDelete: Cascade)
  patient                  user                   @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  self_evaluation_event    self_evaluation_event? @relation(fields: [self_evaluation_event_id], references: [id], onDelete: Cascade)
  tenant                   tenant?                @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  vital_sign               cat_vital_signs        @relation(fields: [vital_sign_id], references: [id], onDelete: Cascade)

  @@index([patient_id, vital_sign_id, created_at(sort: Desc), deleted])
  @@index([patient_id, deleted, created_at])
  @@index([medical_event_id, deleted])
  @@index([self_evaluation_event_id, deleted])
  @@index([tenant_id, deleted])
}

model medical_order {
  id                        String                  @id @default(uuid())
  medical_order_type_id     String
  patient_id                String
  physician_id              String
  category_cie_diez_id      Int?
  additional_text           String?
  application_date          DateTime?
  description_type          String?
  url                       String?
  request_date              DateTime                @default(now())
  tenant_id                 String?
  cat_study_type_id         Int?
  request_reason            String?
  cat_certification_type_id Int?
  hospitalization_reason    String?
  cat_speciality_id         Int?
  userId                    String?
  cat_certification_type    cat_certification_type? @relation(fields: [cat_certification_type_id], references: [id])
  cat_speciality            cat_speciality?         @relation(fields: [cat_speciality_id], references: [id])
  cat_study_type            cat_study_type?         @relation(fields: [cat_study_type_id], references: [id])
  category_cie_diez         category_cie_diez?      @relation(fields: [category_cie_diez_id], references: [id])
  medical_order_type        medical_order_type      @relation(fields: [medical_order_type_id], references: [id])
  patient                   user                    @relation("patient", fields: [patient_id], references: [id])
  physician                 user                    @relation("physician", fields: [physician_id], references: [id])
  tenant                    tenant?                 @relation(fields: [tenant_id], references: [id])
  user                      user?                   @relation(fields: [userId], references: [id])
  pres_mod_history          pres_mod_history[]

  @@index([patient_id, tenant_id, request_date])
  @@index([physician_id, tenant_id, request_date])
  @@index([medical_order_type_id, tenant_id])
  @@index([patient_id, medical_order_type_id])
  @@index([physician_id, medical_order_type_id])
}

model cat_identification_type {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  country     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        user[]
}

model cat_physical_subsystem {
  id                    Int                    @id @default(autoincrement())
  name                  String
  created_at            DateTime               @default(now())
  updated_at            DateTime               @updatedAt
  deleted               Boolean                @default(false)
  deleted_at            DateTime?
  physical_examinations physical_examination[]
}

model cat_speciality {
  id                   Int                    @id @default(autoincrement())
  name                 String
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  deleted              Boolean                @default(false)
  deleted_at           DateTime?
  medical_order        medical_order[]
  physician_speciality physician_speciality[]
  cat_vital_signs      cat_vital_signs[]      @relation("SpecialityVitalSigns")
}

model category_cie_diez {
  id                     Int                      @id @default(autoincrement())
  code                   String
  description            String
  medical_order          medical_order[]
  subcategories_cie_diez subcategories_cie_diez[]
}

model subcategories_cie_diez {
  id                        Int                         @id @default(autoincrement())
  code                      String
  description               String
  categoryId                Int
  medical_event             medical_event[]
  category_cie_diez         category_cie_diez           @relation(fields: [categoryId], references: [id])
  subcategory_medical_event subcategory_medical_event[]

  @@index([categoryId])
  @@index([code])
}

model cat_vital_signs {
  id                  Int               @id @default(autoincrement())
  name                String
  category            String
  color               String?
  icon                String?
  mini_icon           String?
  cat_measure_unit_id Int?
  background_icon     String?
  critical_max_value  Float?
  high_max_value      Float?
  normal_max_value    Float?
  normal_min_value    Float?
  slightly_high_value Float?
  cat_measure_unit    cat_measure_unit? @relation(fields: [cat_measure_unit_id], references: [id])
  vital_signs         vital_signs[]
  specialties         cat_speciality[]  @relation("SpecialityVitalSigns")
}

model cat_measure_unit {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  cat_vital_signs cat_vital_signs[]
}

model cat_study_type {
  id              Int             @id @default(autoincrement())
  name            String
  medical_order   medical_order[]
  patient_studies patient_study[]
}

model medical_order_type {
  id            String          @id @default(uuid())
  name          String
  description   String?
  medical_order medical_order[]
}

model cat_certification_type {
  id             Int             @id @default(autoincrement())
  name           String
  description    String?
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  deleted        Boolean         @default(false)
  deleted_at     DateTime?
  tenant_id      String?
  custom         Boolean         @default(false)
  tenant         tenant?         @relation(fields: [tenant_id], references: [id])
  medical_orders medical_order[]
}

model role {
  id          String            @id @default(uuid())
  name        String
  description String?
  is_system   Boolean           @default(false)
  tenant_id   String?
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt
  deleted     Boolean           @default(false)
  deleted_at  DateTime?
  tenant      tenant?           @relation(fields: [tenant_id], references: [id])
  permissions role_permission[]
  users       user_role[]
}

model permission {
  id          String            @id @default(uuid())
  name        String            @unique
  description String?
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt
  roles       role_permission[]
}

model role_permission {
  id            String     @id @default(uuid())
  role_id       String
  permission_id String
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
  permission    permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  role          role       @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@unique([role_id, permission_id])
}

model user_role {
  id         String   @id @default(uuid())
  user_id    String
  role_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  role       role     @relation(fields: [role_id], references: [id], onDelete: Cascade)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, role_id])
}

model physician_schedule {
  id                 String    @id @default(uuid())
  physician_id       String
  day_of_week        Int
  start_time         String
  end_time           String
  appointment_length Int
  simultaneous_slots Int       @default(1)
  break_between      Int       @default(0)
  rest_start         String?
  rest_end           String?
  is_working_day     Boolean   @default(true)
  modality           String
  office_id          String?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  deleted            Boolean   @default(false)
  deleted_at         DateTime?
  tenant_id          String
  physician          physician @relation(fields: [physician_id], references: [id], onDelete: Cascade)
  tenant             tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([physician_id, day_of_week])
}

model physician_schedule_exception {
  id           String    @id @default(uuid())
  physician_id String
  date         DateTime
  is_available Boolean   @default(false)
  reason       String?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted      Boolean   @default(false)
  deleted_at   DateTime?
  tenant_id    String
  physician    physician @relation(fields: [physician_id], references: [id], onDelete: Cascade)
  tenant       tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([physician_id, date])
}

model schedule_slot {
  id           String    @id @default(uuid())
  physician_id String
  start_time   DateTime
  end_time     DateTime
  is_available Boolean   @default(true)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted      Boolean   @default(false)
  deleted_at   DateTime?
  tenant_id    String
  physician    physician @relation(fields: [physician_id], references: [id], onDelete: Cascade)
  tenant       tenant    @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([physician_id, start_time, end_time])
}

model mood_entry {
  id         String   @id @default(uuid())
  patient_id String
  mood_level Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tenant_id  String
  patient    user     @relation(fields: [patient_id], references: [id], onDelete: Cascade)
  tenant     tenant   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
}

enum role_type {
  patient
  physician
  organization_owner
  superadmin
}

enum status_type {
  atendida
  cancelada
  pendiente
}

enum tenant_type {
  individual
  organization
}

enum gender {
  masculino
  femenino
  otro
}

enum medication_dose_status {
  TAKEN
  MISSED_AUTOMATIC
  MISSED_REPORTED
  SKIPPED_BY_USER
}

================
File: README.md
================
# SEGIMED Backend API

Sistema backend para SEGIMED - Plataforma de gesti√≥n m√©dica multiorganizacional.

## Descripci√≥n

SEGIMED es un sistema de gesti√≥n m√©dica que permite a pacientes y m√©dicos de m√∫ltiples organizaciones acceder y gestionar informaci√≥n m√©dica de forma segura y eficiente. El sistema est√° construido con NestJS y soporta arquitectura multitenant.

## Caracter√≠sticas Principales

### üè• Gesti√≥n Multitenant

- Soporte para m√∫ltiples organizaciones
- Pacientes pueden pertenecer a varias organizaciones
- Datos m√©dicos accesibles desde todas las organizaciones del paciente
- Aislamiento seguro de datos por tenant

### üì± Funcionalidades M√≥viles

- **Citas m√©dicas**: Visualizaci√≥n y cancelaci√≥n de citas
- **Prescripciones**: Seguimiento de medicamentos con recordatorios
- **Signos vitales**: Auto-evaluaci√≥n y seguimiento
- **Estudios m√©dicos**: Acceso a estudios e im√°genes

### üîê Seguridad y Autenticaci√≥n

- JWT con informaci√≥n de tenants
- Autorizaci√≥n basada en permisos granulares
- Middleware autom√°tico de filtrado por tenant
- Validaci√≥n de datos con class-validator

### üìä M√≥dulos Implementados

- **Patient Studies**: Gesti√≥n de estudios m√©dicos (con multitenant)
- **Vital Signs**: Registro y seguimiento de signos vitales
- **Prescriptions**: Prescripciones y seguimiento de medicamentos
- **Appointments**: Sistema de citas m√©dicas
- **Catalogs**: Gesti√≥n de cat√°logos del sistema
- **Mobile Functions**: APIs espec√≠ficas para aplicaci√≥n m√≥vil

## Instalaci√≥n del Proyecto

```bash
$ npm install
```

## Variables de Entorno

Crear un archivo `.env` con las siguientes variables:

```bash
# Database
DATABASE_URL="postgresql://user:password@localhost:5432/segimed_db"

# JWT
JWT_SECRET="your-jwt-secret-key"

# File Upload (optional)
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="your-s3-bucket"

# Email (optional)
SMTP_HOST="smtp.gmail.com"
SMTP_PORT=587
SMTP_USER="your-email@gmail.com"
SMTP_PASS="your-email-password"

# Twilio (optional)
TWILIO_ACCOUNT_SID="your-twilio-sid"
TWILIO_AUTH_TOKEN="your-twilio-token"
TWILIO_PHONE_NUMBER="your-twilio-phone"
```

## Ejecutar el Proyecto

```bash
# desarrollo
$ npm run start

# modo watch
$ npm run start:dev

# producci√≥n
$ npm run start:prod
```

## Testing

```bash
# unit tests
$ npm run test

# e2e tests
$ npm run test:e2e

# test coverage
$ npm run test:cov
```

## Nuevas Funcionalidades Implementadas ‚ú®

### 1. CRUD Completo de Tipos de Identificaci√≥n

- **Endpoints**: Full CRUD para `cat_identification_type`
- **Filtrado**: Por pa√≠s con b√∫squeda insensible a may√∫sculas
- **Autorizaci√≥n**: Requiere permiso `MANAGE_CATALOGS`
- **Documentaci√≥n**: [Ver docs](src/docs/cat-identification-type.md)

### 2. Soporte Multitenant para Patient Studies

- **Nuevo endpoint**: `GET /patient-studies/by-patient/{patient_id}`
- **Funcionalidad**: Busca estudios en todas las organizaciones del paciente
- **Optimizaci√≥n**: Prioriza tenants del JWT para mejor performance
- **Documentaci√≥n**: [Ver docs](src/docs/patient-studies.md)

### 3. Cancelaci√≥n de Citas M√≥viles

- **Nuevo endpoint**: `PATCH /mobile/appointments/{appointment_id}/cancel`
- **Validaciones**: Solo citas pendientes y futuras
- **Multitenant**: Soporta pacientes en m√∫ltiples organizaciones
- **Documentaci√≥n**: [Ver docs](src/docs/mobile-appointments.md)

## Arquitectura

### Estructura del Proyecto

```
src/
‚îú‚îÄ‚îÄ auth/                 # Autenticaci√≥n y autorizaci√≥n
‚îú‚îÄ‚îÄ catalogs/             # Cat√°logos del sistema
‚îú‚îÄ‚îÄ management/           # Gesti√≥n de usuarios y pacientes
‚îú‚îÄ‚îÄ medical-scheduling/   # Scheduling m√©dico y datos cl√≠nicos
‚îú‚îÄ‚îÄ mobile-functions/     # APIs espec√≠ficas para m√≥vil
‚îú‚îÄ‚îÄ prisma/               # ORM y base de datos
‚îú‚îÄ‚îÄ utils/                # Utilidades y middlewares
‚îî‚îÄ‚îÄ docs/                 # Documentaci√≥n t√©cnica
```

### Base de Datos

- **ORM**: Prisma
- **Base de datos**: PostgreSQL
- **Migraciones**: Autom√°ticas con Prisma
- **Seeding**: Scripts de datos iniciales

## Documentaci√≥n

### Documentaci√≥n T√©cnica

- [Gu√≠a Multitenant](src/docs/MULTITENANT_GUIDE.md)
- [Patient Studies API](src/docs/patient-studies.md)
- [Mobile Appointments API](src/docs/mobile-appointments.md)
- [Catalog Identification Types API](src/docs/cat-identification-type.md)

### Swagger/OpenAPI

La documentaci√≥n interactiva de la API est√° disponible en:

```
http://localhost:3000/api
```

## Endpoints Principales

### Autenticaci√≥n

- `POST /auth/login` - Iniciar sesi√≥n
- `POST /auth/register` - Registrar usuario
- `POST /auth/refresh` - Renovar token

### Mobile APIs

- `GET /mobile/appointments` - Citas del paciente
- `PATCH /mobile/appointments/{id}/cancel` - Cancelar cita
- `GET /mobile/prescriptions/tracking` - Seguimiento de medicamentos
- `GET /vital-signs/by-patient/{id}` - Signos vitales del paciente

### Patient Studies

- `GET /patient-studies/by-patient/{id}` - Estudios del paciente (multitenant)
- `POST /patient-studies` - Crear nuevo estudio
- `PATCH /patient-studies/{id}` - Actualizar estudio

### Cat√°logos

- `GET /cat-identification-type` - Tipos de identificaci√≥n
- `POST /cat-identification-type` - Crear tipo de identificaci√≥n
- `GET /cat-identification-type?country=Colombia` - Filtrar por pa√≠s

## Deployment

### Producci√≥n

```bash
# Build
$ npm run build

# Start production
$ npm run start:prod
```

### Docker (opcional)

```bash
# Build image
$ docker build -t segimed-backend .

# Run container
$ docker run -p 3000:3000 segimed-backend
```

## Changelog

Ver [CHANGELOG.md](CHANGELOG.md) para detalles de cambios recientes.

## Contribuci√≥n

1. Fork el proyecto
2. Crear rama de feature (`git checkout -b feature/nueva-funcionalidad`)
3. Commit cambios (`git commit -am 'Agregar nueva funcionalidad'`)
4. Push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Crear Pull Request

## Soporte

Para preguntas y soporte t√©cnico:

- Crear un issue en el repositorio
- Contactar al equipo de desarrollo

## Licencia

Este proyecto es privado y pertenece a SEGIMED.

---

**Desarrollado con ‚ù§Ô∏è usando NestJS**

================
File: src/app.controller.spec.ts
================
import { Test, TestingModule } from '@nestjs/testing';
import { AppController } from './app.controller';
import { AppService } from './app.service';

describe('AppController', () => {
  let appController: AppController;

  beforeEach(async () => {
    const app: TestingModule = await Test.createTestingModule({
      controllers: [AppController],
      providers: [AppService],
    }).compile();

    appController = app.get<AppController>(AppController);
  });

  describe('root', () => {
    it('should return "Hello World!"', () => {
      expect(appController.getHello()).toBe('Hello World!');
    });
  });
});

================
File: src/app.controller.ts
================
import { Controller, Get } from '@nestjs/common';
import { AppService } from './app.service';

@Controller()
export class AppController {
  constructor(private readonly appService: AppService) {}

  @Get()
  getHello(): string {
    return this.appService.getHello();
  }
}

================
File: src/app.module.ts
================
import { MiddlewareConsumer, Module, RequestMethod } from '@nestjs/common';
import { ClsModule, ClsMiddleware } from 'nestjs-cls';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { UserModule } from './management/user/user.module';
import { AuthModule } from './management/auth/auth.module';
import { JwtModule } from '@nestjs/jwt';
import { config } from 'dotenv';
import { PrismaModule } from './prisma/prisma.module';
import { PrismaService } from './prisma/prisma.service';
import { AppointmentsModule } from './medical-scheduling/appointments/appointments.module';
import { MedicalEventsModule } from './medical-scheduling/medical-events/medical-events.module';
import { PhysicalExaminationService } from './medical-scheduling/modules/physical-examination-data/physical-examination/physical-examination.service';
import { PhysicalSubsystemService } from './medical-scheduling/modules/physical-examination-data/physical_subsystem/physical_subsystem.service';
import { PatientModule } from './management/patient/patient.module';
import { PatientStudiesModule } from './medical-scheduling/modules/patient-studies/patient-studies.module';
import { FileUploadModule } from './utils/file_upload/file_upload.module';
import { CatStudyTypeModule } from './catalogs/cat-study-type/cat-study-type.module';
import { CatIdentificationTypeModule } from './catalogs/cat-identification-type/cat-identification-type.module';
import { ConfigModule } from '@nestjs/config';
import { EmailModule } from './services/email/email.module';
import { TwilioModule } from './services/twilio/twilio.module';
import { BackgroundModule } from './medical-scheduling/modules/background/background.module';
import { PhysicalExplorationModule } from './medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.module';
import { PhysicalExplorationAreaModule } from './medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.module';
import { CatCieDiezModule } from './catalogs/cat-cie-diez/cat-cie-diez.module';
import { SubcatCieDiezModule } from './catalogs/subcat-cie-diez/subcat-cie-diez.module';
import { MedicineModule } from './medical-scheduling/modules/medicine/medicine.module';
import { PrescriptionModule } from './medical-scheduling/modules/prescription/prescription.module';
import { PresModHistoryModule } from './medical-scheduling/modules/pres_mod_history/pres_mod_history.module';
import { TenantMiddleware } from './utils/middlewares/tenantMiddleware';
import { TenantExtractorMiddleware } from './auth/middlewares/tenant-extractor.middleware';
import { JwtUserExtractorMiddleware } from './auth/middlewares/jwt-user-extractor.middleware';
import { CatVitalSignsModule } from './catalogs/cat-vital-signs/cat-vital-signs.module';
import { CatMeasureUnitModule } from './catalogs/cat-measure-unit/cat-measure-unit.module';
import { GuardAuthModule } from './auth/guard-auth.module';
import { VitalSignsModule } from './medical-scheduling/modules/vital-signs/vital-signs.module';
import { MobileFunctionsModule } from './mobile-functions/mobile-functions.module';
import { CatalogSeedModule } from './catalogs/seed/catalog-seed.module';
import { MedicalOrderModule } from './medical_order/medical_order.module';
import { OrderTypeModule } from './catalogs/order-type/order-type.module';
import { PermissionCheckerService } from './auth/permissions/permission-checker.service';
import { PhysicianScheduleModule } from './medical-scheduling/modules/physician-schedule/physician-schedule.module';
import { TenantAccessGuard } from './auth/guards/tenant-access.guard';
import { SettingsModule } from './medical-scheduling/modules/settings/settings.module';
import { MedicationSchedulerModule } from './services/medication-scheduler/medication-scheduler.module';

config({ path: '.env' });

@Module({
  imports: [
    ClsModule.forRoot({
      global: true,
      middleware: {
        mount: false,
        generateId: true,
        setup: (cls) => {
          // Inicializaci√≥n b√°sica del contexto
          cls.set('requestId', cls.getId());
        },
      },
    }),
    GuardAuthModule,
    AppointmentsModule,
    MedicalEventsModule,
    UserModule,
    PatientStudiesModule,
    ConfigModule.forRoot({
      isGlobal: true, // Esto hace que las configuraciones sean accesibles globalmente
      envFilePath: '.env', // El archivo de configuraci√≥n (deber√≠a estar en la ra√≠z)
    }),
    PrismaModule,
    AuthModule,
    FileUploadModule,
    CatStudyTypeModule,
    CatIdentificationTypeModule,
    CatCieDiezModule,
    SubcatCieDiezModule,
    CatVitalSignsModule,
    CatMeasureUnitModule,
    CatalogSeedModule,
    JwtModule.register({
      secret: process.env.JWT_SECRET,
      global: true,
      signOptions: {
        expiresIn: '7h',
      },
    }),
    PatientModule,
    EmailModule,
    TwilioModule,
    MedicineModule,
    PrescriptionModule,
    PresModHistoryModule,
    BackgroundModule,
    PhysicalExplorationModule,
    PhysicalExplorationAreaModule,
    VitalSignsModule,
    MobileFunctionsModule,
    CatCieDiezModule,
    SubcatCieDiezModule,
    MedicalOrderModule,
    OrderTypeModule,
    PhysicianScheduleModule,
    SettingsModule,
    MedicationSchedulerModule,
  ],
  controllers: [AppController],
  providers: [
    AppService,
    PrismaService,
    PhysicalExaminationService,
    PhysicalSubsystemService,
    PermissionCheckerService,
    TenantAccessGuard,
  ],
})
export class AppModule {
  configure(consumer: MiddlewareConsumer) {
    // Montar ClsMiddleware primero para asegurar que el contexto est√© disponible
    consumer.apply(ClsMiddleware).forRoutes('*');

    consumer
      .apply(TenantMiddleware)
      .exclude(
        { path: 'api', method: RequestMethod.GET },
        { path: 'api/(.*)', method: RequestMethod.GET },
        { path: 'auth/register', method: RequestMethod.POST },
        { path: 'auth', method: RequestMethod.POST },
        { path: 'auth/google', method: RequestMethod.POST },
        { path: 'auth/request-password', method: RequestMethod.POST },
        { path: 'auth/reset-password', method: RequestMethod.POST },
        { path: 'auth/send-otp', method: RequestMethod.POST },
        { path: 'auth/verify-otp', method: RequestMethod.POST },
        { path: 'user/onboarding', method: RequestMethod.POST },
        { path: 'auth/create-superadmin', method: RequestMethod.POST },
      )
      .forRoutes('*');

    consumer
      .apply(JwtUserExtractorMiddleware)
      .exclude(
        { path: 'api', method: RequestMethod.GET },
        { path: 'api/(.*)', method: RequestMethod.GET },
        { path: 'auth/create-superadmin', method: RequestMethod.POST },
      )
      .forRoutes({ path: '*', method: RequestMethod.ALL });

    consumer
      .apply(TenantExtractorMiddleware)
      .exclude(
        { path: 'api', method: RequestMethod.GET },
        { path: 'api/(.*)', method: RequestMethod.GET },
        { path: 'auth/create-superadmin', method: RequestMethod.POST },
      )
      .forRoutes({ path: '*', method: RequestMethod.ALL });
  }
}

================
File: src/app.service.ts
================
import { Injectable } from '@nestjs/common';

@Injectable()
export class AppService {
  getHello(): string {
    return 'Hello World!';
  }
}

================
File: src/auth/controllers/permission-updater.controller.ts
================
import { Controller, Post, UseGuards } from '@nestjs/common';
import { PermissionUpdaterService } from '../services/permission-updater.service';
import { SuperAdminGuard } from '../guards/superadmin.guard';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiSecurity,
} from '@nestjs/swagger';

@ApiTags('Permission Updater')
@ApiSecurity('access-token')
@Controller('permission-updater')
export class PermissionUpdaterController {
  constructor(
    private readonly permissionUpdaterService: PermissionUpdaterService,
  ) {}

  /**
   * Endpoint para actualizar permisos por defecto para m√©dicos y pacientes
   * Solo accesible por superadministradores
   */
  @Post('update-default-permissions')
  @UseGuards(SuperAdminGuard)
  @ApiOperation({
    summary: 'Actualiza los permisos predeterminados para m√©dicos y pacientes',
    description:
      'Actualiza la configuraci√≥n de permisos predeterminados en el sistema. Solo accesible para superadministradores.',
  })
  @ApiResponse({
    status: 200,
    description: 'Permisos predeterminados actualizados exitosamente',
  })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos de superadministrador',
  })
  async updateDefaultPermissions() {
    return this.permissionUpdaterService.updateDefaultPermissions();
  }
}

================
File: src/auth/controllers/roles.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Put,
  Delete,
  UseGuards,
  BadRequestException,
  NotFoundException,
  Query,
} from '@nestjs/common';
import { RolesService } from '../roles/roles.service';
import { PermissionsService } from '../permissions/permissions.service';
import { RequirePermission } from '../decorators/require-permission.decorator';
import { Permission } from '../permissions/permission.enum';
import { PermissionGuard } from '../guards/permission.guard';
import { TenantAccessGuard } from '../guards/tenant-access.guard';
import { TenantAdminGuard } from '../guards/tenant-admin.guard';
import { SuperAdminGuard } from '../guards/superadmin.guard';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiQuery,
  ApiBody,
  ApiSecurity,
  ApiHeader,
} from '@nestjs/swagger';

interface CreateRoleDto {
  name: string;
  description?: string;
  permissions: string[];
  tenantId?: string;
}

interface UpdateRoleDto {
  name?: string;
  description?: string;
  permissions?: string[];
}

interface AssignRoleDto {
  userId: string;
  roleId: string;
}

@ApiTags('Roles')
@ApiSecurity('access-token')
@Controller('roles')
@UseGuards(PermissionGuard)
export class RolesController {
  constructor(
    private readonly rolesService: RolesService,
    private readonly permissionsService: PermissionsService,
  ) {}
  @Delete('assign')
  @UseGuards(TenantAdminGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Elimina un rol de un usuario' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenece el usuario',
    required: true,
  })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        userId: {
          type: 'string',
          format: 'uuid',
          description: 'ID del usuario',
        },
        roleId: {
          type: 'string',
          format: 'uuid',
          description: 'ID del rol a eliminar',
        },
      },
      required: ['userId', 'roleId'],
    },
  })
  @ApiResponse({
    status: 200,
    description: 'Rol eliminado exitosamente del usuario',
  })
  @ApiResponse({
    status: 400,
    description: 'Datos inv√°lidos o error en la operaci√≥n',
  })
  @ApiResponse({ status: 404, description: 'Usuario o rol no encontrado' })
  async removeRoleFromUser(@Body() assignRoleDto: AssignRoleDto) {
    try {
      return await this.rolesService.removeRoleFromUser(
        assignRoleDto.userId,
        assignRoleDto.roleId,
      );
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al eliminar rol del usuario: ${error.message}`,
      );
    }
  }
  @Get('permissions')
  @UseGuards(TenantAccessGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({
    summary: 'Obtiene todos los permisos disponibles en el sistema',
  })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant para verificar acceso',
    required: true,
  })
  @ApiResponse({
    status: 200,
    description: 'Lista de permisos recuperada exitosamente',
  })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para ver permisos',
  })
  async getAllPermissions() {
    return this.permissionsService.getAllPermissions();
  }
  @Get()
  @UseGuards(TenantAccessGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Obtiene todos los roles disponibles' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant para verificar acceso',
    required: true,
  })
  @ApiQuery({
    name: 'tenantId',
    required: false,
    description: 'ID del tenant para filtrar roles espec√≠ficos',
  })
  @ApiResponse({
    status: 200,
    description: 'Lista de roles recuperada exitosamente',
  })
  @ApiResponse({ status: 403, description: 'No tiene permisos para ver roles' })
  async getRoles(@Query('tenantId') tenantId?: string) {
    return this.rolesService.getRoles(tenantId);
  }
  @Get(':id')
  @UseGuards(TenantAccessGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Obtiene un rol espec√≠fico por su ID' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant para verificar acceso',
    required: true,
  })
  @ApiParam({ name: 'id', description: 'ID del rol a consultar' })
  @ApiResponse({ status: 200, description: 'Rol recuperado exitosamente' })
  @ApiResponse({ status: 404, description: 'Rol no encontrado' })
  @ApiResponse({ status: 403, description: 'No tiene permisos para ver roles' })
  async getRoleById(@Param('id') id: string) {
    try {
      return await this.rolesService.getRoleById(id);
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener el rol: ${error.message}`,
      );
    }
  }
  @Post()
  @UseGuards(TenantAdminGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Crea un nuevo rol' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenecer√° el rol',
    required: true,
  })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        name: { type: 'string', description: 'Nombre del rol' },
        description: { type: 'string', description: 'Descripci√≥n del rol' },
        permissions: {
          type: 'array',
          items: { type: 'string' },
          description: 'Lista de permisos asignados al rol',
        },
        tenantId: {
          type: 'string',
          format: 'uuid',
          description: 'ID del tenant (opcional)',
        },
      },
      required: ['name', 'permissions'],
    },
  })
  @ApiResponse({ status: 201, description: 'Rol creado exitosamente' })
  @ApiResponse({ status: 400, description: 'Datos inv√°lidos' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para crear roles',
  })
  async createRole(@Body() createRoleDto: CreateRoleDto) {
    try {
      return await this.rolesService.createRole(createRoleDto);
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException(`Error al crear el rol: ${error.message}`);
    }
  }
  @Put(':id')
  @UseGuards(TenantAdminGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Actualiza un rol existente' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenece el rol',
    required: true,
  })
  @ApiParam({ name: 'id', description: 'ID del rol a actualizar' })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        name: { type: 'string', description: 'Nombre del rol' },
        description: { type: 'string', description: 'Descripci√≥n del rol' },
        permissions: {
          type: 'array',
          items: { type: 'string' },
          description: 'Lista de permisos asignados al rol',
        },
      },
    },
  })
  @ApiResponse({ status: 200, description: 'Rol actualizado exitosamente' })
  @ApiResponse({ status: 400, description: 'Datos inv√°lidos' })
  @ApiResponse({ status: 404, description: 'Rol no encontrado' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para actualizar roles',
  })
  async updateRole(
    @Param('id') id: string,
    @Body() updateRoleDto: UpdateRoleDto,
  ) {
    try {
      return await this.rolesService.updateRole(id, updateRoleDto);
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al actualizar el rol: ${error.message}`,
      );
    }
  }
  @Delete(':id')
  @UseGuards(TenantAdminGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Elimina un rol' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenece el rol',
    required: true,
  })
  @ApiParam({ name: 'id', description: 'ID del rol a eliminar' })
  @ApiResponse({ status: 200, description: 'Rol eliminado exitosamente' })
  @ApiResponse({ status: 400, description: 'Datos inv√°lidos' })
  @ApiResponse({ status: 404, description: 'Rol no encontrado' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para eliminar roles',
  })
  async deleteRole(@Param('id') id: string) {
    try {
      return await this.rolesService.deleteRole(id);
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al eliminar el rol: ${error.message}`,
      );
    }
  }
  @Post('assign')
  @UseGuards(TenantAdminGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Asigna un rol a un usuario' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenece el usuario',
    required: true,
  })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        userId: {
          type: 'string',
          format: 'uuid',
          description: 'ID del usuario',
        },
        roleId: {
          type: 'string',
          format: 'uuid',
          description: 'ID del rol a asignar',
        },
      },
      required: ['userId', 'roleId'],
    },
  })
  @ApiResponse({
    status: 200,
    description: 'Rol asignado exitosamente al usuario',
  })
  @ApiResponse({ status: 400, description: 'Datos inv√°lidos' })
  @ApiResponse({ status: 404, description: 'Usuario o rol no encontrado' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para asignar roles',
  })
  async assignRoleToUser(@Body() assignRoleDto: AssignRoleDto) {
    try {
      return await this.rolesService.assignRoleToUser(
        assignRoleDto.userId,
        assignRoleDto.roleId,
      );
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al asignar rol al usuario: ${error.message}`,
      );
    }
  }
  @Get('user/:userId')
  @UseGuards(TenantAccessGuard)
  @RequirePermission(Permission.CONFIGURE_USER_PERMISSIONS)
  @ApiOperation({ summary: 'Obtiene todos los roles asignados a un usuario' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant al que pertenece el usuario',
    required: true,
  })
  @ApiParam({ name: 'userId', description: 'ID del usuario' })
  @ApiResponse({
    status: 200,
    description: 'Roles del usuario recuperados exitosamente',
  })
  @ApiResponse({ status: 404, description: 'Usuario no encontrado' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos para ver roles de usuarios',
  })
  async getUserRoles(@Param('userId') userId: string) {
    try {
      return await this.rolesService.getUserRoles(userId);
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener roles del usuario: ${error.message}`,
      );
    }
  }
  @Post('seed')
  @UseGuards(SuperAdminGuard)
  @ApiOperation({
    summary: 'Inicializa roles y permisos predeterminados',
    description:
      'Crea los roles y permisos iniciales del sistema. Solo accesible para superadministradores.',
  })
  @ApiResponse({
    status: 201,
    description: 'Roles y permisos inicializados exitosamente',
  })
  @ApiResponse({ status: 400, description: 'Error al crear roles y permisos' })
  @ApiResponse({
    status: 403,
    description: 'No tiene permisos de superadministrador',
  })
  async seedRolesAndPermissions() {
    try {
      await this.permissionsService.seedPermissions();

      return await this.rolesService.seedDefaultRoles();
    } catch (error) {
      throw new BadRequestException(
        `Error al crear roles y permisos por defecto: ${error.message}`,
      );
    }
  }
}

================
File: src/auth/decorators/get-context-tenant.decorator.ts
================
import { createParamDecorator, ExecutionContext } from '@nestjs/common';
import { ClsService } from 'nestjs-cls';

export const GetContextTenant = createParamDecorator(
  (data: unknown, ctx: ExecutionContext) => {
    const app = ctx.getArgByIndex(2); // Get the app context
    const clsService = app.get(ClsService);
    return clsService.get('tenant');
  },
);

================
File: src/auth/decorators/get-context-user.decorator.ts
================
import { createParamDecorator, ExecutionContext } from '@nestjs/common';
import { ClsService } from 'nestjs-cls';

export const GetContextUser = createParamDecorator(
  (data: unknown, ctx: ExecutionContext) => {
    const app = ctx.getArgByIndex(2); // Get the app context
    const clsService = app.get(ClsService);
    return clsService.get('user');
  },
);

================
File: src/auth/decorators/get-tenant.decorator.ts
================
import { createParamDecorator, ExecutionContext } from '@nestjs/common';

export const GetTenant = createParamDecorator(
  (data: unknown, ctx: ExecutionContext) => {
    const request = ctx.switchToHttp().getRequest();
    return request.tenant;
  },
);

================
File: src/auth/decorators/get-tenants.decorator.ts
================
import { createParamDecorator, ExecutionContext } from '@nestjs/common';

export const GetTenants = createParamDecorator(
  (data: unknown, ctx: ExecutionContext) => {
    const request = ctx.switchToHttp().getRequest();
    return request.userTenants;
  },
);

================
File: src/auth/decorators/get-user.decorator.ts
================
import { createParamDecorator, ExecutionContext } from '@nestjs/common';

export const GetUser = createParamDecorator(
  (data: string | undefined, ctx: ExecutionContext) => {
    const request = ctx.switchToHttp().getRequest();

    if (data) {
      return request.user && request.user[data];
    }

    return request.user;
  },
);

================
File: src/auth/decorators/require-permission.decorator.ts
================
import { SetMetadata } from '@nestjs/common';
import { Permission } from '../permissions/permission.enum';

export const PERMISSION_KEY = 'permission';

export const RequirePermission = (permission: Permission) =>
  SetMetadata(PERMISSION_KEY, permission);

================
File: src/auth/guard-auth.module.ts
================
import { Module } from '@nestjs/common';
import { PrismaService } from '../prisma/prisma.service';
import { PermissionsService } from './permissions/permissions.service';
import { RolesService } from './roles/roles.service';
import { PermissionCheckerService } from './permissions/permission-checker.service';
import { PermissionGuard } from './guards/permission.guard';
import { TenantAccessGuard } from './guards/tenant-access.guard';
import { TenantAdminGuard } from './guards/tenant-admin.guard';
import { SuperAdminGuard } from './guards/superadmin.guard';
import { RolesController } from './controllers/roles.controller';
import { UserRoleManagerService } from './roles/user-role-manager.service';
import { PermissionUpdaterService } from './services/permission-updater.service';
import { PermissionUpdaterController } from './controllers/permission-updater.controller';
import { RequestContextService } from './services/request-context.service';
import { VitalSignsOptimizationService } from './services/vital-signs-optimization.service';

@Module({
  controllers: [RolesController, PermissionUpdaterController],
  providers: [
    PrismaService,
    PermissionsService,
    RolesService,
    PermissionCheckerService,
    PermissionGuard,
    TenantAccessGuard,
    TenantAdminGuard,
    SuperAdminGuard,
    UserRoleManagerService,
    PermissionUpdaterService,
    RequestContextService,
    VitalSignsOptimizationService,
  ],
  exports: [
    PermissionsService,
    RolesService,
    PermissionCheckerService,
    PermissionGuard,
    TenantAccessGuard,
    TenantAdminGuard,
    SuperAdminGuard,
    UserRoleManagerService,
    PermissionUpdaterService,
    RequestContextService,
    VitalSignsOptimizationService,
  ],
})
export class GuardAuthModule {}

================
File: src/auth/guards/permission.guard.ts
================
import {
  Injectable,
  CanActivate,
  ExecutionContext,
  ForbiddenException,
  UnauthorizedException,
} from '@nestjs/common';
import { Reflector } from '@nestjs/core';
import { PermissionCheckerService } from '../permissions/permission-checker.service';
import { PERMISSION_KEY } from '../decorators/require-permission.decorator';

@Injectable()
export class PermissionGuard implements CanActivate {
  constructor(
    private reflector: Reflector,
    private permissionChecker: PermissionCheckerService,
  ) {}

  async canActivate(context: ExecutionContext): Promise<boolean> {
    const requiredPermission = this.reflector.getAllAndOverride<string>(
      PERMISSION_KEY,
      [context.getHandler(), context.getClass()],
    );

    // Si no se requiere permiso espec√≠fico, permitir acceso
    if (!requiredPermission) {
      return true;
    }

    const request = context.switchToHttp().getRequest();
    const userId = request.user?.id;
    const tenantId = request.tenant?.id;

    // Si no hay usuario autenticado, denegar acceso
    if (!userId) {
      throw new UnauthorizedException('Usuario no autenticado');
    }

    if (!tenantId) {
      throw new ForbiddenException('No se pudo determinar el tenant');
    }

    // Verificar si el usuario tiene el permiso requerido
    const hasPermission = await this.permissionChecker.hasPermission(
      userId,
      requiredPermission,
      tenantId,
    );

    if (!hasPermission) {
      throw new ForbiddenException(`No tiene permiso: ${requiredPermission}`);
    }

    return true;
  }
}

================
File: src/auth/guards/superadmin.guard.ts
================
import {
  Injectable,
  CanActivate,
  ExecutionContext,
  ForbiddenException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';

@Injectable()
export class SuperAdminGuard implements CanActivate {
  constructor(private prisma: PrismaService) {}

  async canActivate(context: ExecutionContext): Promise<boolean> {
    const request = context.switchToHttp().getRequest();
    const userId = request.user?.id;

    // Si no hay usuario autenticado, denegar acceso
    if (!userId) {
      throw new ForbiddenException('No autorizado');
    }
    console.log('userId', userId);
    // Verificar si el usuario es superadmin
    const user = await this.prisma.user.findUnique({
      where: { id: userId },
      select: { is_superadmin: true },
    });

    if (!user || !user.is_superadmin) {
      throw new ForbiddenException(
        'Se requieren permisos de superadministrador',
      );
    }

    return true;
  }
}

================
File: src/auth/guards/tenant-access.guard.ts
================
import {
  Injectable,
  CanActivate,
  ExecutionContext,
  ForbiddenException,
  UnauthorizedException,
} from '@nestjs/common';
import { PermissionCheckerService } from '../permissions/permission-checker.service';

@Injectable()
export class TenantAccessGuard implements CanActivate {
  constructor(private permissionChecker: PermissionCheckerService) {}

  async canActivate(context: ExecutionContext): Promise<boolean> {
    const request = context.switchToHttp().getRequest();
    const user = request.user;
    const userId = user?.id;
    const tenantId = request.tenant?.id;
    const userTenants = request.userTenants;

    // If there's no authenticated user, deny access
    if (!userId) {
      throw new UnauthorizedException('Usuario no autenticado');
    }

    // Handle patients with multiple tenants differently
    if (user?.role === 'patient' && userTenants && userTenants.length > 0) {
      // If a tenant was requested and it's in the patient's list, allow access
      if (tenantId) {
        const hasTenant = userTenants.some((t) => t.id === tenantId);
        if (hasTenant) {
          return true;
        }

        throw new ForbiddenException('No tiene acceso a esta organizaci√≥n');
      }

      // If no tenant was specified but the patient has tenants, allow access
      if (userTenants.length > 0) {
        return true;
      }
    }

    // Regular tenant access check for non-patient users
    if (!tenantId) {
      throw new ForbiddenException('No se pudo determinar el tenant');
    }

    // Check if the user has access to the tenant
    const hasAccess = await this.permissionChecker.hasAccessToTenant(
      userId,
      tenantId,
    );

    if (!hasAccess) {
      throw new ForbiddenException('No tiene acceso a esta organizaci√≥n');
    }

    return true;
  }
}

================
File: src/auth/guards/tenant-admin.guard.ts
================
import {
  Injectable,
  CanActivate,
  ExecutionContext,
  ForbiddenException,
} from '@nestjs/common';
import { PermissionCheckerService } from '../permissions/permission-checker.service';

@Injectable()
export class TenantAdminGuard implements CanActivate {
  constructor(private permissionChecker: PermissionCheckerService) {}

  async canActivate(context: ExecutionContext): Promise<boolean> {
    const request = context.switchToHttp().getRequest();
    const userId = request.user?.id;
    const tenantId = request.tenant?.id;
    // Si no hay usuario autenticado o tenant, denegar acceso
    if (!userId || !tenantId) {
      throw new ForbiddenException('No autorizado');
    }

    // Verificar si el usuario es admin del tenant
    const isAdmin = await this.permissionChecker.isAdminOfTenant(
      userId,
      tenantId,
    );

    if (!isAdmin) {
      throw new ForbiddenException('Se requieren permisos de administrador');
    }

    return true;
  }
}

================
File: src/auth/middlewares/jwt-user-extractor.middleware.ts
================
import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { AuthHelper } from '../../utils/auth.helper';
import { PrismaService } from '../../prisma/prisma.service';
import { RequestContextService } from '../services/request-context.service';

@Injectable()
export class JwtUserExtractorMiddleware implements NestMiddleware {
  constructor(
    private prisma: PrismaService,
    private readonly requestContext: RequestContextService,
  ) {}

  async use(req: Request, res: Response, next: NextFunction) {
    try {
      // Permitir acceso a la documentaci√≥n de Swagger sin procesar
      const isSwaggerRequest =
        req.path === '/api' ||
        req.path.startsWith('/api/') ||
        req.originalUrl === '/api' ||
        req.originalUrl.startsWith('/api/');

      if (isSwaggerRequest) {
        return next();
      }

      const authorization = req.headers['authorization'];
      if (!authorization) {
        next();
        return;
      }

      const token = authorization.replace('Bearer ', '');
      try {
        const payload = AuthHelper.verifyToken(token);
        if (typeof payload === 'string') {
          next();
          return;
        }

        // Extract user ID from payload
        const userId = payload.id;
        if (!userId) {
          next();
          return;
        }

        // Get user information from database
        const user = await this.prisma.user.findUnique({
          where: { id: userId },
          select: {
            id: true,
            email: true,
            name: true,
            last_name: true,
            role: true,
            tenant_id: true,
          },
        });

        if (user) {
          // Establecer informaci√≥n del usuario en el contexto
          this.requestContext.setUser({
            id: user.id,
            role: user.role,
            tenant_id: user.tenant_id,
            tenants: payload.tenants,
          });

          // Add the user to the request (mantener compatibilidad)
          req['user'] = user;

          // Store tenants info for patients
          if (user.role === 'patient') {
            // Check if tenants are provided in JWT
            if (payload.tenants && Array.isArray(payload.tenants)) {
              this.requestContext.setUserTenants(payload.tenants);
              req['userTenants'] = payload.tenants; // Mantener compatibilidad

              // If there's a tenant_id in the header/request and it's in the list of
              // patient's tenants, use that one
              const requestTenantId =
                (req.headers['x-tenant-id'] as string) ||
                (req.query.tenantId as string) ||
                (req.body && req.body.tenantId);

              if (requestTenantId) {
                const matchingTenant = payload.tenants.find(
                  (t) => t.id === requestTenantId,
                );
                if (matchingTenant) {
                  // If the requested tenant is in the patient's tenants, set it as the current tenant
                  this.requestContext.setTenantId(requestTenantId);
                }
              }
            }
          } else if (user.tenant_id) {
            // For non-patient users, just set the tenant_id as before
            this.requestContext.setTenantId(user.tenant_id);
          }
        }
      } catch (error) {
        // If there's an error verifying the token, simply continue
        console.error('Error al verificar token JWT:', error);
      }

      next();
    } catch (error) {
      console.error('Error en middleware JWT:', error);
      next();
    }
  }
}

================
File: src/auth/middlewares/tenant-extractor.middleware.ts
================
import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { PrismaService } from '../../prisma/prisma.service';
import { RequestContextService } from '../services/request-context.service';

@Injectable()
export class TenantExtractorMiddleware implements NestMiddleware {
  constructor(
    private prisma: PrismaService,
    private readonly requestContext: RequestContextService,
  ) {}

  async use(req: Request, res: Response, next: NextFunction) {
    // Permitir acceso a la documentaci√≥n de Swagger sin procesar
    const isSwaggerRequest =
      req.path === '/api' ||
      req.path.startsWith('/api/') ||
      req.originalUrl === '/api' ||
      req.originalUrl.startsWith('/api/');

    if (isSwaggerRequest) {
      return next();
    }

    // Get the tenant ID from headers, query params or body
    const tenantId =
      (req.headers['x-tenant-id'] as string) ||
      (req.query.tenantId as string) ||
      (req.body && req.body.tenantId);

    // Check if this is a patient with multiple tenants
    const user = req['user'];
    const userTenants = req['userTenants'];

    if (
      user &&
      user.role === 'patient' &&
      userTenants &&
      userTenants.length > 0
    ) {
      // If a specific tenant is requested and it's in the patient's tenants, use that one
      if (tenantId) {
        const matchingTenant = userTenants.find((t) => t.id === tenantId);
        if (matchingTenant) {
          // Get the full tenant info
          const tenant = await this.prisma.tenant.findUnique({
            where: { id: tenantId },
            select: { id: true, type: true, db_name: true },
          });

          if (tenant) {
            this.requestContext.setTenantId(tenant.id);
            this.requestContext.setTenant({
              id: tenant.id,
              type: tenant.type,
              db_name: tenant.db_name,
            });
            // Mantener compatibilidad con req
            req['tenant'] = tenant;
          }
        }
      }
      // If no specific tenant is requested but the patient has tenants, use the first one
      else if (userTenants.length > 0) {
        const firstTenantId = userTenants[0].id;
        const tenant = await this.prisma.tenant.findUnique({
          where: { id: firstTenantId },
          select: { id: true, type: true, db_name: true },
        });

        if (tenant) {
          this.requestContext.setTenantId(tenant.id);
          this.requestContext.setTenant({
            id: tenant.id,
            type: tenant.type,
            db_name: tenant.db_name,
          });
          // Mantener compatibilidad con req
          req['tenant'] = tenant;
        }
      }
    }
    // Regular tenant handling (non-patient users or patients with a single tenant)
    else if (tenantId) {
      try {
        // Check if the tenant exists
        const tenant = await this.prisma.tenant.findUnique({
          where: { id: tenantId },
          select: { id: true, type: true, db_name: true },
        });

        if (tenant) {
          // Add the tenant to the context
          this.requestContext.setTenantId(tenant.id);
          this.requestContext.setTenant({
            id: tenant.id,
            type: tenant.type,
            db_name: tenant.db_name,
          });
          // Mantener compatibilidad con req
          req['tenant'] = tenant;
        }
      } catch (error) {
        // If there's an error, just continue without a tenant
        console.error('Error al obtener tenant:', error);
      }
    }

    next();
  }
}

================
File: src/auth/permissions/permission-checker.service.ts
================
import { Injectable, ForbiddenException } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { Permission } from './permission.enum';

@Injectable()
export class PermissionCheckerService {
  constructor(private prisma: PrismaService) {}

  /**
   * Verifica si un usuario tiene un permiso espec√≠fico
   */
  async hasPermission(
    userId: string,
    permissionName: string,
    tenantId?: string,
  ): Promise<boolean> {
    try {
      // Verificar si el usuario existe
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new ForbiddenException('Usuario no encontrado');
      }

      // Si el usuario es superadmin, tiene todos los permisos
      if (user.is_superadmin) {
        return true;
      }

      // Verificar si el usuario tiene el permiso a trav√©s de sus roles
      const userRoles = await this.prisma.user_role.findMany({
        where: { user_id: userId },
        include: {
          role: {
            include: {
              permissions: {
                include: {
                  permission: true,
                },
              },
            },
          },
        },
      });

      // Si el usuario no tiene roles, no tiene permisos
      if (userRoles.length === 0) {
        return false;
      }

      // Verificar si alguno de los roles del usuario tiene el permiso solicitado
      for (const userRole of userRoles) {
        const role = userRole.role;

        // Si es un rol de sistema, aplica para todos los tenants
        // Si no es un rol de sistema, verificar que coincida el tenant
        if (role.is_system || !tenantId || role.tenant_id === tenantId) {
          // Verificar si el rol tiene el permiso
          const hasPermission = role.permissions.some(
            (rp) => rp.permission.name === permissionName,
          );

          if (hasPermission) {
            return true;
          }
        }
      }

      return false;
    } catch (error) {
      if (error instanceof ForbiddenException) {
        throw error;
      }
      throw new ForbiddenException('Error al verificar permisos');
    }
  }

  /**
   * Verifica si un usuario tiene acceso a un tenant espec√≠fico
   */
  async hasAccessToTenant(userId: string, tenantId: string): Promise<boolean> {
    try {
      // Verificar si el usuario existe
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new ForbiddenException('Usuario no encontrado');
      }

      // Si el usuario es superadmin, tiene acceso a todos los tenants
      if (user.is_superadmin) {
        return true;
      }

      // Si el usuario pertenece al tenant, tiene acceso
      if (user.tenant_id === tenantId) {
        return true;
      }

      // Verificar si el usuario tiene roles asociados al tenant
      const userRoles = await this.prisma.user_role.findMany({
        where: { user_id: userId },
        include: {
          role: true,
        },
      });

      // Verificar si alguno de los roles del usuario est√° asociado al tenant
      return userRoles.some(
        (userRole) =>
          userRole.role.tenant_id === tenantId || userRole.role.is_system,
      );
    } catch (error) {
      if (error instanceof ForbiddenException) {
        throw error;
      }
      throw new ForbiddenException('Error al verificar acceso al tenant');
    }
  }

  /**
   * Verifica si un usuario es admin de un tenant espec√≠fico
   */
  async isAdminOfTenant(userId: string, tenantId: string): Promise<boolean> {
    try {
      // Verificar si el usuario existe
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new ForbiddenException('Usuario no encontrado');
      }

      // Si el usuario es superadmin, es admin de todos los tenants
      if (user.is_superadmin) {
        return true;
      }

      // Verificar si el usuario tiene el rol de Admin en el tenant
      const userRoles = await this.prisma.user_role.findMany({
        where: { user_id: userId },
        include: {
          role: true,
        },
      });

      // Verificar si el usuario tiene el rol de Admin en el tenant
      return userRoles.some(
        (userRole) =>
          userRole.role.name === 'Admin' &&
          (userRole.role.tenant_id === tenantId || userRole.role.is_system),
      );
    } catch (error) {
      if (error instanceof ForbiddenException) {
        throw error;
      }
      throw new ForbiddenException('Error al verificar si es admin del tenant');
    }
  }

  /**
   * Obtiene todos los permisos de un usuario
   */
  async getUserPermissions(
    userId: string,
    tenantId?: string,
  ): Promise<string[]> {
    try {
      // Verificar si el usuario existe
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new ForbiddenException('Usuario no encontrado');
      }

      // Si el usuario es superadmin, tiene todos los permisos
      if (user.is_superadmin) {
        return Object.values(Permission);
      }

      // Obtener roles del usuario
      const userRoles = await this.prisma.user_role.findMany({
        where: { user_id: userId },
        include: {
          role: {
            include: {
              permissions: {
                include: {
                  permission: true,
                },
              },
            },
          },
        },
      });

      // Recopilar permisos √∫nicos de todos los roles aplicables
      const permissions = new Set<string>();

      for (const userRole of userRoles) {
        const role = userRole.role;

        // Si es un rol de sistema, aplica para todos los tenants
        // Si no es un rol de sistema, verificar que coincida el tenant
        if (role.is_system || !tenantId || role.tenant_id === tenantId) {
          // Agregar permisos del rol
          for (const rolePermission of role.permissions) {
            permissions.add(rolePermission.permission.name);
          }
        }
      }

      return Array.from(permissions);
    } catch (error) {
      if (error instanceof ForbiddenException) {
        throw error;
      }
      throw new ForbiddenException('Error al obtener permisos del usuario');
    }
  }
}

================
File: src/auth/permissions/permission.enum.ts
================
export enum Permission {
  CONFIGURE_SYSTEM_SETTINGS = 'configurar_ajustes_del_sistema',

  // Gesti√≥n de M√©dicos
  VIEW_DOCTORS_LIST = 'ver_listado_de_medicos',
  VIEW_DOCTOR_DETAILS = 'ver_detalles_de_medico',
  EDIT_DOCTOR_INFO = 'editar_informacion_de_medico',
  DELETE_DOCTORS = 'eliminar_medicos',
  ACCESS_DOCTOR_INDICATORS = 'acceder_a_indicadores_de_medicos',

  // Gesti√≥n de Pacientes
  VIEW_PATIENTS_LIST = 'ver_listado_de_pacientes',
  VIEW_PATIENT_DETAILS = 'ver_detalles_de_paciente',
  EDIT_PATIENT_INFO = 'editar_informacion_de_paciente',
  DELETE_PATIENTS = 'eliminar_pacientes',
  ACCESS_PATIENT_INDICATORS = 'acceder_a_indicadores_del_paciente',

  // Tratamientos y Diagn√≥sticos
  ASSIGN_TREATMENTS = 'asignar_tratamientos_a_pacientes',
  MODIFY_TREATMENTS = 'modificar_tratamientos_asignados',
  VIEW_TREATMENT_HISTORY = 'ver_historial_de_tratamientos',
  ADD_DIAGNOSES = 'agregar_diagnosticos_medicos',
  EDIT_DIAGNOSES = 'editar_diagnosticos',

  // Reportes de Gesti√≥n
  VIEW_ACTIVITY_REPORTS = 'ver_reportes_de_actividad',
  GENERATE_CONSULTATION_REPORTS = 'generar_reportes_de_consultas_atendidas',
  GENERATE_ADHERENCE_REPORTS = 'generar_reportes_de_adherencia_al_tratamiento',
  DOWNLOAD_REPORTS = 'descargar_reportes_en_pdf_o_excel',
  VIEW_STATISTICS = 'ver_estadisticas',

  // Administraci√≥n y Configuraci√≥n
  MANAGE_USERS = 'gestion_de_usuarios',
  CONFIGURE_USER_PERMISSIONS = 'configuracion_de_permisos_de_usuarios',
  DEFINE_STATISTICS_ACCESS = 'definir_acceso_a_estadisticas_y_reportes',
  CONFIGURE_ALERTS = 'configuracion_de_alertas_y_notificaciones',
  MANAGE_SPECIALTIES = 'gestion_de_especialidades_medicas',

  // Agenda y Turnos
  SCHEDULE_APPOINTMENTS = 'agendar_consultas_para_pacientes',
  EDIT_CANCEL_APPOINTMENTS = 'editar_y_cancelar_citas',
  CONFIRM_PATIENT_ATTENDANCE = 'confirmar_asistencia_del_paciente',
  BLOCK_SCHEDULE = 'bloquear_horarios_en_la_agenda',
  AUTOMATIC_REMINDERS = 'recordatorios_automaticos_de_citas',

  // Gesti√≥n de Ordenes M√©dicas
  CREATE_MEDICAL_ORDERS = 'crear_ordenes_medicas',
  EDIT_MEDICAL_ORDERS = 'editar_ordenes_medicas',
  DELETE_MEDICAL_ORDERS = 'eliminar_ordenes_medicas',
  VIEW_MEDICAL_ORDERS = 'ver_ordenes_medicas',
  UPDATE_MEDICAL_ORDERS = 'actualizar_ordenes_medicas',

  // Cat√°logos
  MANAGE_CATALOGS = 'gestionar_catalogos',
  //Permisos de Paciente
  VIEW_OWN_APPOINTMENTS = 'ver_citas_propias',
  SCHEDULE_OWN_APPOINTMENT = 'agendar_citas_propias',
  VIEW_OWN_MEDICAL_RECORDS = 'ver_historial_medico_propio',
  SUBMIT_SELF_EVALUATION = 'enviar_evaluaciones_propias',
  VIEW_OWN_VITAL_SIGNS = 'ver_signos_vitales_propios',
  REGISTER_OWN_VITAL_SIGNS = 'registrar_signos_vitales_propios',
  VIEW_OWN_PRESCRIPTIONS = 'ver_prescripciones_propias',
  VIEW_OWN_MEDICAL_EVENTS = 'ver_eventos_medicos_propios',
  VIEW_OWN_SETTINGS = 'ver_configuraciones_propias',
  UPDATE_OWN_SETTINGS = 'actualizar_configuraciones_propias',

  // Configuraciones de Pacientes (para profesionales)
  VIEW_PATIENT_SETTINGS = 'ver_configuraciones_de_paciente',
  UPDATE_PATIENT_SETTINGS = 'actualizar_configuraciones_de_paciente',
}

================
File: src/auth/permissions/permissions.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { Permission } from './permission.enum';

@Injectable()
export class PermissionsService {
  constructor(private prisma: PrismaService) {}

  async seedPermissions() {
    // Obtener todos los permisos existentes
    const existingPermissions = await this.prisma.permission.findMany();
    const existingPermissionNames = existingPermissions.map((p) => p.name);

    // Crear permisos que no existen
    const permissionsToCreate = Object.values(Permission)
      .filter((permission) => !existingPermissionNames.includes(permission))
      .map((permission) => ({
        name: permission,
        description: this.getPermissionDescription(permission),
      }));

    if (permissionsToCreate.length > 0) {
      await this.prisma.permission.createMany({
        data: permissionsToCreate,
        skipDuplicates: true,
      });
    }

    return this.prisma.permission.findMany();
  }

  async getAllPermissions() {
    return this.prisma.permission.findMany({
      orderBy: { name: 'asc' },
    });
  }

  async getPermissionById(id: string) {
    const permission = await this.prisma.permission.findUnique({
      where: { id },
    });

    if (!permission) {
      throw new NotFoundException(`Permiso con ID ${id} no encontrado`);
    }

    return permission;
  }

  async getPermissionByName(name: string) {
    const permission = await this.prisma.permission.findUnique({
      where: { name },
    });

    if (!permission) {
      throw new NotFoundException(`Permiso con nombre ${name} no encontrado`);
    }

    return permission;
  }

  private getPermissionDescription(permissionName: string): string {
    const descriptions = {
      [Permission.VIEW_DOCTORS_LIST]: 'Ver listado de m√©dicos',
      [Permission.VIEW_DOCTOR_DETAILS]: 'Ver detalles de m√©dico',
      [Permission.EDIT_DOCTOR_INFO]: 'Editar informaci√≥n de m√©dico',
      [Permission.DELETE_DOCTORS]: 'Eliminar m√©dicos',
      [Permission.ACCESS_DOCTOR_INDICATORS]:
        'Acceder a indicadores de m√©dicos (consultas atendidas, rendimiento, calificaci√≥n, etc.)',

      [Permission.VIEW_PATIENTS_LIST]: 'Ver listado de pacientes',
      [Permission.VIEW_PATIENT_DETAILS]: 'Ver detalles de paciente',
      [Permission.EDIT_PATIENT_INFO]: 'Editar informaci√≥n de paciente',
      [Permission.DELETE_PATIENTS]: 'Eliminar pacientes',
      [Permission.ACCESS_PATIENT_INDICATORS]:
        'Acceder a indicadores del paciente (estad√≠sticas, adherencia, alarmas, etc.)',

      [Permission.ASSIGN_TREATMENTS]: 'Asignar tratamientos a pacientes',
      [Permission.MODIFY_TREATMENTS]: 'Modificar tratamientos asignados',
      [Permission.VIEW_TREATMENT_HISTORY]: 'Ver historial de tratamientos',
      [Permission.ADD_DIAGNOSES]: 'Agregar diagn√≥sticos m√©dicos',
      [Permission.EDIT_DIAGNOSES]: 'Editar diagn√≥sticos',

      [Permission.VIEW_ACTIVITY_REPORTS]:
        'Ver reportes de actividad (m√©dicos y pacientes)',
      [Permission.GENERATE_CONSULTATION_REPORTS]:
        'Generar reportes de consultas atendidas',
      [Permission.GENERATE_ADHERENCE_REPORTS]:
        'Generar reportes de adherencia al tratamiento',
      [Permission.DOWNLOAD_REPORTS]: 'Descargar reportes en PDF o Excel',
      [Permission.VIEW_STATISTICS]: 'Ver estad√≠sticas y gr√°ficos del sistema',

      [Permission.MANAGE_USERS]:
        'Gesti√≥n de usuarios (crear, editar, eliminar roles)',
      [Permission.CONFIGURE_USER_PERMISSIONS]:
        'Configuraci√≥n de permisos de usuarios',
      [Permission.DEFINE_STATISTICS_ACCESS]:
        'Definir acceso a estad√≠sticas y reportes',
      [Permission.CONFIGURE_ALERTS]:
        'Configuraci√≥n de alertas y notificaciones',
      [Permission.MANAGE_SPECIALTIES]: 'Gesti√≥n de especialidades m√©dicas',

      [Permission.SCHEDULE_APPOINTMENTS]: 'Agendar consultas para pacientes',
      [Permission.EDIT_CANCEL_APPOINTMENTS]: 'Editar y cancelar citas',
      [Permission.CONFIRM_PATIENT_ATTENDANCE]:
        'Confirmar asistencia del paciente',
      [Permission.BLOCK_SCHEDULE]: 'Bloquear horarios en la agenda',
      [Permission.AUTOMATIC_REMINDERS]: 'Recordatorios autom√°ticos de citas',

      [Permission.MANAGE_CATALOGS]: 'Gestionar cat√°logos del sistema',
    };

    return descriptions[permissionName] || permissionName;
  }
}

================
File: src/auth/roles/roles.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { Permission } from '../permissions/permission.enum';

interface CreateRoleDto {
  name: string;
  description?: string;
  permissions: string[];
  tenantId?: string;
  isSystem?: boolean;
}

interface UpdateRoleDto {
  name?: string;
  description?: string;
  permissions?: string[];
}

@Injectable()
export class RolesService {
  constructor(private prisma: PrismaService) {}

  async seedDefaultRoles() {
    const defaultRoles = [
      {
        name: 'SuperAdmin',
        description: 'Administrador con acceso completo al sistema',
        isSystem: true,
        permissions: Object.values(Permission),
      },
      {
        name: 'Admin',
        description: 'Administrador de organizaci√≥n',
        isSystem: true,
        permissions: Object.values(Permission),
      },
      {
        name: 'Secretario',
        description: 'Secretario con permisos limitados',
        isSystem: true,
        permissions: [
          Permission.VIEW_DOCTORS_LIST,
          Permission.VIEW_DOCTOR_DETAILS,
          Permission.VIEW_PATIENTS_LIST,
          Permission.VIEW_PATIENT_DETAILS,
          Permission.SCHEDULE_APPOINTMENTS,
          Permission.EDIT_CANCEL_APPOINTMENTS,
          Permission.CONFIRM_PATIENT_ATTENDANCE,
        ],
      },
    ];

    for (const roleData of defaultRoles) {
      const existingRole = await this.prisma.role.findFirst({
        where: { name: roleData.name, is_system: true },
      });

      if (!existingRole) {
        await this.createRole({
          name: roleData.name,
          description: roleData.description,
          permissions: roleData.permissions,
          isSystem: roleData.isSystem,
        });
      }
    }

    return this.prisma.role.findMany({
      where: { is_system: true },
      include: { permissions: { include: { permission: true } } },
    });
  }

  async createRole(data: CreateRoleDto) {
    try {
      const permissions = await this.prisma.permission.findMany({
        where: {
          name: {
            in: data.permissions,
          },
        },
      });

      if (permissions.length !== data.permissions.length) {
        throw new BadRequestException('Algunos permisos no existen');
      }

      // Crear el rol y asignar permisos en una √∫nica transacci√≥n at√≥mica
      return await this.prisma.$transaction(async (tx) => {
        // Crear el rol
        const role = await tx.role.create({
          data: {
            name: data.name,
            description: data.description,
            is_system: data.isSystem || false,
            tenant_id: data.tenantId,
          },
        });

        // Preparar los datos para crear las relaciones rol-permiso
        const rolePermissionsData = permissions.map((permission) => ({
          role_id: role.id,
          permission_id: permission.id,
        }));

        // Crear todas las relaciones role_permission de una vez
        await tx.role_permission.createMany({
          data: rolePermissionsData,
        });

        return role;
      });
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException(`Error al crear el rol: ${error.message}`);
    }
  }

  async getRoles(tenantId?: string) {
    return this.prisma.role.findMany({
      where: {
        OR: [{ tenant_id: tenantId }, { is_system: true }],
        deleted: false,
      },
      include: {
        permissions: {
          include: {
            permission: true,
          },
        },
      },
    });
  }

  async getRoleById(id: string) {
    const role = await this.prisma.role.findUnique({
      where: { id },
      include: {
        permissions: {
          include: {
            permission: true,
          },
        },
      },
    });

    if (!role) {
      throw new NotFoundException(`Rol con ID ${id} no encontrado`);
    }

    return role;
  }

  async updateRole(id: string, data: UpdateRoleDto) {
    try {
      const role = await this.getRoleById(id);

      if (role.is_system) {
        throw new BadRequestException(
          'No se pueden modificar roles del sistema',
        );
      }

      return this.prisma.$transaction(async (tx) => {
        // Actualizar datos b√°sicos del rol
        const updatedRole = await tx.role.update({
          where: { id },
          data: {
            name: data.name,
            description: data.description,
          },
        });

        // Si se proporcionan permisos, actualizar los permisos del rol
        if (data.permissions) {
          // Verificar que los permisos existan
          const permissions = await tx.permission.findMany({
            where: {
              name: {
                in: data.permissions,
              },
            },
          });

          if (permissions.length !== data.permissions.length) {
            throw new BadRequestException('Algunos permisos no existen');
          }

          // Eliminar permisos actuales
          await tx.role_permission.deleteMany({
            where: { role_id: id },
          });

          // Asociar nuevos permisos
          for (const permission of permissions) {
            await tx.role_permission.create({
              data: {
                role_id: id,
                permission_id: permission.id,
              },
            });
          }
        }

        return updatedRole;
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al actualizar el rol: ${error.message}`,
      );
    }
  }

  async deleteRole(id: string) {
    try {
      const role = await this.getRoleById(id);

      if (role.is_system) {
        throw new BadRequestException(
          'No se pueden eliminar roles del sistema',
        );
      }

      // Verificar si hay usuarios con este rol
      const usersWithRole = await this.prisma.user_role.findMany({
        where: { role_id: id },
      });

      if (usersWithRole.length > 0) {
        throw new BadRequestException(
          'No se puede eliminar un rol asignado a usuarios',
        );
      }

      // Eliminar el rol y sus permisos asociados
      return this.prisma.$transaction(async (tx) => {
        // Eliminar permisos del rol
        await tx.role_permission.deleteMany({
          where: { role_id: id },
        });

        // Eliminar el rol
        return tx.role.delete({
          where: { id },
        });
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al eliminar el rol: ${error.message}`,
      );
    }
  }

  async assignRoleToUser(userId: string, roleId: string) {
    try {
      // Verificar si el usuario existe
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new NotFoundException(`Usuario con ID ${userId} no encontrado`);
      }

      // Verificar si el rol existe
      /*     const role = await this.getRoleById(roleId); */

      // Verificar si el usuario ya tiene este rol
      const existingUserRole = await this.prisma.user_role.findFirst({
        where: {
          user_id: userId,
          role_id: roleId,
        },
      });

      if (existingUserRole) {
        throw new BadRequestException('El usuario ya tiene asignado este rol');
      }

      // Asignar rol al usuario
      return this.prisma.user_role.create({
        data: {
          user_id: userId,
          role_id: roleId,
        },
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al asignar rol al usuario: ${error.message}`,
      );
    }
  }

  async removeRoleFromUser(userId: string, roleId: string) {
    try {
      const userRole = await this.prisma.user_role.findFirst({
        where: {
          user_id: userId,
          role_id: roleId,
        },
      });
      if (!userRole) {
        throw new NotFoundException('El usuario no tiene asignado este rol');
      }

      // Eliminar la relaci√≥n
      return this.prisma.user_role.delete({
        where: { id: userRole.id },
      });
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al eliminar rol del usuario: ${error.message}`,
      );
    }
  }

  async getUserRoles(userId: string) {
    // Verificar si el usuario existe
    const user = await this.prisma.user.findUnique({
      where: { id: userId },
    });

    if (!user) {
      throw new NotFoundException(`Usuario con ID ${userId} no encontrado`);
    }

    // Obtener roles del usuario
    return this.prisma.user_role.findMany({
      where: { user_id: userId },
      include: {
        role: {
          include: {
            permissions: {
              include: {
                permission: true,
              },
            },
          },
        },
      },
    });
  }
}

================
File: src/auth/roles/user-role-manager.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { Permission } from '../permissions/permission.enum';

@Injectable()
export class UserRoleManagerService {
  constructor(private prisma: PrismaService) {}

  /**
   * Asigna autom√°ticamente un rol a un usuario basado en su tipo (m√©dico o paciente)
   * @param userId ID del usuario
   * @param userType Tipo de usuario ('physician', 'patient', etc.)
   * @param tenantId ID del tenant (opcional)
   */
  async assignDefaultRoleToUser(
    userId: string,
    userType: 'physician' | 'patient',
    tenantId?: string,
  ): Promise<void> {
    try {
      console.log(
        `Asignando rol por defecto a usuario ${userId} de tipo ${userType}`,
      );

      // Buscar el rol seg√∫n el tipo de usuario
      let roleName: string;

      switch (userType) {
        case 'physician':
          roleName = 'Physician';
          // Asegurar que existe el rol de m√©dico
          await this.ensurePhysicianRoleExists(tenantId);
          break;
        case 'patient':
          roleName = 'Patient';
          // Si no existe un rol "Patient", podemos verificar y crearlo
          await this.ensurePatientRoleExists(tenantId);
          break;
        default:
          console.log(`Tipo de usuario ${userType} no reconocido`);
          return;
      }

      // Buscar el rol en la base de datos
      const role = await this.prisma.role.findFirst({
        where: {
          name: roleName,
          tenant_id: tenantId || null,
        },
      });

      if (!role) {
        console.log(`Rol ${roleName} no encontrado`);
        return;
      }

      // Verificar si el usuario ya tiene este rol
      const existingUserRole = await this.prisma.user_role.findFirst({
        where: {
          user_id: userId,
          role_id: role.id,
        },
      });

      if (existingUserRole) {
        console.log(`El usuario ya tiene el rol ${roleName}`);
        return;
      }

      // Asignar el rol al usuario
      await this.prisma.user_role.create({
        data: {
          user_id: userId,
          role_id: role.id,
        },
      });

      console.log(`Rol ${roleName} asignado exitosamente al usuario ${userId}`);
    } catch (error) {
      console.error('Error al asignar rol al usuario:', error);
    }
  }

  /**
   * Asegura que exista un rol de tipo m√©dico en el sistema
   */
  async ensurePhysicianRoleExists(tenantId?: string): Promise<void> {
    try {
      // Verificar si ya existe un rol de m√©dico
      const physicianRole = await this.prisma.role.findFirst({
        where: {
          name: 'Physician',
          tenant_id: tenantId || null,
        },
      });

      // Si ya existe, no hacemos nada
      if (physicianRole) {
        return;
      }

      // Obtener los permisos b√°sicos que un m√©dico deber√≠a tener
      const physicianPermissions = await this.prisma.permission.findMany({
        where: {
          name: {
            in: [
              Permission.VIEW_PATIENTS_LIST,
              Permission.VIEW_PATIENT_DETAILS,
              Permission.EDIT_PATIENT_INFO,
              Permission.VIEW_DOCTORS_LIST,
              Permission.VIEW_DOCTOR_DETAILS,
              Permission.SCHEDULE_APPOINTMENTS,
              Permission.EDIT_CANCEL_APPOINTMENTS,
              Permission.CONFIRM_PATIENT_ATTENDANCE,
              Permission.ASSIGN_TREATMENTS,
              Permission.MODIFY_TREATMENTS,
              Permission.VIEW_TREATMENT_HISTORY,
              Permission.ADD_DIAGNOSES,
              Permission.EDIT_DIAGNOSES,
              Permission.VIEW_ACTIVITY_REPORTS,
              Permission.GENERATE_CONSULTATION_REPORTS,
              Permission.GENERATE_ADHERENCE_REPORTS,
              Permission.DOWNLOAD_REPORTS,
              Permission.MANAGE_USERS,
              Permission.CONFIGURE_USER_PERMISSIONS,
              Permission.CREATE_MEDICAL_ORDERS,
              Permission.EDIT_MEDICAL_ORDERS,
              Permission.DELETE_MEDICAL_ORDERS,
              Permission.VIEW_MEDICAL_ORDERS,
              Permission.UPDATE_MEDICAL_ORDERS,
            ],
          },
        },
      });

      // Crear el rol y sus permisos en una √∫nica transacci√≥n at√≥mica
      await this.prisma.$transaction(async (tx) => {
        // Crear el rol de m√©dico
        const newRole = await tx.role.create({
          data: {
            name: 'Physician',
            description: 'Rol para m√©dicos con acceso a funciones m√©dicas',
            is_system: true,
            tenant_id: tenantId || null,
          },
        });

        // Si hay permisos para asignar, crearlos todos de una vez
        if (physicianPermissions.length > 0) {
          // Preparar los datos para crear las relaciones rol-permiso
          const rolePermissionsData = physicianPermissions.map(
            (permission) => ({
              role_id: newRole.id,
              permission_id: permission.id,
            }),
          );

          // Crear todas las relaciones role_permission de una vez
          await tx.role_permission.createMany({
            data: rolePermissionsData,
          });
        }

        console.log('Rol Physician creado exitosamente');
      });
    } catch (error) {
      console.error('Error al crear el rol de m√©dico:', error);
    }
  }

  /**
   * Asegura que exista un rol de tipo paciente en el sistema
   */
  async ensurePatientRoleExists(tenantId?: string): Promise<void> {
    try {
      // Verificar si ya existe un rol de paciente
      const patientRole = await this.prisma.role.findFirst({
        where: {
          name: 'Patient',
          tenant_id: tenantId || null,
        },
      });

      // Si ya existe, no hacemos nada
      if (patientRole) {
        return;
      }

      // Obtener los permisos b√°sicos que un paciente deber√≠a tener
      const basicPermissions = await this.prisma.permission.findMany({
        where: {
          name: {
            in: [
              Permission.VIEW_OWN_APPOINTMENTS,
              Permission.SCHEDULE_OWN_APPOINTMENT,
              Permission.VIEW_OWN_MEDICAL_RECORDS,
              Permission.SUBMIT_SELF_EVALUATION,
              Permission.VIEW_PATIENT_DETAILS,
              Permission.VIEW_MEDICAL_ORDERS,
              Permission.VIEW_TREATMENT_HISTORY,
              Permission.VIEW_DOCTORS_LIST,
              Permission.VIEW_DOCTOR_DETAILS,
              Permission.VIEW_OWN_VITAL_SIGNS,
              Permission.REGISTER_OWN_VITAL_SIGNS,
              Permission.VIEW_OWN_PRESCRIPTIONS,
              Permission.VIEW_OWN_MEDICAL_EVENTS,
            ],
          },
        },
      });

      // Crear el rol y sus permisos en una √∫nica transacci√≥n at√≥mica
      await this.prisma.$transaction(async (tx) => {
        // Crear el rol de paciente
        const newRole = await tx.role.create({
          data: {
            name: 'Patient',
            description: 'Rol para pacientes con acceso limitado',
            is_system: true,
            tenant_id: tenantId || null,
          },
        });

        // Si hay permisos para asignar, crearlos todos de una vez
        if (basicPermissions.length > 0) {
          // Preparar los datos para crear las relaciones rol-permiso
          const rolePermissionsData = basicPermissions.map((permission) => ({
            role_id: newRole.id,
            permission_id: permission.id,
          }));

          // Crear todas las relaciones role_permission de una vez
          await tx.role_permission.createMany({
            data: rolePermissionsData,
          });
        }

        console.log('Rol Patient creado exitosamente');
      });
    } catch (error) {
      console.error('Error al crear el rol de paciente:', error);
    }
  }
}

================
File: src/auth/services/permission-updater.service.ts
================
import { Injectable, Logger } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { UserRoleManagerService } from '../roles/user-role-manager.service';
import { Permission } from '../permissions/permission.enum';

@Injectable()
export class PermissionUpdaterService {
  private readonly logger = new Logger(PermissionUpdaterService.name);

  constructor(
    private readonly prisma: PrismaService,
    private readonly userRoleManager: UserRoleManagerService,
  ) {}

  /**
   * Actualiza los permisos por defecto para m√©dicos y pacientes
   */
  async updateDefaultPermissions() {
    this.logger.log('Iniciando actualizaci√≥n de permisos por defecto...');

    const stats = {
      physicians: {
        processed: 0,
        updated: 0,
        rolesUpdated: 0,
      },
      patients: {
        processed: 0,
        updated: 0,
        rolesUpdated: 0,
      },
      errors: 0,
    };

    try {
      // Paso 1: Asegurar que existan los roles por defecto y actualizar sus permisos
      this.logger.log('Verificando y actualizando roles por defecto...');

      // Obtener todos los permisos por defecto para m√©dicos y pacientes
      const physicianPermissions = [
        Permission.VIEW_PATIENTS_LIST,
        Permission.VIEW_PATIENT_DETAILS,
        Permission.EDIT_PATIENT_INFO,
        Permission.DELETE_PATIENTS,
        Permission.VIEW_DOCTORS_LIST,
        Permission.VIEW_DOCTOR_DETAILS,
        Permission.SCHEDULE_APPOINTMENTS,
        Permission.EDIT_CANCEL_APPOINTMENTS,
        Permission.CONFIRM_PATIENT_ATTENDANCE,
        Permission.ASSIGN_TREATMENTS,
        Permission.MODIFY_TREATMENTS,
        Permission.VIEW_TREATMENT_HISTORY,
        Permission.ADD_DIAGNOSES,
        Permission.EDIT_DIAGNOSES,
        Permission.VIEW_ACTIVITY_REPORTS,
        Permission.GENERATE_CONSULTATION_REPORTS,
        Permission.GENERATE_ADHERENCE_REPORTS,
        Permission.DOWNLOAD_REPORTS,
        Permission.MANAGE_USERS,
        Permission.CONFIGURE_USER_PERMISSIONS,
        Permission.CREATE_MEDICAL_ORDERS,
        Permission.EDIT_MEDICAL_ORDERS,
        Permission.DELETE_MEDICAL_ORDERS,
        Permission.VIEW_MEDICAL_ORDERS,
        Permission.UPDATE_MEDICAL_ORDERS,
        Permission.SCHEDULE_APPOINTMENTS,
        Permission.EDIT_CANCEL_APPOINTMENTS,
        Permission.CONFIRM_PATIENT_ATTENDANCE,
        Permission.BLOCK_SCHEDULE,
        Permission.AUTOMATIC_REMINDERS,
        Permission.VIEW_STATISTICS,
        Permission.SCHEDULE_OWN_APPOINTMENT,
        Permission.MANAGE_CATALOGS,
        Permission.VIEW_PATIENT_SETTINGS,
        Permission.UPDATE_PATIENT_SETTINGS,
      ];

      const patientPermissions = [
        Permission.VIEW_OWN_APPOINTMENTS,
        Permission.SCHEDULE_OWN_APPOINTMENT,
        Permission.VIEW_OWN_MEDICAL_RECORDS,
        Permission.SUBMIT_SELF_EVALUATION,
        Permission.VIEW_PATIENT_DETAILS,
        Permission.VIEW_MEDICAL_ORDERS,
        Permission.VIEW_TREATMENT_HISTORY,
        Permission.VIEW_DOCTORS_LIST,
        Permission.VIEW_DOCTOR_DETAILS,
        Permission.VIEW_OWN_VITAL_SIGNS,
        Permission.REGISTER_OWN_VITAL_SIGNS,
        Permission.VIEW_OWN_PRESCRIPTIONS,
        Permission.VIEW_OWN_MEDICAL_EVENTS,
        Permission.VIEW_OWN_SETTINGS,
        Permission.UPDATE_OWN_SETTINGS,
      ];

      // Actualizar roles y permisos
      await this.userRoleManager.ensurePhysicianRoleExists();
      await this.userRoleManager.ensurePatientRoleExists();

      // Asegurar que todos los roles existentes de m√©dicos y pacientes tengan los permisos actuales
      await this.updateExistingRolePermissions(
        'Physician',
        physicianPermissions,
        stats.physicians,
      );
      await this.updateExistingRolePermissions(
        'Patient',
        patientPermissions,
        stats.patients,
      );

      // Paso 2: Actualizar asignaciones de roles para m√©dicos
      this.logger.log('Actualizando permisos para m√©dicos...');
      const physicians = await this.prisma.user.findMany({
        where: { role: 'physician' },
      });

      for (const physician of physicians) {
        try {
          stats.physicians.processed++;
          // Verificar si el m√©dico tiene el rol por defecto
          const hasRole = await this.hasDefaultRole(physician.id, 'Physician');

          if (!hasRole) {
            await this.userRoleManager.assignDefaultRoleToUser(
              physician.id,
              'physician',
              physician.tenant_id,
            );
            stats.physicians.updated++;
          }
        } catch (error) {
          this.logger.error(
            `Error al actualizar permisos del m√©dico ${physician.id}: ${error.message}`,
          );
          stats.errors++;
        }
      }

      // Paso 3: Actualizar permisos para pacientes
      this.logger.log('Actualizando permisos para pacientes...');
      const patients = await this.prisma.user.findMany({
        where: { role: 'patient' },
        include: {
          patient: {
            include: {
              patient_tenant: true,
            },
          },
        },
      });

      for (const patient of patients) {
        try {
          stats.patients.processed++;
          // Verificar si el paciente tiene el rol por defecto
          const hasRole = await this.hasDefaultRole(patient.id, 'Patient');

          if (!hasRole) {
            // Para pacientes, necesitamos iterar sobre cada tenant al que pertenece
            if (patient.patient && patient.patient.patient_tenant) {
              for (const pt of patient.patient.patient_tenant) {
                await this.userRoleManager.assignDefaultRoleToUser(
                  patient.id,
                  'patient',
                  pt.tenant_id,
                );
              }
              stats.patients.updated++;
            }
          }
        } catch (error) {
          this.logger.error(
            `Error al actualizar permisos del paciente ${patient.id}: ${error.message}`,
          );
          stats.errors++;
        }
      }

      this.logger.log('Actualizaci√≥n de permisos completada');
      return {
        message: 'Actualizaci√≥n de permisos completada',
        stats,
      };
    } catch (error) {
      this.logger.error(`Error en proceso de actualizaci√≥n: ${error.message}`);
      throw error;
    }
  }

  /**
   * Actualiza los permisos de los roles existentes para asegurar que tengan todos los permisos por defecto
   */
  private async updateExistingRolePermissions(
    roleName: string,
    defaultPermissions: string[],
    stats: { processed: number; updated: number; rolesUpdated: number },
  ): Promise<void> {
    // Buscar todos los roles con el nombre especificado (pueden existir m√∫ltiples instancias por tenant)
    const roles = await this.prisma.role.findMany({
      where: {
        name: roleName,
        is_system: true,
      },
      include: {
        permissions: {
          include: {
            permission: true,
          },
        },
      },
    });

    this.logger.log(`Encontrados ${roles.length} roles de tipo ${roleName}`);

    for (const role of roles) {
      try {
        // Obtener ids de los permisos actuales del rol
        const currentPermissionNames = role.permissions.map(
          (rp) => rp.permission.name,
        );

        // Identificar qu√© permisos faltan
        const missingPermissions = defaultPermissions.filter(
          (permName) => !currentPermissionNames.includes(permName),
        );

        if (missingPermissions.length > 0) {
          this.logger.log(
            `Actualizando rol ${roleName} (ID: ${role.id}) - Faltan ${missingPermissions.length} permisos`,
          );

          // Obtener los objetos de permisos faltantes
          const permissionsToAdd = await this.prisma.permission.findMany({
            where: {
              name: {
                in: missingPermissions,
              },
            },
          });

          // Agregar los permisos faltantes al rol
          for (const permission of permissionsToAdd) {
            await this.prisma.role_permission.create({
              data: {
                role_id: role.id,
                permission_id: permission.id,
              },
            });
          }

          stats.rolesUpdated++;
        }
      } catch (error) {
        this.logger.error(
          `Error al actualizar permisos del rol ${roleName} (ID: ${role.id}): ${error.message}`,
        );
      }
    }
  }

  /**
   * Verifica si un usuario tiene asignado un rol espec√≠fico
   */
  private async hasDefaultRole(
    userId: string,
    roleName: string,
  ): Promise<boolean> {
    const userRoles = await this.prisma.user_role.findMany({
      where: { user_id: userId },
      include: {
        role: true,
      },
    });

    return userRoles.some((ur) => ur.role.name === roleName);
  }
}

================
File: src/auth/services/request-context.service.ts
================
import { Injectable } from '@nestjs/common';
import { ClsService } from 'nestjs-cls';

export interface RequestContextUser {
  id: string;
  role: string;
  tenant_id?: string;
  tenants?: { id: string; name: string; type: string }[];
}

export interface RequestContextTenant {
  id: string;
  type: string;
  db_name?: string;
}

@Injectable()
export class RequestContextService {
  constructor(private readonly cls: ClsService) {}

  // M√©todo helper para verificar si el contexto est√° disponible
  private isContextAvailable(): boolean {
    try {
      return this.cls.isActive();
    } catch {
      return false;
    }
  }

  // Tenant methods
  setTenantId(tenantId: string): void {
    if (this.isContextAvailable()) {
      this.cls.set('tenantId', tenantId);
    } else {
      console.warn(
        'CLS context not available for setTenantId, falling back to global',
      );
      global.tenant_id = tenantId;
    }
  }

  getTenantId(): string | undefined {
    if (this.isContextAvailable()) {
      return this.cls.get('tenantId') || global.tenant_id;
    }
    return global.tenant_id;
  }

  setTenant(tenant: RequestContextTenant): void {
    if (this.isContextAvailable()) {
      this.cls.set('tenant', tenant);
    }
    // No hay fallback global para el objeto tenant completo
  }

  getTenant(): RequestContextTenant | undefined {
    if (this.isContextAvailable()) {
      return this.cls.get('tenant');
    }
    return undefined;
  }

  // User methods
  setUser(user: RequestContextUser): void {
    if (this.isContextAvailable()) {
      this.cls.set('user', user);
    }
    // No hay fallback global para el objeto user completo
  }

  getUser(): RequestContextUser | undefined {
    if (this.isContextAvailable()) {
      return this.cls.get('user');
    }
    return undefined;
  }

  // User tenants methods (for patients with multiple tenants)
  setUserTenants(tenants: { id: string; name: string; type: string }[]): void {
    if (this.isContextAvailable()) {
      this.cls.set('userTenants', tenants);
    }
  }

  getUserTenants(): { id: string; name: string; type: string }[] | undefined {
    if (this.isContextAvailable()) {
      return this.cls.get('userTenants');
    }
    return undefined;
  }

  // Utility methods
  hasValidTenant(): boolean {
    return !!this.getTenantId();
  }

  isPatientWithMultipleTenants(): boolean {
    const user = this.getUser();
    const tenants = this.getUserTenants();
    return user?.role === 'patient' && tenants && tenants.length > 0;
  }

  // Clear all context (useful for cleanup)
  clearContext(): void {
    if (this.isContextAvailable()) {
      this.cls.set('tenantId', undefined);
      this.cls.set('tenant', undefined);
      this.cls.set('user', undefined);
      this.cls.set('userTenants', undefined);
    }
  }

  // M√©todo para ejecutar c√≥digo dentro de un contexto CLS
  runWithContext<T>(fn: () => T): T {
    if (this.isContextAvailable()) {
      return fn();
    } else {
      return this.cls.run(fn);
    }
  }
}

================
File: src/auth/services/vital-signs-optimization.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { RequestContextService } from './request-context.service';

export interface OptimizedVitalSigns {
  [key: string]: {
    measure: string | number;
    created_at: Date;
    source: 'medical_event' | 'self_evaluation';
    vital_sign: {
      id: number;
      name: string;
      category: string;
      measure_unit?: string;
    };
  };
}

@Injectable()
export class VitalSignsOptimizationService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly requestContext: RequestContextService,
  ) {}

  /**
   * Obtiene los signos vitales m√°s recientes para un paciente de manera optimizada
   * Usa DISTINCT ON para obtener solo el registro m√°s reciente de cada tipo
   * Considera tanto medical_event como self_evaluation sources
   */
  async getLatestVitalSignsOptimized(
    patientId: string,
    tenantIds?: string[],
  ): Promise<OptimizedVitalSigns> {
    // Si no se proporcionan tenantIds, usar los del contexto o buscar en DB
    if (!tenantIds || tenantIds.length === 0) {
      const contextUser = this.requestContext.getUser();
      if (contextUser?.role === 'patient') {
        const userTenants = this.requestContext.getUserTenants();
        if (userTenants && userTenants.length > 0) {
          tenantIds = userTenants.map((t) => t.id);
        } else {
          // Fallback: buscar tenants del paciente en DB
          const patientTenants = await this.prisma.patient_tenant.findMany({
            where: {
              patient: { user_id: patientId },
              deleted: false,
            },
            select: { tenant_id: true },
          });
          tenantIds = patientTenants.map((pt) => pt.tenant_id);
        }
      } else {
        const currentTenant = this.requestContext.getTenantId();
        tenantIds = currentTenant ? [currentTenant] : [];
      }
    }

    // Consulta optimizada que obtiene el signo vital m√°s reciente de cada tipo
    // Combina tanto medical_event como self_evaluation sources
    const latestVitalSigns = await this.prisma.$queryRaw<
      Array<{
        vital_sign_id: number;
        measure: string;
        created_at: Date;
        source: string;
        vital_sign_name: string;
        vital_sign_category: string;
        measure_unit_name: string | null;
      }>
    >`
      WITH latest_vitals AS (
        -- Signos vitales de medical events
        SELECT DISTINCT ON (vs.vital_sign_id)
          vs.vital_sign_id,
          vs.measure,
          vs.created_at,
          'medical_event' as source,
          cvs.name as vital_sign_name,
          cvs.category as vital_sign_category,
          cmu.name as measure_unit_name
        FROM vital_signs vs
        JOIN cat_vital_signs cvs ON vs.vital_sign_id = cvs.id
        LEFT JOIN cat_measure_unit cmu ON cvs.cat_measure_unit_id = cmu.id
        WHERE vs.patient_id = ${patientId}
          AND vs.deleted = false
          AND vs.medical_event_id IS NOT NULL
          AND (${tenantIds.length === 0 ? true : false} OR vs.tenant_id = ANY(${tenantIds}))
        ORDER BY vs.vital_sign_id, vs.created_at DESC
        
        UNION ALL
        
        -- Signos vitales de self evaluation
        SELECT DISTINCT ON (vs.vital_sign_id)
          vs.vital_sign_id,
          vs.measure,
          vs.created_at,
          'self_evaluation' as source,
          cvs.name as vital_sign_name,
          cvs.category as vital_sign_category,
          cmu.name as measure_unit_name
        FROM vital_signs vs
        JOIN cat_vital_signs cvs ON vs.vital_sign_id = cvs.id
        LEFT JOIN cat_measure_unit cmu ON cvs.cat_measure_unit_id = cmu.id
        WHERE vs.patient_id = ${patientId}
          AND vs.deleted = false
          AND vs.self_evaluation_event_id IS NOT NULL
        ORDER BY vs.vital_sign_id, vs.created_at DESC
      )
      SELECT DISTINCT ON (vital_sign_id)
        vital_sign_id,
        measure,
        created_at,
        source,
        vital_sign_name,
        vital_sign_category,
        measure_unit_name
      FROM latest_vitals
      ORDER BY vital_sign_id, created_at DESC
    `;

    // Convertir a formato optimizado
    const result: OptimizedVitalSigns = {};

    latestVitalSigns.forEach((vs) => {
      result[vs.vital_sign_id.toString()] = {
        measure: vs.measure,
        created_at: vs.created_at,
        source: vs.source as 'medical_event' | 'self_evaluation',
        vital_sign: {
          id: vs.vital_sign_id,
          name: vs.vital_sign_name,
          category: vs.vital_sign_category,
          measure_unit: vs.measure_unit_name || undefined,
        },
      };
    });

    return result;
  }

  /**
   * Obtiene los tipos de signos vitales m√°s comunes para optimizar consultas
   */
  async getCommonVitalSignTypes(): Promise<
    Array<{ id: number; name: string; category: string }>
  > {
    return this.prisma.cat_vital_signs.findMany({
      select: {
        id: true,
        name: true,
        category: true,
      },
      orderBy: {
        name: 'asc',
      },
    });
  }

  /**
   * Optimiza la obtenci√≥n de datos de signos vitales para la vista del paciente
   * Evita m√∫ltiples consultas N+1
   * Retorna el formato esperado por GetPatientDto
   */
  async getVitalSignsDataForPatientView(
    patientId: string,
    tenantIds: string[],
  ) {
    // Obtener los signos vitales m√°s recientes de manera optimizada
    const latestVitalSigns = await this.getLatestVitalSignsOptimized(
      patientId,
      tenantIds,
    );

    // Obtener el cat√°logo de signos vitales una sola vez
    const vitalSignsCatalog = await this.prisma.cat_vital_signs.findMany({
      include: {
        cat_measure_unit: {
          select: {
            id: true,
            name: true,
            description: true,
          },
        },
      },
      orderBy: {
        name: 'asc',
      },
    });

    // Combinar datos del cat√°logo con los registros m√°s recientes
    // Filtrar solo los que tienen datos y formatear para VitalSignDto
    const vitalSignsData = vitalSignsCatalog
      .map((catalogItem) => {
        const latestRecord = latestVitalSigns[catalogItem.id.toString()];

        if (!latestRecord || latestRecord.measure === 'Sin datos') {
          return null; // Filtrar los que no tienen datos
        }

        return {
          id: `${catalogItem.id}_${latestRecord.created_at.getTime()}`, // ID √∫nico
          vital_sign_category: catalogItem.name,
          measure:
            typeof latestRecord.measure === 'string'
              ? parseFloat(latestRecord.measure) || 0
              : latestRecord.measure,
          vital_sign_measure_unit: catalogItem.cat_measure_unit?.name || '',
        };
      })
      .filter((item) => item !== null); // Remover nulls

    return vitalSignsData;
  }
}

================
File: src/catalogs/cat-cie-diez/cat-cie-diez.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  Query,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiQuery,
  ApiBody,
} from '@nestjs/swagger';
import { CatCieDiezService } from './cat-cie-diez.service';
import { CreateCatCieDiezDto } from './dto/create-cat-cie-diez.dto';
import { UpdateCatCieDiezDto } from './dto/update-cat-cie-diez.dto';
import { PaginationParams } from 'src/utils/pagination.helper';

@ApiTags('Catalogs - CIE-10')
@Controller('cat-cie-diez')
export class CatCieDiezController {
  constructor(private readonly catCieDiezService: CatCieDiezService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new CIE-10 category' })
  @ApiBody({ type: CreateCatCieDiezDto })
  @ApiResponse({
    status: 201,
    description: 'The CIE-10 category has been successfully created.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  create(@Body() createCatCieDiezDto: CreateCatCieDiezDto) {
    return this.catCieDiezService.create(createCatCieDiezDto);
  }

  @Get()
  @ApiOperation({ summary: 'Get all CIE-10 categories with pagination' })
  @ApiQuery({
    name: 'page',
    required: false,
    type: Number,
    description: 'Page number',
  })
  @ApiQuery({
    name: 'pageSize',
    required: false,
    type: Number,
    description: 'Number of items per page',
  })
  @ApiQuery({
    name: 'orderBy',
    required: false,
    type: String,
    description: 'Field to order by',
  })
  @ApiQuery({
    name: 'orderDirection',
    required: false,
    enum: ['asc', 'desc'],
    description: 'Order direction (asc or desc)',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved CIE-10 categories.',
  })
  findAll(@Query() paginationParams: PaginationParams) {
    return this.catCieDiezService.findAll(paginationParams);
  }

  @Get(':id')
  @ApiOperation({ summary: 'Get a CIE-10 category by ID' })
  @ApiParam({ name: 'id', description: 'CIE-10 category ID', type: Number })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved CIE-10 category.',
  })
  @ApiResponse({ status: 404, description: 'CIE-10 category not found.' })
  findOne(@Param('id') id: string) {
    return this.catCieDiezService.findOne(+id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Update a CIE-10 category by ID' })
  @ApiParam({ name: 'id', description: 'CIE-10 category ID', type: Number })
  @ApiBody({ type: UpdateCatCieDiezDto })
  @ApiResponse({
    status: 200,
    description: 'The CIE-10 category has been successfully updated.',
  })
  @ApiResponse({ status: 404, description: 'CIE-10 category not found.' })
  update(
    @Param('id') id: string,
    @Body() updateCatCieDiezDto: UpdateCatCieDiezDto,
  ) {
    return this.catCieDiezService.update(+id, updateCatCieDiezDto);
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Delete a CIE-10 category by ID' })
  @ApiParam({ name: 'id', description: 'CIE-10 category ID', type: Number })
  @ApiResponse({
    status: 200,
    description: 'The CIE-10 category has been successfully deleted.',
  })
  @ApiResponse({ status: 404, description: 'CIE-10 category not found.' })
  remove(@Param('id') id: string) {
    return this.catCieDiezService.remove(+id);
  }
}

================
File: src/catalogs/cat-cie-diez/cat-cie-diez.module.ts
================
import { Module } from '@nestjs/common';
import { CatCieDiezService } from './cat-cie-diez.service';
import { CatCieDiezController } from './cat-cie-diez.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { CacheModule } from 'src/common/cache/cache.module';

@Module({
  imports: [CacheModule],
  controllers: [CatCieDiezController],
  providers: [CatCieDiezService, PrismaService],
})
export class CatCieDiezModule {}

================
File: src/catalogs/cat-cie-diez/cat-cie-diez.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { CreateCatCieDiezDto } from './dto/create-cat-cie-diez.dto';
import { UpdateCatCieDiezDto } from './dto/update-cat-cie-diez.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';
import { CacheService } from 'src/common/cache/cache.service';
import { CacheResult, InvalidateCache } from 'src/common/cache/cache.decorator';

@Injectable()
export class CatCieDiezService {
  private readonly CACHE_PREFIX = 'cat_cie_diez';
  private readonly CACHE_TTL = 3600; // 1 hour

  constructor(
    private readonly prisma: PrismaService,
    private readonly cacheService: CacheService,
  ) {}

  @InvalidateCache('cat_cie_diez')
  async create(createCatCieDiezDto: CreateCatCieDiezDto): Promise<object> {
    try {
      await this.prisma.category_cie_diez.create({
        data: { ...createCatCieDiezDto },
      });
      return { message: 'La categor√≠a ha sido correctamente creada' };
    } catch (error) {
      return { message: `Error al crear la categoria ${error.message}` };
    }
  }

  @CacheResult('cat_cie_diez:findAll', 3600)
  async findAll(paginationParams: PaginationParams) {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      const categories = await this.prisma.category_cie_diez.findMany({
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });
      return categories;
    } catch (error) {
      return { message: `Error al consultar las categorias ${error.message}` };
    }
  }

  @CacheResult('cat_cie_diez:findOne', 3600)
  async findOne(id: number) {
    try {
      const category = await this.prisma.category_cie_diez.findUnique({
        where: {
          id: id,
        },
      });
      if (!category) throw new NotFoundException('No existe la categoria');

      return category;
    } catch (error) {
      return { message: `Error al consultar la categoria ${error.message}` };
    }
  }

  @InvalidateCache('cat_cie_diez')
  async update(id: number, updateCatCieDiezDto: UpdateCatCieDiezDto) {
    try {
      await this.prisma.category_cie_diez.update({
        where: { id: id },
        data: { ...updateCatCieDiezDto },
      });
      return { message: 'La categor√≠a ha sido correctamente actualizada' };
    } catch (error) {
      return { message: `Error al actualizar la categoria ${error.message}` };
    }
  }

  @InvalidateCache('cat_cie_diez')
  async remove(id: number) {
    try {
      await this.prisma.category_cie_diez.delete({
        where: { id: id },
      });
      return { message: 'La categor√≠a ha sido correctamente eliminada' };
    } catch (error) {
      return { message: `Error al eliminar la categoria ${error.message}` };
    }
  }

  /**
   * Alternative method using CacheService directly for more control
   */
  async findAllCached(paginationParams: PaginationParams) {
    const cacheKey = this.cacheService.generateKey(
      this.CACHE_PREFIX,
      'findAll',
      JSON.stringify(paginationParams),
    );

    return this.cacheService.getOrSet(
      cacheKey,
      async () => {
        const { skip, take, orderBy, orderDirection } =
          parsePaginationAndSorting(paginationParams);

        return this.prisma.category_cie_diez.findMany({
          skip,
          take,
          orderBy: { [orderBy]: orderDirection },
        });
      },
      this.CACHE_TTL,
    );
  }

  /**
   * Alternative method using CacheService directly for findOne
   */
  async findOneCached(id: number) {
    const cacheKey = this.cacheService.generateKey(
      this.CACHE_PREFIX,
      'findOne',
      id,
    );

    return this.cacheService.getOrSet(
      cacheKey,
      async () => {
        const category = await this.prisma.category_cie_diez.findUnique({
          where: { id },
        });
        if (!category) {
          throw new NotFoundException('No existe la categoria');
        }
        return category;
      },
      this.CACHE_TTL,
    );
  }
}

================
File: src/catalogs/cat-cie-diez/dto/create-cat-cie-diez.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsString } from 'class-validator';

export class CreateCatCieDiezDto {
  /**
   * Category code
   * @example "A001"
   */
  @ApiProperty({ example: 'A001', description: 'Category code' })
  @IsString()
  code: string;

  /**
   * Category description
   * @example "Fiebres tifoidea y paratifoidea"
   */
  @ApiProperty({
    example: 'Fiebres tifoidea y paratifoidea',
    description: 'Category description',
  })
  @IsString()
  description: string;
}

================
File: src/catalogs/cat-cie-diez/dto/update-cat-cie-diez.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreateCatCieDiezDto } from './create-cat-cie-diez.dto';

export class UpdateCatCieDiezDto extends PartialType(CreateCatCieDiezDto) {}

================
File: src/catalogs/cat-cie-diez/entities/cat-cie-diez.entity.ts
================
export class CatCieDiez {
  id: number;
  code: string;
  description: string;
}

================
File: src/catalogs/cat-identification-type/cat-identification-type-with-cache.service.example.ts
================
import {
  Injectable,
  NotFoundException,
  BadRequestException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateCatIdentificationTypeDto } from './dto/create-cat-identification-type.dto';
import { UpdateCatIdentificationTypeDto } from './dto/update-cat-identification-type.dto';
import { CatIdentificationType } from './cat-identification-type.interface';
import { CacheService } from '../../common/cache/cache.service';
import {
  CacheResult,
  InvalidateCache,
} from '../../common/cache/cache.decorator';

@Injectable()
export class CatIdentificationTypeService {
  private readonly CACHE_PREFIX = 'cat_identification_type';
  private readonly CACHE_TTL = 7200; // 2 hours - longer for fairly static data

  constructor(
    private prisma: PrismaService,
    private readonly cacheService: CacheService,
  ) {}

  @InvalidateCache('cat_identification_type')
  async create(
    createDto: CreateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    try {
      return await this.prisma.cat_identification_type.create({
        data: createDto,
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al crear el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  @CacheResult('cat_identification_type:findAll', 7200)
  async findAll(): Promise<CatIdentificationType[]> {
    try {
      return await this.prisma.cat_identification_type.findMany({
        orderBy: {
          name: 'asc',
        },
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al obtener los tipos de identificaci√≥n: ' + error.message,
      );
    }
  }

  @CacheResult('cat_identification_type:findByCountry', 7200)
  async findByCountry(country: string): Promise<CatIdentificationType[]> {
    try {
      return await this.prisma.cat_identification_type.findMany({
        where: {
          country: {
            contains: country,
            mode: 'insensitive',
          },
        },
        orderBy: {
          name: 'asc',
        },
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al obtener los tipos de identificaci√≥n por pa√≠s: ' +
          error.message,
      );
    }
  }

  @CacheResult('cat_identification_type:findOne', 7200)
  async findOne(id: number): Promise<CatIdentificationType> {
    try {
      const identificationType =
        await this.prisma.cat_identification_type.findUnique({
          where: { id },
        });

      if (!identificationType) {
        throw new NotFoundException('Tipo de identificaci√≥n no encontrado');
      }

      return identificationType;
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al obtener el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  @InvalidateCache('cat_identification_type')
  async update(
    id: number,
    updateDto: UpdateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    try {
      // Verificar que existe
      await this.findOne(id);

      return await this.prisma.cat_identification_type.update({
        where: { id },
        data: updateDto,
      });
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al actualizar el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  @InvalidateCache('cat_identification_type')
  async remove(id: number): Promise<CatIdentificationType> {
    try {
      // Verificar que existe
      await this.findOne(id);

      return await this.prisma.cat_identification_type.delete({
        where: { id },
      });
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al eliminar el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  /**
   * Alternative manual caching approach for more complex scenarios
   */
  async findByCountryCached(country: string): Promise<CatIdentificationType[]> {
    const cacheKey = this.cacheService.generateKey(
      this.CACHE_PREFIX,
      'findByCountry',
      country.toLowerCase(),
    );

    return this.cacheService.getOrSet(
      cacheKey,
      async () => {
        return this.prisma.cat_identification_type.findMany({
          where: {
            country: {
              contains: country,
              mode: 'insensitive',
            },
          },
          orderBy: {
            name: 'asc',
          },
        });
      },
      this.CACHE_TTL,
    );
  }

  /**
   * Batch operations with smart cache invalidation
   */
  async createMany(
    createDtos: CreateCatIdentificationTypeDto[],
  ): Promise<{ count: number }> {
    try {
      const result = await this.prisma.cat_identification_type.createMany({
        data: createDtos,
      });

      // Invalidate cache after batch operation
      this.cacheService.invalidateCatalog(this.CACHE_PREFIX);

      return result;
    } catch (error) {
      throw new BadRequestException(
        'Error al crear los tipos de identificaci√≥n: ' + error.message,
      );
    }
  }

  /**
   * Cache warming - preload frequently accessed data
   */
  async warmCache(): Promise<void> {
    try {
      // Preload all identification types
      await this.findAll();

      // Preload common countries
      const commonCountries = ['Argentina', 'Chile', 'Colombia', 'Peru'];
      await Promise.all(
        commonCountries.map((country) => this.findByCountry(country)),
      );

      console.log('Cache warmed for identification types');
    } catch (error) {
      console.error('Error warming cache for identification types:', error);
    }
  }
}

================
File: src/catalogs/cat-identification-type/cat-identification-type.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Patch,
  Delete,
  Query,
  ParseIntPipe,
  UseGuards,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiBody,
  ApiQuery,
  ApiBearerAuth,
  ApiHeader,
} from '@nestjs/swagger';
import { CatIdentificationTypeService } from './cat-identification-type.service';
import { CreateCatIdentificationTypeDto } from './dto/create-cat-identification-type.dto';
import { UpdateCatIdentificationTypeDto } from './dto/update-cat-identification-type.dto';
import { CatIdentificationType } from './cat-identification-type.interface';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';

@ApiTags('Catalogs - Identification Types')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant-id',
  description: 'Tenant ID for multi-organization support',
  required: true,
})
@Controller('cat-identification-type')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class CatIdentificationTypeController {
  constructor(
    private readonly catIdentificationTypeService: CatIdentificationTypeService,
  ) {}

  @Post()
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({
    summary: 'Create a new identification type',
    description:
      'Creates a new identification type in the catalog. Requires MANAGE_CATALOGS permission.',
  })
  @ApiBody({
    type: CreateCatIdentificationTypeDto,
    examples: {
      colombia: {
        summary: 'Colombian ID',
        value: {
          name: 'C√©dula de Ciudadan√≠a',
          description:
            'Documento de identificaci√≥n nacional para ciudadanos colombianos',
          country: 'Colombia',
        },
      },
      passport: {
        summary: 'International Passport',
        value: {
          name: 'Pasaporte',
          description: 'Documento de viaje internacional',
          country: 'Internacional',
        },
      },
    },
  })
  @ApiResponse({
    status: 201,
    description: 'The identification type has been successfully created.',
    content: {
      'application/json': {
        example: {
          id: 1,
          name: 'C√©dula de Ciudadan√≠a',
          description:
            'Documento de identificaci√≥n nacional para ciudadanos colombianos',
          country: 'Colombia',
          created_at: '2024-01-15T10:30:00.000Z',
          updated_at: '2024-01-15T10:30:00.000Z',
        },
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data.',
    content: {
      'application/json': {
        example: {
          statusCode: 400,
          message: ['El nombre debe tener entre 1 y 100 caracteres'],
          error: 'Bad Request',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
    content: {
      'application/json': {
        example: {
          statusCode: 403,
          message: 'No tiene permisos para gestionar cat√°logos',
          error: 'Forbidden',
        },
      },
    },
  })
  async create(
    @Body() createDto: CreateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    return this.catIdentificationTypeService.create(createDto);
  }

  @Get()
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({
    summary: 'Get all identification types',
    description:
      'Retrieves all identification types from the catalog. Optionally filter by country.',
  })
  @ApiQuery({
    name: 'country',
    required: false,
    description:
      'Filter identification types by country (case-insensitive search)',
    type: String,
    example: 'Colombia',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved identification types.',
    content: {
      'application/json': {
        examples: {
          all: {
            summary: 'All identification types',
            value: [
              {
                id: 1,
                name: 'C√©dula de Ciudadan√≠a',
                description:
                  'Documento de identificaci√≥n nacional para ciudadanos',
                country: 'Colombia',
                created_at: '2024-01-15T10:30:00.000Z',
                updated_at: '2024-01-15T10:30:00.000Z',
              },
              {
                id: 2,
                name: 'Pasaporte',
                description: 'Documento de viaje internacional',
                country: 'Colombia',
                created_at: '2024-01-15T11:00:00.000Z',
                updated_at: '2024-01-15T11:00:00.000Z',
              },
            ],
          },
          filtered: {
            summary: 'Filtered by country',
            value: [
              {
                id: 1,
                name: 'C√©dula de Ciudadan√≠a',
                description:
                  'Documento de identificaci√≥n nacional para ciudadanos',
                country: 'Colombia',
                created_at: '2024-01-15T10:30:00.000Z',
                updated_at: '2024-01-15T10:30:00.000Z',
              },
            ],
          },
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  async findAll(
    @Query('country') country?: string,
  ): Promise<CatIdentificationType[]> {
    if (country) {
      return this.catIdentificationTypeService.findByCountry(country);
    }
    return this.catIdentificationTypeService.findAll();
  }

  @Get(':id')
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({
    summary: 'Get an identification type by ID',
    description: 'Retrieves a specific identification type by its ID.',
  })
  @ApiParam({
    name: 'id',
    description: 'Identification type ID',
    type: Number,
    example: 1,
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved identification type.',
    content: {
      'application/json': {
        example: {
          id: 1,
          name: 'C√©dula de Ciudadan√≠a',
          description: 'Documento de identificaci√≥n nacional para ciudadanos',
          country: 'Colombia',
          created_at: '2024-01-15T10:30:00.000Z',
          updated_at: '2024-01-15T10:30:00.000Z',
        },
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid ID format.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  @ApiResponse({
    status: 404,
    description: 'Not Found - Identification type not found.',
    content: {
      'application/json': {
        example: {
          statusCode: 404,
          message: 'Tipo de identificaci√≥n no encontrado',
          error: 'Not Found',
        },
      },
    },
  })
  async findOne(
    @Param('id', ParseIntPipe) id: number,
  ): Promise<CatIdentificationType> {
    return this.catIdentificationTypeService.findOne(id);
  }

  @Patch(':id')
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({
    summary: 'Update an identification type by ID',
    description:
      'Updates an existing identification type. All fields are optional (partial update).',
  })
  @ApiParam({
    name: 'id',
    description: 'Identification type ID to update',
    type: Number,
    example: 1,
  })
  @ApiBody({
    type: UpdateCatIdentificationTypeDto,
    examples: {
      partial: {
        summary: 'Partial update - description only',
        value: {
          description: 'Documento nacional de identificaci√≥n actualizado',
        },
      },
      complete: {
        summary: 'Complete update',
        value: {
          name: 'C√©dula de Ciudadan√≠a Actualizada',
          description:
            'Documento de identificaci√≥n nacional con nueva descripci√≥n',
          country: 'Colombia',
        },
      },
    },
  })
  @ApiResponse({
    status: 200,
    description: 'The identification type has been successfully updated.',
    content: {
      'application/json': {
        example: {
          id: 1,
          name: 'C√©dula de Ciudadan√≠a',
          description: 'Documento nacional de identificaci√≥n actualizado',
          country: 'Colombia',
          created_at: '2024-01-15T10:30:00.000Z',
          updated_at: '2024-01-15T15:45:00.000Z',
        },
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  @ApiResponse({
    status: 404,
    description: 'Not Found - Identification type not found.',
  })
  async update(
    @Param('id', ParseIntPipe) id: number,
    @Body() updateDto: UpdateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    return this.catIdentificationTypeService.update(id, updateDto);
  }

  @Delete(':id')
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({
    summary: 'Delete an identification type by ID',
    description: 'Permanently deletes an identification type from the catalog.',
  })
  @ApiParam({
    name: 'id',
    description: 'Identification type ID to delete',
    type: Number,
    example: 1,
  })
  @ApiResponse({
    status: 200,
    description: 'The identification type has been successfully deleted.',
    content: {
      'application/json': {
        example: {
          id: 1,
          name: 'C√©dula de Ciudadan√≠a',
          description: 'Documento de identificaci√≥n nacional para ciudadanos',
          country: 'Colombia',
          created_at: '2024-01-15T10:30:00.000Z',
          updated_at: '2024-01-15T10:30:00.000Z',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  @ApiResponse({
    status: 404,
    description: 'Not Found - Identification type not found.',
  })
  async remove(
    @Param('id', ParseIntPipe) id: number,
  ): Promise<CatIdentificationType> {
    return this.catIdentificationTypeService.remove(id);
  }
}

================
File: src/catalogs/cat-identification-type/cat-identification-type.interface.ts
================
export interface CatIdentificationType {
  id?: number;
  name: string;
  description?: string;
  country: string;
  created_at?: Date;
  updated_at?: Date;
}

================
File: src/catalogs/cat-identification-type/cat-identification-type.module.ts
================
import { Module } from '@nestjs/common';
import { CatIdentificationTypeService } from './cat-identification-type.service';
import { CatIdentificationTypeController } from './cat-identification-type.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [CatIdentificationTypeController],
  providers: [CatIdentificationTypeService, PrismaService],
  exports: [CatIdentificationTypeService],
})
export class CatIdentificationTypeModule {}

================
File: src/catalogs/cat-identification-type/cat-identification-type.service.ts
================
import {
  Injectable,
  NotFoundException,
  BadRequestException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateCatIdentificationTypeDto } from './dto/create-cat-identification-type.dto';
import { UpdateCatIdentificationTypeDto } from './dto/update-cat-identification-type.dto';
import { CatIdentificationType } from './cat-identification-type.interface';

@Injectable()
export class CatIdentificationTypeService {
  constructor(private prisma: PrismaService) {}

  async create(
    createDto: CreateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    try {
      return await this.prisma.cat_identification_type.create({
        data: createDto,
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al crear el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  async findAll(): Promise<CatIdentificationType[]> {
    try {
      return await this.prisma.cat_identification_type.findMany({
        orderBy: {
          name: 'asc',
        },
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al obtener los tipos de identificaci√≥n: ' + error.message,
      );
    }
  }

  async findByCountry(country: string): Promise<CatIdentificationType[]> {
    try {
      return await this.prisma.cat_identification_type.findMany({
        where: {
          country: {
            contains: country,
            mode: 'insensitive',
          },
        },
        orderBy: {
          name: 'asc',
        },
      });
    } catch (error) {
      throw new BadRequestException(
        'Error al obtener los tipos de identificaci√≥n por pa√≠s: ' +
          error.message,
      );
    }
  }

  async findOne(id: number): Promise<CatIdentificationType> {
    try {
      const identificationType =
        await this.prisma.cat_identification_type.findUnique({
          where: { id },
        });

      if (!identificationType) {
        throw new NotFoundException('Tipo de identificaci√≥n no encontrado');
      }

      return identificationType;
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al obtener el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  async update(
    id: number,
    updateDto: UpdateCatIdentificationTypeDto,
  ): Promise<CatIdentificationType> {
    try {
      // Verificar que existe
      await this.findOne(id);

      return await this.prisma.cat_identification_type.update({
        where: { id },
        data: updateDto,
      });
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al actualizar el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }

  async remove(id: number): Promise<CatIdentificationType> {
    try {
      // Verificar que existe
      await this.findOne(id);

      return await this.prisma.cat_identification_type.delete({
        where: { id },
      });
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al eliminar el tipo de identificaci√≥n: ' + error.message,
      );
    }
  }
}

================
File: src/catalogs/cat-identification-type/dto/create-cat-identification-type.dto.ts
================
import { IsString, IsOptional, Length } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreateCatIdentificationTypeDto {
  @ApiProperty({
    description: 'Name of the identification type',
    example: 'C√©dula de Ciudadan√≠a',
    maxLength: 100,
  })
  @IsString({ message: 'El nombre debe ser una cadena de texto' })
  @Length(1, 100, { message: 'El nombre debe tener entre 1 y 100 caracteres' })
  name: string;

  @ApiProperty({
    description: 'Description of the identification type',
    example: 'Documento de identificaci√≥n nacional para ciudadanos',
    required: false,
    maxLength: 255,
  })
  @IsOptional()
  @IsString({ message: 'La descripci√≥n debe ser una cadena de texto' })
  @Length(0, 255, { message: 'La descripci√≥n no puede exceder 255 caracteres' })
  description?: string;

  @ApiProperty({
    description: 'Country where this identification type is valid',
    example: 'Colombia',
    maxLength: 100,
  })
  @IsString({ message: 'El pa√≠s debe ser una cadena de texto' })
  @Length(1, 100, { message: 'El pa√≠s debe tener entre 1 y 100 caracteres' })
  country: string;
}

================
File: src/catalogs/cat-identification-type/dto/update-cat-identification-type.dto.ts
================
import { PartialType } from '@nestjs/mapped-types';
import { CreateCatIdentificationTypeDto } from './create-cat-identification-type.dto';

export class UpdateCatIdentificationTypeDto extends PartialType(
  CreateCatIdentificationTypeDto,
) {}

================
File: src/catalogs/cat-measure-unit/cat-measure-unit.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Delete,
  Query,
  BadRequestException,
  UseGuards,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiQuery,
  ApiBody,
  ApiHeader,
} from '@nestjs/swagger';
import { CatMeasureUnitService } from './cat-measure-unit.service';
import { CreateCatMeasureUnitDto } from './dto/create-cat-measure-unit.dto';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { SuperAdminGuard } from '../../auth/guards/superadmin.guard';

@ApiTags('Catalogs - Measure Units')
@ApiHeader({
  name: 'tenant_id',
  description: 'Tenant ID',
  required: true,
})
@Controller('cat-measure-unit')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class CatMeasureUnitController {
  constructor(private readonly catMeasureUnitService: CatMeasureUnitService) {}

  @Post()
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({ summary: 'Create a new measure unit' })
  @ApiBody({ type: CreateCatMeasureUnitDto })
  @ApiResponse({
    status: 201,
    description: 'The measure unit has been successfully created.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  async create(@Body() createCatMeasureUnitDto: CreateCatMeasureUnitDto) {
    return this.catMeasureUnitService.create(createCatMeasureUnitDto);
  }

  @Get()
  @RequirePermission(Permission.VIEW_DOCTORS_LIST) // Assuming this is a placeholder, adjust if a more specific permission exists
  @ApiOperation({
    summary: 'Get all measure units, optionally filtered by vital sign ID',
  })
  @ApiQuery({
    name: 'vitalSignId',
    required: false,
    type: Number,
    description: 'ID of the vital sign to filter measure units',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved measure units.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  async findAll(@Query('vitalSignId') vitalSignIdString?: string) {
    try {
      let vitalSignId: number | undefined;

      if (vitalSignIdString) {
        vitalSignId = parseInt(vitalSignIdString, 10);
        if (isNaN(vitalSignId)) {
          throw new BadRequestException(
            `ID de signo vital inv√°lido: ${vitalSignIdString}`,
          );
        }
      }

      return this.catMeasureUnitService.findAll(vitalSignId);
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException('Error al obtener las unidades de medida');
    }
  }

  @Delete(':id')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.MANAGE_CATALOGS)
  @ApiOperation({ summary: 'Delete a measure unit by ID' })
  @ApiParam({ name: 'id', description: 'Measure unit ID', type: Number })
  @ApiResponse({
    status: 200,
    description: 'The measure unit has been successfully deleted.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Measure unit not found.' })
  async remove(@Param('id') id: string) {
    const parsedId = parseInt(id, 10);
    if (isNaN(parsedId)) {
      throw new BadRequestException('ID inv√°lido');
    }

    return this.catMeasureUnitService.remove(parsedId);
  }
}

================
File: src/catalogs/cat-measure-unit/cat-measure-unit.interface.ts
================
export interface CatMeasureUnit {
  id?: number;
  name: string;
  description: string;
  cat_vital_signs_id?: number;
}

================
File: src/catalogs/cat-measure-unit/cat-measure-unit.module.ts
================
import { Module } from '@nestjs/common';
import { CatMeasureUnitService } from './cat-measure-unit.service';
import { CatMeasureUnitController } from './cat-measure-unit.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from 'src/auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [CatMeasureUnitController],
  providers: [CatMeasureUnitService, PrismaService],
})
export class CatMeasureUnitModule {}

================
File: src/catalogs/cat-measure-unit/cat-measure-unit.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateCatMeasureUnitDto } from './dto/create-cat-measure-unit.dto';

@Injectable()
export class CatMeasureUnitService {
  constructor(private prisma: PrismaService) {}

  async create(data: CreateCatMeasureUnitDto) {
    try {
      // Check if vital sign exists
      const vitalSign = await this.prisma.cat_vital_signs.findUnique({
        where: { id: data.cat_vital_signs_id },
      });

      if (!vitalSign) {
        throw new BadRequestException('El signo vital asociado no existe');
      }

      // Check if measure unit with the same name already exists for this vital sign
      const existingMeasureUnit = await this.prisma.cat_measure_unit.findFirst({
        where: {
          name: data.name,
          cat_vital_signs: {
            some: {
              id: data.cat_vital_signs_id,
            },
          },
        },
      });

      if (existingMeasureUnit) {
        throw new BadRequestException(
          'Ya existe una unidad de medida con este nombre para este signo vital',
        );
      }

      // Create the measure unit
      return await this.prisma.cat_measure_unit.create({
        data: {
          name: data.name,
          description: data.description,
          cat_vital_signs: {
            connect: { id: data.cat_vital_signs_id },
          },
        },
        include: {
          cat_vital_signs: true,
        },
      });
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException('Error al crear la unidad de medida');
    }
  }

  async findAll(vitalSignId?: number) {
    try {
      if (vitalSignId) {
        // Filter by vital sign ID
        return await this.prisma.cat_measure_unit.findMany({
          where: {
            cat_vital_signs: {
              some: {
                id: vitalSignId,
              },
            },
          },
          include: {
            cat_vital_signs: true,
          },
        });
      } else {
        // Return all measure units
        return await this.prisma.cat_measure_unit.findMany({
          include: {
            cat_vital_signs: true,
          },
        });
      }
    } catch {
      throw new BadRequestException('Error al obtener las unidades de medida');
    }
  }

  async remove(id: number) {
    try {
      // Check if measure unit exists
      const measureUnit = await this.prisma.cat_measure_unit.findUnique({
        where: { id },
      });

      if (!measureUnit) {
        throw new NotFoundException('Unidad de medida no encontrada');
      }

      // Delete the measure unit
      return await this.prisma.cat_measure_unit.delete({
        where: { id },
      });
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException('Error al eliminar la unidad de medida');
    }
  }
}

================
File: src/catalogs/cat-measure-unit/dto/create-cat-measure-unit.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsString, IsNumber } from 'class-validator';

export class CreateCatMeasureUnitDto {
  /**
   * Measure unit name
   * @example "mmHg"
   */
  @ApiProperty({ example: 'mmHg', description: 'Measure unit name' })
  @IsString()
  name: string;

  /**
   * Measure unit description
   * @example "Mil√≠metros de mercurio"
   */
  @ApiProperty({
    example: 'Mil√≠metros de mercurio',
    description: 'Measure unit description',
  })
  @IsString()
  description: string;

  /**
   * ID of the related vital sign
   * @example 1
   */
  @ApiProperty({
    example: 1,
    description: 'ID of the related vital sign',
  })
  @IsNumber()
  cat_vital_signs_id: number;

  /**
   * Minimum value
   * @example 0
   */
  @ApiProperty({ example: 0, description: 'Minimum value' })
  @IsNumber()
  min_value: number;

  /**
   * Maximum value
   * @example 100
   */
  @ApiProperty({ example: 100, description: 'Maximum value' })
  @IsNumber()
  max_value: number;
}

================
File: src/catalogs/cat-study-type/cat-study-type.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Put,
  Delete,
} from '@nestjs/common';
import { CatStudyTypeService } from './cat-study-type.service';
import { CatStudyType } from './cat-study-type.interface';
import { CreateCatStudyTypeDto } from './dto/create-cat-study-type.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiBody,
} from '@nestjs/swagger';

@ApiTags('Catalogs - Study Types')
@Controller('cat-study-type')
export class CatStudyTypeController {
  constructor(private readonly catStudyTypeService: CatStudyTypeService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new study type' })
  @ApiBody({ type: CreateCatStudyTypeDto })
  @ApiResponse({
    status: 201,
    description: 'The study type has been successfully created.',
    type: CreateCatStudyTypeDto, // Assuming response is the created object
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  async create(
    @Body() createCatStudyTypeDto: CreateCatStudyTypeDto,
  ): Promise<CatStudyType> {
    return this.catStudyTypeService.create(createCatStudyTypeDto);
  }

  @Get()
  @ApiOperation({ summary: 'Get all study types' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved study types.',
    type: [CreateCatStudyTypeDto], // Assuming response is an array of study types
  })
  async findAll(): Promise<CatStudyType[]> {
    return this.catStudyTypeService.findAll();
  }

  @Get(':id')
  @ApiOperation({ summary: 'Get a study type by ID' })
  @ApiParam({ name: 'id', description: 'Study type ID', type: Number })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved study type.',
    type: CreateCatStudyTypeDto,
  })
  @ApiResponse({ status: 404, description: 'Study type not found.' })
  async findOne(@Param('id') id: number): Promise<CatStudyType> {
    return this.catStudyTypeService.findOne(id);
  }

  @Put(':id')
  @ApiOperation({ summary: 'Update a study type by ID' })
  @ApiParam({ name: 'id', description: 'Study type ID', type: Number })
  @ApiBody({ type: CreateCatStudyTypeDto }) // Changed from UpdateCatStudyTypeDto
  @ApiResponse({
    status: 200,
    description: 'The study type has been successfully updated.',
    type: CreateCatStudyTypeDto,
  })
  @ApiResponse({ status: 404, description: 'Study type not found.' })
  async update(
    @Param('id') id: number,
    @Body() catStudyTypeData: CreateCatStudyTypeDto, // Changed from UpdateCatStudyTypeDto
  ): Promise<CatStudyType> {
    return this.catStudyTypeService.update(id, catStudyTypeData);
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Delete a study type by ID' })
  @ApiParam({ name: 'id', description: 'Study type ID', type: Number })
  @ApiResponse({
    status: 200,
    description: 'The study type has been successfully deleted.',
    type: CreateCatStudyTypeDto, // Or a success message object
  })
  @ApiResponse({ status: 404, description: 'Study type not found.' })
  async remove(@Param('id') id: number): Promise<CatStudyType> {
    return this.catStudyTypeService.remove(id);
  }
}

================
File: src/catalogs/cat-study-type/cat-study-type.interface.ts
================
export interface CatStudyType {
  id?: number;
  name: string;
}

================
File: src/catalogs/cat-study-type/cat-study-type.module.ts
================
import { Module } from '@nestjs/common';
import { CatStudyTypeService } from './cat-study-type.service';
import { CatStudyTypeController } from './cat-study-type.controller';
import { PrismaService } from '../../prisma/prisma.service'; // Adjust the path as necessary

@Module({
  imports: [],
  controllers: [CatStudyTypeController],
  providers: [CatStudyTypeService, PrismaService],
})
export class CatStudyTypeModule {}

================
File: src/catalogs/cat-study-type/cat-study-type.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CatStudyType } from './cat-study-type.interface';

@Injectable()
export class CatStudyTypeService {
  constructor(private prisma: PrismaService) {}

  async create(data: CatStudyType): Promise<CatStudyType> {
    return this.prisma.cat_study_type.create({
      data,
    });
  }

  async findAll(): Promise<CatStudyType[]> {
    return this.prisma.cat_study_type.findMany();
  }

  async findOne(id: number): Promise<CatStudyType> {
    return this.prisma.cat_study_type.findUnique({
      where: { id: Number(id) },
    });
  }

  async update(id: number, data: CatStudyType): Promise<CatStudyType> {
    return this.prisma.cat_study_type.update({
      where: { id },
      data,
    });
  }

  async remove(id: number): Promise<CatStudyType> {
    return this.prisma.cat_study_type.delete({
      where: { id },
    });
  }
}

================
File: src/catalogs/cat-study-type/dto/create-cat-study-type.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsString, IsNotEmpty } from 'class-validator';

export class CreateCatStudyTypeDto {
  @ApiProperty({
    description: 'The name of the study type',
    example: 'Blood Test',
  })
  @IsString()
  @IsNotEmpty()
  name: string;
}

================
File: src/catalogs/cat-vital-signs/cat-vital-signs.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Delete,
  Query,
  BadRequestException,
  UseGuards,
} from '@nestjs/common';
import { CatVitalSignsService } from './cat-vital-signs.service';
import { CreateCatVitalSignsDto } from './dto/create-cat-vital-signs.dto';
import { VitalSignResponseDto } from './dto/vital-sign-response.dto';
import { SuperAdminGuard } from '../../auth/guards/superadmin.guard';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiParam,
  ApiQuery,
  ApiSecurity,
} from '@nestjs/swagger';

@ApiTags('Catalogs - Vital Signs')
@Controller('cat-vital-signs')
export class CatVitalSignsController {
  constructor(private readonly catVitalSignsService: CatVitalSignsService) {}

  @Post()
  @UseGuards(SuperAdminGuard)
  @ApiSecurity('access-token')
  @ApiOperation({ summary: 'Create a new vital sign' })
  @ApiBody({ type: CreateCatVitalSignsDto })
  @ApiResponse({
    status: 201,
    description: 'The vital sign has been successfully created',
    type: VitalSignResponseDto,
  })
  @ApiResponse({ status: 400, description: 'Bad Request' })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Requires SuperAdmin permissions',
  })
  async create(@Body() createCatVitalSignsDto: CreateCatVitalSignsDto) {
    return this.catVitalSignsService.create(createCatVitalSignsDto);
  }

  @Get()
  @ApiOperation({
    summary: 'Get all vital signs, optionally filtered by specialty IDs',
  })
  @ApiQuery({
    name: 'specialtyIds',
    required: false,
    description: 'Comma-separated list of specialty IDs',
    example: '1,2,3',
  })
  @ApiResponse({
    status: 200,
    description: 'List of vital signs',
    type: [VitalSignResponseDto],
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid specialty ID format',
  })
  async findAll(@Query('specialtyIds') specialtyIdsString?: string) {
    try {
      let specialtyIds: number[] | undefined;

      if (specialtyIdsString) {
        specialtyIds = specialtyIdsString.split(',').map((id) => {
          const parsedId = parseInt(id.trim(), 10);
          if (isNaN(parsedId)) {
            throw new BadRequestException(`ID de especialidad inv√°lido: ${id}`);
          }
          return parsedId;
        });
      }

      return this.catVitalSignsService.findAll(specialtyIds);
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException('Error al obtener los signos vitales');
    }
  }

  @Get(':id')
  @ApiOperation({ summary: 'Get a vital sign by ID' })
  @ApiParam({
    name: 'id',
    required: true,
    description: 'ID of the vital sign to retrieve',
    type: String,
  })
  @ApiResponse({
    status: 200,
    description: 'The vital sign details',
    type: VitalSignResponseDto,
  })
  @ApiResponse({ status: 400, description: 'Bad Request - Invalid ID format' })
  @ApiResponse({ status: 404, description: 'Vital sign not found' })
  async findById(@Param('id') id: string) {
    const parsedId = parseInt(id, 10);
    if (isNaN(parsedId)) {
      throw new BadRequestException('ID inv√°lido');
    }
    return this.catVitalSignsService.findById(parsedId);
  }

  @Delete(':id')
  @UseGuards(SuperAdminGuard)
  @ApiSecurity('access-token')
  @ApiOperation({ summary: 'Delete a vital sign' })
  @ApiParam({
    name: 'id',
    required: true,
    description: 'ID of the vital sign to delete',
    type: String,
  })
  @ApiResponse({
    status: 200,
    description: 'The vital sign has been successfully deleted',
  })
  @ApiResponse({ status: 400, description: 'Bad Request - Invalid ID format' })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Requires SuperAdmin permissions',
  })
  async remove(@Param('id') id: string) {
    const parsedId = parseInt(id, 10);
    if (isNaN(parsedId)) {
      throw new BadRequestException('ID inv√°lido');
    }

    return this.catVitalSignsService.remove(parsedId);
  }
}

================
File: src/catalogs/cat-vital-signs/cat-vital-signs.interface.ts
================
export interface CatVitalSigns {
  id?: number;
  name: string;
  category: string;
  specialties?: number[];
}

================
File: src/catalogs/cat-vital-signs/cat-vital-signs.module.ts
================
import { Module } from '@nestjs/common';
import { CatVitalSignsService } from './cat-vital-signs.service';
import { CatVitalSignsController } from './cat-vital-signs.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from 'src/auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [CatVitalSignsController],
  providers: [CatVitalSignsService, PrismaService],
})
export class CatVitalSignsModule {}

================
File: src/catalogs/cat-vital-signs/cat-vital-signs.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateCatVitalSignsDto } from './dto/create-cat-vital-signs.dto';

@Injectable()
export class CatVitalSignsService {
  constructor(private prisma: PrismaService) {}

  async create(data: CreateCatVitalSignsDto) {
    try {
      const existingVitalSign = await this.prisma.cat_vital_signs.findFirst({
        where: { name: data.name },
      });

      if (existingVitalSign) {
        throw new BadRequestException(
          'Ya existe un signo vital con este nombre',
        );
      }

      return await this.prisma.cat_vital_signs.create({
        data: {
          name: data.name,
          category: data.category,
          specialties: {
            connect: data.specialties.map((id) => ({ id })),
          },
          color: data.color,
          mini_icon: data.mini_icon,
          icon: data.icon,
          background_icon: data.background_icon,
          normal_min_value: data.normal_min_value,
          normal_max_value: data.normal_max_value,
          slightly_high_value: data.slightly_high_value,
          high_max_value: data.high_max_value,
          critical_max_value: data.critical_max_value,
          cat_measure_unit_id: data.cat_measure_unit_id,
        },
        include: {
          specialties: true,
          cat_measure_unit: true,
        },
      });
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException('Error al crear el signo vital');
    }
  }

  async findById(id: number) {
    try {
      const vitalSign = await this.prisma.cat_vital_signs.findUnique({
        where: { id },
        include: {
          specialties: true,
          cat_measure_unit: true,
        },
      });

      if (!vitalSign) {
        throw new NotFoundException('Signo vital no encontrado');
      }

      return vitalSign;
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException('Error al obtener el signo vital');
    }
  }

  async findAll(specialtyIds?: number[]) {
    try {
      const filterSpecialtyIds = specialtyIds?.length ? specialtyIds : [1];

      return await this.prisma.cat_vital_signs.findMany({
        where: {
          specialties: {
            some: {
              id: {
                in: filterSpecialtyIds,
              },
            },
          },
        },
        include: {
          specialties: true,
          cat_measure_unit: true,
        },
      });
    } catch {
      throw new BadRequestException('Error al obtener los signos vitales');
    }
  }

  async remove(id: number) {
    try {
      const vitalSign = await this.prisma.cat_vital_signs.findUnique({
        where: { id },
        include: {
          vital_signs: true,
        },
      });

      if (!vitalSign) {
        throw new NotFoundException('Signo vital no encontrado');
      }

      if (vitalSign.vital_signs.length > 0) {
        throw new BadRequestException(
          'No se puede eliminar un signo vital que est√° en uso',
        );
      }

      return await this.prisma.cat_vital_signs.delete({
        where: { id },
        include: {
          specialties: true,
        },
      });
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException('Error al eliminar el signo vital');
    }
  }
}

================
File: src/catalogs/cat-vital-signs/dto/create-cat-vital-signs.dto.ts
================
import {
  IsString,
  IsArray,
  IsNumber,
  ArrayMinSize,
  IsOptional,
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreateCatVitalSignsDto {
  @ApiProperty({
    description: 'Name of the vital sign',
    example: 'Heart Rate',
  })
  @IsString()
  name: string;

  @ApiProperty({
    description: 'Category of the vital sign',
    example: 'Cardiovascular',
  })
  @IsString()
  category: string;

  @ApiProperty({
    description: 'List of specialty IDs associated with this vital sign',
    example: [1, 2, 3],
    type: [Number],
  })
  @IsArray()
  @IsNumber({}, { each: true })
  @ArrayMinSize(1)
  specialties: number[];

  @ApiProperty({
    description: 'Color associated with the vital sign for UI display',
    example: '#FF5733',
  })
  @IsString()
  color: string;

  @ApiProperty({
    description: 'Mini icon identifier for the vital sign',
    example: 'heart-mini',
  })
  @IsString()
  mini_icon: string;

  @ApiProperty({
    description: 'Icon identifier for the vital sign',
    example: 'heart-icon',
  })
  @IsString()
  icon: string;

  @ApiProperty({
    description: 'Background icon identifier for the vital sign',
    example: 'heart-background',
    required: false,
  })
  @IsOptional()
  @IsString()
  background_icon?: string;

  @ApiProperty({
    description: 'Normal minimum value for the vital sign',
    example: 60,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  normal_min_value?: number;

  @ApiProperty({
    description: 'Normal maximum value for the vital sign',
    example: 100,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  normal_max_value?: number;

  @ApiProperty({
    description: 'Slightly high threshold value for the vital sign',
    example: 120,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  slightly_high_value?: number;

  @ApiProperty({
    description: 'High maximum value for the vital sign',
    example: 140,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  high_max_value?: number;

  @ApiProperty({
    description: 'Critical maximum value for the vital sign',
    example: 180,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  critical_max_value?: number;

  @ApiProperty({
    description: 'ID of the measure unit associated with this vital sign',
    example: 1,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  cat_measure_unit_id?: number;
}

================
File: src/catalogs/cat-vital-signs/dto/vital-sign-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';

export class SpecialtyResponseDto {
  @ApiProperty({
    description: 'Specialty ID',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Specialty name',
    example: 'Cardiolog√≠a',
  })
  name: string;
}

export class MeasureUnitResponseDto {
  @ApiProperty({
    description: 'Measure unit ID',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Measure unit name',
    example: 'mmHg',
  })
  name: string;

  @ApiProperty({
    description: 'Measure unit description',
    example: 'Mil√≠metros de mercurio',
  })
  description: string;
}

export class VitalSignResponseDto {
  @ApiProperty({
    description: 'Vital sign ID',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Name of the vital sign',
    example: 'Presi√≥n arterial',
  })
  name: string;

  @ApiProperty({
    description: 'Category of the vital sign',
    example: 'Cardiovascular',
  })
  category: string;

  @ApiProperty({
    description: 'Color associated with the vital sign for UI display',
    example: '#FF5733',
    nullable: true,
  })
  color?: string;

  @ApiProperty({
    description: 'Mini icon identifier for the vital sign',
    example: 'heart-mini',
    nullable: true,
  })
  mini_icon?: string;

  @ApiProperty({
    description: 'Icon identifier for the vital sign',
    example: 'heart-icon',
    nullable: true,
  })
  icon?: string;

  @ApiProperty({
    description: 'Background icon identifier for the vital sign',
    example: 'heart-background',
    nullable: true,
  })
  background_icon?: string;

  @ApiProperty({
    description: 'Normal minimum value for the vital sign',
    example: 60,
    nullable: true,
  })
  normal_min_value?: number;

  @ApiProperty({
    description: 'Normal maximum value for the vital sign',
    example: 100,
    nullable: true,
  })
  normal_max_value?: number;

  @ApiProperty({
    description: 'Slightly high threshold value for the vital sign',
    example: 120,
    nullable: true,
  })
  slightly_high_value?: number;

  @ApiProperty({
    description: 'High maximum value for the vital sign',
    example: 140,
    nullable: true,
  })
  high_max_value?: number;

  @ApiProperty({
    description: 'Critical maximum value for the vital sign',
    example: 180,
    nullable: true,
  })
  critical_max_value?: number;

  @ApiProperty({
    description: 'Associated specialties',
    type: [SpecialtyResponseDto],
  })
  specialties: SpecialtyResponseDto[];

  @ApiProperty({
    description: 'Associated measure unit',
    type: MeasureUnitResponseDto,
    nullable: true,
  })
  cat_measure_unit?: MeasureUnitResponseDto;
}

================
File: src/catalogs/order-type/dto/create-order-type.dto.ts
================
import { IsOptional, IsString } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreateOrderTypeDto {
  @ApiProperty({
    description: 'ID of the order type (optional)',
    example: 'lab-test',
    required: false,
  })
  @IsOptional()
  id: string;

  @ApiProperty({
    description: 'Name of the order type',
    example: 'Laboratory Test',
  })
  @IsString()
  name: string;

  @ApiProperty({
    description: 'Description of the order type',
    example: 'Medical order for laboratory tests',
    required: false,
  })
  @IsString()
  @IsOptional()
  description?: string;
}

================
File: src/catalogs/order-type/dto/update-order-type.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreateOrderTypeDto } from './create-order-type.dto';

export class UpdateOrderTypeDto extends PartialType(CreateOrderTypeDto) {}

================
File: src/catalogs/order-type/entities/order-type.entity.ts
================
export class OrderType {}

================
File: src/catalogs/order-type/order-type.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Query,
} from '@nestjs/common';
import { OrderTypeService } from './order-type.service';
import { CreateOrderTypeDto } from './dto/create-order-type.dto';
import { UpdateOrderTypeDto } from './dto/update-order-type.dto';
import { PaginationParams } from 'src/utils/pagination.helper';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiParam,
  ApiQuery,
  ApiSecurity,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Catalogs - Order Types')
@ApiSecurity('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'ID del tenant',
  required: true,
})
@Controller('order-type')
export class OrderTypeController {
  constructor(private readonly orderTypeService: OrderTypeService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new order type' })
  @ApiBody({ type: CreateOrderTypeDto })
  @ApiResponse({
    status: 201,
    description: 'The order type has been successfully created',
    type: Object,
  })
  @ApiResponse({ status: 400, description: 'Bad Request - Invalid data' })
  create(@Body() createOrderTypeDto: CreateOrderTypeDto) {
    return this.orderTypeService.create(createOrderTypeDto);
  }

  @Get()
  @ApiOperation({ summary: 'Get all order types with pagination' })
  @ApiQuery({
    name: 'page',
    required: false,
    description: 'Page number (starts from 1)',
    type: Number,
  })
  @ApiQuery({
    name: 'pageSize',
    required: false,
    description: 'Number of items per page',
    type: Number,
  })
  @ApiQuery({
    name: 'orderBy',
    required: false,
    description: 'Field to order by',
    type: String,
  })
  @ApiQuery({
    name: 'orderDirection',
    required: false,
    description: 'Order direction (asc or desc)',
    enum: ['asc', 'desc'],
  })
  @ApiResponse({
    status: 200,
    description: 'List of order types',
    type: [Object],
  })
  findAll(@Query() paginationParams: PaginationParams) {
    return this.orderTypeService.findAll(paginationParams);
  }

  @Get(':id')
  @ApiOperation({ summary: 'Get an order type by ID' })
  @ApiParam({
    name: 'id',
    required: true,
    description: 'ID of the order type to retrieve',
    type: String,
  })
  @ApiResponse({
    status: 200,
    description: 'The order type has been found',
    type: Object,
  })
  @ApiResponse({ status: 404, description: 'Order type not found' })
  findOne(@Param('id') id: string) {
    return this.orderTypeService.findOne(id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Update an order type' })
  @ApiParam({
    name: 'id',
    required: true,
    description: 'ID of the order type to update',
    type: String,
  })
  @ApiBody({ type: UpdateOrderTypeDto })
  @ApiResponse({
    status: 200,
    description: 'The order type has been successfully updated',
    type: Object,
  })
  @ApiResponse({ status: 400, description: 'Bad Request - Invalid data' })
  @ApiResponse({ status: 404, description: 'Order type not found' })
  update(
    @Param('id') id: string,
    @Body() updateOrderTypeDto: UpdateOrderTypeDto,
  ) {
    return this.orderTypeService.update(id, updateOrderTypeDto);
  }
}

================
File: src/catalogs/order-type/order-type.module.ts
================
import { Module } from '@nestjs/common';
import { OrderTypeService } from './order-type.service';
import { OrderTypeController } from './order-type.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [OrderTypeController],
  providers: [OrderTypeService, PrismaService],
})
export class OrderTypeModule {}

================
File: src/catalogs/order-type/order-type.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { CreateOrderTypeDto } from './dto/create-order-type.dto';
import { UpdateOrderTypeDto } from './dto/update-order-type.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';

@Injectable()
export class OrderTypeService {
  constructor(private readonly prisma: PrismaService) {}

  async create(createOrderTypeDto: CreateOrderTypeDto) {
    try {
      const orderType = await this.prisma.medical_order_type.create({
        data: { ...createOrderTypeDto },
      });
      return { message: 'Tipo de orden m√©dica creada con √©xito' };
    } catch (error) {
      return {
        message: `No se ha podido generar el tipo de orden m√©dica ${error.message}`,
      };
    }
  }

  async findAll(paginationParams: PaginationParams) {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);
      const ordersType = await this.prisma.medical_order_type.findMany({
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });
      return ordersType;
    } catch (error) {
      return {
        message: `No se ha podido consultar los tipo de orden m√©dica ${error.message}`,
      };
    }
  }

  async findOne(id: string) {
    try {
      const orderType = await this.prisma.medical_order_type.findFirst({
        where: { id: id },
      });
      if (!orderType)
        throw new NotFoundException('No se ha encontrado el id solicitado');
      return orderType;
    } catch (error) {
      return {
        message: `No se ha podido consultar el tipo de orden m√©dica ${error.message}`,
      };
    }
  }

  async update(id: string, updateOrderTypeDto: UpdateOrderTypeDto) {
    try {
      const orderType = await this.prisma.medical_order_type.update({
        where: { id: id },
        data: { ...updateOrderTypeDto },
      });
      return { message: 'Tipo de orden m√©dica actualizada con √©xito' };
    } catch (error) {
      return {
        message: `No se ha podido actualizar el tipo de orden m√©dica ${error.message}`,
      };
    }
  }
}

================
File: src/catalogs/seed/catalog-seed.controller.ts
================
import { Controller, Post, UseGuards } from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiSecurity,
  ApiHeader,
} from '@nestjs/swagger';
import { CatalogSeedService } from './catalog-seed.service';
import { SuperAdminGuard } from '../../auth/guards/superadmin.guard';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';

@ApiTags('Catalogs - Seed')
@ApiSecurity('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'ID del tenant',
  required: true,
})
@Controller('catalogs/seed')
export class CatalogSeedController {
  constructor(private readonly catalogSeedService: CatalogSeedService) {}

  /**
   * Inicializa todos los cat√°logos con datos predefinidos
   * Este endpoint solo es accesible para superadmins
   */
  @Post()
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar todos los cat√°logos',
    description: 'Inicializa todos los cat√°logos con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Todos los cat√°logos han sido inicializados correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Todos los cat√°logos han sido inicializados correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedAllCatalogs() {
    await this.catalogSeedService.seedAllCatalogs();
    return {
      message: 'Todos los cat√°logos han sido inicializados correctamente',
    };
  }
  /**
   * Inicializa solo el cat√°logo de tipos de estudio
   */
  @Post('study-types')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de tipos de estudio',
    description:
      'Inicializa solo el cat√°logo de tipos de estudio con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo de tipos de estudio inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo de tipos de estudio inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedStudyTypes() {
    await this.catalogSeedService.seedCatStudyTypes();
    return {
      message: 'Cat√°logo de tipos de estudio inicializado correctamente',
    };
  }

  /**
   * Inicializa solo el cat√°logo CIE-10
   */
  @Post('cie-diez')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo CIE-10',
    description: 'Inicializa solo el cat√°logo CIE-10 con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo CIE-10 inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo CIE-10 inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedCieDiez() {
    await this.catalogSeedService.seedCatCieDiez();
    return { message: 'Cat√°logo CIE-10 inicializado correctamente' };
  }
  /**
   * Inicializa solo el subcat√°logo CIE-10
   */
  @Post('subcat-cie-diez')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar subcat√°logo CIE-10',
    description: 'Inicializa solo el subcat√°logo CIE-10 con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Subcat√°logo CIE-10 inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Subcat√°logo CIE-10 inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedSubcatCieDiez() {
    await this.catalogSeedService.seedSubcatCieDiez();
    return { message: 'Subcat√°logo CIE-10 inicializado correctamente' };
  }

  /**
   * Inicializa solo el cat√°logo de signos vitales
   */
  @Post('vital-signs')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de signos vitales',
    description:
      'Inicializa solo el cat√°logo de signos vitales con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo de signos vitales inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo de signos vitales inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedVitalSigns() {
    await this.catalogSeedService.seedCatVitalSigns();
    return { message: 'Cat√°logo de signos vitales inicializado correctamente' };
  }
  /**
   * Inicializa solo el cat√°logo de unidades de medida
   */
  @Post('measure-units')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de unidades de medida',
    description:
      'Inicializa solo el cat√°logo de unidades de medida con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo de unidades de medida inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo de unidades de medida inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedMeasureUnits() {
    await this.catalogSeedService.seedCatMeasureUnits();
    return {
      message: 'Cat√°logo de unidades de medida inicializado correctamente',
    };
  }

  /**
   * Inicializa solo el cat√°logo de especialidades
   */
  @Post('specialties')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de especialidades',
    description:
      'Inicializa solo el cat√°logo de especialidades con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo de especialidades inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo de especialidades inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedSpecialties() {
    await this.catalogSeedService.seedSpecialties();
    return { message: 'Cat√°logo de especialidades inicializado correctamente' };
  }
  /**
   * Inicializa solo el cat√°logo de subsistemas f√≠sicos
   */
  @Post('physical-subsystems')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de subsistemas f√≠sicos',
    description:
      'Inicializa solo el cat√°logo de subsistemas f√≠sicos con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description: 'Cat√°logo de subsistemas f√≠sicos inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example: 'Cat√°logo de subsistemas f√≠sicos inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedPhysicalSubsystems() {
    await this.catalogSeedService.seedPhysicalSubsystems();
    return {
      message: 'Cat√°logo de subsistemas f√≠sicos inicializado correctamente',
    };
  }

  /**
   * Inicializa solo el cat√°logo de √°reas de exploraci√≥n f√≠sica
   */
  @Post('exploration-areas')
  @UseGuards(SuperAdminGuard)
  @RequirePermission(Permission.CONFIGURE_SYSTEM_SETTINGS)
  @ApiOperation({
    summary: 'Inicializar cat√°logo de √°reas de exploraci√≥n f√≠sica',
    description:
      'Inicializa solo el cat√°logo de √°reas de exploraci√≥n f√≠sica con datos predefinidos',
  })
  @ApiResponse({
    status: 200,
    description:
      'Cat√°logo de √°reas de exploraci√≥n f√≠sica inicializado correctamente',
    schema: {
      type: 'object',
      properties: {
        message: {
          type: 'string',
          example:
            'Cat√°logo de √°reas de exploraci√≥n f√≠sica inicializado correctamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 403,
    description: 'Prohibido - Requiere permisos de SuperAdmin',
  })
  async seedExplorationAreas() {
    await this.catalogSeedService.seedPhysicalExplorationAreas();
    return {
      message:
        'Cat√°logo de √°reas de exploraci√≥n f√≠sica inicializado correctamente',
    };
  }
}

================
File: src/catalogs/seed/catalog-seed.module.ts
================
import { Module } from '@nestjs/common';
import { CatalogSeedService } from './catalog-seed.service';
import { CatalogSeedController } from './catalog-seed.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [CatalogSeedController],
  providers: [CatalogSeedService, PrismaService],
  exports: [CatalogSeedService],
})
export class CatalogSeedModule {}

================
File: src/catalogs/seed/catalog-seed.service.ts
================
import { Injectable, Logger } from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import * as fs from 'fs';
import * as path from 'path';

@Injectable()
export class CatalogSeedService {
  private readonly logger = new Logger(CatalogSeedService.name);

  constructor(private readonly prisma: PrismaService) {}

  /**
   * Inicializa todos los cat√°logos con datos predeterminados
   */
  async seedAllCatalogs(): Promise<void> {
    try {
      this.logger.log('Iniciando la siembra de todos los cat√°logos...');

      // Ejecutar todas las funciones de seed en paralelo
      await Promise.all([
        this.seedCatStudyTypes(),
        this.seedCatCieDiez(),
        this.seedSubcatCieDiez(),
        this.seedCatVitalSigns(),
        this.seedCatMeasureUnits(),
        this.seedSpecialties(),
        this.seedPhysicalSubsystems(),
        this.seedPhysicalExplorationAreas(),
      ]);

      this.logger.log('Siembra de cat√°logos completada con √©xito');
    } catch (error) {
      this.logger.error(`Error al sembrar cat√°logos: ${error.message}`);
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de tipos de estudio
   */
  async seedCatStudyTypes(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de tipos de estudio...');

      const count = await this.prisma.cat_study_type.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de tipos de estudio ya tiene datos, omitiendo...',
        );
        return;
      }

      const studyTypes = [
        { name: 'Radiograf√≠a' },
        { name: 'Ultrasonido' },
        { name: 'Resonancia Magn√©tica' },
        { name: 'Tomograf√≠a Computarizada' },
        { name: 'Electrocardiograma' },
        { name: 'An√°lisis de Sangre' },
        { name: 'An√°lisis de Orina' },
        { name: 'Biopsia' },
      ];

      for (const studyType of studyTypes) {
        await this.prisma.cat_study_type.create({
          data: studyType,
        });
      }

      this.logger.log(
        `Cat√°logo de tipos de estudio sembrado: ${studyTypes.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(`Error al sembrar tipos de estudio: ${error.message}`);
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo CIE-10 usando el archivo JSON
   */
  async seedCatCieDiez(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo CIE-10...');

      const count = await this.prisma.category_cie_diez.count();
      if (count > 0) {
        this.logger.log('El cat√°logo CIE-10 ya tiene datos, omitiendo...');
        return;
      }

      // Leer el archivo JSON de categor√≠as CIE-10
      const filePath = path.join(
        process.cwd(),
        'src/catalogs/seed/cie10B.json',
      );
      const rawData = fs.readFileSync(filePath, 'utf8');
      const categories = JSON.parse(rawData);

      this.logger.log(
        `Cargadas ${categories.length} categor√≠as CIE-10 desde el archivo JSON`,
      );

      // Crear las categor√≠as en la base de datos
      // Usamos un enfoque por lotes para mejorar el rendimiento
      const batchSize = 100;
      for (let i = 0; i < categories.length; i += batchSize) {
        const batch = categories.slice(i, i + batchSize);
        await this.prisma.$transaction(
          batch.map((category) =>
            this.prisma.category_cie_diez.create({
              data: {
                code: category.code,
                description: category.description,
              },
            }),
          ),
        );
        this.logger.log(
          `Procesadas ${Math.min(i + batchSize, categories.length)} de ${categories.length} categor√≠as`,
        );
      }

      this.logger.log(
        `Cat√°logo CIE-10 sembrado: ${categories.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(`Error al sembrar CIE-10: ${error.message}`);
      throw error;
    }
  }

  /**
   * Inicializa el subcat√°logo CIE-10 usando el archivo JSON
   */
  async seedSubcatCieDiez(): Promise<void> {
    try {
      this.logger.log('Sembrando subcat√°logo CIE-10...');

      const count = await this.prisma.subcategories_cie_diez.count();
      if (count > 0) {
        this.logger.log('El subcat√°logo CIE-10 ya tiene datos, omitiendo...');
        return;
      }

      // Primero, asegur√©monos de que existan categor√≠as principales
      const catCieDiez = await this.prisma.category_cie_diez.count();
      if (catCieDiez === 0) {
        await this.seedCatCieDiez();
      }

      // Leer el archivo JSON de subcategor√≠as CIE-10
      const filePath = path.join(process.cwd(), 'src/catalogs/seed/cie10.json');
      const rawData = fs.readFileSync(filePath, 'utf8');
      const subcategories = JSON.parse(rawData);

      this.logger.log(
        `Cargadas ${subcategories.length} subcategor√≠as CIE-10 desde el archivo JSON`,
      );

      // Obtener todas las categor√≠as principales
      const categories = await this.prisma.category_cie_diez.findMany();
      const categoryMap = new Map();

      // Crear un mapa para acceder r√°pidamente a las categor√≠as por c√≥digo
      categories.forEach((category) => {
        categoryMap.set(category.code, category.id);
      });

      // Procesar subcategor√≠as en lotes
      const batchSize = 100;
      let createdCount = 0;
      let skippedCount = 0;

      for (let i = 0; i < subcategories.length; i += batchSize) {
        const batch = subcategories.slice(i, i + batchSize);
        const validBatch = [];

        for (const subcat of batch) {
          // Extraer la categor√≠a principal del c√≥digo de subcategor√≠a (ej. A00.1 -> A00)
          const mainCategoryCode = subcat.code.split('.')[0];

          const categoryId = categoryMap.get(mainCategoryCode);
          if (categoryId) {
            validBatch.push({
              code: subcat.code,
              description: subcat.description,
              categoryId: categoryId,
            });
          } else {
            skippedCount++;
          }
        }

        if (validBatch.length > 0) {
          await this.prisma.$transaction(
            validBatch.map((subcat) =>
              this.prisma.subcategories_cie_diez.create({
                data: subcat,
              }),
            ),
          );
          createdCount += validBatch.length;
        }

        this.logger.log(
          `Procesadas ${Math.min(i + batchSize, subcategories.length)} de ${subcategories.length} subcategor√≠as`,
        );
      }

      this.logger.log(
        `Subcat√°logo CIE-10 sembrado: ${createdCount} registros creados, ${skippedCount} omitidos por falta de categor√≠a principal`,
      );
    } catch (error) {
      this.logger.error(
        `Error al sembrar subcat√°logo CIE-10: ${error.message}`,
      );
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de signos vitales
   */
  async seedCatVitalSigns(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de signos vitales...');

      const count = await this.prisma.cat_vital_signs.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de signos vitales ya tiene datos, omitiendo...',
        );
        return;
      }

      // Verificar si existen especialidades
      const specialtiesCount = await this.prisma.cat_speciality.count();
      if (specialtiesCount === 0) {
        await this.seedSpecialties();
      }

      // Obtener las especialidades
      const specialties = await this.prisma.cat_speciality.findMany();

      const vitalSigns = [
        {
          name: 'Presi√≥n arterial',
          category: 'Cardiovascular',
          specialtiesIds: specialties.slice(0, 3).map((s) => s.id),
        },
        {
          name: 'Frecuencia card√≠aca',
          category: 'Cardiovascular',
          specialtiesIds: specialties.slice(0, 3).map((s) => s.id),
        },
        {
          name: 'Temperatura',
          category: 'General',
          specialtiesIds: specialties.map((s) => s.id),
        },
        {
          name: 'Frecuencia respiratoria',
          category: 'Respiratorio',
          specialtiesIds: specialties.slice(0, 5).map((s) => s.id),
        },
        {
          name: 'Saturaci√≥n de ox√≠geno',
          category: 'Respiratorio',
          specialtiesIds: specialties.slice(0, 5).map((s) => s.id),
        },
        {
          name: 'Glucosa en sangre',
          category: 'Metab√≥lico',
          specialtiesIds: specialties.slice(2, 7).map((s) => s.id),
        },
        {
          name: 'Peso',
          category: 'Antropom√©trico',
          specialtiesIds: specialties.map((s) => s.id),
        },
        {
          name: 'Talla',
          category: 'Antropom√©trico',
          specialtiesIds: specialties.map((s) => s.id),
        },
      ];

      for (const vitalSign of vitalSigns) {
        await this.prisma.cat_vital_signs.create({
          data: {
            name: vitalSign.name,
            category: vitalSign.category,
            specialties: {
              connect: vitalSign.specialtiesIds.map((id) => ({ id })),
            },
          },
        });
      }

      this.logger.log(
        `Cat√°logo de signos vitales sembrado: ${vitalSigns.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(`Error al sembrar signos vitales: ${error.message}`);
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de unidades de medida
   */
  async seedCatMeasureUnits(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de unidades de medida...');

      const count = await this.prisma.cat_measure_unit.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de unidades de medida ya tiene datos, omitiendo...',
        );
        return;
      }

      // Primero asegurarnos que existan signos vitales para relacionar
      const vitalSignsCount = await this.prisma.cat_vital_signs.count();
      if (vitalSignsCount === 0) {
        await this.seedCatVitalSigns();
      }

      // Obtener los signos vitales
      const vitalSigns = await this.prisma.cat_vital_signs.findMany();

      // Definir unidades de medida con sus correspondientes signos vitales
      const measureUnitsData = [
        {
          name: 'mmHg',
          description: 'Mil√≠metros de mercurio',
          vitalSignId: vitalSigns.find((v) => v.name === 'Presi√≥n arterial')
            ?.id,
        },
        {
          name: 'bpm',
          description: 'Latidos por minuto',
          vitalSignId: vitalSigns.find((v) => v.name === 'Frecuencia card√≠aca')
            ?.id,
        },
        {
          name: '¬∞C',
          description: 'Grados Celsius',
          vitalSignId: vitalSigns.find((v) => v.name === 'Temperatura')?.id,
        },
        {
          name: 'rpm',
          description: 'Respiraciones por minuto',
          vitalSignId: vitalSigns.find(
            (v) => v.name === 'Frecuencia respiratoria',
          )?.id,
        },
        {
          name: '%',
          description: 'Porcentaje',
          vitalSignId: vitalSigns.find(
            (v) => v.name === 'Saturaci√≥n de ox√≠geno',
          )?.id,
        },
        {
          name: 'mg/dL',
          description: 'Miligramos por decilitro',
          vitalSignId: vitalSigns.find((v) => v.name === 'Glucosa en sangre')
            ?.id,
        },
        {
          name: 'kg',
          description: 'Kilogramos',
          vitalSignId: vitalSigns.find((v) => v.name === 'Peso')?.id,
        },
        {
          name: 'cm',
          description: 'Cent√≠metros',
          vitalSignId: vitalSigns.find((v) => v.name === 'Talla')?.id,
        },
      ];

      // Filtrar aquellos que tienen un vitalSignId v√°lido
      const validMeasureUnits = measureUnitsData.filter(
        (unit) => unit.vitalSignId !== undefined,
      );

      for (const unit of validMeasureUnits) {
        await this.prisma.cat_measure_unit.create({
          data: {
            name: unit.name,
            description: unit.description,
            cat_vital_signs: {
              connect: { id: unit.vitalSignId },
            },
          },
        });
      }

      this.logger.log(
        `Cat√°logo de unidades de medida sembrado: ${validMeasureUnits.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(
        `Error al sembrar unidades de medida: ${error.message}`,
      );
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de especialidades m√©dicas
   */
  async seedSpecialties(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de especialidades m√©dicas...');

      const count = await this.prisma.cat_speciality.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de especialidades ya tiene datos, omitiendo...',
        );
        return;
      }

      const specialties = [
        { name: 'Medicina General' },
        {
          name: 'Cardiolog√≠a',
        },
        {
          name: 'Dermatolog√≠a',
        },
        {
          name: 'Endocrinolog√≠a',
        },
        {
          name: 'Gastroenterolog√≠a',
        },
        { name: 'Geriatr√≠a' },
        { name: 'Ginecolog√≠a' },
        { name: 'Neurolog√≠a' },
        { name: 'Oftalmolog√≠a' },
        { name: 'Pediatr√≠a' },
      ];

      for (const specialty of specialties) {
        await this.prisma.cat_speciality.create({
          data: specialty,
        });
      }

      this.logger.log(
        `Cat√°logo de especialidades sembrado: ${specialties.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(`Error al sembrar especialidades: ${error.message}`);
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de subsistemas f√≠sicos
   */
  async seedPhysicalSubsystems(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de subsistemas f√≠sicos...');

      const count = await this.prisma.cat_physical_subsystem.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de subsistemas f√≠sicos ya tiene datos, omitiendo...',
        );
        return;
      }

      const subsystems = [
        { name: 'Sistema cardiovascular' },
        { name: 'Sistema respiratorio' },
        { name: 'Sistema digestivo' },
        { name: 'Sistema nervioso' },
        { name: 'Sistema m√∫sculo-esquel√©tico' },
        { name: 'Sistema endocrino' },
        { name: 'Sistema urinario' },
        { name: 'Sistema reproductor' },
        { name: 'Sistema tegumentario' },
        { name: 'Sistema linf√°tico e inmunol√≥gico' },
      ];

      for (const subsystem of subsystems) {
        await this.prisma.cat_physical_subsystem.create({
          data: subsystem,
        });
      }

      this.logger.log(
        `Cat√°logo de subsistemas f√≠sicos sembrado: ${subsystems.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(
        `Error al sembrar subsistemas f√≠sicos: ${error.message}`,
      );
      throw error;
    }
  }

  /**
   * Inicializa el cat√°logo de √°reas de exploraci√≥n f√≠sica
   */
  async seedPhysicalExplorationAreas(): Promise<void> {
    try {
      this.logger.log('Sembrando cat√°logo de √°reas de exploraci√≥n f√≠sica...');

      const count = await this.prisma.physical_exploration_area.count();
      if (count > 0) {
        this.logger.log(
          'El cat√°logo de √°reas de exploraci√≥n f√≠sica ya tiene datos, omitiendo...',
        );
        return;
      }

      const explorationAreas = [
        { name: 'Cabeza y cuello', name_on_library: 'head_neck' },
        { name: 'T√≥rax', name_on_library: 'thorax' },
        { name: 'Abdomen', name_on_library: 'abdomen' },
        { name: 'Extremidades superiores', name_on_library: 'upper_limbs' },
        { name: 'Extremidades inferiores', name_on_library: 'lower_limbs' },
        { name: 'Espalda y columna', name_on_library: 'back_spine' },
        { name: 'Pelvis', name_on_library: 'pelvis' },
        { name: 'Sistema nervioso', name_on_library: 'nervous_system' },
        { name: 'Piel y anexos', name_on_library: 'skin_appendages' },
        { name: 'Evaluaci√≥n general', name_on_library: 'general_assessment' },
      ];

      for (const area of explorationAreas) {
        await this.prisma.physical_exploration_area.create({
          data: area,
        });
      }

      this.logger.log(
        `Cat√°logo de √°reas de exploraci√≥n f√≠sica sembrado: ${explorationAreas.length} registros creados`,
      );
    } catch (error) {
      this.logger.error(
        `Error al sembrar √°reas de exploraci√≥n f√≠sica: ${error.message}`,
      );
      throw error;
    }
  }
}

================
File: src/catalogs/seed/cie10.json
================
[
  {
    "code": "A00.0",
    "description": "C√≥lera debido a Vibrio cholerae 01, biotipo cholerae"
  },
  {
    "code": "A00.1",
    "description": "C√≥lera debido a Vibrio cholerae 01, biotipo El Tor"
  },
  {
    "code": "A00.9",
    "description": "C√≥lera, no especificado"
  },
  {
    "code": "A01.0",
    "description": "Fiebre tifoidea"
  },
  {
    "code": "A01.1",
    "description": "Fiebre paratifoidea A"
  },
  {
    "code": "A01.2",
    "description": "Fiebre paratifoidea B"
  },
  {
    "code": "A01.3",
    "description": "Fiebre paratifoidea C"
  },
  {
    "code": "A01.4",
    "description": "Fiebre paratifoidea, no especificada"
  },
  {
    "code": "A02.0",
    "description": "Enteritis debida a Salmonella"
  },
  {
    "code": "A02.1",
    "description": "Septicemia debida a Salmonella"
  },
  {
    "code": "A02.2",
    "description": "Infecciones localizadas debidas a Salmonella"
  },
  {
    "code": "A02.8",
    "description": "Otras infecciones especificadas como debidas a Salmonella"
  },
  {
    "code": "A02.9",
    "description": "Infecci√≥n debida a Salmonella, no especificada"
  },
  {
    "code": "A03.0",
    "description": "Shigelosis debida a Shigella dysenteriae"
  },
  {
    "code": "A03.1",
    "description": "Shigelosis debida a Shigella flexneri"
  },
  {
    "code": "A03.2",
    "description": "Shigelosis debida a Shigella boydii"
  },
  {
    "code": "A03.3",
    "description": "Shigelosis debida a Shigella sonnei"
  },
  {
    "code": "A03.8",
    "description": "Otras shigelosis"
  },
  {
    "code": "A03.9",
    "description": "Shigelosis de tipo no especificado"
  },
  {
    "code": "A04.0",
    "description": "Infecci√≥n debida a Escherichia coli enteropat√≥gena"
  },
  {
    "code": "A04.1",
    "description": "Infecci√≥n debida a Escherichia coli enterotox√≠gena"
  },
  {
    "code": "A04.2",
    "description": "Infecci√≥n debida a Escherichia coli enteroinvasiva"
  },
  {
    "code": "A04.3",
    "description": "Infecci√≥n debida a Escherichia coli enterohemorr√°gica"
  },
  {
    "code": "A04.4",
    "description": "Otras infecciones intestinales debidas a Escherichia coli"
  },
  {
    "code": "A04.5",
    "description": "Enteritis debida a Campylobacter"
  },
  {
    "code": "A04.6",
    "description": "Enteritis debida a Yersinia enterocolitica"
  },
  {
    "code": "A04.7",
    "description": "Enterocolitis debida a Clostridium difficile"
  },
  {
    "code": "A04.8",
    "description": "Otras infecciones intestinales bacterianas especificadas"
  },
  {
    "code": "A04.9",
    "description": "Infecci√≥n intestinal bacteriana, no especificada"
  },
  {
    "code": "A05.0",
    "description": "Intoxicaci√≥n alimentaria estafiloc√≥cica"
  },
  {
    "code": "A05.1",
    "description": "Botulismo"
  },
  {
    "code": "A05.2",
    "description": "Intoxicaci√≥n alimentaria debida a Clostridium perfringens [Clostridium welchii]"
  },
  {
    "code": "A05.3",
    "description": "Intoxicaci√≥n alimentaria debida a Vibrio parahaemolyticus"
  },
  {
    "code": "A05.4",
    "description": "Intoxicaci√≥n alimentaria debida a Bacillus cereus"
  },
  {
    "code": "A05.8",
    "description": "Otras intoxicaciones alimentarias debidas a bacterias especificadas"
  },
  {
    "code": "A05.9",
    "description": "Intoxicaci√≥n alimentaria bacteriana, no especificada"
  },
  {
    "code": "A06.0",
    "description": "Disenter√≠a amebiana aguda"
  },
  {
    "code": "A06.1",
    "description": "Amebiasis intestinal cr√≥nica"
  },
  {
    "code": "A06.2",
    "description": "Colitis amebiana no disent√©rica"
  },
  {
    "code": "A06.3",
    "description": "Ameboma intestinal"
  },
  {
    "code": "A06.4",
    "description": "Absceso amebiano del h√≠gado"
  },
  {
    "code": "A06.5",
    "description": "Absceso amebiano del pulm√≥n (J99.8*)"
  },
  {
    "code": "A06.6",
    "description": "Absceso amebiano del cerebro (G07*)"
  },
  {
    "code": "A06.7",
    "description": "Amebiasis cut√°nea"
  },
  {
    "code": "A06.8",
    "description": "Infecci√≥n amebiana de otras localizaciones"
  },
  {
    "code": "A06.9",
    "description": "Amebiasis, no especificada"
  },
  {
    "code": "A07.0",
    "description": "Balantidiasis"
  },
  {
    "code": "A07.1",
    "description": "Giardiasis [lambliasis]"
  },
  {
    "code": "A07.2",
    "description": "Criptosporidiosis"
  },
  {
    "code": "A07.3",
    "description": "Isosporiasis"
  },
  {
    "code": "A07.8",
    "description": "Otras enfermedades intestinales especificadas debidas a protozoarios"
  },
  {
    "code": "A07.9",
    "description": "Enfermedad intestinal debida a protozoarios, no especificada"
  },
  {
    "code": "A08.0",
    "description": "Enteritis debida a rotavirus"
  },
  {
    "code": "A08.1",
    "description": "Gastroenteropat√≠a aguda debida al agente de Norwalk"
  },
  {
    "code": "A08.2",
    "description": "Enteritis debida a adenovirus"
  },
  {
    "code": "A08.3",
    "description": "Otras enteritis virales"
  },
  {
    "code": "A08.4",
    "description": "Infecci√≥n intestinal viral, sin otra especificaci√≥n"
  },
  {
    "code": "A08.5",
    "description": "Otras infecciones intestinales especificadas"
  },
  {
    "code": "A15.0",
    "description": "Tuberculosis del pulm√≥n, confirmada por hallazgo microsc√≥pico del bacilo tuberculoso en esputo, con o sin cultivo"
  },
  {
    "code": "A15.1",
    "description": "Tuberculosis del pulm√≥n, confirmada √∫nicamente por cultivo"
  },
  {
    "code": "A15.2",
    "description": "Tuberculosis del pulm√≥n, confirmada histol√≥gicamente"
  },
  {
    "code": "A15.3",
    "description": "Tuberculosis del pulm√≥n, confirmada por medios no especificados"
  },
  {
    "code": "A15.4",
    "description": "Tuberculosis de ganglios linf√°ticos intrator√°cicos, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A15.5",
    "description": "Tuberculosis de laringe, tr√°quea y bronquios, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A15.6",
    "description": "Pleures√≠a tuberculosa, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A15.7",
    "description": "Tuberculosis respiratoria primaria, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A15.8",
    "description": "Otras tuberculosis respiratorias, confirmadas bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A15.9",
    "description": "Tuberculosis respiratoria no especificada, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A16.0",
    "description": "Tuberculosis del pulm√≥n, con examen bacteriol√≥gico e histol√≥gico negativos"
  },
  {
    "code": "A16.1",
    "description": "Tuberculosis del pulm√≥n, sin examen bacteriol√≥gico e histol√≥gico"
  },
  {
    "code": "A16.2",
    "description": "Tuberculosis del pulm√≥n, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A16.3",
    "description": "Tuberculosis de ganglios linf√°ticos intrator√°cicos, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A16.4",
    "description": "Tuberculosis de laringe, tr√°quea y bronquios, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A16.5",
    "description": "Pleures√≠a tuberculosa, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A16.7",
    "description": "Tuberculosis respiratoria primaria, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A16.8",
    "description": "Otras tuberculosis respiratorias, sin menci√≥n de confirmaci√≥n"
  },
  {
    "code": "A16.9",
    "description": "Tuberculosis respiratoria no especificada, sin menci√≥n de confirmaci√≥n bacteriol√≥gica o histol√≥gica"
  },
  {
    "code": "A17.0",
    "description": "+Meningitis tuberculosa (G01*)"
  },
  {
    "code": "A17.1",
    "description": "+Tuberculoma men√≠ngeo (G07*)"
  },
  {
    "code": "A17.8",
    "description": "+Otras tuberculosis del sistema nervioso"
  },
  {
    "code": "A17.9",
    "description": "+Tuberculosis del sistema nervioso, no especificada (G99.8*)"
  },
  {
    "code": "A18.0",
    "description": "Tuberculosis de huesos y articulaciones"
  },
  {
    "code": "A18.1",
    "description": "Tuberculosis del aparato genitourinario"
  },
  {
    "code": "A18.2",
    "description": "Linfadenopat√≠a perif√©rica tuberculosa"
  },
  {
    "code": "A18.3",
    "description": "Tuberculosis de los intestinos, el peritoneo y los ganglios mesent√©ricos"
  },
  {
    "code": "A18.4",
    "description": "Tuberculosis de la piel y el tejido subcut√°neo"
  },
  {
    "code": "A18.5",
    "description": "Tuberculosis del ojo"
  },
  {
    "code": "A18.6",
    "description": "Tuberculosis del o√≠do"
  },
  {
    "code": "A18.7",
    "description": "Tuberculosis de gl√°ndulas suprarrenales (E35.1*)"
  },
  {
    "code": "A18.8",
    "description": "Tuberculosis de otros √≥rganos especificados"
  },
  {
    "code": "A19.0",
    "description": "Tuberculosis miliar aguda de un solo sitio especificado"
  },
  {
    "code": "A19.1",
    "description": "Tuberculosis miliar aguda de sitios m√∫ltiples"
  },
  {
    "code": "A19.2",
    "description": "Tuberculosis miliar aguda, no especificada"
  },
  {
    "code": "A19.8",
    "description": "Otras tuberculosis miliares"
  },
  {
    "code": "A19.9",
    "description": "Tuberculosis miliar, sin otra especificaci√≥n"
  },
  {
    "code": "A20.0",
    "description": "Peste bub√≥nica"
  },
  {
    "code": "A20.1",
    "description": "Peste celulocut√°nea"
  },
  {
    "code": "A20.2",
    "description": "Peste neum√≥nica"
  },
  {
    "code": "A20.3",
    "description": "Meningitis por peste"
  },
  {
    "code": "A20.7",
    "description": "Peste septic√©mica"
  },
  {
    "code": "A20.8",
    "description": "Otras formas de peste"
  },
  {
    "code": "A20.9",
    "description": "Peste, no especificada"
  },
  {
    "code": "A21.0",
    "description": "Tularemia ulceroglandular"
  },
  {
    "code": "A21.1",
    "description": "Tularemia oculoglandular"
  },
  {
    "code": "A21.2",
    "description": "Tularemia pulmonar"
  },
  {
    "code": "A21.3",
    "description": "Tularemia gastrointestinal"
  },
  {
    "code": "A21.7",
    "description": "Tularemia generalizada"
  },
  {
    "code": "A21.8",
    "description": "Otras formas de tularemia"
  },
  {
    "code": "A21.9",
    "description": "Tularemia, no especificada"
  },
  {
    "code": "A22.0",
    "description": "Carbunco cut√°neo"
  },
  {
    "code": "A22.1",
    "description": "Carbunco pulmonar"
  },
  {
    "code": "A22.2",
    "description": "Carbunco gastrointestinal"
  },
  {
    "code": "A22.7",
    "description": "Carbunco septic√©mico"
  },
  {
    "code": "A22.8",
    "description": "Otras formas de carbunco"
  },
  {
    "code": "A22.9",
    "description": "Carbunco, no especificado"
  },
  {
    "code": "A23.0",
    "description": "Brucelosis debida a Brucella melitensis"
  },
  {
    "code": "A23.1",
    "description": "Brucelosis debida a Brucella abortus"
  },
  {
    "code": "A23.2",
    "description": "Brucelosis debida a Brucella suis"
  },
  {
    "code": "A23.3",
    "description": "Brucelosis debida a Brucella canis"
  },
  {
    "code": "A23.8",
    "description": "Otras brucelosis"
  },
  {
    "code": "A23.9",
    "description": "Brucelosis, no especificada"
  },
  {
    "code": "A24.0",
    "description": "Muermo"
  },
  {
    "code": "A24.1",
    "description": "Melioidosis aguda y fulminante"
  },
  {
    "code": "A24.2",
    "description": "Melioidosis subaguda y cr√≥nica"
  },
  {
    "code": "A24.3",
    "description": "Otras melioidosis"
  },
  {
    "code": "A24.4",
    "description": "Melioidosis, no especificada"
  },
  {
    "code": "A25.0",
    "description": "Espirilosis"
  },
  {
    "code": "A25.1",
    "description": "Estreptobacilosis"
  },
  {
    "code": "A25.9",
    "description": "Fiebre por mordedura de rata, no especificada"
  },
  {
    "code": "A26.0",
    "description": "Erisipeloide cut√°neo"
  },
  {
    "code": "A26.7",
    "description": "Septicemia por Erysipelothrix"
  },
  {
    "code": "A26.8",
    "description": "Otras formas de erisipeloide"
  },
  {
    "code": "A26.9",
    "description": "Erisipeloide, no especificada"
  },
  {
    "code": "A27.0",
    "description": "Leptospirosis icterohemorr√°gica"
  },
  {
    "code": "A27.8",
    "description": "Otras formas de leptospirosis"
  },
  {
    "code": "A27.9",
    "description": "Leptospirosis, no especificada"
  },
  {
    "code": "A28.0",
    "description": "Pasteurelosis"
  },
  {
    "code": "A28.1",
    "description": "Enfermedad por rasgu√±o de gato"
  },
  {
    "code": "A28.2",
    "description": "Yersiniosis extraintestinal"
  },
  {
    "code": "A28.8",
    "description": "Otras enfermedades zoon√≥ticas bacterianas especificadas, no clasificadas en otra parte"
  },
  {
    "code": "A28.9",
    "description": "Enfermedad zoon√≥tica bacteriana, sin otra especificaci√≥n"
  },
  {
    "code": "A30.0",
    "description": "Lepra indeterminada"
  },
  {
    "code": "A30.1",
    "description": "Lepra tuberculoide"
  },
  {
    "code": "A30.2",
    "description": "Lepra tuberculoide lim√≠trofe"
  },
  {
    "code": "A30.3",
    "description": "Lepra lim√≠trofe"
  },
  {
    "code": "A30.4",
    "description": "Lepra lepromatosa lim√≠trofe"
  },
  {
    "code": "A30.5",
    "description": "Lepra lepromatosa"
  },
  {
    "code": "A30.8",
    "description": "Otras formas de lepra"
  },
  {
    "code": "A30.9",
    "description": "Lepra, no especificada"
  },
  {
    "code": "A31.0",
    "description": "Infecciones por micobacterias pulmonares"
  },
  {
    "code": "A31.1",
    "description": "Infecci√≥n cut√°nea por micobacterias"
  },
  {
    "code": "A31.8",
    "description": "Otras infecciones por micobacterias"
  },
  {
    "code": "A31.9",
    "description": "Infecci√≥n por micobacteria, no especificada"
  },
  {
    "code": "A32.0",
    "description": "Listeriosis cut√°nea"
  },
  {
    "code": "A32.1",
    "description": "Meningitis y meningoencefalitis listeriana"
  },
  {
    "code": "A32.7",
    "description": "Septicemia listeriana"
  },
  {
    "code": "A32.8",
    "description": "Otras formas de listeriosis"
  },
  {
    "code": "A32.9",
    "description": "Listeriosis, no especificada"
  },
  {
    "code": "A36.0",
    "description": "Difteria far√≠ngea"
  },
  {
    "code": "A36.1",
    "description": "Difteria nasofar√≠ngea"
  },
  {
    "code": "A36.2",
    "description": "Difteria lar√≠ngea"
  },
  {
    "code": "A36.3",
    "description": "Difteria cut√°nea"
  },
  {
    "code": "A36.8",
    "description": "Otras difterias"
  },
  {
    "code": "A36.9",
    "description": "Difteria, no especificada"
  },
  {
    "code": "A37.0",
    "description": "Tos ferina debida a Bordetella pertussis"
  },
  {
    "code": "A37.1",
    "description": "Tos ferina debida a Bordetella parapertussis"
  },
  {
    "code": "A37.8",
    "description": "Tos ferina debida a otras especies de Bordetella"
  },
  {
    "code": "A37.9",
    "description": "Tos ferina, no especificada"
  },
  {
    "code": "A39.0",
    "description": "Meningitis meningoc√≥cica (G01*)"
  },
  {
    "code": "A39.1",
    "description": "S√≠ndrome de Waterhouse-Friderichsen (E35.1*)"
  },
  {
    "code": "A39.2",
    "description": "Meningococemia aguda"
  },
  {
    "code": "A39.3",
    "description": "Meningococemia cr√≥nica"
  },
  {
    "code": "A39.4",
    "description": "Meningococemia, no especificada"
  },
  {
    "code": "A39.5",
    "description": "Enfermedad card√≠aca debida a meningococo"
  },
  {
    "code": "A39.8",
    "description": "Otras infecciones meningoc√≥cicas:"
  },
  {
    "code": "A39.9",
    "description": "Infecci√≥n meningoc√≥cica, no especificada"
  },
  {
    "code": "A40.0",
    "description": "Septicemia debida a estreptococo, grupo A"
  },
  {
    "code": "A40.1",
    "description": "Septicemia debida a estreptococo, grupo B"
  },
  {
    "code": "A40.2",
    "description": "Septicemia debida a estreptococo, grupo D"
  },
  {
    "code": "A40.3",
    "description": "Septicemia debida a Streptococcus pneumoniae"
  },
  {
    "code": "A40.8",
    "description": "Otras septicemias estreptoc√≥cicas"
  },
  {
    "code": "A40.9",
    "description": "Septicemia estreptoc√≥cica, no especificada"
  },
  {
    "code": "A41.0",
    "description": "Septicemia debida a Staphylococcus aureus"
  },
  {
    "code": "A41.1",
    "description": "Septicemia debida a otro estafilococo especificado"
  },
  {
    "code": "A41.2",
    "description": "Septicemia debida a estafilococo no especificado"
  },
  {
    "code": "A41.3",
    "description": "Septicemia debida a Haemophilus influenzae"
  },
  {
    "code": "A41.4",
    "description": "Septicemia debida a anaerobios"
  },
  {
    "code": "A41.5",
    "description": "Septicemia debida a otros organismos gramnegativos"
  },
  {
    "code": "A41.8",
    "description": "Otras septicemias especificadas"
  },
  {
    "code": "A41.9",
    "description": "Septicemia, no especificada"
  },
  {
    "code": "A42.0",
    "description": "Actinomicosis pulmonar"
  },
  {
    "code": "A42.1",
    "description": "Actinomicosis abdominal"
  },
  {
    "code": "A42.2",
    "description": "Actinomicosis cervicofacial"
  },
  {
    "code": "A42.7",
    "description": "Septicemia actinomic√≥tica"
  },
  {
    "code": "A42.8",
    "description": "Otras formas de actinomicosis"
  },
  {
    "code": "A42.9",
    "description": "Actinomicosis, sin otra especificaci√≥n"
  },
  {
    "code": "A43.0",
    "description": "Nocardiosis pulmonar"
  },
  {
    "code": "A43.1",
    "description": "Nocardiosis cut√°nea"
  },
  {
    "code": "A43.8",
    "description": "Otras formas de nocardiosis"
  },
  {
    "code": "A43.9",
    "description": "Nocardiosis, no especificada"
  },
  {
    "code": "A44.0",
    "description": "Bartonelosis sist√©mica"
  },
  {
    "code": "A44.1",
    "description": "Bartonelosis cut√°nea y mucocut√°nea"
  },
  {
    "code": "A44.8",
    "description": "Otras formas de bartonelosis"
  },
  {
    "code": "A44.9",
    "description": "Bartonelosis, no especificada"
  },
  {
    "code": "A48.0",
    "description": "Gangrena gaseosa"
  },
  {
    "code": "A48.1",
    "description": "Enfermedad de los legionarios"
  },
  {
    "code": "A48.2",
    "description": "Enfermedad de los legionarios no neum√≥nica [fiebre de Pontiac]"
  },
  {
    "code": "A48.3",
    "description": "S√≠ndrome del choque t√≥xico"
  },
  {
    "code": "A48.4",
    "description": "Fiebre purp√∫rica brasile√±a"
  },
  {
    "code": "A48.8",
    "description": "Otras enfermedades bacterianas especificadas"
  },
  {
    "code": "A49.0",
    "description": "Infecci√≥n estafiloc√≥cica, sin otra especificaci√≥n"
  },
  {
    "code": "A49.1",
    "description": "Infecci√≥n estreptoc√≥cica, sin otra especificaci√≥n"
  },
  {
    "code": "A49.2",
    "description": "Infecci√≥n por Haemophilus influenzae, sin otra especificaci√≥n"
  },
  {
    "code": "A49.3",
    "description": "Infecci√≥n por micoplasma, sin otra especificaci√≥n"
  },
  {
    "code": "A49.8",
    "description": "Otras infecciones bacterianas de sitio no especificado"
  },
  {
    "code": "A49.9",
    "description": "Infecci√≥n bacteriana, no especificada"
  },
  {
    "code": "A50.0",
    "description": "S√≠filis cong√©nita precoz, sintom√°tica"
  },
  {
    "code": "A50.1",
    "description": "S√≠filis cong√©nita precoz, latente"
  },
  {
    "code": "A50.2",
    "description": "S√≠filis cong√©nita precoz, sin otra especificaci√≥n"
  },
  {
    "code": "A50.3",
    "description": "Oculopat√≠a sifil√≠tica cong√©nita tard√≠a"
  },
  {
    "code": "A50.4",
    "description": "Neuros√≠filis cong√©nita tard√≠a [neuros√≠filis juvenil]"
  },
  {
    "code": "A50.5",
    "description": "Otras formas de s√≠filis cong√©nita tard√≠a, sintom√°tica"
  },
  {
    "code": "A50.6",
    "description": "S√≠filis cong√©nita tard√≠a, latente"
  },
  {
    "code": "A50.7",
    "description": "S√≠filis cong√©nita tard√≠a, sin otra especificaci√≥n"
  },
  {
    "code": "A50.9",
    "description": "S√≠filis cong√©nita, sin otra especificaci√≥n"
  },
  {
    "code": "A51.0",
    "description": "S√≠filis genital primaria"
  },
  {
    "code": "A51.1",
    "description": "S√≠filis primaria anal"
  },
  {
    "code": "A51.2",
    "description": "S√≠filis primaria en otros sitios"
  },
  {
    "code": "A51.3",
    "description": "S√≠filis secundaria de piel y membranas mucosas"
  },
  {
    "code": "A51.4",
    "description": "Otras s√≠filis secundarias"
  },
  {
    "code": "A51.5",
    "description": "S√≠filis precoz, latente"
  },
  {
    "code": "A51.9",
    "description": "S√≠filis precoz, sin otra especificaci√≥n"
  },
  {
    "code": "A52.0",
    "description": "S√≠filis cardiovascular"
  },
  {
    "code": "A52.1",
    "description": "Neuros√≠filis sintom√°tica"
  },
  {
    "code": "A52.2",
    "description": "Neuros√≠filis asintom√°tica"
  },
  {
    "code": "A52.3",
    "description": "Neuros√≠filis no especificada"
  },
  {
    "code": "A52.7",
    "description": "Otras s√≠filis tard√≠as sintom√°ticas"
  },
  {
    "code": "A52.8",
    "description": "S√≠filis tard√≠a, latente"
  },
  {
    "code": "A52.9",
    "description": "S√≠filis tard√≠a, no especificada"
  },
  {
    "code": "A53.0",
    "description": "S√≠filis latente, no especificada como precoz o tard√≠a"
  },
  {
    "code": "A53.9",
    "description": "S√≠filis, no especificada"
  },
  {
    "code": "A54.0",
    "description": "Infecci√≥n gonoc√≥cica del tracto genitourinario inferior sin absceso periuretral o de gl√°ndula accesoria"
  },
  {
    "code": "A54.1",
    "description": "Infecci√≥n gonoc√≥cica del tracto genitourinario inferior con absceso periuretral y de gl√°ndulas accesorias"
  },
  {
    "code": "A54.2",
    "description": "Pelviperitonitis gonoc√≥cica y otras infecciones gonoc√≥cicas genitourinarias"
  },
  {
    "code": "A54.3",
    "description": "Infecci√≥n gonoc√≥cica del ojo"
  },
  {
    "code": "A54.4",
    "description": "Infecci√≥n gonoc√≥cica del sistema osteomuscular"
  },
  {
    "code": "A54.5",
    "description": "Faringitis gonoc√≥cica"
  },
  {
    "code": "A54.6",
    "description": "Infecci√≥n gonoc√≥cica del ano y del recto"
  },
  {
    "code": "A54.8",
    "description": "Otras infecciones gonoc√≥cicas"
  },
  {
    "code": "A54.9",
    "description": "Infecci√≥n gonoc√≥cica, no especificada"
  },
  {
    "code": "A56.0",
    "description": "Infecci√≥n del tracto genitourinario inferior debida a clamidias"
  },
  {
    "code": "A56.1",
    "description": "Infecci√≥n del pelviperitoneo y otros √≥rganos genitourinarios debida a clamidias"
  },
  {
    "code": "A56.2",
    "description": "Infecciones del tracto genitourinario debidas a clamidias, sin otra especificaci√≥n"
  },
  {
    "code": "A56.3",
    "description": "Infecci√≥n del ano y del recto debida a clamidias"
  },
  {
    "code": "A56.4",
    "description": "Infecci√≥n de faringe debida a clamidias"
  },
  {
    "code": "A56.8",
    "description": "Infecci√≥n de transmisi√≥n sexual de otros sitios debida a clamidias"
  },
  {
    "code": "A59.0",
    "description": "Tricomoniasis urogenital"
  },
  {
    "code": "A59.8",
    "description": "Tricomoniasis de otros sitios"
  },
  {
    "code": "A59.9",
    "description": "Tricomoniasis, no especificada"
  },
  {
    "code": "A60.0",
    "description": "Infecci√≥n de genitales y trayecto urogenital debida a virus del herpes [herpes simple]"
  },
  {
    "code": "A60.1",
    "description": "Infecci√≥n de la piel perianal y recto por virus del herpes simple"
  },
  {
    "code": "A60.9",
    "description": "Infecci√≥n anogenital por virus del herpes simple, sin otra especificaci√≥n"
  },
  {
    "code": "A63.0",
    "description": "Verrugas (ven√©reas) anogenitales"
  },
  {
    "code": "A63.8",
    "description": "Otras enfermedades de transmisi√≥n predominantemente sexual, especificadas"
  },
  {
    "code": "A66.0",
    "description": "Lesiones iniciales de frambesia"
  },
  {
    "code": "A66.1",
    "description": "Lesiones papilomatosas m√∫ltiples y frambesia con paso de cangrejo"
  },
  {
    "code": "A66.2",
    "description": "Otras lesiones precoces de la piel en la frambesia"
  },
  {
    "code": "A66.3",
    "description": "Hiperqueratosis de frambesia"
  },
  {
    "code": "A66.4",
    "description": "Goma y √∫lceras de frambesia"
  },
  {
    "code": "A66.5",
    "description": "Gangosa"
  },
  {
    "code": "A66.6",
    "description": "Lesiones framb√©sicas de los huesos y de las articulaciones"
  },
  {
    "code": "A66.7",
    "description": "Otras manifestaciones de frambesia"
  },
  {
    "code": "A66.8",
    "description": "Frambesia latente"
  },
  {
    "code": "A66.9",
    "description": "Frambesia, no especificada"
  },
  {
    "code": "A67.0",
    "description": "Lesiones primarias de la pinta"
  },
  {
    "code": "A67.1",
    "description": "Lesiones intermedias de la pinta"
  },
  {
    "code": "A67.2",
    "description": "Lesiones tard√≠as de la pinta"
  },
  {
    "code": "A67.3",
    "description": "Lesiones mixtas de la pinta"
  },
  {
    "code": "A67.9",
    "description": "Pinta, no especificada"
  },
  {
    "code": "A68.0",
    "description": "Fiebre recurrente transmitida por piojos"
  },
  {
    "code": "A68.1",
    "description": "Fiebre recurrente transmitida por garrapatas"
  },
  {
    "code": "A68.9",
    "description": "Fiebre recurrente, no especificada"
  },
  {
    "code": "A69.0",
    "description": "Estomatitis ulcerativa necrotizante"
  },
  {
    "code": "A69.1",
    "description": "Otras infecciones de Vincent"
  },
  {
    "code": "A69.2",
    "description": "Enfermedad de Lyme"
  },
  {
    "code": "A69.8",
    "description": "Otras infecciones espec√≠ficadas por espiroquetas"
  },
  {
    "code": "A69.9",
    "description": "Infecci√≥n por espiroqueta, no especificada"
  },
  {
    "code": "A71.0",
    "description": "Estado inicial de tracoma"
  },
  {
    "code": "A71.1",
    "description": "Estado activo de tracoma"
  },
  {
    "code": "A71.9",
    "description": "Tracoma, no especificado"
  },
  {
    "code": "A74.0",
    "description": "Conjuntivitis por clamidias (H13.1*)"
  },
  {
    "code": "A74.8",
    "description": "Otras enfermedades por clamidias"
  },
  {
    "code": "A74.9",
    "description": "Infecci√≥n por clamidias, no especificada"
  },
  {
    "code": "A75.0",
    "description": "Tifus epid√©mico debido a Rickettsia prowazekii transmitido por piojos"
  },
  {
    "code": "A75.1",
    "description": "Tifus recrudescente [enfermedad de Brill]"
  },
  {
    "code": "A75.2",
    "description": "Tifus debido a Rickettsia typhi"
  },
  {
    "code": "A75.3",
    "description": "Tifus debido a Rickettsia tsutsugamushi"
  },
  {
    "code": "A75.9",
    "description": "Tifus, no especificado"
  },
  {
    "code": "A77.0",
    "description": "Fiebre maculosa debida a Rickettsia rickettsii"
  },
  {
    "code": "A77.1",
    "description": "Fiebre maculosa debida a Rickettsia conorii"
  },
  {
    "code": "A77.2",
    "description": "Fiebre maculosa debida a Rickettsia siberica"
  },
  {
    "code": "A77.3",
    "description": "Fiebre maculosa debida a Rickettsia australis"
  },
  {
    "code": "A77.8",
    "description": "Otras fiebres maculosas"
  },
  {
    "code": "A77.9",
    "description": "Fiebre maculosa, no especificada"
  },
  {
    "code": "A79.0",
    "description": "Fiebre de las trincheras"
  },
  {
    "code": "A79.1",
    "description": "Rickettsiosis pustulosa debida a Rickettsia akari"
  },
  {
    "code": "A79.8",
    "description": "Otras rickettsiosis especificadas"
  },
  {
    "code": "A79.9",
    "description": "Rickettsiosis, no especificada"
  },
  {
    "code": "A80.0",
    "description": "Poliomielitis aguda paral√≠tica, asociada a vacuna"
  },
  {
    "code": "A80.1",
    "description": "Poliomielitis aguda paral√≠tica debida a virus salvaje importado"
  },
  {
    "code": "A80.2",
    "description": "Poliomielitis aguda paral√≠tica debida a virus salvaje aut√≥ctono"
  },
  {
    "code": "A80.3",
    "description": "Otras poliomielitis agudas paral√≠ticas, y las no especificadas"
  },
  {
    "code": "A80.4",
    "description": "Poliomielitis aguda no paral√≠tica"
  },
  {
    "code": "A80.9",
    "description": "Poliomielitis aguda, sin otra especificaci√≥n"
  },
  {
    "code": "A81.0",
    "description": "Enfermedad de Creutzfeldt-Jakob"
  },
  {
    "code": "A81.1",
    "description": "Panencefalitis esclerosante subaguda"
  },
  {
    "code": "A81.2",
    "description": "Leucoencefalopat√≠a multifocal progresiva"
  },
  {
    "code": "A81.8",
    "description": "Otras infecciones del sistema nervioso central por virus at√≠pico"
  },
  {
    "code": "A81.9",
    "description": "Infecciones del sistema nervioso central por virus at√≠pico, sin otra especificaci√≥n"
  },
  {
    "code": "A82.0",
    "description": "Rabia selv√°tica"
  },
  {
    "code": "A82.1",
    "description": "Rabia urbana"
  },
  {
    "code": "A82.9",
    "description": "Rabia, sin otra especificaci√≥n"
  },
  {
    "code": "A83.0",
    "description": "Encefalitis japonesa"
  },
  {
    "code": "A83.1",
    "description": "Encefalitis equina del oeste"
  },
  {
    "code": "A83.2",
    "description": "Encefalitis equina del este"
  },
  {
    "code": "A83.3",
    "description": "Encefalitis de San Luis"
  },
  {
    "code": "A83.4",
    "description": "Encefalitis australiana"
  },
  {
    "code": "A83.5",
    "description": "Encefalitis de California"
  },
  {
    "code": "A83.6",
    "description": "Enfermedad por virus Roc√≠o"
  },
  {
    "code": "A83.8",
    "description": "Otras encefalitis virales transmitidas por mosquitos"
  },
  {
    "code": "A83.9",
    "description": "Encefalitis viral transmitida por mosquitos, sin otra especificaci√≥n"
  },
  {
    "code": "A84.0",
    "description": "Encefalitis del Lejano Oriente transmitida por garrapatas [encefalitis primaveroestival rusa]"
  },
  {
    "code": "A84.1",
    "description": "Encefalitis centroeuropea transmitida por garrapatas"
  },
  {
    "code": "A84.8",
    "description": "Otras encefalitis virales transmitidas por garrapatas"
  },
  {
    "code": "A84.9",
    "description": "Encefalitis viral transmitida por garrapatas, sin otra especificaci√≥n"
  },
  {
    "code": "A85.0",
    "description": "Encefalitis enteroviral (G05.1*)"
  },
  {
    "code": "A85.1",
    "description": "Encefalitis por adenovirus (G05.1*)"
  },
  {
    "code": "A85.2",
    "description": "Encefalitis viral transmitida por artr√≥podos, sin otra especificaci√≥n"
  },
  {
    "code": "A85.8",
    "description": "Otras encefalitis virales especificadas"
  },
  {
    "code": "A87.0",
    "description": "Meningitis enteroviral (G02.0*)"
  },
  {
    "code": "A87.1",
    "description": "Meningitis debida a adenovirus (G02.0*)"
  },
  {
    "code": "A87.2",
    "description": "Coriomeningitis linfoc√≠tica"
  },
  {
    "code": "A87.8",
    "description": "Otras meningitis virales"
  },
  {
    "code": "A87.9",
    "description": "Meningitis viral, sin otra especificaci√≥n"
  },
  {
    "code": "A88.0",
    "description": "Fiebre exantem√°tica enteroviral [exantema de Boston]"
  },
  {
    "code": "A88.1",
    "description": "V√©rtigo epid√©mico"
  },
  {
    "code": "A88.8",
    "description": "Otras infecciones virales especificadas del sistema nervioso central"
  },
  {
    "code": "A92.0",
    "description": "Enfermedad por virus Chikungunya"
  },
  {
    "code": "A92.1",
    "description": "Fiebre de O'nyong-nyong"
  },
  {
    "code": "A92.2",
    "description": "Fiebre equina venezolana"
  },
  {
    "code": "A92.3",
    "description": "Fiebre del oeste del Nilo"
  },
  {
    "code": "A92.4",
    "description": "Fiebre del valle del Rift"
  },
  {
    "code": "A92.8",
    "description": "Otras fiebres virales especificadas transmitidas por mosquitos"
  },
  {
    "code": "A92.9",
    "description": "Fiebre viral transmitida por mosquito, sin otra especificaci√≥n"
  },
  {
    "code": "A93.0",
    "description": "Enfermedad por virus de Oropouche"
  },
  {
    "code": "A93.1",
    "description": "Fiebre transmitida por fleb√≥tomos"
  },
  {
    "code": "A93.2",
    "description": "Fiebre de Colorado transmitida por garrapatas"
  },
  {
    "code": "A93.8",
    "description": "Otras fiebres virales especificadas transmitidas por artr√≥podos"
  },
  {
    "code": "A95.0",
    "description": "Fiebre amarilla selv√°tica"
  },
  {
    "code": "A95.1",
    "description": "Fiebre amarilla urbana"
  },
  {
    "code": "A95.9",
    "description": "Fiebre amarilla, no especificada"
  },
  {
    "code": "A96.0",
    "description": "Fiebre hemorr√°gica de Jun√≠n"
  },
  {
    "code": "A96.1",
    "description": "Fiebre hemorr√°gica de Machupo"
  },
  {
    "code": "A96.2",
    "description": "Fiebre de Lassa"
  },
  {
    "code": "A96.8",
    "description": "Otras fiebres hemorr√°gicas por arenavirus"
  },
  {
    "code": "A96.9",
    "description": "Fiebre hemorr√°gica por arenavirus, sin otra especificaci√≥n"
  },
  {
    "code": "A98.0",
    "description": "Fiebre hemorr√°gica de Crimea-Congo"
  },
  {
    "code": "A98.1",
    "description": "Fiebre hemorr√°gica de Omsk"
  },
  {
    "code": "A98.2",
    "description": "Enfermedad de la selva de Kyasanur"
  },
  {
    "code": "A98.3",
    "description": "Enfermedad por el virus de Marburg"
  },
  {
    "code": "A98.4",
    "description": "Enfermedad por el virus de Ebola"
  },
  {
    "code": "A98.5",
    "description": "Fiebres hemorr√°gicas con s√≠ndrome renal"
  },
  {
    "code": "A98.8",
    "description": "Otras fiebres hemorr√°gicas virales especificadas"
  },
  {
    "code": "B00.0",
    "description": "Eczema herp√©tico"
  },
  {
    "code": "B00.1",
    "description": "Dermatitis vesicular herp√©tica"
  },
  {
    "code": "B00.2",
    "description": "Gingivoestomatitis y faringoamigdalitis herp√©tica"
  },
  {
    "code": "B00.3",
    "description": "Meningitis herp√©tica (G02.0*)"
  },
  {
    "code": "B00.4",
    "description": "Encefalitis herp√©tica (G05.1*)"
  },
  {
    "code": "B00.5",
    "description": "Oculopat√≠a herp√©tica"
  },
  {
    "code": "B00.7",
    "description": "Enfermedad herp√©tica diseminada"
  },
  {
    "code": "B00.8",
    "description": "Otras formas de infecciones herp√©ticas"
  },
  {
    "code": "B00.9",
    "description": "Infecci√≥n debida al virus del herpes, no especificada"
  },
  {
    "code": "B01.0",
    "description": "Meningitis debida a varicela (G02.0*)"
  },
  {
    "code": "B01.1",
    "description": "Encefalitis debida a varicela (G05.1*)"
  },
  {
    "code": "B01.2",
    "description": "Neumon√≠a debida a varicela (J17.1*)"
  },
  {
    "code": "B01.8",
    "description": "Varicela con otras complicaciones"
  },
  {
    "code": "B01.9",
    "description": "Varicela sin complicaciones"
  },
  {
    "code": "B02.0",
    "description": "Encefalitis debida a herpes zoster (G05.1*)"
  },
  {
    "code": "B02.1",
    "description": "Meningitis debida a herpes zoster (G02.0*)"
  },
  {
    "code": "B02.2",
    "description": "Herpes zoster con otros compromisos del sistema nervioso"
  },
  {
    "code": "B02.3",
    "description": "Herpes zoster ocular"
  },
  {
    "code": "B02.7",
    "description": "Herpes zoster diseminado"
  },
  {
    "code": "B02.8",
    "description": "Herpes zoster con otras complicaciones"
  },
  {
    "code": "B02.9",
    "description": "Herpes zoster sin complicaciones"
  },
  {
    "code": "B05.0",
    "description": "Sarampi√≥n complicado con encefalitis (G05.1*)"
  },
  {
    "code": "B05.1",
    "description": "Sarampi√≥n complicado con meningitis (G02.0*)"
  },
  {
    "code": "B05.2",
    "description": "Sarampi√≥n complicado con neumon√≠a (J17.1*)"
  },
  {
    "code": "B05.3",
    "description": "Sarampi√≥n complicado con otitis media (H67.1*)"
  },
  {
    "code": "B05.4",
    "description": "Sarampi√≥n con complicaciones intestinales"
  },
  {
    "code": "B05.8",
    "description": "Sarampi√≥n con otras complicaciones"
  },
  {
    "code": "B05.9",
    "description": "Sarampi√≥n sin complicaciones"
  },
  {
    "code": "B06.0",
    "description": "Rub√©ola con complicaciones neurol√≥gicas"
  },
  {
    "code": "B06.8",
    "description": "Rub√©ola con otras complicaciones"
  },
  {
    "code": "B06.9",
    "description": "Rub√©ola sin complicaciones"
  },
  {
    "code": "B08.0",
    "description": "Otras infecciones debidas a ortopoxvirus"
  },
  {
    "code": "B08.1",
    "description": "Molusco contagioso"
  },
  {
    "code": "B08.2",
    "description": "Exantema s√∫bito [sexta enfermedad]"
  },
  {
    "code": "B08.3",
    "description": "Eritema infeccioso [quinta enfermedad]"
  },
  {
    "code": "B08.4",
    "description": "Estomatitis vesicular enteroviral con exantema"
  },
  {
    "code": "B08.5",
    "description": "Faringitis vesicular enterov√≠rica"
  },
  {
    "code": "B08.8",
    "description": "Otras infecciones virales especificadas, caracterizadas por lesiones de la piel y de las membranas mucosas"
  },
  {
    "code": "B15.0",
    "description": "Hepatitis aguda tipo A, con coma hep√°tico"
  },
  {
    "code": "B15.9",
    "description": "Hepatitis aguda tipo A, sin coma hep√°tico"
  },
  {
    "code": "B16.0",
    "description": "Hepatitis aguda tipo B, con agente delta (coinfecci√≥n), con coma hep√°tico"
  },
  {
    "code": "B16.1",
    "description": "Hepatitis aguda tipo B, con agente delta (coinfecci√≥n), sin coma hep√°tico"
  },
  {
    "code": "B16.2",
    "description": "Hepatitis aguda tipo B, sin agente delta, con coma hep√°tico"
  },
  {
    "code": "B16.9",
    "description": "Hepatitis aguda tipo B, sin agente delta y sin coma hep√°tico"
  },
  {
    "code": "B17.0",
    "description": "Infecci√≥n (superinfecci√≥n) aguda por agente delta en el portador de hepatitis B"
  },
  {
    "code": "B17.1",
    "description": "Hepatitis aguda tipo C"
  },
  {
    "code": "B17.2",
    "description": "Hepatitis aguda tipo E"
  },
  {
    "code": "B17.8",
    "description": "Otras hepatitis virales agudas especificadas"
  },
  {
    "code": "B18.0",
    "description": "Hepatitis viral tipo B cr√≥nica, con agente delta"
  },
  {
    "code": "B18.1",
    "description": "Hepatitis viral tipo B cr√≥nica, sin agente delta"
  },
  {
    "code": "B18.2",
    "description": "Hepatitis viral tipo C cr√≥nica"
  },
  {
    "code": "B18.8",
    "description": "Otras hepatitis virales cr√≥nicas"
  },
  {
    "code": "B18.9",
    "description": "Hepatitis viral cr√≥nica, sin otra especificaci√≥n"
  },
  {
    "code": "B19.0",
    "description": "Hepatitis viral no especificada con coma"
  },
  {
    "code": "B19.9",
    "description": "Hepatitis viral no especificada sin coma"
  },
  {
    "code": "B20.0",
    "description": "Enfermedad por VIH, resultante en infecci√≥n por micobacterias"
  },
  {
    "code": "B20.1",
    "description": "Enfermedad por VIH, resultante en otras infecciones bacterianas"
  },
  {
    "code": "B20.2",
    "description": "Enfermedad por VIH, resultante en enfermedad por citomegalovirus"
  },
  {
    "code": "B20.3",
    "description": "Enfermedad por VIH, resultante en otras infecciones virales"
  },
  {
    "code": "B20.4",
    "description": "Enfermedad por VIH, resultante en candidiasis"
  },
  {
    "code": "B20.5",
    "description": "Enfermedad por VIH, resultante en otras micosis"
  },
  {
    "code": "B20.6",
    "description": "Enfermedad por VIH, resultante en neumon√≠a por Pneumocystis carinii"
  },
  {
    "code": "B20.7",
    "description": "Enfermedad por VIH, resultante en infecciones m√∫ltiples"
  },
  {
    "code": "B20.8",
    "description": "Enfermedad por VIH, resultante en otras enfermedades infecciosas o parasitarias"
  },
  {
    "code": "B20.9",
    "description": "Enfermedad por VIH, resultante en enfermedad infecciosa o parasitaria no especificada"
  },
  {
    "code": "B21.0",
    "description": "Enfermedad por VIH, resultante en sarcoma de Kaposi"
  },
  {
    "code": "B21.1",
    "description": "Enfermedad por VIH, resultante en linfoma de Burkitt"
  },
  {
    "code": "B21.2",
    "description": "Enfermedad por VIH, resultante en otros tipos de linfoma no Hodgkin"
  },
  {
    "code": "B21.3",
    "description": "Enfermedad por VIH, resultante en otros tumores malignos del tejido linfoide, hematopoy√©tico y tejidos relacionados"
  },
  {
    "code": "B21.7",
    "description": "Enfermedad por VIH, resultante en tumores malignos m√∫ltiples"
  },
  {
    "code": "B21.8",
    "description": "Enfermedad por VIH, resultante en otros tumores malignos"
  },
  {
    "code": "B21.9",
    "description": "Enfermedad por VIH, resultante en tumores malignos no especificados"
  },
  {
    "code": "B22.0",
    "description": "Enfermedad por VIH, resultante en encefalopat√≠a"
  },
  {
    "code": "B22.1",
    "description": "Enfermedad por VIH, resultante en neumonitis linfoide intersticial"
  },
  {
    "code": "B22.2",
    "description": "Enfermedad por VIH, resultante en s√≠ndrome caqu√©ctico"
  },
  {
    "code": "B22.7",
    "description": "Enfermedad por VIH, resultante en enfermedades m√∫ltiples clasificadas en otra parte"
  },
  {
    "code": "B23.0",
    "description": "S√≠ndrome de infecci√≥n aguda debida a VIH"
  },
  {
    "code": "B23.1",
    "description": "Enfermedad por VIH, resultante en linfadenopat√≠a generalizada (persistente)"
  },
  {
    "code": "B23.2",
    "description": "Enfermedad por VIH, resultante en anormalidades inmunol√≥gicas y hematol√≥gicas, no clasificadas en otra parte"
  },
  {
    "code": "B23.8",
    "description": "Enfermedad por VIH, resultante en otras afecciones especificadas"
  },
  {
    "code": "B25.0",
    "description": "Neumonitis debida a virus citomeg√°lico (J17.1*)"
  },
  {
    "code": "B25.1",
    "description": "Hepatitis debida a virus citomeg√°lico (K77.0*)"
  },
  {
    "code": "B25.2",
    "description": "Pancreatitis debida a virus citomeg√°lico (K87.1*)"
  },
  {
    "code": "B25.8",
    "description": "Otras enfermedades debidas a virus citomeg√°lico"
  },
  {
    "code": "B25.9",
    "description": "Enfermedad por virus citomeg√°lico, no especificada"
  },
  {
    "code": "B26.0",
    "description": "Orquitis por parotiditis (N51.1*)"
  },
  {
    "code": "B26.1",
    "description": "Meningitis por parotiditis (G02.0*)"
  },
  {
    "code": "B26.2",
    "description": "Encefalitis por parotiditis (G05.1*)"
  },
  {
    "code": "B26.3",
    "description": "Pancreatitis por parotiditis (K87.1*)"
  },
  {
    "code": "B26.8",
    "description": "Parotiditis infecciosa con otras complicaciones"
  },
  {
    "code": "B26.9",
    "description": "Parotiditis, sin complicaciones"
  },
  {
    "code": "B27.0",
    "description": "Mononucleosis debida a herpes virus gamma"
  },
  {
    "code": "B27.1",
    "description": "Mononucleosis por citomegalovirus"
  },
  {
    "code": "B27.8",
    "description": "Otras mononucleosis infecciosas"
  },
  {
    "code": "B27.9",
    "description": "Mononucleosis infecciosa, no especificada"
  },
  {
    "code": "B30.0",
    "description": "Queratoconjuntivitis debida a adenovirus (H19.2*)"
  },
  {
    "code": "B30.1",
    "description": "Conjuntivitis debida a adenovirus (H13.1*)"
  },
  {
    "code": "B30.2",
    "description": "Faringoconjuntivitis viral"
  },
  {
    "code": "B30.3",
    "description": "Conjuntivitis epid√©mica aguda hemorr√°gica (enterov√≠rica) (H13.1*)"
  },
  {
    "code": "B30.8",
    "description": "Otras conjuntivitis virales (H13.1*)"
  },
  {
    "code": "B30.9",
    "description": "Conjuntivitis viral, sin otra especificaci√≥n"
  },
  {
    "code": "B33.0",
    "description": "Mialgia epid√©mica"
  },
  {
    "code": "B33.1",
    "description": "Enfermedad del r√≠o Ross"
  },
  {
    "code": "B33.2",
    "description": "Carditis viral"
  },
  {
    "code": "B33.3",
    "description": "Infecciones debidas a retrovirus, no clasificadas en otra parte"
  },
  {
    "code": "B33.8",
    "description": "Otras enfermedades virales especificadas"
  },
  {
    "code": "B34.0",
    "description": "Infecci√≥n debida a adenovirus, sin otra especificaci√≥n"
  },
  {
    "code": "B34.1",
    "description": "Infecci√≥n debida a enterovirus, sin otra especificaci√≥n"
  },
  {
    "code": "B34.2",
    "description": "Infecci√≥n debida a Coronavirus, sin otra especificaci√≥n"
  },
  {
    "code": "B34.3",
    "description": "Infecci√≥n debida a Parvovirus, sin otra especificaci√≥n"
  },
  {
    "code": "B34.4",
    "description": "Infecci√≥n debida a Papovavirus, sin otra especificaci√≥n"
  },
  {
    "code": "B34.8",
    "description": "Otras infecciones virales de sitio no especificado"
  },
  {
    "code": "B34.9",
    "description": "Infecci√≥n viral, no especificada"
  },
  {
    "code": "B35.0",
    "description": "Ti√±a de la barba y del cuero cabelludo"
  },
  {
    "code": "B35.1",
    "description": "Ti√±a de las u√±as"
  },
  {
    "code": "B35.2",
    "description": "Ti√±a de la mano"
  },
  {
    "code": "B35.3",
    "description": "Ti√±a del pie [Tinea pedis]"
  },
  {
    "code": "B35.4",
    "description": "Ti√±a del cuerpo [Tinea corporis]"
  },
  {
    "code": "B35.5",
    "description": "Ti√±a imbricada [Tinea imbricata]"
  },
  {
    "code": "B35.6",
    "description": "Ti√±a inguinal [Tinea cruris]"
  },
  {
    "code": "B35.8",
    "description": "Otras dermatofitosis"
  },
  {
    "code": "B35.9",
    "description": "Dermatofitosis, no especificada"
  },
  {
    "code": "B36.0",
    "description": "Pitiriasis versicolor"
  },
  {
    "code": "B36.1",
    "description": "Ti√±a negra"
  },
  {
    "code": "B36.2",
    "description": "Piedra blanca"
  },
  {
    "code": "B36.3",
    "description": "Piedra negra"
  },
  {
    "code": "B36.8",
    "description": "Otras micosis superficiales especificadas"
  },
  {
    "code": "B36.9",
    "description": "Micosis superficial, sin otra especificaci√≥n"
  },
  {
    "code": "B37.0",
    "description": "Estomatitis candidi√°sica"
  },
  {
    "code": "B37.1",
    "description": "Candidiasis pulmonar"
  },
  {
    "code": "B37.2",
    "description": "Candidiasis de la piel y las u√±as"
  },
  {
    "code": "B37.3",
    "description": "Candidiasis de la vulva y de la vagina (N77.1*)"
  },
  {
    "code": "B37.4",
    "description": "Candidiasis de otras localizaciones urogenitales"
  },
  {
    "code": "B37.5",
    "description": "Meningitis debida a candida (G02.1*)"
  },
  {
    "code": "B37.6",
    "description": "Endocarditis debida a candida (I39.8*)"
  },
  {
    "code": "B37.7",
    "description": "Septicemia debida a candida"
  },
  {
    "code": "B37.8",
    "description": "Candidiasis de otros sitios"
  },
  {
    "code": "B37.9",
    "description": "Candidiasis, no especificada"
  },
  {
    "code": "B38.0",
    "description": "Coccidioidomicosis pulmonar aguda"
  },
  {
    "code": "B38.1",
    "description": "Coccidioidomicosis pulmonar cr√≥nica"
  },
  {
    "code": "B38.2",
    "description": "Coccidioidomicosis pulmonar, sin otra especificaci√≥n"
  },
  {
    "code": "B38.3",
    "description": "Coccidioidomicosis cut√°nea"
  },
  {
    "code": "B38.4",
    "description": "Meningitis debida a coccidioidomicosis (G02.1*)"
  },
  {
    "code": "B38.7",
    "description": "Coccidioidomicosis diseminada"
  },
  {
    "code": "B38.8",
    "description": "Otras formas de coccidioidomicosis"
  },
  {
    "code": "B38.9",
    "description": "Coccidioidomicosis, no especificada"
  },
  {
    "code": "B39.0",
    "description": "Infecci√≥n pulmonar aguda debida a Histoplasma capsulatum"
  },
  {
    "code": "B39.1",
    "description": "Infecci√≥n pulmonar cr√≥nica debida a Histoplasma capsulatum"
  },
  {
    "code": "B39.2",
    "description": "Infecci√≥n pulmonar debida a Histoplasma capsulatum, sin otra especificaci√≥n"
  },
  {
    "code": "B39.3",
    "description": "Infecci√≥n diseminada debida a Histoplasma capsulatum"
  },
  {
    "code": "B39.4",
    "description": "Histoplasmosis debida a Histoplasma capsulatum, sin otra especificaci√≥n"
  },
  {
    "code": "B39.5",
    "description": "Infecci√≥n debida a Histoplasma duboisii"
  },
  {
    "code": "B39.9",
    "description": "Histoplasmosis, no especificada"
  },
  {
    "code": "B40.0",
    "description": "Blastomicosis pulmonar aguda"
  },
  {
    "code": "B40.1",
    "description": "Blastomicosis pulmonar cr√≥nica"
  },
  {
    "code": "B40.2",
    "description": "Blastomicosis pulmonar, sin otra especificaci√≥n"
  },
  {
    "code": "B40.3",
    "description": "Blastomicosis cut√°nea"
  },
  {
    "code": "B40.7",
    "description": "Blastomicosis diseminada"
  },
  {
    "code": "B40.8",
    "description": "Otras formas de blastomicosis"
  },
  {
    "code": "B40.9",
    "description": "Blastomicosis, no especificada"
  },
  {
    "code": "B41.0",
    "description": "Paracoccidioidomicosis pulmonar"
  },
  {
    "code": "B41.7",
    "description": "Paracoccidioidomicosis diseminada"
  },
  {
    "code": "B41.8",
    "description": "Otras formas de paracoccidioidomicosis"
  },
  {
    "code": "B41.9",
    "description": "Paracoccidioidomicosis, no especificada"
  },
  {
    "code": "B42.0",
    "description": "Esporotricosis pulmonar (J99.8*)"
  },
  {
    "code": "B42.1",
    "description": "Esporotricosis linfocut√°nea"
  },
  {
    "code": "B42.7",
    "description": "Esporotricosis diseminada"
  },
  {
    "code": "B42.8",
    "description": "Otras formas de esporotricosis"
  },
  {
    "code": "B42.9",
    "description": "Esporotricosis, no especificada"
  },
  {
    "code": "B43.0",
    "description": "Cromomicosis cut√°nea"
  },
  {
    "code": "B43.1",
    "description": "Absceso cerebral feomic√≥tico"
  },
  {
    "code": "B43.2",
    "description": "Absceso y quiste subcut√°neo feomic√≥tico"
  },
  {
    "code": "B43.8",
    "description": "Otras formas de cromomicosis"
  },
  {
    "code": "B43.9",
    "description": "Cromomicosis, no especificada"
  },
  {
    "code": "B44.0",
    "description": "Aspergilosis pulmonar invasiva"
  },
  {
    "code": "B44.1",
    "description": "Otras aspergilosis pulmonares"
  },
  {
    "code": "B44.2",
    "description": "Aspergilosis amigdalina"
  },
  {
    "code": "B44.7",
    "description": "Aspergilosis diseminada"
  },
  {
    "code": "B44.8",
    "description": "Otras formas de aspergilosis"
  },
  {
    "code": "B44.9",
    "description": "Aspergilosis, no especificada"
  },
  {
    "code": "B45.0",
    "description": "Criptococosis pulmonar"
  },
  {
    "code": "B45.1",
    "description": "Criptococosis cerebral"
  },
  {
    "code": "B45.2",
    "description": "Criptococosis cut√°nea"
  },
  {
    "code": "B45.3",
    "description": "Criptococosis √≥sea"
  },
  {
    "code": "B45.7",
    "description": "Criptococosis diseminada"
  },
  {
    "code": "B45.8",
    "description": "Otras formas de criptococosis"
  },
  {
    "code": "B45.9",
    "description": "Criptococosis, no especificada"
  },
  {
    "code": "B46.0",
    "description": "Mucormicosis pulmonar"
  },
  {
    "code": "B46.1",
    "description": "Mucormicosis rinocerebral"
  },
  {
    "code": "B46.2",
    "description": "Mucormicosis gastrointestinal"
  },
  {
    "code": "B46.3",
    "description": "Mucormicosis cut√°nea"
  },
  {
    "code": "B46.4",
    "description": "Mucormicosis diseminada"
  },
  {
    "code": "B46.5",
    "description": "Mucormicosis, sin otra especificaci√≥n"
  },
  {
    "code": "B46.8",
    "description": "Otras cigomicosis"
  },
  {
    "code": "B46.9",
    "description": "Cigomicosis, no especificada"
  },
  {
    "code": "B47.0",
    "description": "Eumicetoma"
  },
  {
    "code": "B47.1",
    "description": "Actinomicetoma"
  },
  {
    "code": "B47.9",
    "description": "Micetoma, no especificado"
  },
  {
    "code": "B48.0",
    "description": "Lobomicosis"
  },
  {
    "code": "B48.1",
    "description": "Rinosporidiosis"
  },
  {
    "code": "B48.2",
    "description": "Alesqueriasis"
  },
  {
    "code": "B48.3",
    "description": "Geotricosis"
  },
  {
    "code": "B48.4",
    "description": "Penicilosis"
  },
  {
    "code": "B48.7",
    "description": "Micosis oportunistas"
  },
  {
    "code": "B48.8",
    "description": "Otras micosis especificadas"
  },
  {
    "code": "B50.0",
    "description": "Paludismo debido a Plasmodium falciparum con complicaciones cerebrales"
  },
  {
    "code": "B50.8",
    "description": "Otro paludismo grave y complicado debido a Plasmodium falciparum"
  },
  {
    "code": "B50.9",
    "description": "Paludismo debido a Plasmodium falciparum, sin otra especificaci√≥n"
  },
  {
    "code": "B51.0",
    "description": "Paludismo debido a Plasmodium vivax con ruptura espl√©nica"
  },
  {
    "code": "B51.8",
    "description": "Paludismo debido a Plasmodium vivax con otras complicaciones"
  },
  {
    "code": "B51.9",
    "description": "Paludismo debido a Plasmodium vivax, sin complicaciones"
  },
  {
    "code": "B52.0",
    "description": "Paludismo debido a Plasmodium malariae con nefropat√≠a"
  },
  {
    "code": "B52.8",
    "description": "Paludismo debido a Plasmodium malariae con otras complicaciones"
  },
  {
    "code": "B52.9",
    "description": "Paludismo debido a Plasmodium malariae, sin complicaciones"
  },
  {
    "code": "B53.0",
    "description": "Paludismo debido a Plasmodium ovale"
  },
  {
    "code": "B53.1",
    "description": "Paludismo debido a plasmodios de los simios"
  },
  {
    "code": "B53.8",
    "description": "Otro paludismo confirmado parasitol√≥gicamente, no clasificado en otra parte"
  },
  {
    "code": "B55.0",
    "description": "Leishmaniasis visceral"
  },
  {
    "code": "B55.1",
    "description": "Leishmaniasis cut√°nea"
  },
  {
    "code": "B55.2",
    "description": "Leishmaniasis mucocut√°nea"
  },
  {
    "code": "B55.9",
    "description": "Leishmaniasis, no especificada"
  },
  {
    "code": "B56.0",
    "description": "Tripanosomiasis gambiense"
  },
  {
    "code": "B56.1",
    "description": "Tripanosomiasis rhodesiense"
  },
  {
    "code": "B56.9",
    "description": "Tripanosomiasis africana, sin otra especificaci√≥n"
  },
  {
    "code": "B57.0",
    "description": "Enfermedad de Chagas aguda que afecta al coraz√≥n (I41.2*, I98.1*)"
  },
  {
    "code": "B57.1",
    "description": "Enfermedad de Chagas aguda que no afecta al coraz√≥n"
  },
  {
    "code": "B57.2",
    "description": "Enfermedad de Chagas (cr√≥nica) que afecta al coraz√≥n (I41.2*, I98.1*)"
  },
  {
    "code": "B57.3",
    "description": "Enfermedad de Chagas (cr√≥nica) que afecta al sistema digestivo"
  },
  {
    "code": "B57.4",
    "description": "Enfermedad de Chagas (cr√≥nica) que afecta al sistema nervioso"
  },
  {
    "code": "B57.5",
    "description": "Enfermedad de Chagas (cr√≥nica) que afecta otros √≥rganos"
  },
  {
    "code": "B58.0",
    "description": "Oculopat√≠a debida a toxoplasma"
  },
  {
    "code": "B58.1",
    "description": "Hepatitis debida a toxoplasma (K77.0*)"
  },
  {
    "code": "B58.2",
    "description": "Meningoencefalitis debida a toxoplasma (G05.2*)"
  },
  {
    "code": "B58.3",
    "description": "Toxoplasmosis pulmonar (J17.3*)"
  },
  {
    "code": "B58.8",
    "description": "Toxoplasmosis con otro √≥rgano afectado"
  },
  {
    "code": "B58.9",
    "description": "Toxoplasmosis, no especificada"
  },
  {
    "code": "B60.0",
    "description": "Babesiosis"
  },
  {
    "code": "B60.1",
    "description": "Acantamebiasis"
  },
  {
    "code": "B60.2",
    "description": "Naegleriasis"
  },
  {
    "code": "B60.8",
    "description": "Otras enfermedades especificadas debidas a protozarios"
  },
  {
    "code": "B65.0",
    "description": "Esquistosomiasis debida a Schistosoma haematobium [esquistosomiasis urinaria]"
  },
  {
    "code": "B65.1",
    "description": "Esquistosomiasis debida a Schistosoma mansoni  [esquistosomiasis intestinal]"
  },
  {
    "code": "B65.2",
    "description": "Esquistosomiasis debida a Schistosoma japonicum"
  },
  {
    "code": "B65.3",
    "description": "Dermatitis por cercarias"
  },
  {
    "code": "B65.8",
    "description": "Otras esquistosomiasis"
  },
  {
    "code": "B65.9",
    "description": "Esquistosomiasis, no especificada"
  },
  {
    "code": "B66.0",
    "description": "Opistorquiasis"
  },
  {
    "code": "B66.1",
    "description": "Clonorquiasis"
  },
  {
    "code": "B66.2",
    "description": "Dicrocoeliasis"
  },
  {
    "code": "B66.3",
    "description": "Fascioliasis"
  },
  {
    "code": "B66.4",
    "description": "Paragonimiasis"
  },
  {
    "code": "B66.5",
    "description": "Fasciolopsiasis"
  },
  {
    "code": "B66.8",
    "description": "Otras infecciones especificadas debidas a trematodos"
  },
  {
    "code": "B66.9",
    "description": "Infecci√≥n debida a trematodos, no especificada"
  },
  {
    "code": "B67.0",
    "description": "Infecci√≥n del h√≠gado debida a Echinococcus granulosus"
  },
  {
    "code": "B67.1",
    "description": "Infecci√≥n del pulm√≥n debida a Echinococcus granulosus"
  },
  {
    "code": "B67.2",
    "description": "Infecci√≥n de hueso debida a Echinococcus granulosus"
  },
  {
    "code": "B67.3",
    "description": "Infecci√≥n de otro √≥rgano y de sitios m√∫ltiples debida a Echinococcus granulosus"
  },
  {
    "code": "B67.4",
    "description": "Infecci√≥n debida a Echinococcus granulosus, sin otra especificaci√≥n"
  },
  {
    "code": "B67.5",
    "description": "Infecci√≥n del h√≠gado debida a Echinococcus multilocularis"
  },
  {
    "code": "B67.6",
    "description": "Infecci√≥n de otro √≥rgano y de sitios m√∫ltiples debida a Echinococcus multilocularis"
  },
  {
    "code": "B67.7",
    "description": "Infecci√≥n debida a Echinococcus multilocularis, sin otra especificaci√≥n"
  },
  {
    "code": "B67.8",
    "description": "Equinococosis del h√≠gado, no especificada"
  },
  {
    "code": "B67.9",
    "description": "Equinococosis, otra y la no especificada"
  },
  {
    "code": "B68.0",
    "description": "Teniasis debida a Taenia solium"
  },
  {
    "code": "B68.1",
    "description": "Infecci√≥n debida a Taenia saginata"
  },
  {
    "code": "B68.9",
    "description": "Teniasis, no especificada"
  },
  {
    "code": "B69.0",
    "description": "Cisticercosis del sistema nervioso central"
  },
  {
    "code": "B69.1",
    "description": "Cisticercosis del ojo"
  },
  {
    "code": "B69.8",
    "description": "Cisticercosis de otros sitios"
  },
  {
    "code": "B69.9",
    "description": "Cisticercosis, no especificada"
  },
  {
    "code": "B70.0",
    "description": "Difilobotriasis intestinal"
  },
  {
    "code": "B70.1",
    "description": "Esparganosis"
  },
  {
    "code": "B71.0",
    "description": "Himenolepiasis"
  },
  {
    "code": "B71.1",
    "description": "Dipilidiasis"
  },
  {
    "code": "B71.8",
    "description": "Otras infecciones debidas a cestodos, especificadas"
  },
  {
    "code": "B71.9",
    "description": "Infecci√≥n debida a cestodos, no especificada"
  },
  {
    "code": "B74.0",
    "description": "Filariasis debida a Wuchereria bancrofti"
  },
  {
    "code": "B74.1",
    "description": "Filariasis debida a Brugia malayi"
  },
  {
    "code": "B74.2",
    "description": "Filariasis debida a Brugia timori"
  },
  {
    "code": "B74.3",
    "description": "Loaiasis"
  },
  {
    "code": "B74.4",
    "description": "Mansoneliasis"
  },
  {
    "code": "B74.8",
    "description": "Otras filariasis"
  },
  {
    "code": "B74.9",
    "description": "Filariasis, no especificada"
  },
  {
    "code": "B76.0",
    "description": "Anquilostomiasis"
  },
  {
    "code": "B76.1",
    "description": "Necatoriasis"
  },
  {
    "code": "B76.8",
    "description": "Otras enfermedades debidas a anquilostomas"
  },
  {
    "code": "B76.9",
    "description": "Enfermedad debida a anquilostomas, no especificada"
  },
  {
    "code": "B77.0",
    "description": "Ascariasis con complicaciones intestinales"
  },
  {
    "code": "B77.8",
    "description": "Ascariasis con otras complicaciones"
  },
  {
    "code": "B77.9",
    "description": "Ascariasis, no especificada"
  },
  {
    "code": "B78.0",
    "description": "Estrongiloidiasis intestinal"
  },
  {
    "code": "B78.1",
    "description": "Estrongiloidiasis cut√°nea"
  },
  {
    "code": "B78.7",
    "description": "Estrongiloidiasis diseminada"
  },
  {
    "code": "B78.9",
    "description": "Estrongiloidiasis, no especificada"
  },
  {
    "code": "B81.0",
    "description": "Anisaquiasis"
  },
  {
    "code": "B81.1",
    "description": "Capilariasis intestinal"
  },
  {
    "code": "B81.2",
    "description": "Tricoestrongiliasis"
  },
  {
    "code": "B81.3",
    "description": "Angioestrongiliasis intestinal"
  },
  {
    "code": "B81.4",
    "description": "Helmintiasis intestinal mixta"
  },
  {
    "code": "B81.8",
    "description": "Otras helmintiasis intestinales especificadas"
  },
  {
    "code": "B82.0",
    "description": "Helmintiasis intestinal, sin otra especificaci√≥n"
  },
  {
    "code": "B82.9",
    "description": "Parasitosis intestinal, sin otra especificaci√≥n"
  },
  {
    "code": "B83.0",
    "description": "Larva migrans visceral"
  },
  {
    "code": "B83.1",
    "description": "Gnatostomiasis"
  },
  {
    "code": "B83.2",
    "description": "Angioestrongiliasis debida a Parastrongylus cantonensis"
  },
  {
    "code": "B83.3",
    "description": "Singamiasis"
  },
  {
    "code": "B83.4",
    "description": "Hirudiniasis interna"
  },
  {
    "code": "B83.8",
    "description": "Otras helmintiasis especificadas"
  },
  {
    "code": "B83.9",
    "description": "Helmintiasis, no especificada"
  },
  {
    "code": "B85.0",
    "description": "Pediculosis debida a Pediculus humanus capitis"
  },
  {
    "code": "B85.1",
    "description": "Pediculosis debida a Pediculus humanus corporis"
  },
  {
    "code": "B85.2",
    "description": "Pediculosis, sin otra especificaci√≥n"
  },
  {
    "code": "B85.3",
    "description": "Phthiriasis"
  },
  {
    "code": "B85.4",
    "description": "Pediculosis y phthiriasis mixtas"
  },
  {
    "code": "B87.0",
    "description": "Miasis cut√°nea"
  },
  {
    "code": "B87.1",
    "description": "Miasis en heridas"
  },
  {
    "code": "B87.2",
    "description": "Miasis ocular"
  },
  {
    "code": "B87.3",
    "description": "Miasis nasofar√≠ngea"
  },
  {
    "code": "B87.4",
    "description": "Miasis aural"
  },
  {
    "code": "B87.8",
    "description": "Miasis de otros sitios"
  },
  {
    "code": "B87.9",
    "description": "Miasis, no especificada"
  },
  {
    "code": "B88.0",
    "description": "Otras acariasis"
  },
  {
    "code": "B88.1",
    "description": "Tungiasis [infecci√≥n debida a pulga de arena]"
  },
  {
    "code": "B88.2",
    "description": "Otras infestaciones debidas a artr√≥podos"
  },
  {
    "code": "B88.3",
    "description": "Hirudiniasis externa"
  },
  {
    "code": "B88.8",
    "description": "Otras infestaciones especificadas"
  },
  {
    "code": "B88.9",
    "description": "Infestaci√≥n, no especificada"
  },
  {
    "code": "B90.0",
    "description": "Secuelas de tuberculosis del sistema nervioso central"
  },
  {
    "code": "B90.1",
    "description": "Secuelas de tuberculosis genitourinaria"
  },
  {
    "code": "B90.2",
    "description": "Secuelas de tuberculosis de huesos y articulaciones"
  },
  {
    "code": "B90.8",
    "description": "Secuelas de tuberculosis de otros √≥rganos especificados"
  },
  {
    "code": "B90.9",
    "description": "Secuelas de tuberculosis respiratoria y de tuberculosis no especificada"
  },
  {
    "code": "B94.0",
    "description": "Secuelas de tracoma"
  },
  {
    "code": "B94.1",
    "description": "Secuelas de encefalitis viral"
  },
  {
    "code": "B94.2",
    "description": "Secuelas de hepatitis viral"
  },
  {
    "code": "B94.8",
    "description": "Secuelas de otras enfermedades infecciosas y parasitarias especificadas"
  },
  {
    "code": "B94.9",
    "description": "Secuelas de enfermedades infecciosas y parasitarias no especificadas"
  },
  {
    "code": "B95.0",
    "description": "Estreptococo, grupo A, como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.1",
    "description": "Estreptococo, grupo B, como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.2",
    "description": "Estreptococo, grupo D, como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.3",
    "description": "Streptococcus pneumoniae como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.4",
    "description": "Otros estreptococos como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.5",
    "description": "Estreptococo no especificado como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.6",
    "description": "Staphylococcus aureus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.7",
    "description": "Otros estafilococos como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B95.8",
    "description": "Estafilococo no especificado, como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.0",
    "description": "Mycoplasma pneumoniae [M. pneumoniae] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.1",
    "description": "Klebsiella pneumoniae [K. pneumoniae] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.2",
    "description": "Escherichia coli [E. coli] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.3",
    "description": "Haemophilus influenzae [H. influenzae] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.4",
    "description": "Proteus (mirabilis) (morganii) como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.5",
    "description": "Pseudomonas (aeruginosa) (mallei) (pseudomallei) como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.6",
    "description": "Bacillus fragilis [B. fragilis] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.7",
    "description": "Clostridium perfringens [C. perfringens] como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96.8",
    "description": "Otros agentes bacterianos especificados como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.0",
    "description": "Adenovirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.1",
    "description": "Enterovirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.2",
    "description": "Coronavirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.3",
    "description": "Retrovirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.4",
    "description": "Virus sincicial respiratorio como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.5",
    "description": "Reovirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.6",
    "description": "Parvovirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.7",
    "description": "Papilomavirus como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97.8",
    "description": "Otros agentes virales como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "C00.0",
    "description": "Tumor maligno del labio superior, cara externa"
  },
  {
    "code": "C00.1",
    "description": "Tumor maligno del labio inferior, cara externa"
  },
  {
    "code": "C00.2",
    "description": "Tumor maligno del labio, cara externa, sin otra especificaci√≥n"
  },
  {
    "code": "C00.3",
    "description": "Tumor maligno del labio superior, cara interna"
  },
  {
    "code": "C00.4",
    "description": "Tumor maligno del labio inferior, cara interna"
  },
  {
    "code": "C00.5",
    "description": "Tumor maligno del labio, cara interna, sin otra especificaci√≥n"
  },
  {
    "code": "C00.6",
    "description": "Tumor maligno de la comisura labial"
  },
  {
    "code": "C00.8",
    "description": "Lesi√≥n de sitios contiguos del labio"
  },
  {
    "code": "C00.9",
    "description": "Tumor maligno del labio, parte no especificada"
  },
  {
    "code": "C02.0",
    "description": "Tumor maligno de la cara dorsal de la lengua"
  },
  {
    "code": "C02.1",
    "description": "Tumor maligno del borde de la lengua"
  },
  {
    "code": "C02.2",
    "description": "Tumor maligno de la cara ventral de la lengua"
  },
  {
    "code": "C02.3",
    "description": "Tumor maligno de los dos tercios anteriores de la lengua, parte no especificada"
  },
  {
    "code": "C02.4",
    "description": "Tumor maligno de la am√≠gdala lingual"
  },
  {
    "code": "C02.8",
    "description": "Lesi√≥n de sitios contiguos de la lengua"
  },
  {
    "code": "C02.9",
    "description": "Tumor maligno de la lengua, parte no especificada"
  },
  {
    "code": "C03.0",
    "description": "Tumor maligno de la enc√≠a superior"
  },
  {
    "code": "C03.1",
    "description": "Tumor maligno de la enc√≠a inferior"
  },
  {
    "code": "C03.9",
    "description": "Tumor maligno de la enc√≠a, parte no especificada"
  },
  {
    "code": "C04.0",
    "description": "Tumor maligno de la parte anterior del piso de la boca"
  },
  {
    "code": "C04.1",
    "description": "Tumor maligno de la parte lateral del piso de la boca"
  },
  {
    "code": "C04.8",
    "description": "Lesi√≥n de sitios contiguos del piso de la boca"
  },
  {
    "code": "C04.9",
    "description": "Tumor maligno del piso de la boca, parte no especificada"
  },
  {
    "code": "C05.0",
    "description": "Tumor maligno del paladar duro"
  },
  {
    "code": "C05.1",
    "description": "Tumor maligno del paladar blando"
  },
  {
    "code": "C05.2",
    "description": "Tumor maligno de la √∫vula"
  },
  {
    "code": "C05.8",
    "description": "Lesi√≥n de sitios contiguos del paladar"
  },
  {
    "code": "C05.9",
    "description": "Tumor maligno del paladar, parte no especificada"
  },
  {
    "code": "C06.0",
    "description": "Tumor maligno de la mucosa de la mejilla"
  },
  {
    "code": "C06.1",
    "description": "Tumor maligno del vest√≠bulo de la boca"
  },
  {
    "code": "C06.2",
    "description": "Tumor maligno del √°rea retromolar"
  },
  {
    "code": "C06.8",
    "description": "Lesi√≥n de sitios contiguos de otras partes y de las no especificadas de la boca"
  },
  {
    "code": "C06.9",
    "description": "Tumor maligno de la boca, parte no especificada"
  },
  {
    "code": "C08.0",
    "description": "Tumor maligno de la gl√°ndula submaxilar"
  },
  {
    "code": "C08.1",
    "description": "Tumor maligno de la gl√°ndula sublingual"
  },
  {
    "code": "C08.8",
    "description": "Lesi√≥n de sitios contiguos de las gl√°ndulas salivales mayores"
  },
  {
    "code": "C08.9",
    "description": "Tumor maligno de gl√°ndula salival mayor, no especificada"
  },
  {
    "code": "C09.0",
    "description": "Tumor maligno de la fosa amigdalina"
  },
  {
    "code": "C09.1",
    "description": "Tumor maligno del pilar amigdalino (anterior) (posterior)"
  },
  {
    "code": "C09.8",
    "description": "Lesi√≥n de sitios contiguos de la am√≠gdala"
  },
  {
    "code": "C09.9",
    "description": "Tumor maligno de la am√≠gdala, parte no especificada"
  },
  {
    "code": "C10.0",
    "description": "Tumor maligno de la val√©cula"
  },
  {
    "code": "C10.1",
    "description": "Tumor maligno de la cara anterior de la epiglotis"
  },
  {
    "code": "C10.2",
    "description": "Tumor maligno de la pared lateral de la orofaringe"
  },
  {
    "code": "C10.3",
    "description": "Tumor maligno de la pared posterior de la orofaringe"
  },
  {
    "code": "C10.4",
    "description": "Tumor maligno de la hendidura branquial"
  },
  {
    "code": "C10.8",
    "description": "Lesi√≥n de sitios contiguos de la orofaringe"
  },
  {
    "code": "C10.9",
    "description": "Tumor maligno de la orofaringe, parte no especificada"
  },
  {
    "code": "C11.0",
    "description": "Tumor maligno de la pared superior de la nasofaringe"
  },
  {
    "code": "C11.1",
    "description": "Tumor maligno de la pared posterior de la nasofaringe"
  },
  {
    "code": "C11.2",
    "description": "Tumor maligno de la pared lateral de la nasofaringe"
  },
  {
    "code": "C11.3",
    "description": "Tumor maligno de la pared anterior de la nasofaringe"
  },
  {
    "code": "C11.8",
    "description": "Lesi√≥n de sitios contiguos de la nasofaringe"
  },
  {
    "code": "C11.9",
    "description": "Tumor maligno de la nasofaringe, parte no especificada"
  },
  {
    "code": "C13.0",
    "description": "Tumor maligno de la regi√≥n postcricoidea"
  },
  {
    "code": "C13.1",
    "description": "Tumor maligno del pliegue aritenoepigl√≥tico, cara hipofar√≠ngea"
  },
  {
    "code": "C13.2",
    "description": "Tumor maligno de la pared posterior de la hipofaringe"
  },
  {
    "code": "C13.8",
    "description": "Lesi√≥n de sitios contiguos de la hipofaringe"
  },
  {
    "code": "C13.9",
    "description": "Tumor maligno de la hipofaringe, parte no especificada"
  },
  {
    "code": "C14.0",
    "description": "Tumor maligno de la faringe, parte no especificada"
  },
  {
    "code": "C14.2",
    "description": "Tumor maligno del anillo de Waldeyer"
  },
  {
    "code": "C14.8",
    "description": "Lesi√≥n de sitios contiguos del labio, de la cavidad bucal y de la faringe"
  },
  {
    "code": "C15.0",
    "description": "Tumor maligno del es√≥fago, porci√≥n cervical"
  },
  {
    "code": "C15.1",
    "description": "Tumor maligno del es√≥fago, porci√≥n tor√°cica"
  },
  {
    "code": "C15.2",
    "description": "Tumor maligno del es√≥fago, porci√≥n abdominal"
  },
  {
    "code": "C15.3",
    "description": "Tumor maligno del tercio superior del es√≥fago"
  },
  {
    "code": "C15.4",
    "description": "Tumor maligno del tercio medio del es√≥fago"
  },
  {
    "code": "C15.5",
    "description": "Tumor maligno del tercio inferior del es√≥fago"
  },
  {
    "code": "C15.8",
    "description": "Lesi√≥n de sitios contiguos del es√≥fago"
  },
  {
    "code": "C15.9",
    "description": "Tumor maligno del es√≥fago, parte no especificada"
  },
  {
    "code": "C16.0",
    "description": "Tumor maligno del cardias"
  },
  {
    "code": "C16.1",
    "description": "Tumor maligno del fundus g√°strico"
  },
  {
    "code": "C16.2",
    "description": "Tumor maligno del cuerpo del est√≥mago"
  },
  {
    "code": "C16.3",
    "description": "Tumor maligno del antro pil√≥rico"
  },
  {
    "code": "C16.4",
    "description": "Tumor maligno del p√≠loro"
  },
  {
    "code": "C16.5",
    "description": "Tumor maligno de la curvatura menor del est√≥mago, sin otra especificaci√≥n"
  },
  {
    "code": "C16.6",
    "description": "Tumor maligno de la curvatura mayor del est√≥mago, sin otra especificaci√≥n"
  },
  {
    "code": "C16.8",
    "description": "Lesi√≥n de sitios contiguos del est√≥mago"
  },
  {
    "code": "C16.9",
    "description": "Tumor maligno del est√≥mago, parte no especificada"
  },
  {
    "code": "C17.0",
    "description": "Tumor maligno del duodeno"
  },
  {
    "code": "C17.1",
    "description": "Tumor maligno del yeyuno"
  },
  {
    "code": "C17.2",
    "description": "Tumor maligno del √≠leon"
  },
  {
    "code": "C17.3",
    "description": "Tumor maligno del divert√≠culo de Meckel"
  },
  {
    "code": "C17.8",
    "description": "Lesi√≥n de sitios contiguos del intestino delgado"
  },
  {
    "code": "C17.9",
    "description": "Tumor maligno del intestino delgado, parte no especificada"
  },
  {
    "code": "C18.0",
    "description": "Tumor maligno del ciego"
  },
  {
    "code": "C18.1",
    "description": "Tumor maligno del ap√©ndice"
  },
  {
    "code": "C18.2",
    "description": "Tumor maligno del colon ascendente"
  },
  {
    "code": "C18.3",
    "description": "Tumor maligno del √°ngulo hep√°tico"
  },
  {
    "code": "C18.4",
    "description": "Tumor maligno del colon transverso"
  },
  {
    "code": "C18.5",
    "description": "Tumor maligno del √°ngulo espl√©nico"
  },
  {
    "code": "C18.6",
    "description": "Tumor maligno del colon descendente"
  },
  {
    "code": "C18.7",
    "description": "Tumor maligno del colon sigmoide"
  },
  {
    "code": "C18.8",
    "description": "Lesi√≥n de sitios contiguos del colon"
  },
  {
    "code": "C18.9",
    "description": "Tumor maligno del colon, parte no especificada"
  },
  {
    "code": "C21.0",
    "description": "Tumor maligno del ano, parte no especificada"
  },
  {
    "code": "C21.1",
    "description": "Tumor maligno del conducto anal"
  },
  {
    "code": "C21.2",
    "description": "Tumor maligno de la zona cloacog√©nica"
  },
  {
    "code": "C21.8",
    "description": "Lesi√≥n de sitios contiguos del ano, del conducto anal y del recto"
  },
  {
    "code": "C22.0",
    "description": "Carcinoma de c√©lulas hep√°ticas"
  },
  {
    "code": "C22.1",
    "description": "Carcinoma de v√≠as biliares intrahep√°ticas"
  },
  {
    "code": "C22.2",
    "description": "Hepatoblastoma"
  },
  {
    "code": "C22.3",
    "description": "Angiosarcoma del h√≠gado"
  },
  {
    "code": "C22.4",
    "description": "Otros sarcomas del h√≠gado"
  },
  {
    "code": "C22.7",
    "description": "Otros carcinomas especificados del h√≠gado"
  },
  {
    "code": "C22.9",
    "description": "Tumor maligno del h√≠gado, no especificado"
  },
  {
    "code": "C24.0",
    "description": "Tumor maligno de las v√≠as biliares extrahep√°ticas"
  },
  {
    "code": "C24.1",
    "description": "Tumor maligno de la ampolla de Vater"
  },
  {
    "code": "C24.8",
    "description": "Lesi√≥n de sitios contiguos de las v√≠as biliares"
  },
  {
    "code": "C24.9",
    "description": "Tumor maligno de las v√≠as biliares, parte no especificada"
  },
  {
    "code": "C25.0",
    "description": "Tumor maligno de la cabeza del p√°ncreas"
  },
  {
    "code": "C25.1",
    "description": "Tumor maligno del cuerpo del p√°ncreas"
  },
  {
    "code": "C25.2",
    "description": "Tumor maligno de la cola del p√°ncreas"
  },
  {
    "code": "C25.3",
    "description": "Tumor maligno del conducto pancre√°tico"
  },
  {
    "code": "C25.4",
    "description": "Tumor maligno del p√°ncreas endocrino"
  },
  {
    "code": "C25.7",
    "description": "Tumor maligno de otras partes especificadas del p√°ncreas"
  },
  {
    "code": "C25.8",
    "description": "Lesi√≥n de sitios contiguos del p√°ncreas"
  },
  {
    "code": "C25.9",
    "description": "Tumor maligno del p√°ncreas, parte no especificada"
  },
  {
    "code": "C26.0",
    "description": "Tumor maligno del intestino, parte no especificada"
  },
  {
    "code": "C26.1",
    "description": "Tumor maligno del bazo"
  },
  {
    "code": "C26.8",
    "description": "Lesi√≥n de sitios contiguos de los √≥rganos digestivos"
  },
  {
    "code": "C26.9",
    "description": "Tumor maligno de sitios mal definidos de los √≥rganos digestivos"
  },
  {
    "code": "C30.0",
    "description": "Tumor maligno de la fosa nasal"
  },
  {
    "code": "C30.1",
    "description": "Tumor maligno del o√≠do medio"
  },
  {
    "code": "C31.0",
    "description": "Tumor maligno del seno maxilar"
  },
  {
    "code": "C31.1",
    "description": "Tumor maligno del seno etmoidal"
  },
  {
    "code": "C31.2",
    "description": "Tumor maligno del seno frontal"
  },
  {
    "code": "C31.3",
    "description": "Tumor maligno del seno esfenoidal"
  },
  {
    "code": "C31.8",
    "description": "Lesi√≥n de sitios contiguos de los senos paranasales"
  },
  {
    "code": "C31.9",
    "description": "Tumor maligno de seno paranasal no especificado"
  },
  {
    "code": "C32.0",
    "description": "Tumor maligno de la glotis"
  },
  {
    "code": "C32.1",
    "description": "Tumor maligno de la regi√≥n supragl√≥tica"
  },
  {
    "code": "C32.2",
    "description": "Tumor maligno de la regi√≥n subgl√≥tica"
  },
  {
    "code": "C32.3",
    "description": "Tumor maligno del cart√≠lago lar√≠ngeo"
  },
  {
    "code": "C32.8",
    "description": "Lesi√≥n de sitios contiguos de la laringe"
  },
  {
    "code": "C32.9",
    "description": "Tumor maligno de la laringe, parte no especificada"
  },
  {
    "code": "C34.0",
    "description": "Tumor maligno del bronquio principal"
  },
  {
    "code": "C34.1",
    "description": "Tumor maligno del l√≥bulo superior, bronquio o pulm√≥n"
  },
  {
    "code": "C34.2",
    "description": "Tumor maligno del l√≥bulo medio, bronquio o pulm√≥n"
  },
  {
    "code": "C34.3",
    "description": "Tumor maligno del l√≥bulo inferior, bronquio o pulm√≥n"
  },
  {
    "code": "C34.8",
    "description": "Lesi√≥n de sitios contiguos de los bronquios y del pulm√≥n"
  },
  {
    "code": "C34.9",
    "description": "Tumor maligno de los bronquios o del pulm√≥n, parte no especificada"
  },
  {
    "code": "C38.0",
    "description": "Tumor maligno del coraz√≥n"
  },
  {
    "code": "C38.1",
    "description": "Tumor maligno del mediastino anterior"
  },
  {
    "code": "C38.2",
    "description": "Tumor maligno del mediastino posterior"
  },
  {
    "code": "C38.3",
    "description": "Tumor maligno del mediastino, parte no especificada"
  },
  {
    "code": "C38.4",
    "description": "Tumor maligno de la pleura"
  },
  {
    "code": "C38.8",
    "description": "Lesi√≥n de sitios contiguos del coraz√≥n, del mediastino y de la pleura"
  },
  {
    "code": "C39.0",
    "description": "Tumor maligno de las v√≠as respiratorias superiores, parte no especificada"
  },
  {
    "code": "C39.8",
    "description": "Lesi√≥n de sitios contiguos de los √≥rganos respiratorios e intrator√°cicos"
  },
  {
    "code": "C39.9",
    "description": "Tumor maligno de sitios mal definidos del sistema respiratorio"
  },
  {
    "code": "C40.0",
    "description": "Tumor maligno del om√≥plato y de los huesos largos del miembro superior"
  },
  {
    "code": "C40.1",
    "description": "Tumor maligno de los huesos cortos del miembro superior"
  },
  {
    "code": "C40.2",
    "description": "Tumor maligno de los huesos largos del miembro inferior"
  },
  {
    "code": "C40.3",
    "description": "Tumor maligno de los huesos cortos del miembro inferior"
  },
  {
    "code": "C40.8",
    "description": "Lesi√≥n de sitios contiguos de los huesos y de los cart√≠lagos articulares de los miembros"
  },
  {
    "code": "C40.9",
    "description": "Tumor maligno de los huesos y de los cart√≠lagos articulares de los miembros, sin otra especificaci√≥n"
  },
  {
    "code": "C41.0",
    "description": "Tumor maligno de los huesos del cr√°neo y de la cara"
  },
  {
    "code": "C41.1",
    "description": "Tumor maligno del hueso del maxilar inferior"
  },
  {
    "code": "C41.2",
    "description": "Tumor maligno de la columna vertebral"
  },
  {
    "code": "C41.3",
    "description": "Tumor maligno de la costilla, estern√≥n y clav√≠cula"
  },
  {
    "code": "C41.4",
    "description": "Tumor maligno de los huesos de la pelvis, sacro y c√≥ccix"
  },
  {
    "code": "C41.8",
    "description": "Lesi√≥n de sitios contiguos del hueso y del cart√≠lago articular"
  },
  {
    "code": "C41.9",
    "description": "Tumor maligno del hueso y del cart√≠lago articular, no especificado"
  },
  {
    "code": "C43.0",
    "description": "Melanoma maligno del labio"
  },
  {
    "code": "C43.1",
    "description": "Melanoma maligno del p√°rpado, incluida la comisura palpebral"
  },
  {
    "code": "C43.2",
    "description": "Melanoma maligno de la oreja y del conducto auditivo externo"
  },
  {
    "code": "C43.3",
    "description": "Melanoma maligno de las otras partes y las no especificadas de la cara"
  },
  {
    "code": "C43.4",
    "description": "Melanoma maligno del cuero cabelludo y del cuello"
  },
  {
    "code": "C43.5",
    "description": "Melanoma maligno del tronco"
  },
  {
    "code": "C43.6",
    "description": "Melanoma maligno del miembro superior, incluido el hombro"
  },
  {
    "code": "C43.7",
    "description": "Melanoma maligno del miembro inferior, incluida la cadera"
  },
  {
    "code": "C43.8",
    "description": "Melanoma maligno de sitios contiguos de la piel"
  },
  {
    "code": "C43.9",
    "description": "Melanoma maligno de piel, sitio no especificado"
  },
  {
    "code": "C44.0",
    "description": "Tumor maligno de la piel del labio"
  },
  {
    "code": "C44.1",
    "description": "Tumor maligno de la piel del p√°rpado, incluida la comisura palpebral"
  },
  {
    "code": "C44.2",
    "description": "Tumor maligno de la piel de la oreja y del conducto auditivo externo"
  },
  {
    "code": "C44.3",
    "description": "Tumor maligno de la piel de otras partes y de las no especificadas de la cara"
  },
  {
    "code": "C44.4",
    "description": "Tumor maligno de la piel del cuero cabelludo y del cuello"
  },
  {
    "code": "C44.5",
    "description": "Tumor maligno de la piel del tronco"
  },
  {
    "code": "C44.6",
    "description": "Tumor maligno de la piel del miembro superior, incluido el hombro"
  },
  {
    "code": "C44.7",
    "description": "Tumor maligno de la piel del miembro inferior, incluida la cadera"
  },
  {
    "code": "C44.8",
    "description": "Lesi√≥n de sitios contiguos de la piel"
  },
  {
    "code": "C44.9",
    "description": "Tumor maligno de la piel, sitio no especificado"
  },
  {
    "code": "C45.0",
    "description": "Mesotelioma de la pleura"
  },
  {
    "code": "C45.1",
    "description": "Mesotelioma del peritoneo"
  },
  {
    "code": "C45.2",
    "description": "Mesotelioma del pericardio"
  },
  {
    "code": "C45.7",
    "description": "Mesotelioma de otros sitios especificados"
  },
  {
    "code": "C45.9",
    "description": "Mesotelioma, de sitio no especificado"
  },
  {
    "code": "C46.0",
    "description": "Sarcoma de Kaposi de la piel"
  },
  {
    "code": "C46.1",
    "description": "Sarcoma de Kaposi del tejido blando"
  },
  {
    "code": "C46.2",
    "description": "Sarcoma de Kaposi del paladar"
  },
  {
    "code": "C46.3",
    "description": "Sarcoma de Kaposi de los ganglios linf√°ticos"
  },
  {
    "code": "C46.7",
    "description": "Sarcoma de Kaposi de otros sitios especificados"
  },
  {
    "code": "C46.8",
    "description": "Sarcoma de Kaposi de m√∫ltiples √≥rganos"
  },
  {
    "code": "C46.9",
    "description": "Sarcoma de Kaposi, de sitio no especificado"
  },
  {
    "code": "C47.0",
    "description": "Tumor maligno de los nervios perif√©ricos de la cabeza, cara y cuello"
  },
  {
    "code": "C47.1",
    "description": "Tumor maligno de los nervios perif√©ricos del miembro superior, incluido el hombro"
  },
  {
    "code": "C47.2",
    "description": "Tumor maligno de los nervios perif√©ricos del miembro inferior, incluida la cadera"
  },
  {
    "code": "C47.3",
    "description": "Tumor maligno de los nervios perif√©ricos del t√≥rax"
  },
  {
    "code": "C47.4",
    "description": "Tumor maligno de los nervios perif√©ricos del abdomen"
  },
  {
    "code": "C47.5",
    "description": "Tumor maligno de los nervios perif√©ricos de la pelvis"
  },
  {
    "code": "C47.6",
    "description": "Tumor maligno de los nervios perif√©ricos del tronco, sin otra especificaci√≥n"
  },
  {
    "code": "C47.8",
    "description": "Lesi√≥n de sitios contiguos de los nervios perif√©ricos y del sistema nervioso aut√≥nomo"
  },
  {
    "code": "C47.9",
    "description": "Tumor maligno de los nervios perif√©ricos y del sistema nervioso aut√≥nomo, parte no especificada"
  },
  {
    "code": "C48.0",
    "description": "Tumor maligno del retroperitoneo"
  },
  {
    "code": "C48.1",
    "description": "Tumor maligno de parte especificada del peritoneo"
  },
  {
    "code": "C48.2",
    "description": "Tumor maligno del peritoneo, sin otra especificaci√≥n"
  },
  {
    "code": "C48.8",
    "description": "Lesi√≥n de sitios contiguos del peritoneo y del retroperitoneo"
  },
  {
    "code": "C49.0",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando de la cabeza, cara y cuello"
  },
  {
    "code": "C49.1",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando del miembro superior, incluido el hombro"
  },
  {
    "code": "C49.2",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando del miembro inferior, incluida la cadera"
  },
  {
    "code": "C49.3",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando del t√≥rax"
  },
  {
    "code": "C49.4",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando del abdomen"
  },
  {
    "code": "C49.5",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando de la pelvis"
  },
  {
    "code": "C49.6",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando del tronco, sin otra especificaci√≥n"
  },
  {
    "code": "C49.8",
    "description": "Lesi√≥n de sitios contiguos del tejido conjuntivo y del tejido blando"
  },
  {
    "code": "C49.9",
    "description": "Tumor maligno del tejido conjuntivo y tejido blando, de sitio no especificado"
  },
  {
    "code": "C50.0",
    "description": "Tumor maligno del pez√≥n y ar√©ola mamaria"
  },
  {
    "code": "C50.1",
    "description": "Tumor maligno de la porci√≥n central de la mama"
  },
  {
    "code": "C50.2",
    "description": "Tumor maligno del cuadrante superior interno de la mama"
  },
  {
    "code": "C50.3",
    "description": "Tumor maligno del cuadrante inferior interno de la mama"
  },
  {
    "code": "C50.4",
    "description": "Tumor maligno del cuadrante superior externo de la mama"
  },
  {
    "code": "C50.5",
    "description": "Tumor maligno del cuadrante inferior externo de la mama"
  },
  {
    "code": "C50.6",
    "description": "Tumor maligno de la prolongaci√≥n axilar de la mama"
  },
  {
    "code": "C50.8",
    "description": "Lesi√≥n de sitios contiguos de la mama"
  },
  {
    "code": "C50.9",
    "description": "Tumor maligno de la mama, parte no especificada"
  },
  {
    "code": "C51.0",
    "description": "Tumor maligno del labio mayor"
  },
  {
    "code": "C51.1",
    "description": "Tumor maligno del labio menor"
  },
  {
    "code": "C51.2",
    "description": "Tumor maligno del cl√≠toris"
  },
  {
    "code": "C51.8",
    "description": "Lesi√≥n de sitios contiguos de la vulva"
  },
  {
    "code": "C51.9",
    "description": "Tumor maligno de la vulva, parte no especificada"
  },
  {
    "code": "C53.0",
    "description": "Tumor maligno del endoc√©rvix"
  },
  {
    "code": "C53.1",
    "description": "Tumor maligno del exoc√©rvix"
  },
  {
    "code": "C53.8",
    "description": "Lesi√≥n de sitios contiguos del cuello del √∫tero"
  },
  {
    "code": "C53.9",
    "description": "Tumor maligno del cuello del √∫tero, sin otra especificaci√≥n"
  },
  {
    "code": "C54.0",
    "description": "Tumor maligno del istmo uterino"
  },
  {
    "code": "C54.1",
    "description": "Tumor maligno del endometrio"
  },
  {
    "code": "C54.2",
    "description": "Tumor maligno del miometrio"
  },
  {
    "code": "C54.3",
    "description": "Tumor maligno del fondo del √∫tero"
  },
  {
    "code": "C54.8",
    "description": "Lesi√≥n de sitios contiguos del cuerpo del √∫tero"
  },
  {
    "code": "C54.9",
    "description": "Tumor maligno del cuerpo del √∫tero, parte no especificada"
  },
  {
    "code": "C57.0",
    "description": "Tumor maligno de la trompa de Falopio"
  },
  {
    "code": "C57.1",
    "description": "Tumor maligno del ligamento ancho"
  },
  {
    "code": "C57.2",
    "description": "Tumor maligno del ligamento redondo"
  },
  {
    "code": "C57.3",
    "description": "Tumor maligno del parametrio"
  },
  {
    "code": "C57.4",
    "description": "Tumor maligno de los anexos uterinos, sin otra especificaci√≥n"
  },
  {
    "code": "C57.7",
    "description": "Tumor maligno de otras partes especificadas de los √≥rganos genitales femeninos"
  },
  {
    "code": "C57.8",
    "description": "Lesi√≥n de sitios contiguos de los √≥rganos genitales femeninos"
  },
  {
    "code": "C57.9",
    "description": "Tumor maligno de √≥rgano genital femenino, parte no especificada"
  },
  {
    "code": "C60.0",
    "description": "Tumor maligno del prepucio"
  },
  {
    "code": "C60.1",
    "description": "Tumor maligno del glande"
  },
  {
    "code": "C60.2",
    "description": "Tumor maligno del cuerpo del pene"
  },
  {
    "code": "C60.8",
    "description": "Lesi√≥n de sitios contiguos del pene"
  },
  {
    "code": "C60.9",
    "description": "Tumor maligno del pene, parte no especificada"
  },
  {
    "code": "C62.0",
    "description": "Tumor maligno del test√≠culo no descendido"
  },
  {
    "code": "C62.1",
    "description": "Tumor maligno del test√≠culo descendido"
  },
  {
    "code": "C62.9",
    "description": "Tumor maligno del test√≠culo, no especificado"
  },
  {
    "code": "C63.0",
    "description": "Tumor maligno del epid√≠dimo"
  },
  {
    "code": "C63.1",
    "description": "Tumor maligno del cord√≥n esperm√°tico"
  },
  {
    "code": "C63.2",
    "description": "Tumor maligno del escroto"
  },
  {
    "code": "C63.7",
    "description": "Tumor maligno de otras partes especificadas de los √≥rganos genitales masculinos"
  },
  {
    "code": "C63.8",
    "description": "Lesi√≥n de sitios contiguos de los √≥rganos genitales masculinos"
  },
  {
    "code": "C63.9",
    "description": "Tumor maligno de √≥rgano genital masculino, parte no especificada"
  },
  {
    "code": "C67.0",
    "description": "Tumor maligno del tr√≠gono vesical"
  },
  {
    "code": "C67.1",
    "description": "Tumor maligno de la c√∫pula vesical"
  },
  {
    "code": "C67.2",
    "description": "Tumor maligno de la pared lateral de la vejiga"
  },
  {
    "code": "C67.3",
    "description": "Tumor maligno de la pared anterior de la vejiga"
  },
  {
    "code": "C67.4",
    "description": "Tumor maligno de la pared posterior de la vejiga"
  },
  {
    "code": "C67.5",
    "description": "Tumor maligno del cuello de la vejiga"
  },
  {
    "code": "C67.6",
    "description": "Tumor maligno del orificio ureteral"
  },
  {
    "code": "C67.7",
    "description": "Tumor maligno del uraco"
  },
  {
    "code": "C67.8",
    "description": "Lesi√≥n de sitios contiguos de la vejiga"
  },
  {
    "code": "C67.9",
    "description": "Tumor maligno de la vejiga urinaria, parte no especificada"
  },
  {
    "code": "C68.0",
    "description": "Tumor maligno de la uretra"
  },
  {
    "code": "C68.1",
    "description": "Tumor maligno de las gl√°ndulas parauretrales"
  },
  {
    "code": "C68.8",
    "description": "Lesi√≥n de sitios contiguos de los √≥rganos urinarios"
  },
  {
    "code": "C68.9",
    "description": "Tumor maligno de √≥rgano urinario no especificado"
  },
  {
    "code": "C69.0",
    "description": "Tumor maligno de la conjuntiva"
  },
  {
    "code": "C69.1",
    "description": "Tumor maligno de la c√≥rnea"
  },
  {
    "code": "C69.2",
    "description": "Tumor maligno de la retina"
  },
  {
    "code": "C69.3",
    "description": "Tumor maligno de la coroides"
  },
  {
    "code": "C69.4",
    "description": "Tumor maligno del cuerpo ciliar"
  },
  {
    "code": "C69.5",
    "description": "Tumor maligno de la gl√°ndula y conducto lagrimales"
  },
  {
    "code": "C69.6",
    "description": "Tumor maligno de la √≥rbita"
  },
  {
    "code": "C69.8",
    "description": "Lesi√≥n de sitios contiguos del ojo y sus anexos"
  },
  {
    "code": "C69.9",
    "description": "Tumor maligno del ojo, parte no especificada"
  },
  {
    "code": "C70.0",
    "description": "Tumor maligno de las meninges cerebrales"
  },
  {
    "code": "C70.1",
    "description": "Tumor maligno de las meninges raqu√≠deas"
  },
  {
    "code": "C70.9",
    "description": "Tumor maligno de las meninges, parte no especificada"
  },
  {
    "code": "C71.0",
    "description": "Tumor maligno del cerebro, excepto l√≥bulos y ventr√≠culos"
  },
  {
    "code": "C71.1",
    "description": "Tumor maligno del l√≥bulo frontal"
  },
  {
    "code": "C71.2",
    "description": "Tumor maligno del l√≥bulo temporal"
  },
  {
    "code": "C71.3",
    "description": "Tumor maligno del l√≥bulo parietal"
  },
  {
    "code": "C71.4",
    "description": "Tumor maligno del l√≥bulo occipital"
  },
  {
    "code": "C71.5",
    "description": "Tumor maligno del ventr√≠culo cerebral"
  },
  {
    "code": "C71.6",
    "description": "Tumor maligno del cerebelo"
  },
  {
    "code": "C71.7",
    "description": "Tumor maligno del ped√∫nculo cerebral"
  },
  {
    "code": "C71.8",
    "description": "Lesi√≥n de sitios contiguos del enc√©falo"
  },
  {
    "code": "C71.9",
    "description": "Tumor maligno del enc√©falo, parte no especificada"
  },
  {
    "code": "C72.0",
    "description": "Tumor maligno de la m√©dula espinal"
  },
  {
    "code": "C72.1",
    "description": "Tumor maligno de la cola de caballo"
  },
  {
    "code": "C72.2",
    "description": "Tumor maligno del nervio olfatorio"
  },
  {
    "code": "C72.3",
    "description": "Tumor maligno del nervio √≥ptico"
  },
  {
    "code": "C72.4",
    "description": "Tumor maligno del nervio ac√∫stico"
  },
  {
    "code": "C72.5",
    "description": "Tumor maligno de otros nervios craneales y los no especificados"
  },
  {
    "code": "C72.8",
    "description": "Lesi√≥n de sitios contiguos del enc√©falo y otras partes del sistema nervioso central"
  },
  {
    "code": "C72.9",
    "description": "Tumor maligno del sistema nervioso central, sin otra especificaci√≥n"
  },
  {
    "code": "C74.0",
    "description": "Tumor maligno de la corteza de la gl√°ndula suprarrenal"
  },
  {
    "code": "C74.1",
    "description": "Tumor maligno de la m√©dula de la gl√°ndula suprarrenal"
  },
  {
    "code": "C74.9",
    "description": "Tumor maligno de la gl√°ndula suprarrenal, parte no especificada"
  },
  {
    "code": "C75.0",
    "description": "Tumor maligno de la gl√°ndula paratiroides"
  },
  {
    "code": "C75.1",
    "description": "Tumor maligno de la hip√≥fisis"
  },
  {
    "code": "C75.2",
    "description": "Tumor maligno del conducto craneofar√≠ngeo"
  },
  {
    "code": "C75.3",
    "description": "Tumor maligno de la gl√°ndula pineal"
  },
  {
    "code": "C75.4",
    "description": "Tumor maligno del cuerpo carot√≠deo"
  },
  {
    "code": "C75.5",
    "description": "Tumor maligno del cuerpo a√≥rtico y otros cuerpos cromafines"
  },
  {
    "code": "C75.8",
    "description": "Tumor maligno pluriglandular, no especificado"
  },
  {
    "code": "C75.9",
    "description": "Tumor maligno de gl√°ndula endocrina no especificada"
  },
  {
    "code": "C76.0",
    "description": "Tumor maligno de la cabeza, cara y cuello"
  },
  {
    "code": "C76.1",
    "description": "Tumor maligno del t√≥rax"
  },
  {
    "code": "C76.2",
    "description": "Tumor maligno del abdomen"
  },
  {
    "code": "C76.3",
    "description": "Tumor maligno de la pelvis"
  },
  {
    "code": "C76.4",
    "description": "Tumor maligno del miembro superior"
  },
  {
    "code": "C76.5",
    "description": "Tumor maligno del miembro inferior"
  },
  {
    "code": "C76.7",
    "description": "Tumor maligno de otros sitios mal definidos"
  },
  {
    "code": "C76.8",
    "description": "Lesi√≥n de sitios contiguos mal definidos"
  },
  {
    "code": "C77.0",
    "description": "Tumor maligno de los ganglios linf√°ticos de la cabeza, cara y cuello"
  },
  {
    "code": "C77.1",
    "description": "Tumor maligno de los ganglios linf√°ticos intrator√°cicos"
  },
  {
    "code": "C77.2",
    "description": "Tumor maligno de los ganglios linf√°ticos intraabdominales"
  },
  {
    "code": "C77.3",
    "description": "Tumor maligno de los ganglios linf√°ticos de la axila y del miembro superior"
  },
  {
    "code": "C77.4",
    "description": "Tumor maligno de los ganglios linf√°ticos de la regi√≥n inguinal y del miembro inferior"
  },
  {
    "code": "C77.5",
    "description": "Tumor maligno de los ganglios linf√°ticos de la pelvis"
  },
  {
    "code": "C77.8",
    "description": "Tumor maligno de los ganglios linf√°ticos de regiones m√∫ltiples"
  },
  {
    "code": "C77.9",
    "description": "Tumor maligno del ganglio linf√°tico, sitio no especificado"
  },
  {
    "code": "C78.0",
    "description": "Tumor maligno secundario del pulm√≥n"
  },
  {
    "code": "C78.1",
    "description": "Tumor maligno secundario del mediastino"
  },
  {
    "code": "C78.2",
    "description": "Tumor maligno secundario de la pleura"
  },
  {
    "code": "C78.3",
    "description": "Tumor maligno secundario de otros √≥rganos respiratorios y de los no especificados"
  },
  {
    "code": "C78.4",
    "description": "Tumor maligno secundario del intestino delgado"
  },
  {
    "code": "C78.5",
    "description": "Tumor maligno secundario del intestino grueso y del recto"
  },
  {
    "code": "C78.6",
    "description": "Tumor maligno secundario del peritoneo y del retroperitoneo"
  },
  {
    "code": "C78.7",
    "description": "Tumor maligno secundario del h√≠gado"
  },
  {
    "code": "C78.8",
    "description": "Tumor maligno secundario de otros √≥rganos digestivos y de los no especificados"
  },
  {
    "code": "C79.0",
    "description": "Tumor maligno secundario del ri√±√≥n y de la pelvis renal"
  },
  {
    "code": "C79.1",
    "description": "Tumor maligno secundario de la vejiga, y de otros √≥rganos y los no especificados de las v√≠as urinarias"
  },
  {
    "code": "C79.2",
    "description": "Tumor maligno secundario de la piel"
  },
  {
    "code": "C79.3",
    "description": "Tumor maligno secundario del enc√©falo y de las meninges cerebrales"
  },
  {
    "code": "C79.4",
    "description": "Tumor maligno secundario de otras partes del sistema nervioso y de las no especificadas"
  },
  {
    "code": "C79.5",
    "description": "Tumor maligno secundario de los huesos y de la m√©dula √≥sea"
  },
  {
    "code": "C79.6",
    "description": "Tumor maligno secundario del ovario"
  },
  {
    "code": "C79.7",
    "description": "Tumor maligno secundario de la gl√°ndula suprarrenal"
  },
  {
    "code": "C79.8",
    "description": "Tumor maligno secundario de otros sitios especificados"
  },
  {
    "code": "C81.0",
    "description": "Enfermedad de Hodgkin con predominio linfoc√≠tico"
  },
  {
    "code": "C81.1",
    "description": "Enfermedad de Hodgkin con esclerosis nodular"
  },
  {
    "code": "C81.2",
    "description": "Enfermedad de Hodgkin con celularidad mixta"
  },
  {
    "code": "C81.3",
    "description": "Enfermedad de Hodgkin con depleci√≥n linfoc√≠tica"
  },
  {
    "code": "C81.7",
    "description": "Otros tipos de enfermedad de Hodgkin"
  },
  {
    "code": "C81.9",
    "description": "Enfermedad de Hodgkin, no especificada"
  },
  {
    "code": "C82.0",
    "description": "Linfoma no Hodgkin de c√©lulas peque√±as hendidas, folicular"
  },
  {
    "code": "C82.1",
    "description": "Linfoma no Hodkin mixto, de peque√±as c√©lulas hendidas y de grandes c√©lulas, folicular"
  },
  {
    "code": "C82.2",
    "description": "Linfoma no Hodgkin de c√©lulas grandes, folicular"
  },
  {
    "code": "C82.7",
    "description": "Otros tipos especificados de linfoma no Hodgkin folicular"
  },
  {
    "code": "C82.9",
    "description": "Linfoma no Hodgkin folicular, sin otra especificaci√≥n"
  },
  {
    "code": "C83.0",
    "description": "Linfoma no Hodgkin de c√©lulas peque√±as (difuso)"
  },
  {
    "code": "C83.1",
    "description": "Linfoma no Hodgkin de c√©lulas peque√±as hendidas (difuso)"
  },
  {
    "code": "C83.2",
    "description": "Linfoma no Hodgkin mixto, de c√©lulas peque√±as y grandes (difuso)"
  },
  {
    "code": "C83.3",
    "description": "Linfoma no Hodgkin de c√©lulas grandes (difuso)"
  },
  {
    "code": "C83.4",
    "description": "Linfoma no Hodgkin inmunobl√°stico (difuso)"
  },
  {
    "code": "C83.5",
    "description": "Linfoma no Hodgkin linfobl√°stico (difuso)"
  },
  {
    "code": "C83.6",
    "description": "Linfoma no Hodgkin indiferenciado (difuso)"
  },
  {
    "code": "C83.7",
    "description": "Tumor de Burkitt"
  },
  {
    "code": "C83.8",
    "description": "Otros tipos especificados de linfoma no Hodgkin difuso"
  },
  {
    "code": "C83.9",
    "description": "Linfoma no Hodgkin difuso, sin otra especificaci√≥n"
  },
  {
    "code": "C84.0",
    "description": "Micosis fungoide"
  },
  {
    "code": "C84.1",
    "description": "Enfermedad de S√©zary"
  },
  {
    "code": "C84.2",
    "description": "Linfoma de zona T"
  },
  {
    "code": "C84.3",
    "description": "Linfoma linfoepitelioide"
  },
  {
    "code": "C84.4",
    "description": "Linfoma de c√©lulas T perif√©rico"
  },
  {
    "code": "C84.5",
    "description": "Otros linfomas de c√©lulas T y los no especificados"
  },
  {
    "code": "C85.0",
    "description": "Linfosarcoma"
  },
  {
    "code": "C85.1",
    "description": "Linfoma de c√©lulas B, sin otra especificaci√≥n"
  },
  {
    "code": "C85.7",
    "description": "Otros tipos especificados de linfoma no Hodgkin"
  },
  {
    "code": "C85.9",
    "description": "Linfoma no Hodgkin, no especificado"
  },
  {
    "code": "C88.0",
    "description": "Macroglobulinemia de Waldenstr√∂m"
  },
  {
    "code": "C88.1",
    "description": "Enfermedad de cadena pesada alfa"
  },
  {
    "code": "C88.2",
    "description": "Enfermedad de cadena pesada gamma"
  },
  {
    "code": "C88.3",
    "description": "Enfermedad inmunoproliferativa del intestino delgado"
  },
  {
    "code": "C88.7",
    "description": "Otras enfermedades inmunoproliferativas malignas"
  },
  {
    "code": "C88.9",
    "description": "Enfermedad inmunoproliferativa maligna, sin otra especificaci√≥n"
  },
  {
    "code": "C90.0",
    "description": "Mieloma m√∫ltiple"
  },
  {
    "code": "C90.1",
    "description": "Leucemia de c√©lulas plasm√°ticas"
  },
  {
    "code": "C90.2",
    "description": "Plasmocitoma, extramedular"
  },
  {
    "code": "C91.0",
    "description": "Leucemia linfobl√°stica aguda"
  },
  {
    "code": "C91.1",
    "description": "Leucemia linfoc√≠tica cr√≥nica"
  },
  {
    "code": "C91.2",
    "description": "Leucemia linfoc√≠tica subaguda"
  },
  {
    "code": "C91.3",
    "description": "Leucemia prolinfoc√≠tica"
  },
  {
    "code": "C91.4",
    "description": "Leucemia de c√©lulas vellosas"
  },
  {
    "code": "C91.5",
    "description": "Leucemia de c√©lulas T adultas"
  },
  {
    "code": "C91.7",
    "description": "Otras leucemias linfoides"
  },
  {
    "code": "C91.9",
    "description": "Leucemia linfoide, sin otra especificaci√≥n"
  },
  {
    "code": "C92.0",
    "description": "Leucemia mieloide aguda"
  },
  {
    "code": "C92.1",
    "description": "Leucemia mieloide cr√≥nica"
  },
  {
    "code": "C92.2",
    "description": "Leucemia mieloide subaguda"
  },
  {
    "code": "C92.3",
    "description": "Sarcoma mieloide"
  },
  {
    "code": "C92.4",
    "description": "Leucemia promieloc√≠tica aguda"
  },
  {
    "code": "C92.5",
    "description": "Leucemia mielomonoc√≠tica aguda"
  },
  {
    "code": "C92.7",
    "description": "Otras leucemias mieloides"
  },
  {
    "code": "C92.9",
    "description": "Leucemia mieloide, sin otra especificaci√≥n"
  },
  {
    "code": "C93.0",
    "description": "Leucemia monoc√≠tica aguda"
  },
  {
    "code": "C93.1",
    "description": "Leucemia monoc√≠tica cr√≥nica"
  },
  {
    "code": "C93.2",
    "description": "Leucemia monoc√≠tica subaguda"
  },
  {
    "code": "C93.7",
    "description": "Otras leucemias monoc√≠ticas"
  },
  {
    "code": "C93.9",
    "description": "Leucemia monoc√≠tica, sin otra especificaci√≥n"
  },
  {
    "code": "C94.0",
    "description": "Eritremia aguda y eritroleucemia"
  },
  {
    "code": "C94.1",
    "description": "Eritremia cr√≥nica"
  },
  {
    "code": "C94.2",
    "description": "Leucemia megacariobl√°stica aguda"
  },
  {
    "code": "C94.3",
    "description": "Leucemia de mastocitos"
  },
  {
    "code": "C94.4",
    "description": "Panmielosis aguda"
  },
  {
    "code": "C94.5",
    "description": "Mielofibrosis aguda"
  },
  {
    "code": "C94.7",
    "description": "Otras leucemias especificadas"
  },
  {
    "code": "C95.0",
    "description": "Leucemia aguda, c√©lulas de tipo no especificado"
  },
  {
    "code": "C95.1",
    "description": "Leucemia cr√≥nica, c√©lulas de tipo no especificado"
  },
  {
    "code": "C95.2",
    "description": "Leucemia subaguda, c√©lulas de tipo no especificado"
  },
  {
    "code": "C95.7",
    "description": "Otras leucemias de c√©lulas de tipo no especificado"
  },
  {
    "code": "C95.9",
    "description": "Leucemia, no especificada"
  },
  {
    "code": "C96.0",
    "description": "Enfermedad de Letterer-Siwe"
  },
  {
    "code": "C96.1",
    "description": "Histiocitosis maligna"
  },
  {
    "code": "C96.2",
    "description": "Tumor maligno de mastocitos"
  },
  {
    "code": "C96.3",
    "description": "Linfoma histioc√≠tico verdadero"
  },
  {
    "code": "C96.7",
    "description": "Otros tumores malignos especificados del tejido linf√°tico, hematopoy√©tico y tejidos afines"
  },
  {
    "code": "C96.9",
    "description": "Tumor maligno del tejido linf√°tico, hematopoy√©tico y tejidos afines, sin otra especificaci√≥n"
  },
  {
    "code": "D00.0",
    "description": "Carcinoma in situ del labio, de la cavidad bucal y de la faringe"
  },
  {
    "code": "D00.1",
    "description": "Carcinoma in situ del es√≥fago"
  },
  {
    "code": "D00.2",
    "description": "Carcinoma in situ del est√≥mago"
  },
  {
    "code": "D01.0",
    "description": "Carcinoma in situ del colon"
  },
  {
    "code": "D01.1",
    "description": "Carcinoma in situ de la uni√≥n rectosigmoidea"
  },
  {
    "code": "D01.2",
    "description": "Carcinoma in situ del recto"
  },
  {
    "code": "D01.3",
    "description": "Carcinoma in situ del ano y del conducto anal"
  },
  {
    "code": "D01.4",
    "description": "Carcinoma in situ de otras partes y de las no especificadas del intestino"
  },
  {
    "code": "D01.5",
    "description": "Carcinoma in situ del h√≠gado, de la ves√≠cula biliar y del conducto biliar"
  },
  {
    "code": "D01.7",
    "description": "Carcinoma in situ de otras partes especificadas de √≥rganos digestivos"
  },
  {
    "code": "D01.9",
    "description": "Carcinoma in situ de √≥rganos digestivos no especificados"
  },
  {
    "code": "D02.0",
    "description": "Carcinoma in situ de la laringe"
  },
  {
    "code": "D02.1",
    "description": "Carcinoma in situ de la tr√°quea"
  },
  {
    "code": "D02.2",
    "description": "Carcinoma in situ del bronquio y del pulm√≥n"
  },
  {
    "code": "D02.3",
    "description": "Carcinoma in situ de otras partes del sistema respiratorio"
  },
  {
    "code": "D02.4",
    "description": "Carcinoma in situ de √≥rganos respiratorios no especificados"
  },
  {
    "code": "D03.0",
    "description": "Melanoma in situ del labio"
  },
  {
    "code": "D03.1",
    "description": "Melanoma in situ del p√°rpado y de la comisura palpebral"
  },
  {
    "code": "D03.2",
    "description": "Melanoma in situ de la oreja y del conducto auditivo externo"
  },
  {
    "code": "D03.3",
    "description": "Melanoma in situ de otras partes y de las no especificadas de la cara"
  },
  {
    "code": "D03.4",
    "description": "Melanoma in situ del cuero cabelludo y del cuello"
  },
  {
    "code": "D03.5",
    "description": "Melanoma in situ del tronco"
  },
  {
    "code": "D03.6",
    "description": "Melanoma in situ del miembro superior, incluido el hombro"
  },
  {
    "code": "D03.7",
    "description": "Melanoma in situ del miembro inferior, incluida la cadera"
  },
  {
    "code": "D03.8",
    "description": "Melanoma in situ de otros sitios"
  },
  {
    "code": "D03.9",
    "description": "Melanoma in situ, sitio no especificado"
  },
  {
    "code": "D04.0",
    "description": "Carcinoma in situ de la piel del labio"
  },
  {
    "code": "D04.1",
    "description": "Carcinoma in situ de la piel del p√°rpado y de la comisura palpebral"
  },
  {
    "code": "D04.2",
    "description": "Carcinoma in situ de la piel de la oreja y del conducto auditivo externo"
  },
  {
    "code": "D04.3",
    "description": "Carcinoma in situ de la piel de otras partes y de las no especificadas de la cara"
  },
  {
    "code": "D04.4",
    "description": "Carcinoma in situ de la piel del cuero cabelludo y cuello"
  },
  {
    "code": "D04.5",
    "description": "Carcinoma in situ de la piel del tronco"
  },
  {
    "code": "D04.6",
    "description": "Carcinoma in situ de la piel del miembro superior, incluido el hombro"
  },
  {
    "code": "D04.7",
    "description": "Carcinoma in situ de la piel del miembro inferior, incluida la cadera"
  },
  {
    "code": "D04.8",
    "description": "Carcinoma in situ de la piel de otros sitios especificados"
  },
  {
    "code": "D04.9",
    "description": "Carcinoma in situ de la piel, sitio no especificado"
  },
  {
    "code": "D05.0",
    "description": "Carcinoma in situ lobular"
  },
  {
    "code": "D05.1",
    "description": "Carcinoma in situ intracanalicular"
  },
  {
    "code": "D05.7",
    "description": "Otros carcinomas in situ de la mama"
  },
  {
    "code": "D05.9",
    "description": "Carcinoma in situ de la mama, parte no especificada"
  },
  {
    "code": "D06.0",
    "description": "Carcinoma in situ del endoc√©rvix"
  },
  {
    "code": "D06.1",
    "description": "Carcinoma in situ del exoc√©rvix"
  },
  {
    "code": "D06.7",
    "description": "Carcinoma in situ de otras partes especificadas del cuello del √∫tero"
  },
  {
    "code": "D06.9",
    "description": "Carcinoma in situ del cuello del √∫tero, parte no especificada"
  },
  {
    "code": "D07.0",
    "description": "Carcinoma in situ del endometrio"
  },
  {
    "code": "D07.1",
    "description": "Carcinoma in situ de la vulva"
  },
  {
    "code": "D07.2",
    "description": "Carcinoma in situ de la vagina"
  },
  {
    "code": "D07.3",
    "description": "Carcinoma in situ de otros sitios de √≥rganos genitales femeninos y de los no especificados"
  },
  {
    "code": "D07.4",
    "description": "Carcinoma in situ del pene"
  },
  {
    "code": "D07.5",
    "description": "Carcinoma in situ de la pr√≥stata"
  },
  {
    "code": "D07.6",
    "description": "Carcinoma in situ de otros √≥rganos genitales masculinos y de los no especificados"
  },
  {
    "code": "D09.0",
    "description": "Carcinoma in situ de la vejiga"
  },
  {
    "code": "D09.1",
    "description": "Carcinoma in situ de otros √≥rganos urinarios y de los no especificados"
  },
  {
    "code": "D09.2",
    "description": "Carcinoma in situ del ojo"
  },
  {
    "code": "D09.3",
    "description": "Carcinoma in situ de la gl√°ndula tiroides y de otras gl√°ndulas endocrinas"
  },
  {
    "code": "D09.7",
    "description": "Carcinoma in situ de otros sitios especificados"
  },
  {
    "code": "D09.9",
    "description": "Carcinoma in situ, sitio no especificado"
  },
  {
    "code": "D10.0",
    "description": "Tumor benigno del labio"
  },
  {
    "code": "D10.1",
    "description": "Tumor benigno de la lengua"
  },
  {
    "code": "D10.2",
    "description": "Tumor benigno del piso de la boca"
  },
  {
    "code": "D10.3",
    "description": "Tumor benigno de otras partes y de las no especificadas de la boca"
  },
  {
    "code": "D10.4",
    "description": "Tumor benigno de la am√≠gdala"
  },
  {
    "code": "D10.5",
    "description": "Tumor benigno de otras partes de la orofaringe"
  },
  {
    "code": "D10.6",
    "description": "Tumor benigno de la nasofaringe"
  },
  {
    "code": "D10.7",
    "description": "Tumor benigno de la hipofaringe"
  },
  {
    "code": "D10.9",
    "description": "Tumor benigno de la faringe, parte no especificada"
  },
  {
    "code": "D11.0",
    "description": "Tumor benigno de la gl√°ndula par√≥tida"
  },
  {
    "code": "D11.7",
    "description": "Tumor benigno de otras gl√°ndulas salivales mayores especificadas"
  },
  {
    "code": "D11.9",
    "description": "Tumor benigno de la gl√°ndula salival mayor, sin otra especificaci√≥n"
  },
  {
    "code": "D12.0",
    "description": "Tumor benigno del ciego"
  },
  {
    "code": "D12.1",
    "description": "Tumor benigno del ap√©ndice"
  },
  {
    "code": "D12.2",
    "description": "Tumor benigno del colon ascendente"
  },
  {
    "code": "D12.3",
    "description": "Tumor benigno del colon transverso"
  },
  {
    "code": "D12.4",
    "description": "Tumor benigno del colon descendente"
  },
  {
    "code": "D12.5",
    "description": "Tumor benigno del colon sigmoide"
  },
  {
    "code": "D12.6",
    "description": "Tumor benigno del colon, parte no especificada"
  },
  {
    "code": "D12.7",
    "description": "Tumor benigno de la uni√≥n rectosigmoidea"
  },
  {
    "code": "D12.8",
    "description": "Tumor benigno del recto"
  },
  {
    "code": "D12.9",
    "description": "Tumor benigno del conducto anal y del ano"
  },
  {
    "code": "D13.0",
    "description": "Tumor benigno del es√≥fago"
  },
  {
    "code": "D13.1",
    "description": "Tumor benigno del est√≥mago"
  },
  {
    "code": "D13.2",
    "description": "Tumor benigno del duodeno"
  },
  {
    "code": "D13.3",
    "description": "Tumor benigno de otras partes y de las no especificadas del intestino delgado"
  },
  {
    "code": "D13.4",
    "description": "Tumor benigno del h√≠gado"
  },
  {
    "code": "D13.5",
    "description": "Tumor benigno de las v√≠as biliares extrahep√°ticas"
  },
  {
    "code": "D13.6",
    "description": "Tumor benigno del p√°ncreas"
  },
  {
    "code": "D13.7",
    "description": "Tumor benigno del p√°ncreas endocrino"
  },
  {
    "code": "D13.9",
    "description": "Tumor benigno de sitios mal definidos del sistema digestivo"
  },
  {
    "code": "D14.0",
    "description": "Tumor benigno del o√≠do medio, de la cavidad nasal y de los senos paranasales"
  },
  {
    "code": "D14.1",
    "description": "Tumor benigno de la laringe"
  },
  {
    "code": "D14.2",
    "description": "Tumor benigno de la tr√°quea"
  },
  {
    "code": "D14.3",
    "description": "Tumor benigno de los bronquios y del pulm√≥n"
  },
  {
    "code": "D14.4",
    "description": "Tumor benigno del sistema respiratorio, sitio no especificado"
  },
  {
    "code": "D15.0",
    "description": "Tumor benigno del timo"
  },
  {
    "code": "D15.1",
    "description": "Tumor benigno del coraz√≥n"
  },
  {
    "code": "D15.2",
    "description": "Tumor benigno del mediastino"
  },
  {
    "code": "D15.7",
    "description": "Tumor benigno de otros √≥rganos intrator√°cicos especificados"
  },
  {
    "code": "D15.9",
    "description": "Tumor benigno de √≥rgano intrator√°cico no especificado"
  },
  {
    "code": "D16.0",
    "description": "Tumor benigno del om√≥plato y huesos largos del miembro superior"
  },
  {
    "code": "D16.1",
    "description": "Tumor benigno de los huesos cortos del miembro superior"
  },
  {
    "code": "D16.2",
    "description": "Tumor benigno de los huesos largos del miembro inferior"
  },
  {
    "code": "D16.3",
    "description": "Tumor benigno de los huesos cortos del miembro inferior"
  },
  {
    "code": "D16.4",
    "description": "Tumor benigno de los huesos del cr√°neo y de la cara"
  },
  {
    "code": "D16.5",
    "description": "Tumor benigno del maxilar inferior"
  },
  {
    "code": "D16.6",
    "description": "Tumor benigno de la columna vertebral"
  },
  {
    "code": "D16.7",
    "description": "Tumor benigno de las costillas, estern√≥n y clav√≠cula"
  },
  {
    "code": "D16.8",
    "description": "Tumor benigno de los huesos p√©lvicos, sacro y c√≥ccix"
  },
  {
    "code": "D16.9",
    "description": "Tumor benigno del hueso y del cart√≠lago articular, sitio no especificado"
  },
  {
    "code": "D17.0",
    "description": "Tumor benigno lipomatoso de piel y de tejido subcut√°neo de cabeza, cara y cuello"
  },
  {
    "code": "D17.1",
    "description": "Tumor benigno lipomatoso de piel y de tejido subcut√°neo del tronco"
  },
  {
    "code": "D17.2",
    "description": "Tumor benigno lipomatoso de piel y de tejido subcut√°neo de miembros"
  },
  {
    "code": "D17.3",
    "description": "Tumor benigno lipomatoso de piel y de tejido subcut√°neo de otros sitios y de los no especificados"
  },
  {
    "code": "D17.4",
    "description": "Tumor benigno lipomatoso de los √≥rganos intrator√°cicos"
  },
  {
    "code": "D17.5",
    "description": "Tumor benigno lipomatoso de los √≥rganos intraabdominales"
  },
  {
    "code": "D17.6",
    "description": "Tumor benigno lipomatoso del cord√≥n esperm√°tico"
  },
  {
    "code": "D17.7",
    "description": "Tumor benigno lipomatoso de otros sitios especificados"
  },
  {
    "code": "D17.9",
    "description": "Tumor benigno lipomatoso, de sitio no especificado"
  },
  {
    "code": "D18.0",
    "description": "Hemangioma, de cualquier sitio"
  },
  {
    "code": "D18.1",
    "description": "Linfangioma, de cualquier sitio"
  },
  {
    "code": "D19.0",
    "description": "Tumor benigno del tejido mesotelial de la pleura"
  },
  {
    "code": "D19.1",
    "description": "Tumor benigno del tejido mesotelial del peritoneo"
  },
  {
    "code": "D19.7",
    "description": "Tumor benigno del tejido mesotelial de otros sitios especificados"
  },
  {
    "code": "D19.9",
    "description": "Tumor benigno del tejido mesotelial, de sitio no especificado"
  },
  {
    "code": "D20.0",
    "description": "Tumor benigno del retroperitoneo"
  },
  {
    "code": "D20.1",
    "description": "Tumor benigno del peritoneo"
  },
  {
    "code": "D21.0",
    "description": "Tumor benigno del tejido conjuntivo y de otros tejidos blandos de cabeza, cara y cuello"
  },
  {
    "code": "D21.1",
    "description": "Tumor benigno del tejido conjuntivo y de otros tejidos blandos del miembro superior, incluido el hombro"
  },
  {
    "code": "D21.2",
    "description": "Tumor benigno del tejido conjuntivo y de otros tejidos blandos del miembro inferior, incluida la cadera"
  },
  {
    "code": "D21.3",
    "description": "Tumor benigno del tejido conjuntivo y de otros tejidos blandos del t√≥rax"
  },
  {
    "code": "D21.4",
    "description": "Tumor benigno del tejido conjuntivo y otros tejidos blandos del abdomen"
  },
  {
    "code": "D21.5",
    "description": "Tumor benigno del tejido conjuntivo y otros tejidos blandos de la pelvis"
  },
  {
    "code": "D21.6",
    "description": "Tumor benigno del tejido conjuntivo y otros tejidos blandos del tronco, sin otra especificaci√≥n"
  },
  {
    "code": "D21.9",
    "description": "Tumor benigno del tejido conjuntivo y otros tejidos blandos, de sitio no especificado"
  },
  {
    "code": "D22.0",
    "description": "Nevo melanoc√≠tico del labio"
  },
  {
    "code": "D22.1",
    "description": "Nevo melanoc√≠tico del p√°rpado, incluida la comisura palpebral"
  },
  {
    "code": "D22.2",
    "description": "Nevo melanoc√≠tico de la oreja y del conducto auditivo externo"
  },
  {
    "code": "D22.3",
    "description": "Nevo melanoc√≠tico de otras partes y de las no especificadas de la cara"
  },
  {
    "code": "D22.4",
    "description": "Nevo melanoc√≠tico del cuero cabelludo y del cuello"
  },
  {
    "code": "D22.5",
    "description": "Nevo melanoc√≠tico del tronco"
  },
  {
    "code": "D22.6",
    "description": "Nevo melanoc√≠tico del miembro superior, incluido el hombro"
  },
  {
    "code": "D22.7",
    "description": "Nevo melanoc√≠tico del miembro inferior, incluida la cadera"
  },
  {
    "code": "D22.9",
    "description": "Nevo melanoc√≠tico, sitio no especificado"
  },
  {
    "code": "D23.0",
    "description": "Tumor benigno de la piel del labio"
  },
  {
    "code": "D23.1",
    "description": "Tumor benigno de la piel del p√°rpado, incluida la comisura palpebral"
  },
  {
    "code": "D23.2",
    "description": "Tumor benigno de la piel de la oreja y del conducto auditivo externo"
  },
  {
    "code": "D23.3",
    "description": "Tumor benigno de la piel de otras partes y de las no especificadas de la cara"
  },
  {
    "code": "D23.4",
    "description": "Tumor benigno de la piel del cuero cabelludo y del cuello"
  },
  {
    "code": "D23.5",
    "description": "Tumor benigno de la piel del tronco"
  },
  {
    "code": "D23.6",
    "description": "Tumor benigno de la piel del miembro superior, incluido el hombro"
  },
  {
    "code": "D23.7",
    "description": "Tumor benigno de la piel del miembro inferior, incluida la cadera"
  },
  {
    "code": "D23.9",
    "description": "Tumor benigno de la piel, sitio no especificado"
  },
  {
    "code": "D25.0",
    "description": "Leiomioma submucoso del √∫tero"
  },
  {
    "code": "D25.1",
    "description": "Leiomioma intramural del √∫tero"
  },
  {
    "code": "D25.2",
    "description": "Leiomioma subseroso del √∫tero"
  },
  {
    "code": "D25.9",
    "description": "Leiomioma del √∫tero, sin otra especificaci√≥n"
  },
  {
    "code": "D26.0",
    "description": "Tumor benigno del cuello del √∫tero"
  },
  {
    "code": "D26.1",
    "description": "Tumor benigno del cuerpo del √∫tero"
  },
  {
    "code": "D26.7",
    "description": "Tumor benigno de otras partes especificadas del √∫tero"
  },
  {
    "code": "D26.9",
    "description": "Tumor benigno del √∫tero, parte no especificada"
  },
  {
    "code": "D28.0",
    "description": "Tumor benigno de la vulva"
  },
  {
    "code": "D28.1",
    "description": "Tumor benigno de la vagina"
  },
  {
    "code": "D28.2",
    "description": "Tumor benigno de la trompa de Falopio y de los ligamentos uterinos"
  },
  {
    "code": "D28.7",
    "description": "Tumor benigno de otros sitios especificados de los √≥rganos genitales femeninos"
  },
  {
    "code": "D28.9",
    "description": "Tumor benigno de √≥rgano genital femenino, sitio no especificado"
  },
  {
    "code": "D29.0",
    "description": "Tumor benigno del pene"
  },
  {
    "code": "D29.1",
    "description": "Tumor benigno de la pr√≥stata"
  },
  {
    "code": "D29.2",
    "description": "Tumor benigno de los test√≠culos"
  },
  {
    "code": "D29.3",
    "description": "Tumor benigno del epid√≠dimo"
  },
  {
    "code": "D29.4",
    "description": "Tumor benigno del escroto"
  },
  {
    "code": "D29.7",
    "description": "Tumor benigno de otros √≥rganos genitales masculinos"
  },
  {
    "code": "D29.9",
    "description": "Tumor benigno de √≥rgano genital masculino, sitio no especificado"
  },
  {
    "code": "D30.0",
    "description": "Tumor benigno del ri√±√≥n"
  },
  {
    "code": "D30.1",
    "description": "Tumor benigno de la pelvis renal"
  },
  {
    "code": "D30.2",
    "description": "Tumor benigno del ur√©ter"
  },
  {
    "code": "D30.3",
    "description": "Tumor benigno de la vejiga"
  },
  {
    "code": "D30.4",
    "description": "Tumor benigno de la uretra"
  },
  {
    "code": "D30.7",
    "description": "Tumor benigno de otros √≥rganos urinarios"
  },
  {
    "code": "D30.9",
    "description": "Tumor benigno de √≥rgano urinario no especificado"
  },
  {
    "code": "D31.0",
    "description": "Tumor benigno de la conjuntiva"
  },
  {
    "code": "D31.1",
    "description": "Tumor benigno de la c√≥rnea"
  },
  {
    "code": "D31.2",
    "description": "Tumor benigno de la retina"
  },
  {
    "code": "D31.3",
    "description": "Tumor benigno de la coroides"
  },
  {
    "code": "D31.4",
    "description": "Tumor benigno del cuerpo ciliar"
  },
  {
    "code": "D31.5",
    "description": "Tumor benigno de las gl√°ndulas y de los conductos lagrimales"
  },
  {
    "code": "D31.6",
    "description": "Tumor benigno de la √≥rbita, parte no especificada"
  },
  {
    "code": "D31.9",
    "description": "Tumor benigno del ojo, parte no especificada"
  },
  {
    "code": "D32.0",
    "description": "Tumor benigno de las meninges cerebrales"
  },
  {
    "code": "D32.1",
    "description": "Tumor benigno de las meninges raqu√≠deas"
  },
  {
    "code": "D32.9",
    "description": "Tumor benigno de las meninges, parte no especificada"
  },
  {
    "code": "D33.0",
    "description": "Tumor benigno del enc√©falo, supratentorial"
  },
  {
    "code": "D33.1",
    "description": "Tumor benigno del enc√©falo, infratentorial"
  },
  {
    "code": "D33.2",
    "description": "Tumor benigno del enc√©falo, parte no especificada"
  },
  {
    "code": "D33.3",
    "description": "Tumor benigno de los nervios craneales"
  },
  {
    "code": "D33.4",
    "description": "Tumor benigno de la m√©dula espinal"
  },
  {
    "code": "D33.7",
    "description": "Tumor benigno de otras partes especificadas del sistema nervioso central"
  },
  {
    "code": "D33.9",
    "description": "Tumor benigno del sistema nervioso central, sitio no especificado"
  },
  {
    "code": "D35.0",
    "description": "Tumor benigno de la gl√°ndula suprarrenal"
  },
  {
    "code": "D35.1",
    "description": "Tumor benigno de la gl√°ndula paratiroides"
  },
  {
    "code": "D35.2",
    "description": "Tumor benigno de la hip√≥fisis"
  },
  {
    "code": "D35.3",
    "description": "Tumor benigno del conducto craneofar√≠ngeo"
  },
  {
    "code": "D35.4",
    "description": "Tumor benigno de la gl√°ndula pineal"
  },
  {
    "code": "D35.5",
    "description": "Tumor benigno del cuerpo carot√≠deo"
  },
  {
    "code": "D35.6",
    "description": "Tumor benigno del cuerpo a√≥rtico y de otros cuerpos cromafines"
  },
  {
    "code": "D35.7",
    "description": "Tumor benigno de otras gl√°ndulas endocrinas especificadas"
  },
  {
    "code": "D35.8",
    "description": "Tumor benigno pluriglandular"
  },
  {
    "code": "D35.9",
    "description": "Tumor benigno de gl√°ndula endocrina no especificada"
  },
  {
    "code": "D36.0",
    "description": "Tumor benigno de los ganglios linf√°ticos"
  },
  {
    "code": "D36.1",
    "description": "Tumor benigno de los nervios perif√©ricos y del sistema nervioso aut√≥nomo"
  },
  {
    "code": "D36.7",
    "description": "Tumor benigno de otros sitios especificados"
  },
  {
    "code": "D36.9",
    "description": "Tumor benigno de sitio no especificado"
  },
  {
    "code": "D37.0",
    "description": "Tumor de comportamiento incierto o desconocido del labio, de la cavidad bucal y de la faringe"
  },
  {
    "code": "D37.1",
    "description": "Tumor de comportamiento incierto o desconocido del est√≥mago"
  },
  {
    "code": "D37.2",
    "description": "Tumor de comportamiento incierto o desconocido del intestino delgado"
  },
  {
    "code": "D37.3",
    "description": "Tumor de comportamiento incierto o desconocido del ap√©ndice"
  },
  {
    "code": "D37.4",
    "description": "Tumor de comportamiento incierto o desconocido del colon"
  },
  {
    "code": "D37.5",
    "description": "Tumor de comportamiento incierto o desconocido del recto"
  },
  {
    "code": "D37.6",
    "description": "Tumor de comportamiento incierto o desconocido del h√≠gado, de la ves√≠cula biliar y del conducto biliar"
  },
  {
    "code": "D37.7",
    "description": "Tumor de comportamiento incierto o desconocido de otros √≥rganos digestivos especificados"
  },
  {
    "code": "D37.9",
    "description": "Tumor de comportamiento incierto o desconocido de √≥rganos digestivos, sitio no especificado"
  },
  {
    "code": "D38.0",
    "description": "Tumor de comportamiento incierto o desconocido de laringe"
  },
  {
    "code": "D38.1",
    "description": "Tumor de comportamiento incierto o desconocido de la tr√°quea, de los bronquios y del pulm√≥n"
  },
  {
    "code": "D38.2",
    "description": "Tumor de comportamiento incierto o desconocido de la pleura"
  },
  {
    "code": "D38.3",
    "description": "Tumor de comportamiento incierto o desconocido del mediastino"
  },
  {
    "code": "D38.4",
    "description": "Tumor de comportamiento incierto o desconocido del timo"
  },
  {
    "code": "D38.5",
    "description": "Tumor de comportamiento incierto o desconocido de otros √≥rganos respiratorios y del o√≠do medio"
  },
  {
    "code": "D38.6",
    "description": "Tumor de comportamiento incierto o desconocido de √≥rganos respiratorios, sitio no especificado"
  },
  {
    "code": "D39.0",
    "description": "Tumor de comportamiento incierto o desconocido del √∫tero"
  },
  {
    "code": "D39.1",
    "description": "Tumor de comportamiento incierto o desconocido del ovario"
  },
  {
    "code": "D39.2",
    "description": "Tumor de comportamiento incierto o desconocido de la placenta"
  },
  {
    "code": "D39.7",
    "description": "Tumor de comportamiento incierto o desconocido de otros √≥rganos genitales femeninos"
  },
  {
    "code": "D39.9",
    "description": "Tumor de comportamiento incierto o desconocido de √≥rgano genital femenino no especificado"
  },
  {
    "code": "D40.0",
    "description": "Tumor de comportamiento incierto o desconocido de la pr√≥stata"
  },
  {
    "code": "D40.1",
    "description": "Tumor de comportamiento incierto o desconocido del test√≠culo"
  },
  {
    "code": "D40.7",
    "description": "Tumor de comportamiento incierto o desconocido de otros √≥rganos genitales masculinos"
  },
  {
    "code": "D40.9",
    "description": "Tumor de comportamiento incierto o desconocido de √≥rgano genital masculino no especificado"
  },
  {
    "code": "D41.0",
    "description": "Tumor de comportamiento incierto o desconocido del ri√±√≥n"
  },
  {
    "code": "D41.1",
    "description": "Tumor de comportamiento incierto o desconocido de la pelvis renal"
  },
  {
    "code": "D41.2",
    "description": "Tumor de comportamiento incierto o desconocido del ur√©ter"
  },
  {
    "code": "D41.3",
    "description": "Tumor de comportamiento incierto o desconocido de la uretra"
  },
  {
    "code": "D41.4",
    "description": "Tumor de comportamiento incierto o desconocido de la vejiga"
  },
  {
    "code": "D41.7",
    "description": "Tumor de comportamiento incierto o desconocido de otros √≥rganos urinarios"
  },
  {
    "code": "D41.9",
    "description": "Tumor de comportamiento incierto o desconocido de √≥rgano urinario no especificado"
  },
  {
    "code": "D42.0",
    "description": "Tumor de comportamiento incierto o desconocido de las meninges cerebrales"
  },
  {
    "code": "D42.1",
    "description": "Tumor de comportamiento incierto o desconocido de las meninges raqu√≠deas"
  },
  {
    "code": "D42.9",
    "description": "Tumor de comportamiento incierto o desconocido de las meninges, parte no especificada"
  },
  {
    "code": "D43.0",
    "description": "Tumor de comportamiento incierto o desconocido del enc√©falo, supratentorial"
  },
  {
    "code": "D43.1",
    "description": "Tumor de comportamiento incierto o desconocido del enc√©falo, infratentorial"
  },
  {
    "code": "D43.2",
    "description": "Tumor de comportamiento incierto o desconocido del enc√©falo, parte no especificada"
  },
  {
    "code": "D43.3",
    "description": "Tumor de comportamiento incierto o desconocido de los nervios craneales"
  },
  {
    "code": "D43.4",
    "description": "Tumor de comportamiento incierto o desconocido de la m√©dula espinal"
  },
  {
    "code": "D43.7",
    "description": "Tumor de comportamiento incierto o desconocido de otras partes especificadas del sistema nervioso central"
  },
  {
    "code": "D43.9",
    "description": "Tumor de comportamiento incierto o desconocido del sistema nervioso central, sitio no especificado"
  },
  {
    "code": "D44.0",
    "description": "Tumor de comportamiento incierto o desconocido de la gl√°ndula tiroides"
  },
  {
    "code": "D44.1",
    "description": "Tumor de comportamiento incierto o desconocido de la gl√°ndula suprarrenal"
  },
  {
    "code": "D44.2",
    "description": "Tumor de comportamiento incierto o desconocido de la gl√°ndula paratiroides"
  },
  {
    "code": "D44.3",
    "description": "Tumor de comportamiento incierto o desconocido de la gl√°ndula hip√≥fisis"
  },
  {
    "code": "D44.4",
    "description": "Tumor de comportamiento incierto o desconocido del conducto craneofar√≠ngeo"
  },
  {
    "code": "D44.5",
    "description": "Tumor de comportamiento incierto o desconocido de la gl√°ndula pineal"
  },
  {
    "code": "D44.6",
    "description": "Tumor de comportamiento incierto o desconocido del cuerpo carot√≠deo"
  },
  {
    "code": "D44.7",
    "description": "Tumor de comportamiento incierto o desconocido del cuerpo a√≥rtico y otros cuerpos cromafines"
  },
  {
    "code": "D44.8",
    "description": "Tumor de comportamiento incierto o desconocido con afectaci√≥n pluriglandular"
  },
  {
    "code": "D44.9",
    "description": "Tumor de comportamiento incierto o desconocido de gl√°ndula endocrina no especificada"
  },
  {
    "code": "D46.0",
    "description": "Anemia refractaria sin sideroblastos, as√≠ descrita"
  },
  {
    "code": "D46.1",
    "description": "Anemia refractaria con sideroblastos"
  },
  {
    "code": "D46.2",
    "description": "Anemia refractaria con exceso de blastos"
  },
  {
    "code": "D46.3",
    "description": "Anemia refractaria con exceso de blastos con transformaci√≥n"
  },
  {
    "code": "D46.4",
    "description": "Anemia refractaria, sin otra especificaci√≥n"
  },
  {
    "code": "D46.7",
    "description": "Otros s√≠ndromes mielodispl√°sicos"
  },
  {
    "code": "D46.9",
    "description": "S√≠ndrome mielodispl√°sico, sin otra especificaci√≥n"
  },
  {
    "code": "D47.0",
    "description": "Tumor de comportamiento incierto o desconocido de los mastocitos e histiocitos"
  },
  {
    "code": "D47.1",
    "description": "Enfermedad mieloproliferativa cr√≥nica"
  },
  {
    "code": "D47.2",
    "description": "Gammopat√≠a monoclonal"
  },
  {
    "code": "D47.3",
    "description": "Trombocitopenia (hemorr√°gica) esencial"
  },
  {
    "code": "D47.7",
    "description": ""
  },
  {
    "code": "D47.9",
    "description": ""
  },
  {
    "code": "D48.0",
    "description": "Tumor de comportamiento incierto o desconocido del hueso y cart√≠lago articular"
  },
  {
    "code": "D48.1",
    "description": "Tumor de comportamiento incierto o desconocido del tejido conjuntivo y otro tejido blando"
  },
  {
    "code": "D48.2",
    "description": "Tumor de comportamiento incierto o desconocido de los nervios perif√©ricos y del sistema nervioso aut√≥nomo"
  },
  {
    "code": "D48.3",
    "description": "Tumor de comportamiento incierto o desconocido del retroperitoneo"
  },
  {
    "code": "D48.4",
    "description": "Tumor de comportamiento incierto o desconocido del peritoneo"
  },
  {
    "code": "D48.5",
    "description": "Tumor de comportamiento incierto o desconocido de la piel"
  },
  {
    "code": "D48.6",
    "description": "Tumor de comportamiento incierto o desconocido de la mama"
  },
  {
    "code": "D48.7",
    "description": "Tumor de comportamiento incierto o desconocido de otros sitios especificados"
  },
  {
    "code": "D48.9",
    "description": "Tumor de comportamiento incierto o desconocido, de sitio no especificado"
  },
  {
    "code": "D50.0",
    "description": "Anemia por deficiencia de hierro secundaria a p√©rdida de sangre (cr√≥nica)"
  },
  {
    "code": "D50.1",
    "description": "Disfagia siderop√©nica"
  },
  {
    "code": "D50.8",
    "description": "Otras anemias por deficiencia de hierro"
  },
  {
    "code": "D50.9",
    "description": "Anemia por deficiencia de hierro sin otra especificaci√≥n"
  },
  {
    "code": "D51.0",
    "description": "Anemia por deficiencia de vitamina B12 debida a deficiencia del factor intr√≠nseco"
  },
  {
    "code": "D51.1",
    "description": "Anemia por deficiencia de vitamina B12 debida a mala absorci√≥n selectiva de vitamina B12 con proteinuria"
  },
  {
    "code": "D51.2",
    "description": "Deficiencia de trascobalamina II"
  },
  {
    "code": "D51.3",
    "description": "Otras anemias por deficiencia diet√©tica de vitamina B12"
  },
  {
    "code": "D51.8",
    "description": "Otras anemias por deficiencia de vitamina B12"
  },
  {
    "code": "D51.9",
    "description": "Anemia por deficiencia de vitamina B12, sin otra especificaci√≥n"
  },
  {
    "code": "D52.0",
    "description": "Anemia por deficiencia diet√©tica de folatos"
  },
  {
    "code": "D52.1",
    "description": "Anemia por deficiencia de folatos inducida por drogas"
  },
  {
    "code": "D52.8",
    "description": "Otras anemias por deficiencia de folatos"
  },
  {
    "code": "D52.9",
    "description": "Anemia por deficiencia de folatos, sin otra especificaci√≥n"
  },
  {
    "code": "D53.0",
    "description": "Anemia por deficiencia de prote√≠nas"
  },
  {
    "code": "D53.1",
    "description": "Otras anemias megalobl√°sticas, no clasificadas en otra parte"
  },
  {
    "code": "D53.2",
    "description": "Anemia escorb√∫tica"
  },
  {
    "code": "D53.8",
    "description": "Otras anemias nutricionales especificadas"
  },
  {
    "code": "D53.9",
    "description": "Anemia nutricional, no especificada"
  },
  {
    "code": "D55.0",
    "description": "Anemia debida a deficiencia de glucosa-6-fosfato deshidrogenasa [G6FD]"
  },
  {
    "code": "D55.1",
    "description": "Anemia debida a otros trastornos del metabolismo del glutati√≥n"
  },
  {
    "code": "D55.2",
    "description": "Anemia debida a trastornos de las enzimas glucol√≠ticas"
  },
  {
    "code": "D55.3",
    "description": "Anemia debida a trastornos del metabolismo de los nucle√≥tidos"
  },
  {
    "code": "D55.8",
    "description": "Otras anemias debidas a trastornos enzim√°ticos"
  },
  {
    "code": "D55.9",
    "description": "Anemia debida a trastornos enzim√°ticos, sin otra especificaci√≥n"
  },
  {
    "code": "D56.0",
    "description": "Alfa talasemia"
  },
  {
    "code": "D56.1",
    "description": "Beta talasemia"
  },
  {
    "code": "D56.2",
    "description": "Delta-beta talasemia"
  },
  {
    "code": "D56.3",
    "description": "Rasgo talas√©mico"
  },
  {
    "code": "D56.4",
    "description": "Persistencia hereditaria de la hemoglobina fetal [PHHF]"
  },
  {
    "code": "D56.8",
    "description": "Otras talasemias"
  },
  {
    "code": "D56.9",
    "description": "Talasemia, no especificada"
  },
  {
    "code": "D57.0",
    "description": "Anemia falciforme con crisis"
  },
  {
    "code": "D57.1",
    "description": "Anemia falciforme sin crisis"
  },
  {
    "code": "D57.2",
    "description": "Trastornos falciformes heterocigotos dobles"
  },
  {
    "code": "D57.3",
    "description": "Rasgo drepanoc√≠tico"
  },
  {
    "code": "D57.8",
    "description": "Otros trastornos falciformes"
  },
  {
    "code": "D58.0",
    "description": "Esferocitosis hereditaria"
  },
  {
    "code": "D58.1",
    "description": "Eliptocitosis hereditaria"
  },
  {
    "code": "D58.2",
    "description": "Otras hemoglobinopat√≠as"
  },
  {
    "code": "D58.8",
    "description": "Otras anemias hemol√≠ticas hereditarias especificadas"
  },
  {
    "code": "D58.9",
    "description": "Anemia hemol√≠tica hereditaria, sin otra especificaci√≥n"
  },
  {
    "code": "D59.0",
    "description": "Anemia hemol√≠tica autoinmune inducida por drogas"
  },
  {
    "code": "D59.1",
    "description": "Otras anemias hemol√≠ticas autoinmunes"
  },
  {
    "code": "D59.2",
    "description": "Anemia hemol√≠tica no autoinmune inducida por drogas"
  },
  {
    "code": "D59.3",
    "description": "S√≠ndrome hemol√≠tico-ur√©mico"
  },
  {
    "code": "D59.4",
    "description": "Otras anemias hemol√≠ticas no autoinmunes"
  },
  {
    "code": "D59.5",
    "description": "Hemoglobinuria parox√≠stica nocturna [Marchiafava-Micheli]"
  },
  {
    "code": "D59.6",
    "description": "Hemoglobinuria debida a hem√≥lisis por otras causas externas"
  },
  {
    "code": "D59.8",
    "description": "Otras anemias hemol√≠ticas adquiridas"
  },
  {
    "code": "D59.9",
    "description": "Anemia hemol√≠tica adquirida, sin otra especificaci√≥n"
  },
  {
    "code": "D60.0",
    "description": "Aplasia cr√≥nica adquirida, exclusiva de la serie roja"
  },
  {
    "code": "D60.1",
    "description": "Aplasia transitoria adquirida, exclusiva de la serie roja"
  },
  {
    "code": "D60.8",
    "description": "Otras aplasias adquiridas, exclusivas de la serie roja"
  },
  {
    "code": "D60.9",
    "description": "Aplasia adquirida, exclusiva de la serie roja, no especificada"
  },
  {
    "code": "D61.0",
    "description": "Anemia apl√°stica constitucional"
  },
  {
    "code": "D61.1",
    "description": "Anemia apl√°stica inducida por drogas"
  },
  {
    "code": "D61.2",
    "description": "Anemia apl√°stica debida a otros agentes externos"
  },
  {
    "code": "D61.3",
    "description": "Anemia apl√°stica idiop√°tica"
  },
  {
    "code": "D61.8",
    "description": "Otras anemias apl√°sticas especificadas"
  },
  {
    "code": "D61.9",
    "description": "Anemia apl√°stica, sin otra especificaci√≥n"
  },
  {
    "code": "D63.0",
    "description": "Anemia en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "D63.8",
    "description": "Anemia en otras enfermedades cr√≥nicas clasificadas en otra parte"
  },
  {
    "code": "D64.0",
    "description": "Anemia siderobl√°stica hereditaria"
  },
  {
    "code": "D64.1",
    "description": "Anemia siderobl√°stica secundaria a otra enfermedad"
  },
  {
    "code": "D64.2",
    "description": "Anemia siderobl√°stica secundaria, debida a drogas y toxinas"
  },
  {
    "code": "D64.3",
    "description": "Otras anemias siderobl√°sticas"
  },
  {
    "code": "D64.4",
    "description": "Anemia diseritropoy√©tica cong√©nita"
  },
  {
    "code": "D64.8",
    "description": "Otras anemias especificadas"
  },
  {
    "code": "D64.9",
    "description": "Anemia de tipo no especificado"
  },
  {
    "code": "D68.0",
    "description": "Enfermedad de von Willebrand"
  },
  {
    "code": "D68.1",
    "description": "Deficiencia hereditaria del factor XI"
  },
  {
    "code": "D68.2",
    "description": "Deficiencia hereditaria de otros factores de la coagulaci√≥n"
  },
  {
    "code": "D68.3",
    "description": "Trastorno hemorr√°gico debido a anticoagulantes circulantes"
  },
  {
    "code": "D68.4",
    "description": "Deficiencia adquirida de factores de la coagulaci√≥n"
  },
  {
    "code": "D68.8",
    "description": "Otros defectos especificados de la coagulaci√≥n"
  },
  {
    "code": "D68.9",
    "description": "Defecto de la coagulaci√≥n, no especificado"
  },
  {
    "code": "D69.0",
    "description": "P√∫rpura al√©rgica"
  },
  {
    "code": "D69.1",
    "description": "Defectos cualitativos de las plaquetas"
  },
  {
    "code": "D69.2",
    "description": "Otras p√∫rpuras no trombocitop√©nicas"
  },
  {
    "code": "D69.3",
    "description": "P√∫pura trombocitop√©nica idiop√°tica"
  },
  {
    "code": "D69.4",
    "description": "Otras trombocitopenias primarias"
  },
  {
    "code": "D69.5",
    "description": "Tombocitopenia secundaria"
  },
  {
    "code": "D69.6",
    "description": "Trombocitopenia no especificada"
  },
  {
    "code": "D69.8",
    "description": "Otras afecciones hemorr√°gicas especificadas"
  },
  {
    "code": "D69.9",
    "description": "Afecci√≥n hemorr√°gica, no especificada"
  },
  {
    "code": "D72.0",
    "description": "Anomal√≠as gen√©ticas de los leucocitos"
  },
  {
    "code": "D72.1",
    "description": "Eosinofilia"
  },
  {
    "code": "D72.8",
    "description": "Otros trastornos especificados de los leucocitos"
  },
  {
    "code": "D72.9",
    "description": "Trastorno de los leucocitos, no especificado"
  },
  {
    "code": "D73.0",
    "description": "Hipoesplenismo"
  },
  {
    "code": "D73.1",
    "description": "Hiperesplenismo"
  },
  {
    "code": "D73.2",
    "description": "Esplenomegalia congestiva cr√≥nica"
  },
  {
    "code": "D73.3",
    "description": "Absceso del bazo"
  },
  {
    "code": "D73.4",
    "description": "Quiste del bazo"
  },
  {
    "code": "D73.5",
    "description": "Infarto del bazo"
  },
  {
    "code": "D73.8",
    "description": "Otras enfermedades del bazo"
  },
  {
    "code": "D73.9",
    "description": "Enfermedad del bazo, no especificada"
  },
  {
    "code": "D74.0",
    "description": "Metahemoglobinemia cong√©nita"
  },
  {
    "code": "D74.8",
    "description": "Otras metahemoglobinemias"
  },
  {
    "code": "D74.9",
    "description": "Metahemoglobinemia, no especificada"
  },
  {
    "code": "D75.0",
    "description": "Eritrocitosis familiar"
  },
  {
    "code": "D75.1",
    "description": "Policitemia secundaria"
  },
  {
    "code": "D75.2",
    "description": "Trombocitosis esencial"
  },
  {
    "code": "D75.8",
    "description": "Otras enfermedades especificadas de la sangre y de los √≥rganos hematopoy√©ticos"
  },
  {
    "code": "D75.9",
    "description": "Enfermedad de la sangre y de los √≥rganos hematopoy√©ticos, no especificada"
  },
  {
    "code": "D76.0",
    "description": "Histiocitosis de las c√©lulas de Langerhans, no clasificada en otra parte"
  },
  {
    "code": "D76.1",
    "description": "Linfohistiocitosis hemofagoc√≠tica"
  },
  {
    "code": "D76.2",
    "description": "S√≠ndrome hemofagoc√≠tico asociado a infecci√≥n"
  },
  {
    "code": "D76.3",
    "description": "Otros s√≠ndromes histioc√≠ticos"
  },
  {
    "code": "D80.0",
    "description": "Hipogammaglobulinemia hereditaria"
  },
  {
    "code": "D80.1",
    "description": "Hipogammaglobulinemia no familiar"
  },
  {
    "code": "D80.2",
    "description": "Deficiencia selectiva de inmunoglobulina A [IgA]"
  },
  {
    "code": "D80.3",
    "description": "Deficiencia selectiva de subclases de la inmunoglobulina G [IgG]"
  },
  {
    "code": "D80.4",
    "description": "Deficiencia selectiva de inmunoglobulina M [IgM]"
  },
  {
    "code": "D80.5",
    "description": "Inmunodeficiencia con incremento de inmunoglobulina M [IgM]"
  },
  {
    "code": "D80.6",
    "description": "Deficiencia de anticuerpos con inmunoglobulinas casi normales o con hiperinmunoglobulinemia"
  },
  {
    "code": "D80.7",
    "description": "Hipogammaglobulinemia transitoria de la infancia"
  },
  {
    "code": "D80.8",
    "description": "Otras inmunodeficiencias con predominio de defectos de los anticuerpos"
  },
  {
    "code": "D80.9",
    "description": "Inmunodeficiencia con predominio de defectos de los anticuerpos, no especificada"
  },
  {
    "code": "D81.0",
    "description": "Inmunodeficiencia combinada severa [IDCS] con disgenesia reticular"
  },
  {
    "code": "D81.1",
    "description": "Inmunodeficiencia combinada severa [IDCS] con linfocitopenia T y B"
  },
  {
    "code": "D81.2",
    "description": "Inmunodeficiencia combinada severa [IDCS] con cifra baja o normal de linfocitos B"
  },
  {
    "code": "D81.3",
    "description": "Deficiencia de la adenosina deaminasa [ADA]"
  },
  {
    "code": "D81.4",
    "description": "S√≠ndrome de Nezelof"
  },
  {
    "code": "D81.5",
    "description": "Deficiencia de la fosforilasa purinonucle√≥sida [FPN]"
  },
  {
    "code": "D81.6",
    "description": "Deficiencia de la clase I del complejo de histocompatibilidad mayor"
  },
  {
    "code": "D81.7",
    "description": "Deficiencia de la clase II del complejo de histocompatibilidad mayor"
  },
  {
    "code": "D81.8",
    "description": "Otras inmunodeficiencias combinadas"
  },
  {
    "code": "D81.9",
    "description": "Inmunodeficiencia combinada, no especificada"
  },
  {
    "code": "D82.0",
    "description": "S√≠ndrome de Wiskott-Aldrich"
  },
  {
    "code": "D82.1",
    "description": "S√≠ndrome de Di George"
  },
  {
    "code": "D82.2",
    "description": "Inmunodeficiencia con enanismo microm√©lico [miembros cortos]"
  },
  {
    "code": "D82.3",
    "description": "Inmunodeficiencia consecutiva a respuesta defectuosa hereditaria contra el virus de Epstein-Barr"
  },
  {
    "code": "D82.4",
    "description": "S√≠ndrome de hiperinmunoglobulina E [IgE]"
  },
  {
    "code": "D82.8",
    "description": "Inmunodeficiencia asociada con otros defectos mayores especificados"
  },
  {
    "code": "D82.9",
    "description": "Inmunodeficiencia asociada con defectos mayores no especificados"
  },
  {
    "code": "D83.0",
    "description": "Inmunodeficiencia variable com√∫n con predominio de anormalidades en el n√∫mero y la funci√≥n de los linfocitos B"
  },
  {
    "code": "D83.1",
    "description": "Inmunodeficiencia variable com√∫n con predominio de trastornos inmunorreguladores de los linfocitos T"
  },
  {
    "code": "D83.2",
    "description": "Inmunodeficiencia variable com√∫n con autoanticuerpos anti-B o anti-T"
  },
  {
    "code": "D83.8",
    "description": "Otras inmunodeficiencias variables comunes"
  },
  {
    "code": "D83.9",
    "description": "Inmunodeficiencia variable com√∫n, no especificada"
  },
  {
    "code": "D84.0",
    "description": "Defecto de la funci√≥n del ant√≠geno-1 del linfocito [LFA-1]"
  },
  {
    "code": "D84.1",
    "description": "Defecto del sistema del complemento"
  },
  {
    "code": "D84.8",
    "description": "Otras inmunodeficiencias especificadas"
  },
  {
    "code": "D84.9",
    "description": "Inmunodeficiencia, no especificada"
  },
  {
    "code": "D86.0",
    "description": "Sarcoidosis del pulm√≥n"
  },
  {
    "code": "D86.1",
    "description": "Sarcoidosis de los ganglios linf√°ticos"
  },
  {
    "code": "D86.2",
    "description": "Sarcoidosis del pulm√≥n y de los ganglios linf√°ticos"
  },
  {
    "code": "D86.3",
    "description": "Sarcoidosis de la piel"
  },
  {
    "code": "D86.8",
    "description": "Sarcoidosis de otros sitios especificados o de sitios combinados"
  },
  {
    "code": "D86.9",
    "description": "Sarcoidosis de sitio no especificado"
  },
  {
    "code": "D89.0",
    "description": "Hipergammaglobulinemia policlonal"
  },
  {
    "code": "D89.1",
    "description": "Crioglobulinemia"
  },
  {
    "code": "D89.2",
    "description": "Hipergammaglobulinemia, no especificada"
  },
  {
    "code": "D89.8",
    "description": "Otros trastornos especificados que afectan el mecanismo de la inmunidad, no clasificados en otra parte"
  },
  {
    "code": "D89.9",
    "description": "Trastorno que afecta al mecanismo de la inmunidad, no especificado"
  },
  {
    "code": "E00.0",
    "description": "S√≠ndrome cong√©nito de deficiencia de yodo, tipo neurol√≥gico"
  },
  {
    "code": "E00.1",
    "description": "S√≠ndrome de deficiencia cong√©nita de yodo, tipo mixedematoso"
  },
  {
    "code": "E00.2",
    "description": "S√≠ndrome cong√©nito de deficiencia de yodo, tipo mixto"
  },
  {
    "code": "E00.9",
    "description": "S√≠ndrome cong√©nito de deficiencia de yodo, no especificado"
  },
  {
    "code": "E01.0",
    "description": "Bocio difuso (end√©mico) relacionado con deficiencia de yodo"
  },
  {
    "code": "E01.1",
    "description": "Bocio multinodular (end√©mico) relacionado con deficiencia de yodo"
  },
  {
    "code": "E01.2",
    "description": "Bocio (end√©mico) relacionado con deficiencia de yodo, no especificado"
  },
  {
    "code": "E01.8",
    "description": "Otros trastornos de la tiroides relacionados con deficiencia de yodo y afecciones similares"
  },
  {
    "code": "E03.0",
    "description": "Hipotiroidismo cong√©nito con bocio difuso"
  },
  {
    "code": "E03.1",
    "description": "Hipotiroidismo cong√©nito sin bocio"
  },
  {
    "code": "E03.2",
    "description": "Hipotiroidismo debido a medicamentos y a otras sustancias ex√≥genas"
  },
  {
    "code": "E03.3",
    "description": "Hipotiroidismo postinfeccioso"
  },
  {
    "code": "E03.4",
    "description": "Atrofia de tiroides (adquirida)"
  },
  {
    "code": "E03.5",
    "description": "Coma mixedematoso"
  },
  {
    "code": "E03.8",
    "description": "Otros hipotiroidismos especificados"
  },
  {
    "code": "E03.9",
    "description": "Hipotiroidismo, no especificado"
  },
  {
    "code": "E04.0",
    "description": "Bocio difuso no t√≥xico"
  },
  {
    "code": "E04.1",
    "description": "N√≥dulo tiroideo solitario no t√≥xico"
  },
  {
    "code": "E04.2",
    "description": "Bocio multinodular no t√≥xico"
  },
  {
    "code": "E04.8",
    "description": "Otros bocios no t√≥xicos especificados"
  },
  {
    "code": "E04.9",
    "description": "Bocio no t√≥xico, no especificado"
  },
  {
    "code": "E05.0",
    "description": "Tirotoxicosis con bocio difuso"
  },
  {
    "code": "E05.1",
    "description": "Tirotoxicosis con n√≥dulo solitario tiroideo t√≥xico"
  },
  {
    "code": "E05.2",
    "description": "Tirotoxicosis con bocio multinodular t√≥xico"
  },
  {
    "code": "E05.3",
    "description": "Tirotoxicosis por tejido tiroideo ect√≥pico"
  },
  {
    "code": "E05.4",
    "description": "Tirotoxicosis facticia"
  },
  {
    "code": "E05.5",
    "description": "Crisis o tormenta tirot√≥xica"
  },
  {
    "code": "E05.8",
    "description": "Otras tirotoxicosis"
  },
  {
    "code": "E05.9",
    "description": "Tirotoxicosis, no especificada"
  },
  {
    "code": "E06.0",
    "description": "Tiroiditis aguda"
  },
  {
    "code": "E06.1",
    "description": "Tiroiditis subaguda"
  },
  {
    "code": "E06.2",
    "description": "Tiroiditis cr√≥nica con tirotoxicosis transitoria"
  },
  {
    "code": "E06.3",
    "description": "Tiroiditis autoinmune"
  },
  {
    "code": "E06.4",
    "description": "Tiroiditis inducida por drogas"
  },
  {
    "code": "E06.5",
    "description": "Otras tiroiditis cr√≥nicas"
  },
  {
    "code": "E06.9",
    "description": "Tiroiditis, no especificada"
  },
  {
    "code": "E07.0",
    "description": "Hipersecreci√≥n de calcitonina"
  },
  {
    "code": "E07.1",
    "description": "Bocio dishormogen√©tico"
  },
  {
    "code": "E07.8",
    "description": "Otros trastornos especificados de la gl√°ndula tiroides"
  },
  {
    "code": "E07.9",
    "description": "Trastorno de la gl√°ndula tiroides, no especificado"
  },
  {
    "code": "E10.0",
    "description": "Diabetes mellitus insulinodependiente, con coma"
  },
  {
    "code": "E10.1",
    "description": "Diabetes mellitus insulinodependiente, con cetoacidosis"
  },
  {
    "code": "E10.2",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones renales"
  },
  {
    "code": "E10.3",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones oft√°lmicas"
  },
  {
    "code": "E10.4",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones neurol√≥gicas"
  },
  {
    "code": "E10.5",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones circulatorias  perif√©ricas"
  },
  {
    "code": "E10.6",
    "description": "Diabetes mellitus insulinodependiente, con otras complicaciones especificadas"
  },
  {
    "code": "E10.7",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones m√∫ltiples"
  },
  {
    "code": "E10.8",
    "description": "Diabetes mellitus insulinodependiente, con complicaciones no especificadas"
  },
  {
    "code": "E10.9",
    "description": "Diabetes mellitus insulinodependiente, sin menci√≥n de complicaci√≥n"
  },
  {
    "code": "E11.0",
    "description": "Diabetes mellitus no insulinodependiente, con coma"
  },
  {
    "code": "E11.1",
    "description": "Diabetes mellitus no insulinodependiente, con cetoacidosis"
  },
  {
    "code": "E11.2",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones renales"
  },
  {
    "code": "E11.3",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones oft√°lmicas"
  },
  {
    "code": "E11.4",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones neurol√≥gicas"
  },
  {
    "code": "E11.5",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones circulatorias perif√©ricas"
  },
  {
    "code": "E11.6",
    "description": "Diabetes mellitus no insulinodependiente, con otras complicaciones especificadas"
  },
  {
    "code": "E11.7",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones m√∫ltiples"
  },
  {
    "code": "E11.8",
    "description": "Diabetes mellitus no insulinodependiente, con complicaciones no especificadas"
  },
  {
    "code": "E11.9",
    "description": "Diabetes mellitus no insulinodependiente, sin menci√≥n de complicaci√≥n"
  },
  {
    "code": "E12.0",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con coma"
  },
  {
    "code": "E12.1",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con cetoacidosis"
  },
  {
    "code": "E12.2",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones renales"
  },
  {
    "code": "E12.3",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones oft√°lmicas"
  },
  {
    "code": "E12.4",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones neurol√≥gicas"
  },
  {
    "code": "E12.5",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones circulatorias perif√©ricas"
  },
  {
    "code": "E12.6",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con otras complicaciones especificadas"
  },
  {
    "code": "E12.7",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones m√∫ltiples"
  },
  {
    "code": "E12.8",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, con complicaciones no especificadas"
  },
  {
    "code": "E12.9",
    "description": "Diabetes mellitus asociada con desnutrici√≥n, sin menci√≥n de complicaci√≥n"
  },
  {
    "code": "E13.0",
    "description": "Diabetes mellitus especificada, con coma"
  },
  {
    "code": "E13.1",
    "description": "Diabetes mellitus especificada, con cetoacidosis"
  },
  {
    "code": "E13.2",
    "description": "Diabetes mellitus especificada, con complicaciones renales"
  },
  {
    "code": "E13.3",
    "description": "Diabetes mellitus especificada, con complicaciones oft√°lmicas"
  },
  {
    "code": "E13.4",
    "description": "Diabetes mellitus especificada, con complicaciones neurol√≥gicas"
  },
  {
    "code": "E13.5",
    "description": "Diabetes mellitus especificada, con complicaciones circulatorias perif√©ricas"
  },
  {
    "code": "E13.6",
    "description": "Diabetes mellitus especificada, con otras complicaciones especificadas"
  },
  {
    "code": "E13.7",
    "description": "Diabetes mellitus especificada, con complicaciones m√∫ltiples"
  },
  {
    "code": "E13.8",
    "description": "Diabetes mellitus especificada, con complicaciones no especificadas"
  },
  {
    "code": "E13.9",
    "description": "Diabetes mellitus especificada, sin menci√≥n de complicaci√≥n"
  },
  {
    "code": "E14.0",
    "description": "Diabetes mellitus, no especificada, con coma"
  },
  {
    "code": "E14.1",
    "description": "Diabetes mellitus, no especificada, con cetoacidosis"
  },
  {
    "code": "E14.2",
    "description": "Diabetes mellitus, no especificada, con complicaciones renales"
  },
  {
    "code": "E14.3",
    "description": "Diabetes mellitus, no especificada, con complicaciones oft√°lmicas"
  },
  {
    "code": "E14.4",
    "description": "Diabetes mellitus, no especificada, con complicaciones neurol√≥gicas"
  },
  {
    "code": "E14.5",
    "description": "Diabetes mellitus, no especificada, con complicaciones circulatorias perif√©ricas"
  },
  {
    "code": "E14.6",
    "description": "Diabetes mellitus, no especificada, con otras complicaciones especificadas"
  },
  {
    "code": "E14.7",
    "description": "Diabetes mellitus, no especificada, con complicaciones m√∫ltiples"
  },
  {
    "code": "E14.8",
    "description": "Diabetes mellitus, no especificada, con complicaciones no especificadas"
  },
  {
    "code": "E14.9",
    "description": "Diabetes mellitus, no especificada, sin menci√≥n de complicaci√≥n"
  },
  {
    "code": "E16.0",
    "description": "Hipoglicemia sin coma, inducida por drogas"
  },
  {
    "code": "E16.1",
    "description": "Otras hipoglicemias"
  },
  {
    "code": "E16.2",
    "description": "Hipoglicemia, no especificada"
  },
  {
    "code": "E16.3",
    "description": "Secreci√≥n exagerada del glucag√≥n"
  },
  {
    "code": "E16.4",
    "description": "Secreci√≥n anormal de gastrina"
  },
  {
    "code": "E16.8",
    "description": "Otros trastornos especificados de la secreci√≥n interna del p√°ncreas"
  },
  {
    "code": "E16.9",
    "description": "Trastornos de la secreci√≥n interna del p√°ncreas, sin otra especificaci√≥n"
  },
  {
    "code": "E20.0",
    "description": "Hipoparatiroidismo idiop√°tico"
  },
  {
    "code": "E20.1",
    "description": "Pseudohipoparatiroidismo"
  },
  {
    "code": "E20.8",
    "description": "Otros tipos de hipoparatiroidismo"
  },
  {
    "code": "E20.9",
    "description": "Hipoparatiroidismo, no especificado"
  },
  {
    "code": "E21.0",
    "description": "Hiperparatiroidismo primario"
  },
  {
    "code": "E21.1",
    "description": "Hiperparatiroidismo secundario no clasificado en otra parte"
  },
  {
    "code": "E21.2",
    "description": "Etros tipos de hiperparatiroidismo"
  },
  {
    "code": "E21.3",
    "description": "Hiperparatiroidismo, sin otra especificaci√≥n"
  },
  {
    "code": "E21.4",
    "description": "Otros trastornos especificados de la gl√°ndula paratiroides"
  },
  {
    "code": "E21.5",
    "description": "Trastorno de la gl√°ndula paratiroides, no especificado"
  },
  {
    "code": "E22.0",
    "description": "Acromegalia y gigantismo hipofisario"
  },
  {
    "code": "E22.1",
    "description": "Hiperprolactinemia"
  },
  {
    "code": "E22.2",
    "description": "S√≠ndrome de secreci√≥n inapropiada de hormona antidiur√©tica"
  },
  {
    "code": "E22.8",
    "description": "Otras hiperfunciones de la gl√°ndula hip√≥fisis"
  },
  {
    "code": "E22.9",
    "description": "Hiperfunci√≥n de la gl√°ndula hip√≥fisis, no especificada"
  },
  {
    "code": "E23.0",
    "description": "Hipopituitarismo"
  },
  {
    "code": "E23.1",
    "description": "Hipopituitarismo inducido por drogas"
  },
  {
    "code": "E23.2",
    "description": "Diabetes ins√≠pida"
  },
  {
    "code": "E23.3",
    "description": "Disfunci√≥n hipotal√°mica, no clasificada en otra parte"
  },
  {
    "code": "E23.6",
    "description": "Otros trastornos de la gl√°ndula hip√≥fisis"
  },
  {
    "code": "E23.7",
    "description": "Trastorno de la gl√°ndula hip√≥fisis, no especificado"
  },
  {
    "code": "E24.0",
    "description": "Enfermedad de Cushing dependiente de la hip√≥fisis"
  },
  {
    "code": "E24.1",
    "description": "S√≠ndrome de Nelson"
  },
  {
    "code": "E24.2",
    "description": "S√≠ndrome de Cushing inducido por drogas"
  },
  {
    "code": "E24.3",
    "description": "S√≠ndrome de ACTH ect√≥pico"
  },
  {
    "code": "E24.4",
    "description": "S√≠ndrome de seudo-Cushing inducido por alcohol"
  },
  {
    "code": "E24.8",
    "description": "Otros tipos de s√≠ndrome de Cushing"
  },
  {
    "code": "E24.9",
    "description": "S√≠ndrome de Cushing, no especificado"
  },
  {
    "code": "E25.0",
    "description": "Trastornos adrenogenitales cong√©nitos con deficiencia enzim√°tica"
  },
  {
    "code": "E25.8",
    "description": "Otros trastornos adrenogenitales"
  },
  {
    "code": "E25.9",
    "description": "Trastorno adrenogenital, no especificado"
  },
  {
    "code": "E26.0",
    "description": "Hiperaldosteronismo primario"
  },
  {
    "code": "E26.1",
    "description": "Hiperaldosteronismo secundario"
  },
  {
    "code": "E26.8",
    "description": "Otros tipos de hiperaldosteronismo"
  },
  {
    "code": "E26.9",
    "description": "Hiperaldosteronismo, no especificado"
  },
  {
    "code": "E27.0",
    "description": "Otra hiperactividad corticosuprarrenal"
  },
  {
    "code": "E27.1",
    "description": "Insuficiencia corticosuprarrenal primaria"
  },
  {
    "code": "E27.2",
    "description": "Crisis addisoniana"
  },
  {
    "code": "E27.3",
    "description": "Insuficiencia corticosuprarrenal inducida por drogas"
  },
  {
    "code": "E27.4",
    "description": "Otras insuficiencias corticosuprarrenales y las no especificadas"
  },
  {
    "code": "E27.5",
    "description": "Hiperfunci√≥n de la m√©dula suprarrenal"
  },
  {
    "code": "E27.8",
    "description": "Otros trastornos especificados de la gl√°ndula suprarrenal"
  },
  {
    "code": "E27.9",
    "description": "Trastorno de la gl√°ndula suprarrenal, no especificado"
  },
  {
    "code": "E28.0",
    "description": "Exceso de estr√≥genos"
  },
  {
    "code": "E28.1",
    "description": "Exceso de andr√≥genos"
  },
  {
    "code": "E28.2",
    "description": "S√≠ndrome de ovario poliqu√≠stico"
  },
  {
    "code": "E28.3",
    "description": "Insuficiencia ov√°rica primaria"
  },
  {
    "code": "E28.8",
    "description": "Otras disfunciones ov√°ricas"
  },
  {
    "code": "E28.9",
    "description": "Disfunci√≥n ov√°rica, no especificada"
  },
  {
    "code": "E29.0",
    "description": "Hiperfunci√≥n testicular"
  },
  {
    "code": "E29.1",
    "description": "Hipofunci√≥n testicular"
  },
  {
    "code": "E29.8",
    "description": "Otras disfunciones testiculares"
  },
  {
    "code": "E29.9",
    "description": "Disfunci√≥n testicular, no especificada"
  },
  {
    "code": "E30.0",
    "description": "Pubertad retardada"
  },
  {
    "code": "E30.1",
    "description": "Pubertad precoz"
  },
  {
    "code": "E30.8",
    "description": "Otros trastornos de la pubertad"
  },
  {
    "code": "E30.9",
    "description": "Trastorno de la pubertad, no especificado"
  },
  {
    "code": "E31.0",
    "description": "Insuficiencia poliglandular autoinmune"
  },
  {
    "code": "E31.1",
    "description": "Hiperfunci√≥n poliglandular"
  },
  {
    "code": "E31.8",
    "description": "Otras disfunciones poliglandulares"
  },
  {
    "code": "E31.9",
    "description": "Disfunci√≥n poliglandular, no especificada"
  },
  {
    "code": "E32.0",
    "description": "Hiperplasia persistente del timo"
  },
  {
    "code": "E32.1",
    "description": "Absceso del timo"
  },
  {
    "code": "E32.8",
    "description": "Otras enfermedades del timo"
  },
  {
    "code": "E32.9",
    "description": "Enfermedad del timo, no especificada"
  },
  {
    "code": "E34.0",
    "description": "S√≠ndrome carcinoide"
  },
  {
    "code": "E34.1",
    "description": "Otras hipersecreciones de hormonas intestinales"
  },
  {
    "code": "E34.2",
    "description": "Secreci√≥n hormonal ect√≥pica, no clasificada en otra parte"
  },
  {
    "code": "E34.3",
    "description": "Enanismo, no clasificado en otra parte"
  },
  {
    "code": "E34.4",
    "description": "Estatura alta constitucional"
  },
  {
    "code": "E34.5",
    "description": "S√≠ndrome de resistencia androg√©nica"
  },
  {
    "code": "E34.8",
    "description": "Otros trastornos endocrinos especificados"
  },
  {
    "code": "E34.9",
    "description": "Trastorno endocrino, no especificado"
  },
  {
    "code": "E35.0",
    "description": "Trastornos de la gl√°ndula tiroides en enfermedades clasificadas en otra parte"
  },
  {
    "code": "E35.1",
    "description": "Trastornos de las gl√°ndulas suprarrenales en enfermedades clasificadas en otra parte"
  },
  {
    "code": "E35.8",
    "description": "Trastornos de otras gl√°ndulas endocrinas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "E44.0",
    "description": "Desnutrici√≥n proteicocal√≥rica moderada"
  },
  {
    "code": "E44.1",
    "description": "Desnutrici√≥n proteicocal√≥rica leve"
  },
  {
    "code": "E50.0",
    "description": "Deficiencia de vitamina A con xerosis conjuntival"
  },
  {
    "code": "E50.1",
    "description": "Deficiencia de vitamina A con mancha de Bitot y xerosis conjuntival"
  },
  {
    "code": "E50.2",
    "description": "Deficiencia de vitamina A con xerosis corneal"
  },
  {
    "code": "E50.3",
    "description": "Deficiencia de vitamina A con ulceraci√≥n corneal y xerosis"
  },
  {
    "code": "E50.4",
    "description": "Deficiencia de vitamina A con queratomalacia"
  },
  {
    "code": "E50.5",
    "description": "Deficiencia de vitamina A con ceguera nocturna"
  },
  {
    "code": "E50.6",
    "description": "Deficiencia de vitamina A con cicatrices xeroft√°lmicas de la c√≥rnea"
  },
  {
    "code": "E50.7",
    "description": "Otras manifestaciones oculares de deficiencia de  vitamina A"
  },
  {
    "code": "E50.8",
    "description": "Otras manifestaciones de deficiencia de vitamina A"
  },
  {
    "code": "E50.9",
    "description": "Deficiencia de vitamina A, no especificada"
  },
  {
    "code": "E51.1",
    "description": "Beriberi"
  },
  {
    "code": "E51.2",
    "description": "Encefalopat√≠a de Wernicke"
  },
  {
    "code": "E51.8",
    "description": "Otras manifestaciones de la deficiencia de tiamina"
  },
  {
    "code": "E51.9",
    "description": "Deficiencia de tiamina, no especificada"
  },
  {
    "code": "E53.0",
    "description": "Deficiencia de riboflavina"
  },
  {
    "code": "E53.1",
    "description": "Deficiencia de piridoxina"
  },
  {
    "code": "E53.8",
    "description": "Deficiencia de otras vitaminas del grupo B"
  },
  {
    "code": "E53.9",
    "description": "Deficiencia de vitamina B, no especificada"
  },
  {
    "code": "E55.0",
    "description": "Raquitismo activo"
  },
  {
    "code": "E55.9",
    "description": "Deficiencia de vitamina D, no especificada"
  },
  {
    "code": "E56.0",
    "description": "Deficiencia de vitamina E"
  },
  {
    "code": "E56.1",
    "description": "Deficiencia de vitamina K"
  },
  {
    "code": "E56.8",
    "description": "Deficiencia de otras vitaminas"
  },
  {
    "code": "E56.9",
    "description": "Deficiencia de vitamina, no especificada"
  },
  {
    "code": "E61.0",
    "description": "Deficiencia de cobre"
  },
  {
    "code": "E61.1",
    "description": "Deficiencia de hierro"
  },
  {
    "code": "E61.2",
    "description": "Deficiencia de magnesio"
  },
  {
    "code": "E61.3",
    "description": "Deficiencia de manganeso"
  },
  {
    "code": "E61.4",
    "description": "Deficiencia de cromo"
  },
  {
    "code": "E61.5",
    "description": "Deficiencia de molibdeno"
  },
  {
    "code": "E61.6",
    "description": "Deficiencia de vanadio"
  },
  {
    "code": "E61.7",
    "description": "Deficiencia de m√∫ltiples elementos nutricionales"
  },
  {
    "code": "E61.8",
    "description": "Deficiencia de otros elementos nutricionales especificados"
  },
  {
    "code": "E61.9",
    "description": "Deficiencia de otro elemento nutricional, no especificado"
  },
  {
    "code": "E63.0",
    "description": "Deficiencia de √°cidos grasos esenciales [AGE]"
  },
  {
    "code": "E63.1",
    "description": "Desequilibrio de los constituyentes en la dieta"
  },
  {
    "code": "E63.8",
    "description": "Otras deficiencias nutricionales especificadas"
  },
  {
    "code": "E63.9",
    "description": "Deficiencia nutricional, no especificada"
  },
  {
    "code": "E64.0",
    "description": "Secuelas de la desnutrici√≥n proteicocal√≥rica"
  },
  {
    "code": "E64.1",
    "description": "Secuelas de la deficiencia de vitamina A"
  },
  {
    "code": "E64.2",
    "description": "Secuelas de la deficiencia de vitamina C"
  },
  {
    "code": "E64.3",
    "description": "Secuelas del raquitismo"
  },
  {
    "code": "E64.8",
    "description": "Secuelas de otras deficiencias nutricionales"
  },
  {
    "code": "E64.9",
    "description": "Secuelas de la deficiencia nutricional no especificada"
  },
  {
    "code": "E66.0",
    "description": "Obesidad debida a exceso de calor√≠as"
  },
  {
    "code": "E66.1",
    "description": "Obesidad inducida por drogas"
  },
  {
    "code": "E66.2",
    "description": "Obesidad extrema con hipoventilaci√≥n alveolar"
  },
  {
    "code": "E66.8",
    "description": "Otros tipos de obesidad"
  },
  {
    "code": "E66.9",
    "description": "Obesidad, no especificada"
  },
  {
    "code": "E67.0",
    "description": "Hipervitaminosis A"
  },
  {
    "code": "E67.1",
    "description": "Hipercarotinemia"
  },
  {
    "code": "E67.2",
    "description": "S√≠ndrome de megavitamina B6"
  },
  {
    "code": "E67.3",
    "description": "Hipervitaminosis D"
  },
  {
    "code": "E67.8",
    "description": "Otros tipos de hiperalimentaci√≥n especificados"
  },
  {
    "code": "E70.0",
    "description": "Fenilcetonuria cl√°sica"
  },
  {
    "code": "E70.1",
    "description": "Otras hiperfenilalaninemias"
  },
  {
    "code": "E70.2",
    "description": "Trastornos del metabolismo de la tirosina"
  },
  {
    "code": "E70.3",
    "description": "Albinismo"
  },
  {
    "code": "E70.8",
    "description": "Otros trastornos del metabolismo de los amino√°cidos arom√°ticos"
  },
  {
    "code": "E70.9",
    "description": "Trastorno del metabolismo de los amino√°cidos arom√°ticos, no especificado"
  },
  {
    "code": "E71.0",
    "description": "Enfermedad de la orina en jarabe de arce"
  },
  {
    "code": "E71.1",
    "description": "Otros trastornos del metabolismo de los amino√°cidos de cadena ramificada"
  },
  {
    "code": "E71.2",
    "description": "Otros trastornos del metabolismo de los amino√°cidos de cadena ramificada, no especificados"
  },
  {
    "code": "E71.3",
    "description": "Trastornos del metabolismo de los √°cidos grasos"
  },
  {
    "code": "E72.0",
    "description": "Trastornos del transporte de los amino√°cidos"
  },
  {
    "code": "E72.1",
    "description": "Trastornos del metabolismo de los amino√°cidos azufrados"
  },
  {
    "code": "E72.2",
    "description": "Trastornos del metabolismo del ciclo de la urea"
  },
  {
    "code": "E72.3",
    "description": "Trastornos del metabolismo de la lisina y la hidroxilisina"
  },
  {
    "code": "E72.4",
    "description": "Trastornos del metabolismo de la ornitina"
  },
  {
    "code": "E72.5",
    "description": "Trastornos del metabolismo de la glicina"
  },
  {
    "code": "E72.8",
    "description": "Otros trastornos especificados del metabolismo de los amino√°cidos"
  },
  {
    "code": "E72.9",
    "description": "Trastorno del metabolismo de los amino√°cidos, no especificado"
  },
  {
    "code": "E73.0",
    "description": "Deficiencia cong√©nita de lactasa"
  },
  {
    "code": "E73.1",
    "description": "Deficiencia secundaria de lactasa"
  },
  {
    "code": "E73.8",
    "description": "Otros tipos de intolerancia a la lactosa"
  },
  {
    "code": "E73.9",
    "description": "Intolerancia a la lactosa, no especificada"
  },
  {
    "code": "E74.0",
    "description": "Enfermedad del almacenamiento de gluc√≥geno"
  },
  {
    "code": "E74.1",
    "description": "Trastornos del metabolismo de la fructosa"
  },
  {
    "code": "E74.2",
    "description": "Trastorno del metabolismo de la galactosa"
  },
  {
    "code": "E74.3",
    "description": "Otros trastornos de la absorci√≥n intestinal de carbohidratos"
  },
  {
    "code": "E74.4",
    "description": "Trastornos del metabolismo del piruvato y de la gluconeog√©nesis"
  },
  {
    "code": "E74.8",
    "description": "Otros trastornos especificados del metabolismo de los carbohidratos"
  },
  {
    "code": "E74.9",
    "description": "Trastorno del metabolismo de los carbohidratos, no especificado"
  },
  {
    "code": "E75.0",
    "description": "Gangliosidosis GM2"
  },
  {
    "code": "E75.1",
    "description": "Otras gangliosidosis"
  },
  {
    "code": "E75.2",
    "description": "Otras esfingolipidosis"
  },
  {
    "code": "E75.3",
    "description": "Esfingolipidosis, no especificada"
  },
  {
    "code": "E75.4",
    "description": "Lipofuscinosis ceroide neuronal"
  },
  {
    "code": "E75.5",
    "description": "Otros trastornos del almacenamiento de l√≠pidos"
  },
  {
    "code": "E75.6",
    "description": "Trastorno del almacenamiento de l√≠pidos, no especificado"
  },
  {
    "code": "E76.0",
    "description": "Mucopolisacaridosis tipo I"
  },
  {
    "code": "E76.1",
    "description": "Mucopolisacaridosis tipo II"
  },
  {
    "code": "E76.2",
    "description": "Otras mucopolisacaridosis"
  },
  {
    "code": "E76.3",
    "description": "Mucopolisacaridosis no especificada"
  },
  {
    "code": "E76.8",
    "description": "Otros trastornos del metabolismo de los glucosaminoglicanos"
  },
  {
    "code": "E76.9",
    "description": "Trastorno del metabolismo de los glucosaminoglicanos, no especificado"
  },
  {
    "code": "E77.0",
    "description": "Defectos en la modificaci√≥n postraslacional de enzimas lisosomales"
  },
  {
    "code": "E77.1",
    "description": "Defectos de la degradaci√≥n de glucoprote√≠nas"
  },
  {
    "code": "E77.8",
    "description": "Otros trastornos del metabolismo de las glucoprote√≠nas"
  },
  {
    "code": "E77.9",
    "description": "Trastorno del metabolismo de las glucoprote√≠nas, no especificado"
  },
  {
    "code": "E78.0",
    "description": "Hipercolesterolemia pura"
  },
  {
    "code": "E78.1",
    "description": "Hipergliceridemia pura"
  },
  {
    "code": "E78.2",
    "description": "Hiperlipidemia mixta"
  },
  {
    "code": "E78.3",
    "description": "Hiperquilomicronemia"
  },
  {
    "code": "E78.4",
    "description": "Otra hiperlipidemia"
  },
  {
    "code": "E78.5",
    "description": "Hiperlipidemia no especificada"
  },
  {
    "code": "E78.6",
    "description": "Deficiencia de lipoprote√≠nas"
  },
  {
    "code": "E78.8",
    "description": "Otros trastornos del metabolismo de las lipoprote√≠nas"
  },
  {
    "code": "E78.9",
    "description": "Trastorno del metabolismo de las lipoprote√≠nas, no especificado"
  },
  {
    "code": "E79.0",
    "description": "Hiperuricemia sin signos de artritis inflamatoria y enfermedad tof√°cea"
  },
  {
    "code": "E79.1",
    "description": "S√≠ndrome de Lesch-Nyhan"
  },
  {
    "code": "E79.8",
    "description": "Otros trastornos del metabolismo de las purinas y de las pirimidinas"
  },
  {
    "code": "E79.9",
    "description": "Trastorno del metabolismo de las purinas y de las pirimidinas, no especificado"
  },
  {
    "code": "E80.0",
    "description": "Porfiria eritropoy√©tica hereditaria"
  },
  {
    "code": "E80.1",
    "description": "Porfiria cut√°nea tard√≠a"
  },
  {
    "code": "E80.2",
    "description": "Otras porfirias"
  },
  {
    "code": "E80.3",
    "description": "Defectos de catalasa y peroxidasa"
  },
  {
    "code": "E80.4",
    "description": "S√≠ndrome de Gilbert"
  },
  {
    "code": "E80.5",
    "description": "S√≠ndrome de Crigler-Najjar"
  },
  {
    "code": "E80.6",
    "description": "Otros trastornos del metabolismo de la bilirrubina"
  },
  {
    "code": "E80.7",
    "description": "Trastorno del metabolismo de la bilirrubina, no especificado"
  },
  {
    "code": "E83.0",
    "description": "Trastornos del metabolismo del cobre"
  },
  {
    "code": "E83.1",
    "description": "Trastornos del metabolismo del hierro"
  },
  {
    "code": "E83.2",
    "description": "Trastornos del metabolismo del zinc"
  },
  {
    "code": "E83.3",
    "description": "Trastornos del metabolismo del f√≥sforo"
  },
  {
    "code": "E83.4",
    "description": "Trastornos del metabolismo del magnesio"
  },
  {
    "code": "E83.5",
    "description": "Trastornos del metabolismo del calcio"
  },
  {
    "code": "E83.8",
    "description": "Otros trastornos del metabolismo de los minerales"
  },
  {
    "code": "E83.9",
    "description": "Trastorno del metabolismo de los minerales, no especificado"
  },
  {
    "code": "E84.0",
    "description": "Fibrosis qu√≠stica con manifestaciones pulmonares"
  },
  {
    "code": "E84.1",
    "description": "Fibrosis qu√≠stica con manifestaciones intestinales"
  },
  {
    "code": "E84.8",
    "description": "Fibrosis qu√≠stica con otras manifestaciones"
  },
  {
    "code": "E84.9",
    "description": "Fibrosis qu√≠stica, sin otra especificaci√≥n"
  },
  {
    "code": "E85.0",
    "description": "Amiloidosis heredofamiliar no neurop√°tica"
  },
  {
    "code": "E85.1",
    "description": "Amiloidosis heredofamiliar neurop√°tica"
  },
  {
    "code": "E85.2",
    "description": "Amiloidosis heredofamiliar no especificada"
  },
  {
    "code": "E85.3",
    "description": "Amiloidosis sist√©mica secundaria"
  },
  {
    "code": "E85.4",
    "description": "Amiloidosis limitada a un √≥rgano"
  },
  {
    "code": "E85.8",
    "description": "Otras amiloidosis"
  },
  {
    "code": "E85.9",
    "description": "Amiloidosis, no especificada"
  },
  {
    "code": "E87.0",
    "description": "Hiperosmolaridad e hipernatremia"
  },
  {
    "code": "E87.1",
    "description": "Hiposmolaridad e hiponatremia"
  },
  {
    "code": "E87.2",
    "description": "Acidosis"
  },
  {
    "code": "E87.3",
    "description": "Alcalosis"
  },
  {
    "code": "E87.4",
    "description": "Trastornos mixtos del balance √°cido-b√°sico"
  },
  {
    "code": "E87.5",
    "description": "Hiperpotasemia"
  },
  {
    "code": "E87.6",
    "description": "Hipopotasmia"
  },
  {
    "code": "E87.7",
    "description": "Sobrecarga de l√≠quidos"
  },
  {
    "code": "E87.8",
    "description": "Otros trastornos del equilibrio de los electr√≥litos y de los l√≠quidos, no clasificados en otra parte"
  },
  {
    "code": "E88.0",
    "description": "Trastornos del metabolismo de las prote√≠nas plasm√°ticas, no clasificados en otra parte"
  },
  {
    "code": "E88.1",
    "description": "Lipodistrofia, no clasificada en otra parte"
  },
  {
    "code": "E88.2",
    "description": "Lipomatosis, no clasificada en otra parte"
  },
  {
    "code": "E88.8",
    "description": "Otros trastornos especificados del metabolismo"
  },
  {
    "code": "E88.9",
    "description": "Trastorno metab√≥lico, no especificado"
  },
  {
    "code": "E89.0",
    "description": "Hipotiroidismo consecutivo a procedimientos"
  },
  {
    "code": "E89.1",
    "description": "Hipoinsulinemia consecutiva a procedimientos"
  },
  {
    "code": "E89.2",
    "description": "Hipoparatiroidismo consecutivo a procedimientos"
  },
  {
    "code": "E89.3",
    "description": "Hipopituitarismo consecutivo a procedimientos"
  },
  {
    "code": "E89.4",
    "description": "Insuficiencia ov√°rica consecutiva a procedimientos"
  },
  {
    "code": "E89.5",
    "description": "Hipofunci√≥n testicular consecutiva a procedimientos"
  },
  {
    "code": "E89.6",
    "description": "Hipofunci√≥n adrenocortical [m√©dula suprarrenal] consecutiva a procedimientos"
  },
  {
    "code": "E89.8",
    "description": "Otros trastornos metab√≥licos y endocrinos consecutivos a procedimientos"
  },
  {
    "code": "E89.9",
    "description": "Trastorno endocrino y metab√≥lico consecutivo a procedimientos, no especificado"
  },
  {
    "code": "F00.0",
    "description": "Demencia en la enfermedad de Alzheimer, de comienzo temprano (G30.0+)"
  },
  {
    "code": "F00.1",
    "description": "Demencia en la enfermedad de Alzheimer, de comienzo tard√≠o (G30.1+)"
  },
  {
    "code": "F00.2",
    "description": "Demencia en la enfermedad de Alzheimer, at√≠pica o de tipo mixto (G30.8+)"
  },
  {
    "code": "F00.9",
    "description": "Demencia en la enfermedad de Alzheimer, no especificada (G30.9+)"
  },
  {
    "code": "F01.0",
    "description": "Demencia vascular de comienzo agudo"
  },
  {
    "code": "F01.1",
    "description": "Demencia vascular por infartos m√∫ltiples"
  },
  {
    "code": "F01.2",
    "description": "Demencia vascular subcortical"
  },
  {
    "code": "F01.3",
    "description": "Demencia vascular mixta, cortical y subcortical"
  },
  {
    "code": "F01.8",
    "description": "Otras demencias vasculares"
  },
  {
    "code": "F01.9",
    "description": "Demencia vascular, no especificada"
  },
  {
    "code": "F02.0",
    "description": "Demencia en la enfermedad de Pick (G3l.0+)"
  },
  {
    "code": "F02.1",
    "description": "Demencia en la enfermedad de Creutzfeldt-Jakob (A81.0+)"
  },
  {
    "code": "F02.2",
    "description": "Demencia en la enfermedad de Huntington (Gl0+)"
  },
  {
    "code": "F02.3",
    "description": "Demencia en la enfermedad de Parkinson (G20+)"
  },
  {
    "code": "F02.4",
    "description": "Demencia en la enfermedad por virus de la inmunodeficiencia humana [VIH] (B22.0+)"
  },
  {
    "code": "F02.8",
    "description": "Demencia en otras enfermedades especificadas clasificadas en otra parte"
  },
  {
    "code": "F05.0",
    "description": "Delirio no superpuesto a un cuadro de demencia, as√≠ descrito"
  },
  {
    "code": "F05.1",
    "description": "Delirio superpuesto a un cuadro de demencia"
  },
  {
    "code": "F05.8",
    "description": "Otros delirios"
  },
  {
    "code": "F05.9",
    "description": "Delirio, no especificado"
  },
  {
    "code": "F06.0",
    "description": "Alucinosis org√°nica"
  },
  {
    "code": "F06.1",
    "description": "Trastorno catat√≥nico, org√°nico"
  },
  {
    "code": "F06.2",
    "description": "Trastorno delirante [esquizofreniforme], org√°nico"
  },
  {
    "code": "F06.3",
    "description": "Trastornos del humor [afectivos], org√°nicos"
  },
  {
    "code": "F06.4",
    "description": "Trastorno de ansiedad, org√°nico"
  },
  {
    "code": "F06.5",
    "description": "Trastorno disociativo, org√°nico"
  },
  {
    "code": "F06.6",
    "description": "Trastorno de labilidad emocional [ast√©nico], org√°nico"
  },
  {
    "code": "F06.7",
    "description": "Trastorno cognoscitivo leve"
  },
  {
    "code": "F06.8",
    "description": "Otros trastornos mentales especificados debidos a lesi√≥n y disfunci√≥n cerebral y a enfermedad f√≠sica"
  },
  {
    "code": "F06.9",
    "description": "Trastorno mental no especificado debido a lesi√≥n y disfunci√≥n cerebral y a enfermedad f√≠sica"
  },
  {
    "code": "F07.0",
    "description": "Trastorno de la personalidad, org√°nico"
  },
  {
    "code": "F07.1",
    "description": "S√≠ndrome postencefal√≠tico"
  },
  {
    "code": "F07.2",
    "description": "S√≠ndrome postconcusional"
  },
  {
    "code": "F07.8",
    "description": ""
  },
  {
    "code": "F07.9",
    "description": ""
  },
  {
    "code": "F10.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, intoxicaci√≥n aguda"
  },
  {
    "code": "F10.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, uso nocivo"
  },
  {
    "code": "F10.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, s√≠ndrome de dependencia"
  },
  {
    "code": "F10.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, estado de abstinencia"
  },
  {
    "code": "F10.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, estado de abstinencia con delirio"
  },
  {
    "code": "F10.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, trastorno psic√≥tico"
  },
  {
    "code": "F10.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, s√≠ndrome amn√©sico"
  },
  {
    "code": "F10.7",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, trastorno psic√≥tico residual y de comienzo tard√≠o"
  },
  {
    "code": "F10.8",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol, otros trastornos mentales y del comportamiento"
  },
  {
    "code": "F10.9",
    "description": ""
  },
  {
    "code": "F11.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, intoxicaci√≥n aguda"
  },
  {
    "code": "F11.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, uso nocivo"
  },
  {
    "code": "F11.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, s√≠ndrome de dependencia"
  },
  {
    "code": "F11.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, estado de abstinencia"
  },
  {
    "code": "F11.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, estado de abstinencia con delirio"
  },
  {
    "code": "F11.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, trastorno psic√≥tico"
  },
  {
    "code": "F11.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, s√≠ndrome amn√©sico"
  },
  {
    "code": "F11.7",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, trastorno psic√≥tico residual y de comienzo tard√≠o"
  },
  {
    "code": "F11.8",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos, otros trastornos mentales y del comportamiento"
  },
  {
    "code": "F11.9",
    "description": ""
  },
  {
    "code": "F12.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, intoxicaci√≥n aguda"
  },
  {
    "code": "F12.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, uso nocivo"
  },
  {
    "code": "F12.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, s√≠ndrome de dependencia"
  },
  {
    "code": "F12.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, estado de abstinencia"
  },
  {
    "code": "F12.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, estado de abstinencia con delirio"
  },
  {
    "code": "F12.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, trastorno psic√≥tico"
  },
  {
    "code": "F12.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides, s√≠ndrome amn√©sico"
  },
  {
    "code": "F12.7",
    "description": ""
  },
  {
    "code": "F12.8",
    "description": ""
  },
  {
    "code": "F12.9",
    "description": ""
  },
  {
    "code": "F13.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, intoxicaci√≥n aguda"
  },
  {
    "code": "F13.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, uso nocivo"
  },
  {
    "code": "F13.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, s√≠ndrome de dependencia"
  },
  {
    "code": "F13.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, estado de abstinencia"
  },
  {
    "code": "F13.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, estado de abstinencia con delirio"
  },
  {
    "code": "F13.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, trastorno psic√≥tico"
  },
  {
    "code": "F13.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos, s√≠ndrome amn√©sico"
  },
  {
    "code": "F13.7",
    "description": ""
  },
  {
    "code": "F13.8",
    "description": ""
  },
  {
    "code": "F13.9",
    "description": ""
  },
  {
    "code": "F14.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, intoxicaci√≥n aguda"
  },
  {
    "code": "F14.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, uso nocivo"
  },
  {
    "code": "F14.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, s√≠ndrome de dependencia"
  },
  {
    "code": "F14.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, estado de abstinencia"
  },
  {
    "code": "F14.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, estado de abstinencia con delirio"
  },
  {
    "code": "F14.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, trastorno psic√≥tico"
  },
  {
    "code": "F14.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, s√≠ndrome amn√©sico"
  },
  {
    "code": "F14.7",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, trastorno psic√≥tico residual y de comienzo tard√≠o"
  },
  {
    "code": "F14.8",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na, otros trastornos mentales y del comportamiento"
  },
  {
    "code": "F14.9",
    "description": ""
  },
  {
    "code": "F15.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de otros estimulantes, incluida la cafe√≠na, intoxicaci√≥n aguda"
  },
  {
    "code": "F15.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de otros estimulantes, incluida la cafe√≠na, uso nocivo"
  },
  {
    "code": "F15.2",
    "description": ""
  },
  {
    "code": "F15.3",
    "description": ""
  },
  {
    "code": "F15.4",
    "description": ""
  },
  {
    "code": "F15.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de otros estimulantes, incluida la cafe√≠na, trastorno psic√≥tico"
  },
  {
    "code": "F15.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de otros estimulantes, incluida la cafe√≠na, s√≠ndrome amn√©sico"
  },
  {
    "code": "F15.7",
    "description": ""
  },
  {
    "code": "F15.8",
    "description": ""
  },
  {
    "code": "F15.9",
    "description": ""
  },
  {
    "code": "F16.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, intoxicaci√≥n aguda"
  },
  {
    "code": "F16.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, uso nocivo"
  },
  {
    "code": "F16.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, s√≠ndrome de dependencia"
  },
  {
    "code": "F16.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, estado de abstinencia"
  },
  {
    "code": "F16.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, estado de abstinencia con delirio"
  },
  {
    "code": "F16.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, trastorno psic√≥tico"
  },
  {
    "code": "F16.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos, s√≠ndrome amn√©sico"
  },
  {
    "code": "F16.7",
    "description": ""
  },
  {
    "code": "F16.8",
    "description": ""
  },
  {
    "code": "F16.9",
    "description": ""
  },
  {
    "code": "F17.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, intoxicaci√≥n aguda"
  },
  {
    "code": "F17.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, uso nocivo"
  },
  {
    "code": "F17.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, s√≠ndrome de dependencia"
  },
  {
    "code": "F17.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, estado de abstinencia"
  },
  {
    "code": "F17.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, estado de abstinencia con delirio"
  },
  {
    "code": "F17.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, trastorno psic√≥tico"
  },
  {
    "code": "F17.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, s√≠ndrome amn√©sico"
  },
  {
    "code": "F17.7",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, trastorno psic√≥tico residual y de comienzo tard√≠o"
  },
  {
    "code": "F17.8",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco, otros trastornos mentales y del comportamiento"
  },
  {
    "code": "F17.9",
    "description": ""
  },
  {
    "code": "F18.0",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, intoxicaci√≥n aguda"
  },
  {
    "code": "F18.1",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, uso nocivo"
  },
  {
    "code": "F18.2",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, s√≠ndrome de dependencia"
  },
  {
    "code": "F18.3",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, estado de abstinencia"
  },
  {
    "code": "F18.4",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, estado de abstinencia con delirio"
  },
  {
    "code": "F18.5",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, trastorno psic√≥tico"
  },
  {
    "code": "F18.6",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles, s√≠ndrome amn√©sico"
  },
  {
    "code": "F18.7",
    "description": ""
  },
  {
    "code": "F18.8",
    "description": ""
  },
  {
    "code": "F18.9",
    "description": ""
  },
  {
    "code": "F19.0",
    "description": ""
  },
  {
    "code": "F19.1",
    "description": ""
  },
  {
    "code": "F19.2",
    "description": ""
  },
  {
    "code": "F19.3",
    "description": ""
  },
  {
    "code": "F19.4",
    "description": ""
  },
  {
    "code": "F19.5",
    "description": ""
  },
  {
    "code": "F19.6",
    "description": ""
  },
  {
    "code": "F19.7",
    "description": ""
  },
  {
    "code": "F19.8",
    "description": ""
  },
  {
    "code": "F19.9",
    "description": ""
  },
  {
    "code": "F20.0",
    "description": "Esquizofrenia paranoide"
  },
  {
    "code": "F20.1",
    "description": "Esquizofrenia hebefr√©nica"
  },
  {
    "code": "F20.2",
    "description": "Esquizofrenia catat√≥nica"
  },
  {
    "code": "F20.3",
    "description": "Esquizofrenia indiferenciada"
  },
  {
    "code": "F20.4",
    "description": "Depresi√≥n postesquizofr√©nica"
  },
  {
    "code": "F20.5",
    "description": "Esquizofrenia residual"
  },
  {
    "code": "F20.6",
    "description": "Esquizofrenia simple"
  },
  {
    "code": "F20.8",
    "description": "Otras esquizofrenias"
  },
  {
    "code": "F20.9",
    "description": "Esquizofrenia, no especificada"
  },
  {
    "code": "F22.0",
    "description": "Trastorno delirante"
  },
  {
    "code": "F22.8",
    "description": "Otros trastornos delirantes persistentes"
  },
  {
    "code": "F22.9",
    "description": "Trastorno delirante persistente, no especificado"
  },
  {
    "code": "F23.0",
    "description": "Trastorno psic√≥tico agudo polimorfo, sin s√≠ntomas de esquizofrenia"
  },
  {
    "code": "F23.1",
    "description": "Trastorno psic√≥tico agudo polimorfo, con s√≠ntomas de esquizofrenia"
  },
  {
    "code": "F23.2",
    "description": "Trastorno psic√≥tico agudo de tipo esquizofr√©nico"
  },
  {
    "code": "F23.3",
    "description": "Otro trastorno psic√≥tico agudo, con predominio de ideas delirantes"
  },
  {
    "code": "F23.8",
    "description": "Otros trastornos psic√≥ticos agudos y transitorios"
  },
  {
    "code": "F23.9",
    "description": "Trastorno psic√≥tico agudo y transitorio, no especificado"
  },
  {
    "code": "F25.0",
    "description": "Trastorno esquizoafectivo de tipo man√≠aco"
  },
  {
    "code": "F25.1",
    "description": "Trastorno esquizoafectivo de tipo depresivo"
  },
  {
    "code": "F25.2",
    "description": "Trastorno esquizoafectivo de tipo mixto"
  },
  {
    "code": "F25.8",
    "description": "Otros trastornos esquizoafectivos"
  },
  {
    "code": "F25.9",
    "description": "Trastorno esquizoafectivo, no especificado"
  },
  {
    "code": "F30.0",
    "description": "Hipoman√≠a"
  },
  {
    "code": "F30.1",
    "description": "Man√≠a sin s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F30.2",
    "description": "Man√≠a con s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F30.8",
    "description": "Otros episodios man√≠acos"
  },
  {
    "code": "F30.9",
    "description": "Episodio man√≠aco, no especificado"
  },
  {
    "code": "F31.0",
    "description": "Trastorno afectivo bipolar, episodio hipoman√≠aco presente"
  },
  {
    "code": "F31.1",
    "description": "Trastorno afectivo bipolar, episodio man√≠aco presente sin s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F31.2",
    "description": "Trastorno afectivo bipolar, episodio man√≠aco presente con s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F31.3",
    "description": "Trastorno afectivo bipolar, episodio depresivo presente leve o moderado"
  },
  {
    "code": "F31.4",
    "description": "Trastorno afectivo bipolar, episodio depresivo grave presente sin s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F31.5",
    "description": "Trastorno afectivo bipolar, episodio depresivo grave presente con s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F31.6",
    "description": "Trastorno afectivo bipolar, episodio mixto presente"
  },
  {
    "code": "F31.7",
    "description": "Trastorno afectivo bipolar, actualmente en remisi√≥n"
  },
  {
    "code": "F31.8",
    "description": "Otros trastornos afectivos bipolares"
  },
  {
    "code": "F31.9",
    "description": "Trastorno afectivo bipolar, no especificado"
  },
  {
    "code": "F32.0",
    "description": "Episodio depresivo leve"
  },
  {
    "code": "F32.1",
    "description": "Episodio depresivo moderado"
  },
  {
    "code": "F32.2",
    "description": "Episodio depresivo grave sin s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F32.3",
    "description": "Episodio depresivo grave con s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F32.8",
    "description": "Otros episodios depresivos"
  },
  {
    "code": "F32.9",
    "description": "Episodio depresivo, no especificado"
  },
  {
    "code": "F33.0",
    "description": "Trastorno depresivo recurrente, episodio leve presente"
  },
  {
    "code": "F33.1",
    "description": "Trastorno depresivo recurrente, episodio moderado presente"
  },
  {
    "code": "F33.2",
    "description": "Trastorno depresivo recurrente, episodio depresivo grave presente sin s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F33.3",
    "description": "Trastorno depresivo recurrente, episodio depresivo grave presente, con s√≠ntomas psic√≥ticos"
  },
  {
    "code": "F33.4",
    "description": "Trastorno depresivo recurrente actualmente en remisi√≥n"
  },
  {
    "code": "F33.8",
    "description": "Otros trastornos depresivos recurrentes"
  },
  {
    "code": "F33.9",
    "description": "Trastorno depresivo recurrente, no especificado"
  },
  {
    "code": "F34.0",
    "description": "Ciclotimia"
  },
  {
    "code": "F34.1",
    "description": "Distimia"
  },
  {
    "code": "F34.8",
    "description": "Otros trastornos del humor [afectivos] persistentes"
  },
  {
    "code": "F34.9",
    "description": "Trastorno persistente del humor [afectivo], no especificado"
  },
  {
    "code": "F38.0",
    "description": "Otros trastornos del humor [afectivos], aislados"
  },
  {
    "code": "F38.1",
    "description": "Otros trastornos del humor [afectivos], recurrentes"
  },
  {
    "code": "F38.8",
    "description": "Otros trastornos del humor [afectivos], especificados"
  },
  {
    "code": "F40.0",
    "description": "Agorafobia"
  },
  {
    "code": "F40.1",
    "description": "Fobias sociales"
  },
  {
    "code": "F40.2",
    "description": "Fobias espec√≠ficas (aisladas)"
  },
  {
    "code": "F40.8",
    "description": "Otros trastornos f√≥bicos de ansiedad"
  },
  {
    "code": "F40.9",
    "description": "Trastorno f√≥bico de ansiedad, no especificado"
  },
  {
    "code": "F41.0",
    "description": "Trastorno de p√°nico [ansiedad parox√≠stica epis√≥dica]"
  },
  {
    "code": "F41.1",
    "description": "Trastorno de ansiedad generalizada"
  },
  {
    "code": "F41.2",
    "description": "Trastorno mixto de ansiedad y depresi√≥n"
  },
  {
    "code": "F41.3",
    "description": "Otros trastornos de ansiedad mixtos"
  },
  {
    "code": "F41.8",
    "description": "Otros trastornos de ansiedad especificados"
  },
  {
    "code": "F41.9",
    "description": "Trastorno de ansiedad, no especificado"
  },
  {
    "code": "F42.0",
    "description": "Predominio de pensamientos o rumiaciones obsesivas"
  },
  {
    "code": "F42.1",
    "description": "Predominio de actos compulsivos [rituales obsesivos]"
  },
  {
    "code": "F42.2",
    "description": "Actos e ideas obsesivas mixtos"
  },
  {
    "code": "F42.8",
    "description": "Otros trastornos obsesivo-compulsivos"
  },
  {
    "code": "F42.9",
    "description": "Trastorno obsesivo-compulsivo, no especificado"
  },
  {
    "code": "F43.0",
    "description": "Reacci√≥n al estr√©s agudo"
  },
  {
    "code": "F43.1",
    "description": "Trastorno de estr√©s postraum√°tico"
  },
  {
    "code": "F43.2",
    "description": "Trastornos de adaptaci√≥n"
  },
  {
    "code": "F43.8",
    "description": "Otras reacciones al estr√©s grave"
  },
  {
    "code": "F43.9",
    "description": "Reacci√≥n al estr√©s grave, no especificada"
  },
  {
    "code": "F44.0",
    "description": "Amnesia disociativa"
  },
  {
    "code": "F44.1",
    "description": "Fuga disociativa"
  },
  {
    "code": "F44.2",
    "description": "Estupor disociativo"
  },
  {
    "code": "F44.3",
    "description": "Trastornos de trance y de posesi√≥n"
  },
  {
    "code": "F44.4",
    "description": "Trastornos disociativos del movimiento"
  },
  {
    "code": "F44.5",
    "description": "Convulsiones disociativas"
  },
  {
    "code": "F44.6",
    "description": "Anestesia disociativa y p√©rdida sensorial"
  },
  {
    "code": "F44.7",
    "description": "Trastornos disociativos mixtos [y de conversi√≥n]"
  },
  {
    "code": "F44.8",
    "description": "Otros trastornos disociativos [de conversi√≥n]"
  },
  {
    "code": "F44.9",
    "description": "Trastorno disociativo [de conversi√≥n], no especificado"
  },
  {
    "code": "F45.0",
    "description": "Trastorno de somatizaci√≥n"
  },
  {
    "code": "F45.1",
    "description": "Trastorno somatomorfo indiferenciado"
  },
  {
    "code": "F45.2",
    "description": "Trastorno hipocondr√≠aco"
  },
  {
    "code": "F45.3",
    "description": "Disfunci√≥n auton√≥mica somatomorfa"
  },
  {
    "code": "F45.4",
    "description": "Trastorno de dolor persistente somatomorfo"
  },
  {
    "code": "F45.8",
    "description": "Otros trastornos somatomorfos"
  },
  {
    "code": "F45.9",
    "description": "Trastorno somatomorfo, no especificado"
  },
  {
    "code": "F48.0",
    "description": "Neurastenia"
  },
  {
    "code": "F48.1",
    "description": "S√≠ndrome de despersonalizaci√≥n y desvinculaci√≥n de la realidad"
  },
  {
    "code": "F48.8",
    "description": "Otros trastornos neur√≥ticos especificados"
  },
  {
    "code": "F48.9",
    "description": "Trastorno neur√≥tico, no especificado"
  },
  {
    "code": "F50.0",
    "description": "Anorexia nerviosa"
  },
  {
    "code": "F50.1",
    "description": "Anorexia nerviosa at√≠pica"
  },
  {
    "code": "F50.2",
    "description": "Bulimia nerviosa"
  },
  {
    "code": "F50.3",
    "description": "Bulimia nerviosa at√≠pica"
  },
  {
    "code": "F50.4",
    "description": "Hiperfagia asociada con otras alteraciones psicol√≥gicas"
  },
  {
    "code": "F50.5",
    "description": "V√≥mitos asociados con otras alteraciones psicol√≥gicas"
  },
  {
    "code": "F50.8",
    "description": "Otros trastornos de la ingesti√≥n de alimentos"
  },
  {
    "code": "F50.9",
    "description": "Trastorno de la ingesti√≥n de alimentos, no especificado"
  },
  {
    "code": "F51.0",
    "description": "Insomnio no org√°nico"
  },
  {
    "code": "F51.1",
    "description": "Hipersomnio no org√°nico"
  },
  {
    "code": "F51.2",
    "description": "Trastorno no org√°nico del ciclo sue√±o-vigilia"
  },
  {
    "code": "F51.3",
    "description": "Sonambulismo"
  },
  {
    "code": "F51.4",
    "description": "Terrores del sue√±o [terrores nocturnos]"
  },
  {
    "code": "F51.5",
    "description": "Pesadillas"
  },
  {
    "code": "F51.8",
    "description": "Otros trastornos no org√°nicos del sue√±o"
  },
  {
    "code": "F51.9",
    "description": "Trastorno no org√°nico del sue√±o, no especificado"
  },
  {
    "code": "F52.0",
    "description": "Falta o p√©rdida del deseo sexual"
  },
  {
    "code": "F52.1",
    "description": "Aversi√≥n al sexo y falta de goce sexual"
  },
  {
    "code": "F52.2",
    "description": "Falla de la respuesta genital"
  },
  {
    "code": "F52.3",
    "description": "Disfunci√≥n org√°smica"
  },
  {
    "code": "F52.4",
    "description": "Eyaculaci√≥n precoz"
  },
  {
    "code": "F52.5",
    "description": "Vaginismo no org√°nico"
  },
  {
    "code": "F52.6",
    "description": "Dispareunia no org√°nica"
  },
  {
    "code": "F52.7",
    "description": "Impulso sexual excesivo"
  },
  {
    "code": "F52.8",
    "description": "Otras disfunciones sexuales, no ocasionadas por trastorno ni por enfermedad org√°nicos"
  },
  {
    "code": "F52.9",
    "description": "Disfunci√≥n sexual no ocasionada por trastorno ni por enfermedad org√°nicos, no especificada"
  },
  {
    "code": "F53.0",
    "description": "Trastornos mentales y del comportamiento leves, asociados con el puerperio, no clasificados en otra parte"
  },
  {
    "code": "F53.1",
    "description": "Trastornos mentales y del comportamiento graves, asociados con el puerperio, no clasificados en otra parte"
  },
  {
    "code": "F53.8",
    "description": "Otros trastornos mentales y del comportamiento asociados con el puerperio, no clasificados en otra parte"
  },
  {
    "code": "F53.9",
    "description": "Trastorno mental puerperal, no especificado"
  },
  {
    "code": "F60.0",
    "description": "Trastorno paranoide de la personalidad"
  },
  {
    "code": "F60.1",
    "description": "Trastorno esquizoide de la personalidad"
  },
  {
    "code": "F60.2",
    "description": "Trastorno asocial de la personalidad"
  },
  {
    "code": "F60.3",
    "description": "Trastorno de la personalidad emocionalmente inestable"
  },
  {
    "code": "F60.4",
    "description": "Trastorno histri√≥nico de la personalidad"
  },
  {
    "code": "F60.5",
    "description": "Trastorno ananc√°stico de la personalidad"
  },
  {
    "code": "F60.6",
    "description": "Trastorno de la personalidad ansiosa (evasiva, elusiva)"
  },
  {
    "code": "F60.7",
    "description": "Trastorno de la personalidad dependiente"
  },
  {
    "code": "F60.8",
    "description": "Otros trastornos espec√≠ficos de la personalidad"
  },
  {
    "code": "F60.9",
    "description": "Trastorno de la personalidad, no especificado"
  },
  {
    "code": "F62.0",
    "description": "Cambio perdurable de la personalidad despu√©s de una experiencia catastr√≥fica"
  },
  {
    "code": "F62.1",
    "description": "Cambio perdurable de la personalidad consecutivo a una enfermedad psiqui√°trica"
  },
  {
    "code": "F62.8",
    "description": "Otros cambios perdurables de la personalidad"
  },
  {
    "code": "F62.9",
    "description": "Cambio perdurable de la personalidad, no especificado"
  },
  {
    "code": "F63.0",
    "description": "Juego patol√≥gico"
  },
  {
    "code": "F63.1",
    "description": "Piroman√≠a"
  },
  {
    "code": "F63.2",
    "description": "Hurto patol√≥gico [cleptoman√≠a]"
  },
  {
    "code": "F63.3",
    "description": "Tricotiloman√≠a"
  },
  {
    "code": "F63.8",
    "description": "Otros trastornos de los h√°bitos y de los impulsos"
  },
  {
    "code": "F63.9",
    "description": "Trastorno de los h√°bitos y de los impulsos, no especificado"
  },
  {
    "code": "F64.0",
    "description": "Transexualismo"
  },
  {
    "code": "F64.1",
    "description": "Transvestismo de rol dual"
  },
  {
    "code": "F64.2",
    "description": "Trastorno de la identidad de g√©nero en la ni√±ez"
  },
  {
    "code": "F64.8",
    "description": "Otros trastornos de la identidad de g√©nero"
  },
  {
    "code": "F64.9",
    "description": "Trastorno de la identidad de g√©nero, no especificado"
  },
  {
    "code": "F65.0",
    "description": "Fetichismo"
  },
  {
    "code": "F65.1",
    "description": "Transvestismo fetichista"
  },
  {
    "code": "F65.2",
    "description": "Exhibicionismo"
  },
  {
    "code": "F65.3",
    "description": "Voyeurismo"
  },
  {
    "code": "F65.4",
    "description": "Pedofilia"
  },
  {
    "code": "F65.5",
    "description": "Sadomasoquismo"
  },
  {
    "code": "F65.6",
    "description": "Trastornos m√∫ltiples de la preferencia sexual"
  },
  {
    "code": "F65.8",
    "description": "Otros trastornos de la preferencia sexual"
  },
  {
    "code": "F65.9",
    "description": "Trastorno de la preferencia sexual, no especificado"
  },
  {
    "code": "F66.0",
    "description": "Trastorno de la maduraci√≥n sexual"
  },
  {
    "code": "F66.1",
    "description": "Orientaci√≥n sexual egodist√≥nica"
  },
  {
    "code": "F66.2",
    "description": "Trastorno de la relaci√≥n sexual"
  },
  {
    "code": "F66.8",
    "description": "Otros trastornos del desarrollo psicosexual"
  },
  {
    "code": "F66.9",
    "description": "Trastorno del desarrollo psicosexual, no especificado"
  },
  {
    "code": "F68.0",
    "description": "Elaboraci√≥n de s√≠ntomas f√≠sicos por causas psicol√≥gicas"
  },
  {
    "code": "F68.1",
    "description": "Producci√≥n intencional o simulaci√≥n de s√≠ntomas o de incapacidades, tanto f√≠sicas como  psicol√≥gicas [trastorno facticio]"
  },
  {
    "code": "F68.8",
    "description": "Otros trastornos especificados de la personalidad y del comportamiento en adultos"
  },
  {
    "code": "F70.0",
    "description": "Retraso mental leve, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F70.1",
    "description": "Retraso mental leve, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F70.8",
    "description": "Retraso mental leve, otros deterioros del comportamiento"
  },
  {
    "code": "F70.9",
    "description": "Retraso mental leve, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F71.0",
    "description": "Retraso mental moderado, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F71.1",
    "description": "Retraso mental moderado, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F71.8",
    "description": "Retraso mental moderado, otros deterioros del comportamiento"
  },
  {
    "code": "F71.9",
    "description": "Retraso mental moderado, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F72.0",
    "description": "Retraso mental grave, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F72.1",
    "description": "Retraso mental grave, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F72.8",
    "description": "Retraso mental grave, otros deterioros del comportamiento"
  },
  {
    "code": "F72.9",
    "description": "Retraso mental grave, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F73.0",
    "description": "Retraso mental profundo, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F73.1",
    "description": "Retraso mental profundo, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F73.8",
    "description": "Retraso mental profundo, otros deterioros del comportamiento"
  },
  {
    "code": "F73.9",
    "description": "Retraso mental profundo, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F78.0",
    "description": "Otros tipos de retraso mental, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F78.1",
    "description": "Otros tipos de retraso mental, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F78.8",
    "description": "Otros tipos de retraso mental, otros deterioros del comportamiento"
  },
  {
    "code": "F78.9",
    "description": "Otros tipos de retraso mental, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F79.0",
    "description": "Retraso mental, no especificado, deterioro del comportamiento nulo o m√≠nimo"
  },
  {
    "code": "F79.1",
    "description": "Retraso mental, no especificado, deterioro del comportamiento significativo, que requiere atenci√≥n o tratamiento"
  },
  {
    "code": "F79.8",
    "description": "Retraso mental, no especificado, otros deterioros del comportamiento"
  },
  {
    "code": "F79.9",
    "description": "Retraso mental, no especificado, deterioro del comportamiento de grado no especificado"
  },
  {
    "code": "F80.0",
    "description": "Trastorno espec√≠fico de la pronunciaci√≥n"
  },
  {
    "code": "F80.1",
    "description": "Trastorno del lenguaje expresivo"
  },
  {
    "code": "F80.2",
    "description": "Trastorno de la recepci√≥n del lenguaje"
  },
  {
    "code": "F80.3",
    "description": "Afasia adquirida con epilepsia [Landau-Kleffner]"
  },
  {
    "code": "F80.8",
    "description": "Otros trastornos del desarrollo del habla y del lenguaje"
  },
  {
    "code": "F80.9",
    "description": "Trastorno del desarrollo del habla y del lenguaje no especificado"
  },
  {
    "code": "F81.0",
    "description": "Trastorno espec√≠fico de la lectura"
  },
  {
    "code": "F81.1",
    "description": "Trastorno espec√≠fico del deletreo [ortograf√≠a]"
  },
  {
    "code": "F81.2",
    "description": "Trastorno espec√≠fico de las habilidades aritm√©ticas"
  },
  {
    "code": "F81.3",
    "description": "Trastorno mixto de las habilidades escolares"
  },
  {
    "code": "F81.8",
    "description": "Otros trastornos del desarrollo de las habilidades escolares"
  },
  {
    "code": "F81.9",
    "description": "Trastorno del desarrollo de las habilidades escolares, no especificado"
  },
  {
    "code": "F84.0",
    "description": "Autismo en la ni√±ez"
  },
  {
    "code": "F84.1",
    "description": "Autismo at√≠pico"
  },
  {
    "code": "F84.2",
    "description": "S√≠ndrome de Rett"
  },
  {
    "code": "F84.3",
    "description": "Otro trastorno desintegrativo de la ni√±ez"
  },
  {
    "code": "F84.4",
    "description": "Trastorno hiperactivo asociado con retraso mental y movimientos estereotipados"
  },
  {
    "code": "F84.5",
    "description": "S√≠ndrome de Asperger"
  },
  {
    "code": "F84.8",
    "description": "Otros trastornos generalizados del desarrollo"
  },
  {
    "code": "F84.9",
    "description": "Trastorno generalizado del desarrollo no especificado"
  },
  {
    "code": "F90.0",
    "description": "Perturbaci√≥n de la actividad y de la atenci√≥n"
  },
  {
    "code": "F90.1",
    "description": "Trastorno hipercin√©tico de la conducta"
  },
  {
    "code": "F90.8",
    "description": "Otros trastornos hipercin√©ticos"
  },
  {
    "code": "F90.9",
    "description": "Trastorno hipercin√©tico, no especificado"
  },
  {
    "code": "F91.0",
    "description": "Trastorno de la conducta limitado al contexto familiar"
  },
  {
    "code": "F91.1",
    "description": "Trastorno de la conducta insociable"
  },
  {
    "code": "F91.2",
    "description": "Trastorno de la conducta sociable"
  },
  {
    "code": "F91.3",
    "description": "Trastorno opositor desafiante"
  },
  {
    "code": "F91.8",
    "description": "Otros trastornos de la conducta"
  },
  {
    "code": "F91.9",
    "description": "Trastorno de la conducta, no especificado"
  },
  {
    "code": "F92.0",
    "description": "Trastorno depresivo de la conducta"
  },
  {
    "code": "F92.8",
    "description": "Otros trastornos mixtos de la conducta y de las emociones"
  },
  {
    "code": "F92.9",
    "description": "Trastorno mixto de la conducta y de las emociones, no especificado"
  },
  {
    "code": "F93.0",
    "description": "Trastorno de ansiedad de separaci√≥n en la ni√±ez"
  },
  {
    "code": "F93.1",
    "description": "Trastorno de ansiedad f√≥bica en la ni√±ez"
  },
  {
    "code": "F93.2",
    "description": "Trastorno de ansiedad social en la ni√±ez"
  },
  {
    "code": "F93.3",
    "description": "Trastorno de rivalidad entre hermanos"
  },
  {
    "code": "F93.8",
    "description": "Otros trastornos emocionales en la ni√±ez"
  },
  {
    "code": "F93.9",
    "description": "Trastorno emocional en la ni√±ez, no especificado"
  },
  {
    "code": "F94.0",
    "description": "Mutismo electivo"
  },
  {
    "code": "F94.1",
    "description": "Trastorno de vinculaci√≥n reactiva en la ni√±ez"
  },
  {
    "code": "F94.2",
    "description": "Trastorno de vinculaci√≥n desinhibida en la ni√±ez"
  },
  {
    "code": "F94.8",
    "description": "Otros trastornos del comportamiento social en la ni√±ez"
  },
  {
    "code": "F94.9",
    "description": "Trastorno del comportamiento social en la ni√±ez, no especificado"
  },
  {
    "code": "F95.0",
    "description": "Trastorno por tic transitorio"
  },
  {
    "code": "F95.1",
    "description": "Trastorno por tic motor o vocal cr√≥nico"
  },
  {
    "code": "F95.2",
    "description": "Trastorno por tics motores y vocales m√∫ltiples combinados [de la Tourette]"
  },
  {
    "code": "F95.8",
    "description": "Otros trastornos por tics"
  },
  {
    "code": "F95.9",
    "description": "Trastorno por tic, no especificado"
  },
  {
    "code": "F98.0",
    "description": "Enuresis no org√°nica"
  },
  {
    "code": "F98.1",
    "description": "Encopresis no org√°nica"
  },
  {
    "code": "F98.2",
    "description": "Trastorno de la ingesti√≥n alimentaria en la infancia y la ni√±ez"
  },
  {
    "code": "F98.3",
    "description": "Pica en la infancia y la ni√±ez"
  },
  {
    "code": "F98.4",
    "description": "Trastornos de los movimientos estereotipados"
  },
  {
    "code": "F98.5",
    "description": "Tartamudez [espasmofemia]"
  },
  {
    "code": "F98.6",
    "description": "Farfulleo"
  },
  {
    "code": "F98.8",
    "description": "Otros trastornos emocionales y del comportamiento que aparecen habitualmente en la ni√±ez y en la adolescencia"
  },
  {
    "code": "F98.9",
    "description": ""
  },
  {
    "code": "G00.0",
    "description": "Meningitis por hem√≥filos"
  },
  {
    "code": "G00.1",
    "description": "Meningitis neumoc√≥cica"
  },
  {
    "code": "G00.2",
    "description": "Meningitis estreptoc√≥cica"
  },
  {
    "code": "G00.3",
    "description": "Meningitis estafiloc√≥cica"
  },
  {
    "code": "G00.8",
    "description": "Otras meningitis bacterianas"
  },
  {
    "code": "G00.9",
    "description": "Meningitis bacteriana, no especificada"
  },
  {
    "code": "G02.0",
    "description": "Meningitis en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "G02.1",
    "description": "Meningitis en micosis"
  },
  {
    "code": "G02.8",
    "description": "Meningitis en otras enfermedades infecciosas y parasitarias especificadas clasificadas en otra parte"
  },
  {
    "code": "G03.0",
    "description": "Meningitis api√≥gena"
  },
  {
    "code": "G03.1",
    "description": "Meningitis cr√≥nica"
  },
  {
    "code": "G03.2",
    "description": "Meningitis recurrente benigna [Mollaret]"
  },
  {
    "code": "G03.8",
    "description": "Meningitis debidas a otras causas especificadas"
  },
  {
    "code": "G03.9",
    "description": "Meningitis, no especificada"
  },
  {
    "code": "G04.0",
    "description": "Encefalitis aguda diseminada"
  },
  {
    "code": "G04.1",
    "description": "Paraplej√≠a esp√°stica tropical"
  },
  {
    "code": "G04.2",
    "description": "Meningoencefalitis y meningomielitis bacterianas, no clasificadas en otra parte"
  },
  {
    "code": "G04.8",
    "description": "Otras encefalitis, mielitis y encefalomielitis"
  },
  {
    "code": "G04.9",
    "description": "Encefalitis, mielitis y encefalomielitis, no especificadas"
  },
  {
    "code": "G05.0",
    "description": "Encefalitis, mielitis y encefalomielitis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "G05.1",
    "description": "Encefalitis, mielitis y encefalomielitis en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "G05.2",
    "description": "Encefalitis, mielitis y encefalomielitis en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "G05.8",
    "description": "Encefalitis, mielitis y encefalomielitis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G06.0",
    "description": "Absceso y granuloma intracraneal"
  },
  {
    "code": "G06.1",
    "description": "Absceso y granuloma intrarraqu√≠deo"
  },
  {
    "code": "G06.2",
    "description": "Absceso extradural y subdural, no especificado"
  },
  {
    "code": "G11.0",
    "description": "Ataxia cong√©nita no progresiva"
  },
  {
    "code": "G11.1",
    "description": "Ataxia cerebelosa de iniciaci√≥n temprana"
  },
  {
    "code": "G11.2",
    "description": "Ataxia cerebelosa de iniciaci√≥n tard√≠a"
  },
  {
    "code": "G11.3",
    "description": "Ataxia cerebelosa con reparaci√≥n defectuosa del ADN"
  },
  {
    "code": "G11.4",
    "description": "Paraplej√≠a esp√°stica hereditaria"
  },
  {
    "code": "G11.8",
    "description": "Otras ataxias hereditarias"
  },
  {
    "code": "G11.9",
    "description": "Ataxia hereditaria, no especificada"
  },
  {
    "code": "G12.0",
    "description": "Atrofia muscular espinal infantil, tipo I [Werdnig-Hoffman]"
  },
  {
    "code": "G12.1",
    "description": "Otras atrofias musculares espinales hereditarias"
  },
  {
    "code": "G12.2",
    "description": "Enfermedades de las neuronas motoras"
  },
  {
    "code": "G12.8",
    "description": "Otras atrofias musculares espinales y s√≠ndromes afines"
  },
  {
    "code": "G12.9",
    "description": "Atrofia muscular espinal, sin otra especificaci√≥n"
  },
  {
    "code": "G13.0",
    "description": "Neuromiopat√≠a y neuropat√≠a paraneopl√°sica"
  },
  {
    "code": "G13.1",
    "description": "Otras atrofias sist√©micas que afectan el sistema nervioso central en enfermedad neopl√°sica"
  },
  {
    "code": "G13.2",
    "description": "Atrofia sist√©mica que afecta primariamente el sistema nervioso central en el mixedema (E00.1+, E03.-+)"
  },
  {
    "code": "G13.8",
    "description": "Atrofia sist√©mica que afecta primariamente el sistema nervioso central en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G21.0",
    "description": "S√≠ndrome neurol√©ptico maligno"
  },
  {
    "code": "G21.1",
    "description": "Otro parkinsonismo secundario inducido por drogas"
  },
  {
    "code": "G21.2",
    "description": "Parkinsonismo secundario debido a otros agentes externos"
  },
  {
    "code": "G21.3",
    "description": "Parkinsonismo postencefal√≠tico"
  },
  {
    "code": "G21.8",
    "description": "Otros tipos de parkinsonismo secundario"
  },
  {
    "code": "G21.9",
    "description": "Parkinsonismo secundario, no especificado"
  },
  {
    "code": "G23.0",
    "description": "Enfermedad de Hallervorden-Spatz"
  },
  {
    "code": "G23.1",
    "description": "Oftalmoplej√≠a supranuclear progresiva [Steele-Richardson-Olszewski]"
  },
  {
    "code": "G23.2",
    "description": "Degeneraci√≥n nigroestriada"
  },
  {
    "code": "G23.8",
    "description": "Otras enfermedades degenerativas espec√≠ficas de los n√∫cleos de la base"
  },
  {
    "code": "G23.9",
    "description": "Enfermedad degenerativa de los n√∫cleos de la base, no especificada"
  },
  {
    "code": "G24.0",
    "description": "Diston√≠a inducida por drogas"
  },
  {
    "code": "G24.1",
    "description": "Diston√≠a idiop√°tica familiar"
  },
  {
    "code": "G24.2",
    "description": "Diston√≠a idiop√°tica no familiar"
  },
  {
    "code": "G24.3",
    "description": "Tort√≠colis espasm√≥dica"
  },
  {
    "code": "G24.4",
    "description": "Diston√≠a bucofacial idiop√°tica"
  },
  {
    "code": "G24.5",
    "description": "Blefarospasmo"
  },
  {
    "code": "G24.8",
    "description": "Otras diston√≠as"
  },
  {
    "code": "G24.9",
    "description": "Diston√≠a, no especificada"
  },
  {
    "code": "G25.0",
    "description": "Temblor esencial"
  },
  {
    "code": "G25.1",
    "description": "Temblor inducido por drogas"
  },
  {
    "code": "G25.2",
    "description": "Otras formas especificadas de temblor"
  },
  {
    "code": "G25.3",
    "description": "Mioclon√≠a"
  },
  {
    "code": "G25.4",
    "description": "Corea inducida por drogas"
  },
  {
    "code": "G25.5",
    "description": "Otras coreas"
  },
  {
    "code": "G25.6",
    "description": "Tics inducidos por drogas y otros tics de origen org√°nico"
  },
  {
    "code": "G25.8",
    "description": "Otros trastornos extrapiramidales y del movimiento"
  },
  {
    "code": "G25.9",
    "description": "Trastorno extrapiramidal y del movimiento, no especificado"
  },
  {
    "code": "G30.0",
    "description": "Enfermedad de Alzheimer de comienzo temprano"
  },
  {
    "code": "G30.1",
    "description": "Enfermedad de Alzheimer de comienzo tard√≠o"
  },
  {
    "code": "G30.8",
    "description": "Otros tipos de enfermedad de Alzheimer"
  },
  {
    "code": "G30.9",
    "description": "Enfermedad de Alzheimer, no especificada"
  },
  {
    "code": "G31.0",
    "description": "Atrofia cerebral circunscrita"
  },
  {
    "code": "G31.1",
    "description": "Degeneraci√≥n cerebral senil no clasificada en otra parte"
  },
  {
    "code": "G31.2",
    "description": "Degeneraci√≥n del sistema nervioso debida al alcohol"
  },
  {
    "code": "G31.8",
    "description": "Otras enfermedades degenerativas especificadas del sistema nervioso"
  },
  {
    "code": "G31.9",
    "description": "Degeneraci√≥n del sistema nervioso, no especificada"
  },
  {
    "code": "G32.0",
    "description": "Degeneraci√≥n combinada subaguda de la m√©dula espinal en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G32.8",
    "description": "Otros trastornos degenerativos especificados del sistema nervioso en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G36.0",
    "description": "Neuromielitis √≥ptica [Devic]"
  },
  {
    "code": "G36.1",
    "description": "Leucoencefalitis hemorr√°gica aguda y subaguda [Hurst]"
  },
  {
    "code": "G36.8",
    "description": "Otras desmielinizaciones agudas diseminadas especificadas"
  },
  {
    "code": "G36.9",
    "description": "Desmielinizaci√≥n diseminada aguda, sin otra especificaci√≥n"
  },
  {
    "code": "G37.0",
    "description": "Esclerosis difusa"
  },
  {
    "code": "G37.1",
    "description": "Desmielinizaci√≥n central del cuerpo calloso"
  },
  {
    "code": "G37.2",
    "description": "Mielin√≥lisis central pontina"
  },
  {
    "code": "G37.3",
    "description": "Mielitis transversa aguda en enfermedad desmielinizante del sistema nervioso central"
  },
  {
    "code": "G37.4",
    "description": "Mielitis necrotizante subaguda"
  },
  {
    "code": "G37.5",
    "description": "Esclerosis conc√©ntrica [Bal√≥]"
  },
  {
    "code": "G37.8",
    "description": "Otras enfermedades desmielinizantes del sistema nervioso central, especificadas"
  },
  {
    "code": "G37.9",
    "description": "Enfermedad desmielinizante del sistema nervioso central, no especificada"
  },
  {
    "code": "G40.0",
    "description": ""
  },
  {
    "code": "G40.1",
    "description": ""
  },
  {
    "code": "G40.2",
    "description": ""
  },
  {
    "code": "G40.3",
    "description": "Epilepsia y s√≠ndromes epil√©pticos idiop√°ticos generalizados"
  },
  {
    "code": "G40.4",
    "description": "Otras epilepsias y s√≠ndromes epil√©pticos generalizados"
  },
  {
    "code": "G40.5",
    "description": "S√≠ndromes epil√©pticos especiales"
  },
  {
    "code": "G40.6",
    "description": "Ataques de gran mal, no especificados (con o sin peque√±o mal)"
  },
  {
    "code": "G40.7",
    "description": "Peque√±o mal, no especificado (sin ataque de gran mal)"
  },
  {
    "code": "G40.8",
    "description": "Otras epilepsias"
  },
  {
    "code": "G40.9",
    "description": "Epilepsia, tipo no especificado"
  },
  {
    "code": "G41.0",
    "description": "Estado de gran mal epil√©ptico"
  },
  {
    "code": "G41.1",
    "description": "Estado de peque√±o mal epil√©ptico"
  },
  {
    "code": "G41.2",
    "description": "Estado de mal epil√©ptico parcial complejo"
  },
  {
    "code": "G41.8",
    "description": "Otros estados epil√©pticos"
  },
  {
    "code": "G41.9",
    "description": "Estado de mal epil√©ptico de tipo no especificado"
  },
  {
    "code": "G43.0",
    "description": "Migra√±a sin aura [migra√±a com√∫n]"
  },
  {
    "code": "G43.1",
    "description": "Migra√±a con aura [migra√±a cl√°sica]"
  },
  {
    "code": "G43.2",
    "description": "Estado migra√±oso"
  },
  {
    "code": "G43.3",
    "description": "Migra√±a complicada"
  },
  {
    "code": "G43.8",
    "description": "Otras migra√±as"
  },
  {
    "code": "G43.9",
    "description": "Migra√±a, no especificada"
  },
  {
    "code": "G44.0",
    "description": "S√≠ndrome de cefalea en racimos"
  },
  {
    "code": "G44.1",
    "description": "Cefalea vascular, NCOP"
  },
  {
    "code": "G44.2",
    "description": "Cefalea debida a tensi√≥n"
  },
  {
    "code": "G44.3",
    "description": "Cefalea postraum√°tica cr√≥nica"
  },
  {
    "code": "G44.4",
    "description": "Cefalea inducida por drogas, no clasificada en otra parte"
  },
  {
    "code": "G44.8",
    "description": "Otros s√≠ndromes de cefalea especificados"
  },
  {
    "code": "G45.0",
    "description": "S√≠ndrome arterial v√©rtebro-basilar"
  },
  {
    "code": "G45.1",
    "description": "S√≠ndrome de la arteria car√≥tida (hemisf√©rico)"
  },
  {
    "code": "G45.2",
    "description": "S√≠ndromes arteriales precerebrales bilaterales y m√∫ltiples"
  },
  {
    "code": "G45.3",
    "description": "Amaurosis fugaz"
  },
  {
    "code": "G45.4",
    "description": "Amnesia global transitoria"
  },
  {
    "code": "G45.8",
    "description": "Otras isquemias cerebrales transitorias y s√≠ndromes afines"
  },
  {
    "code": "G45.9",
    "description": "Isquemia cerebral transitoria, sin otra especificaci√≥n"
  },
  {
    "code": "G46.0",
    "description": "S√≠ndrome de la arteria cerebral media (I66.0+)"
  },
  {
    "code": "G46.1",
    "description": "S√≠ndrome de la arteria cerebral anterior (I66.1+)"
  },
  {
    "code": "G46.2",
    "description": "S√≠ndrome de la arteria cerebral posterior (I66.2+)"
  },
  {
    "code": "G46.3",
    "description": "S√≠ndromes apopl√©ticos del tallo encef√°lico (I60-I67+)"
  },
  {
    "code": "G46.4",
    "description": "S√≠ndrome de infarto cerebeloso (I60-I67+)"
  },
  {
    "code": "G46.5",
    "description": "S√≠ndrome lacunar motor puro (I60-I67+)"
  },
  {
    "code": "G46.6",
    "description": "S√≠ndrome lacunar sensorial puro (I60-I67+)"
  },
  {
    "code": "G46.7",
    "description": "Otros s√≠ndromes lacunares (I60-I67+)"
  },
  {
    "code": "G46.8",
    "description": "Otros s√≠ndromes vasculares encef√°licos en enfermedades cerebrovasculares (I60-I67+)"
  },
  {
    "code": "G47.0",
    "description": "Trastornos del inicio y del mantenimiento del sue√±o [insomnios]"
  },
  {
    "code": "G47.1",
    "description": "Trastornos de somnolencia excesiva [hipersomnios]"
  },
  {
    "code": "G47.2",
    "description": "Trastornos del ritmo nictameral"
  },
  {
    "code": "G47.3",
    "description": "Apnea del sue√±o"
  },
  {
    "code": "G47.4",
    "description": "Narcolepsia y cataplexia"
  },
  {
    "code": "G47.8",
    "description": "Otros trastornos del sue√±o"
  },
  {
    "code": "G47.9",
    "description": "Trastorno del sue√±o, no especificado"
  },
  {
    "code": "G50.0",
    "description": "Neuralgia del trig√©mino"
  },
  {
    "code": "G50.1",
    "description": "Dolor facial at√≠pico"
  },
  {
    "code": "G50.8",
    "description": "Otros trastornos del trig√©mino"
  },
  {
    "code": "G50.9",
    "description": "Trastorno del trig√©mino, no especificado"
  },
  {
    "code": "G51.0",
    "description": "Par√°lisis de Bell"
  },
  {
    "code": "G51.1",
    "description": "Ganglionitis geniculada"
  },
  {
    "code": "G51.2",
    "description": "S√≠ndrome de Melkersson"
  },
  {
    "code": "G51.3",
    "description": "Espasmo hemifacial cl√≥nico"
  },
  {
    "code": "G51.4",
    "description": "Mioquimia facial"
  },
  {
    "code": "G51.8",
    "description": "Otros trastornos del nervio facial"
  },
  {
    "code": "G51.9",
    "description": "Trastorno del nervio facial, no especificado"
  },
  {
    "code": "G52.0",
    "description": "Trastornos del nervio olfatorio"
  },
  {
    "code": "G52.1",
    "description": "Trastornos del nervio glosofar√≠ngeo"
  },
  {
    "code": "G52.2",
    "description": "Trastornos del nervio vago"
  },
  {
    "code": "G52.3",
    "description": "Trastornos del nervio hipogloso"
  },
  {
    "code": "G52.7",
    "description": "Trastornos de m√∫ltiples nervios craneales"
  },
  {
    "code": "G52.8",
    "description": "Trastornos de otros nervios craneales especificados"
  },
  {
    "code": "G52.9",
    "description": "Trastorno de nervio craneal, no especificado"
  },
  {
    "code": "G53.0",
    "description": "Neuralgia postherpes zoster (B02.2+)"
  },
  {
    "code": "G53.1",
    "description": ""
  },
  {
    "code": "G53.2",
    "description": "Par√°lisis m√∫ltiple de los nervios craneales, en la sarcoidosis (D86.8+)"
  },
  {
    "code": "G53.3",
    "description": "Par√°lisis m√∫ltiple de los nervios craneales, en enfermedades neopl√°sicas (C00-D48+)"
  },
  {
    "code": "G53.8",
    "description": "Otros trastornos de los nervios craneales en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G54.0",
    "description": "Trastornos del plexo braquial"
  },
  {
    "code": "G54.1",
    "description": "Trastornos del plexo lumbosacro"
  },
  {
    "code": "G54.2",
    "description": "Trastornos de la ra√≠z cervical, no clasificados en otra parte"
  },
  {
    "code": "G54.3",
    "description": "Trastornos de la ra√≠z tor√°cica, no clasificados en otra parte"
  },
  {
    "code": "G54.4",
    "description": "Trastornos de la ra√≠z lumbosacra, no clasificados en otra parte"
  },
  {
    "code": "G54.5",
    "description": "Amiotrofia neur√°lgica"
  },
  {
    "code": "G54.6",
    "description": "S√≠ndrome del miembro fantasma con dolor"
  },
  {
    "code": "G54.7",
    "description": "S√≠ndrome del miembro fantasma sin dolor"
  },
  {
    "code": "G54.8",
    "description": "Otros trastornos de las ra√≠ces y plexos nerviosos"
  },
  {
    "code": "G54.9",
    "description": "Trastorno de la ra√≠z y plexos nerviosos, no especificado"
  },
  {
    "code": "G55.0",
    "description": "Compresiones de las ra√≠ces y plexos nerviosos en enfermedades neopl√°sicas (C00-D48+)"
  },
  {
    "code": "G55.1",
    "description": "Compresiones de las ra√≠ces y plexos nerviosos en trastornos de los discos intervertebrales (M50-M51+)"
  },
  {
    "code": "G55.2",
    "description": "Compresiones de las ra√≠ces y plexos nerviosos en la espondilosis (M47.-+)"
  },
  {
    "code": "G55.3",
    "description": "Compresiones de las ra√≠ces y plexos nerviosos en otras dorsopat√≠as (M45- M46+, M48.-+, M53-M54+)"
  },
  {
    "code": "G55.8",
    "description": "Compresiones de las ra√≠ces y plexos nerviosos en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G56.0",
    "description": "S√≠ndrome del t√∫nel carpiano"
  },
  {
    "code": "G56.1",
    "description": "Otras lesiones del nervio mediano"
  },
  {
    "code": "G56.2",
    "description": "Lesi√≥n del nervio cubital"
  },
  {
    "code": "G56.3",
    "description": "Lesi√≥n del nervio radial"
  },
  {
    "code": "G56.4",
    "description": "Causalgia"
  },
  {
    "code": "G56.8",
    "description": "Otras mononeuropat√≠as del miembro superior"
  },
  {
    "code": "G56.9",
    "description": "Mononeuropat√≠a del miembro superior, sin otra especificaci√≥n"
  },
  {
    "code": "G57.0",
    "description": "Lesi√≥n del nervio ci√°tico"
  },
  {
    "code": "G57.1",
    "description": "Meralgia parest√©sica"
  },
  {
    "code": "G57.2",
    "description": "Lesi√≥n del nervio crural"
  },
  {
    "code": "G57.3",
    "description": "Lesi√≥n del nervio ci√°tico popl√≠teo externo"
  },
  {
    "code": "G57.4",
    "description": "Lesi√≥n del nervio ci√°tico popl√≠teo interno"
  },
  {
    "code": "G57.5",
    "description": "S√≠ndrome del t√∫nel calc√°neo"
  },
  {
    "code": "G57.6",
    "description": "Lesi√≥n del nervio plantar"
  },
  {
    "code": "G57.8",
    "description": "Otras mononeuropat√≠as del miembro inferior"
  },
  {
    "code": "G57.9",
    "description": "Mononeuropat√≠a del miembro inferior, sin otra especificaci√≥n"
  },
  {
    "code": "G58.0",
    "description": "Neuropat√≠a intercostal"
  },
  {
    "code": "G58.7",
    "description": "Mononeuritis m√∫ltiple"
  },
  {
    "code": "G58.8",
    "description": "Otras mononeuropat√≠as especificadas"
  },
  {
    "code": "G58.9",
    "description": "Mononeuropat√≠a, no especificada"
  },
  {
    "code": "G59.0",
    "description": "Mononeuropat√≠a diab√©tica (E10-E14+ con cuarto car√°cter com√∫n .4)"
  },
  {
    "code": "G59.8",
    "description": "Otras mononeuropat√≠as en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G60.0",
    "description": "Neuropat√≠a hereditaria motora y sensorial"
  },
  {
    "code": "G60.1",
    "description": "Enfermedad de Refsum"
  },
  {
    "code": "G60.2",
    "description": "Neuropat√≠a asociada con ataxia hereditaria"
  },
  {
    "code": "G60.3",
    "description": "Neuropat√≠a progresiva idiop√°tica"
  },
  {
    "code": "G60.8",
    "description": "Otras neuropat√≠as hereditarias e idiop√°ticas"
  },
  {
    "code": "G60.9",
    "description": "Neuropat√≠a hereditaria e idiop√°tica, sin otra especificaci√≥n"
  },
  {
    "code": "G61.0",
    "description": "S√≠ndrome de Guillain-Barr√©"
  },
  {
    "code": "G61.1",
    "description": "Neuropat√≠a al suero"
  },
  {
    "code": "G61.8",
    "description": "Otras polineuropat√≠as inflamatorias"
  },
  {
    "code": "G61.9",
    "description": "Polineuropat√≠a inflamatoria, no especificada"
  },
  {
    "code": "G62.0",
    "description": "Polineuropat√≠a inducida por drogas"
  },
  {
    "code": "G62.1",
    "description": "Polineuropat√≠a alcoh√≥lica"
  },
  {
    "code": "G62.2",
    "description": "Polineuropat√≠a debida a otro agente t√≥xico"
  },
  {
    "code": "G62.8",
    "description": "Otras polineuropat√≠as especificadas"
  },
  {
    "code": "G62.9",
    "description": "Polineuropat√≠a, no especificada"
  },
  {
    "code": "G63.0",
    "description": "Polineuropat√≠a en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "G63.1",
    "description": "Polineuropat√≠a en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "G63.2",
    "description": "Polineuropat√≠a diab√©tica (E10-E14+ con cuarto car√°cter com√∫n .4)"
  },
  {
    "code": "G63.3",
    "description": "Polineuropat√≠a en otras enfermedades endocrinas y metab√≥licas (E00-E07+, E15-E16+, E20-E34+, E70-E89+)"
  },
  {
    "code": "G63.4",
    "description": "Polineuropat√≠a en deficiencia nutricional (E40-E64+)"
  },
  {
    "code": "G63.5",
    "description": "Polineuropat√≠a en trastornos del tejido conectivo sist√©mico (M30-M35+)"
  },
  {
    "code": "G63.6",
    "description": "Polineuropat√≠a en otros trastornos osteomusculares (M00-M25+, M40-M96+)"
  },
  {
    "code": "G63.8",
    "description": "Polineuropat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G70.0",
    "description": "Miastenia gravis"
  },
  {
    "code": "G70.1",
    "description": "Trastornos t√≥xicos neuromusculares"
  },
  {
    "code": "G70.2",
    "description": "Miastenia cong√©nita o del desarrollo"
  },
  {
    "code": "G70.8",
    "description": "Otros trastornos neuromusculares especificados"
  },
  {
    "code": "G70.9",
    "description": "Trastorno neuromuscular, no especificado"
  },
  {
    "code": "G71.0",
    "description": "Distrofia muscular"
  },
  {
    "code": "G71.1",
    "description": "Trastornos miot√≥nicos"
  },
  {
    "code": "G71.2",
    "description": "Miopat√≠as cong√©nitas"
  },
  {
    "code": "G71.3",
    "description": "Miopat√≠a mitoc√≥ndrica, no clasificada en otra parte"
  },
  {
    "code": "G71.8",
    "description": "Otros trastornos primarios de los m√∫sculos"
  },
  {
    "code": "G71.9",
    "description": "Trastorno primario del m√∫sculo, tipo no especificado"
  },
  {
    "code": "G72.0",
    "description": "Miopat√≠a inducida por drogas"
  },
  {
    "code": "G72.1",
    "description": "Miopat√≠a alcoh√≥lica"
  },
  {
    "code": "G72.2",
    "description": "Miopat√≠a debida a otros agentes t√≥xicos"
  },
  {
    "code": "G72.3",
    "description": "Par√°lisis peri√≥dica"
  },
  {
    "code": "G72.4",
    "description": "Miopat√≠a inflamatoria, no clasificada en otra parte"
  },
  {
    "code": "G72.8",
    "description": "Otras miopat√≠as especificadas"
  },
  {
    "code": "G72.9",
    "description": "Miopat√≠a, no especificada"
  },
  {
    "code": "G73.0",
    "description": "S√≠ndromes miast√©nicos en enfermedades endocrinas"
  },
  {
    "code": "G73.1",
    "description": "S√≠ndrome de Eaton-Lambert (C80+)"
  },
  {
    "code": "G73.2",
    "description": "Otros s√≠ndromes miast√©nicos en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "G73.3",
    "description": "S√≠ndromes miast√©nicos en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G73.4",
    "description": "Miopat√≠a en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "G73.5",
    "description": "Miopat√≠a en enfermedades endocrinas"
  },
  {
    "code": "G73.6",
    "description": "Miopat√≠a en enfermedades metab√≥licas"
  },
  {
    "code": "G73.7",
    "description": "Miopat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G80.0",
    "description": "Par√°lisis cerebral esp√°stica"
  },
  {
    "code": "G80.1",
    "description": "Diplej√≠a esp√°stica"
  },
  {
    "code": "G80.2",
    "description": "Hemiplej√≠a infantil"
  },
  {
    "code": "G80.3",
    "description": "Par√°lisis cerebral discin√©tica"
  },
  {
    "code": "G80.4",
    "description": "Par√°lisis cerebral at√°xica"
  },
  {
    "code": "G80.8",
    "description": "Otros tipos de par√°lisis cerebral infantil"
  },
  {
    "code": "G80.9",
    "description": "Par√°lisis cerebral infantil, sin otra especificaci√≥n"
  },
  {
    "code": "G81.0",
    "description": "Hemiplej√≠a fl√°cida"
  },
  {
    "code": "G81.1",
    "description": "Hemiplej√≠a esp√°stica"
  },
  {
    "code": "G81.9",
    "description": "Hemiplej√≠a, no especificada"
  },
  {
    "code": "G82.0",
    "description": "Paraplej√≠a fl√°cida"
  },
  {
    "code": "G82.1",
    "description": "Paraplej√≠a esp√°stica"
  },
  {
    "code": "G82.2",
    "description": "Paraplej√≠a, no especificada"
  },
  {
    "code": "G82.3",
    "description": "Cuadriplej√≠a fl√°cida"
  },
  {
    "code": "G82.4",
    "description": "Cuadriplej√≠a esp√°stica"
  },
  {
    "code": "G82.5",
    "description": "Cuadriplej√≠a, no especificada"
  },
  {
    "code": "G83.0",
    "description": "Diplej√≠a de los miembros superiores"
  },
  {
    "code": "G83.1",
    "description": "Monoplej√≠a de miembro inferior"
  },
  {
    "code": "G83.2",
    "description": "Monoplej√≠a de miembro superior"
  },
  {
    "code": "G83.3",
    "description": "Monoplej√≠a, no especificada"
  },
  {
    "code": "G83.4",
    "description": "S√≠ndrome de la cola de caballo"
  },
  {
    "code": "G83.8",
    "description": "Otros s√≠ndromes paral√≠ticos especificados"
  },
  {
    "code": "G83.9",
    "description": "S√≠ndrome paral√≠tico, no especificado"
  },
  {
    "code": "G90.0",
    "description": "Neuropat√≠a aut√≥noma perif√©rica idiop√°tica"
  },
  {
    "code": "G90.1",
    "description": "Disautonom√≠a familiar [S√≠ndrome de Riley-Day]"
  },
  {
    "code": "G90.2",
    "description": "S√≠ndrome de Horner"
  },
  {
    "code": "G90.3",
    "description": "Degeneraci√≥n de sistemas m√∫ltiples"
  },
  {
    "code": "G90.8",
    "description": "Otros trastornos del sistema nervioso aut√≥nomo"
  },
  {
    "code": "G90.9",
    "description": "Trastorno del sistema nervioso aut√≥nomo, no especificado"
  },
  {
    "code": "G91.0",
    "description": "Hidroc√©falo comunicante"
  },
  {
    "code": "G91.1",
    "description": "Hidroc√©falo obstructivo"
  },
  {
    "code": "G91.2",
    "description": "Hidroc√©falo de presi√≥n normal"
  },
  {
    "code": "G91.3",
    "description": "Hidroc√©falo postraum√°tico, sin otra especificaci√≥n"
  },
  {
    "code": "G91.8",
    "description": "Otros tipos de hidroc√©falo"
  },
  {
    "code": "G91.9",
    "description": "Hidroc√©falo, no especificado"
  },
  {
    "code": "G93.0",
    "description": "Quiste cerebral"
  },
  {
    "code": "G93.1",
    "description": "Lesi√≥n cerebral an√≥xica, no clasificada en otra parte"
  },
  {
    "code": "G93.2",
    "description": "Hipertensi√≥n intracraneal benigna"
  },
  {
    "code": "G93.3",
    "description": "S√≠ndrome de fatiga postviral"
  },
  {
    "code": "G93.4",
    "description": "Encefalopat√≠a no especificada"
  },
  {
    "code": "G93.5",
    "description": "Compresi√≥n del enc√©falo"
  },
  {
    "code": "G93.6",
    "description": "Edema cerebral"
  },
  {
    "code": "G93.7",
    "description": "S√≠ndrome de Reye"
  },
  {
    "code": "G93.8",
    "description": "Otros trastornos especificados del enc√©falo"
  },
  {
    "code": "G93.9",
    "description": "Trastorno del enc√©falo, no especificado"
  },
  {
    "code": "G94.0",
    "description": "Hidroc√©falo en enfermedades infecciosas y parasitarias clasificadas en otra parte (A00-B99+)"
  },
  {
    "code": "G94.1",
    "description": "Hidroc√©falo en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "G94.2",
    "description": "Hidroc√©falo en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G94.8",
    "description": "Otros trastornos encef√°licos especificados en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G95.0",
    "description": "Siringomielia y siringobulbia"
  },
  {
    "code": "G95.1",
    "description": "Mielopat√≠as vasculares"
  },
  {
    "code": "G95.2",
    "description": "Compresi√≥n medular, no especificada"
  },
  {
    "code": "G95.8",
    "description": "Otras enfermedades especificadas de la m√©dula espinal"
  },
  {
    "code": "G95.9",
    "description": "Enfermedad de la m√©dula espinal, no especificada"
  },
  {
    "code": "G96.0",
    "description": "P√©rdida de l√≠quido cefalorraqu√≠deo"
  },
  {
    "code": "G96.1",
    "description": "Trastornos de las meninges, no clasificados en otra parte"
  },
  {
    "code": "G96.8",
    "description": "Otros trastornos especificados del sistema nervioso central"
  },
  {
    "code": "G96.9",
    "description": "Trastorno del sistema nervioso central, no especificado"
  },
  {
    "code": "G97.0",
    "description": "P√©rdida de l√≠quido cefalorraqu√≠deo por punci√≥n espinal"
  },
  {
    "code": "G97.1",
    "description": "Otra reacci√≥n a la punci√≥n espinal y lumbar"
  },
  {
    "code": "G97.2",
    "description": "Hipotensi√≥n intracraneal posterior a anastomosis ventricular"
  },
  {
    "code": "G97.8",
    "description": "Otros trastornos del sistema nervioso consecutivos a procedimientos"
  },
  {
    "code": "G97.9",
    "description": "Trastornos no especificados del sistema nervioso, consecutivos a procedimientos"
  },
  {
    "code": "G99.0",
    "description": "Neuropat√≠a auton√≥mica en enfermedades metab√≥licas y endocrinas"
  },
  {
    "code": "G99.1",
    "description": "Otros trastornos del sistema nervioso aut√≥nomo en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "G99.2",
    "description": "Mielopat√≠a en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G99.8",
    "description": "Otros trastornos especificados del sistema nervioso en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H00.0",
    "description": "Orzuelo y otras inflamaciones profundas del p√°rpado"
  },
  {
    "code": "H00.1",
    "description": "Calacio [chalazi√≥n]"
  },
  {
    "code": "H01.0",
    "description": "Blefaritis"
  },
  {
    "code": "H01.1",
    "description": "Dermatosis no infecciosa del p√°rpado"
  },
  {
    "code": "H01.8",
    "description": "Otras inflamaciones especificadas del p√°rpado"
  },
  {
    "code": "H01.9",
    "description": "Inflamaci√≥n del p√°rpado, no especificada"
  },
  {
    "code": "H02.0",
    "description": "Entropi√≥n y triquiasis palpebral"
  },
  {
    "code": "H02.1",
    "description": "Ectropi√≥n del p√°rpado"
  },
  {
    "code": "H02.2",
    "description": "Lagoftalmos"
  },
  {
    "code": "H02.3",
    "description": "Blefarocalasia"
  },
  {
    "code": "H02.4",
    "description": "Blefaroptosis"
  },
  {
    "code": "H02.5",
    "description": "Otros trastornos funcionales del p√°rpado"
  },
  {
    "code": "H02.6",
    "description": "Xantelasma del p√°rpado"
  },
  {
    "code": "H02.7",
    "description": "Otros trastornos degenerativos del p√°rpado y del √°rea periocular"
  },
  {
    "code": "H02.8",
    "description": "Otros trastornos especificados del p√°rpado"
  },
  {
    "code": "H02.9",
    "description": "Trastorno del p√°rpado, no especificado"
  },
  {
    "code": "H03.0",
    "description": "Infecci√≥n e infestaci√≥n parasitarias del p√°rpado en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H03.1",
    "description": "Compromiso del p√°rpado en enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "H03.8",
    "description": "Compromiso del p√°rpado en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H04.0",
    "description": "Dacrioadenitis"
  },
  {
    "code": "H04.1",
    "description": "Otros trastornos de la gl√°ndula lagrimal"
  },
  {
    "code": "H04.2",
    "description": "Ep√≠fora"
  },
  {
    "code": "H04.3",
    "description": "Inflamaci√≥n aguda y la no especificada de las v√≠as lagrimales"
  },
  {
    "code": "H04.4",
    "description": "Inflamaci√≥n cr√≥nica de las v√≠as lagrimales"
  },
  {
    "code": "H04.5",
    "description": "Estenosis e insuficiencia de las v√≠as lagrimales"
  },
  {
    "code": "H04.6",
    "description": "Otros cambios de las v√≠as lagrimales"
  },
  {
    "code": "H04.8",
    "description": "Otros trastornos especificados del aparato lagrimal"
  },
  {
    "code": "H04.9",
    "description": "Trastorno del aparato lagrimal, no especificado"
  },
  {
    "code": "H05.0",
    "description": "Inflamaci√≥n aguda de la √≥rbita"
  },
  {
    "code": "H05.1",
    "description": "Trastornos inflamatorios cr√≥nicos de la √≥rbita"
  },
  {
    "code": "H05.2",
    "description": "Afecciones exoft√°lmicas"
  },
  {
    "code": "H05.3",
    "description": "Deformidad de la √≥rbita"
  },
  {
    "code": "H05.4",
    "description": "Enoftalmia"
  },
  {
    "code": "H05.5",
    "description": "Retenci√≥n de cuerpo extra√±o (antiguo), consecutiva a herida penetrante de la √≥rbita"
  },
  {
    "code": "H05.8",
    "description": "Otros trastornos de la √≥rbita"
  },
  {
    "code": "H05.9",
    "description": "Trastorno de la √≥rbita, no especificado"
  },
  {
    "code": "H06.0",
    "description": "Trastornos del aparato lagrimal en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H06.1",
    "description": "Infecci√≥n e infestaci√≥n parasitarias de la √≥rbita en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H06.2",
    "description": "Exoftalmia hipertiroidea (E05.-+)"
  },
  {
    "code": "H06.3",
    "description": "Otros trastornos de la √≥rbita en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H10.0",
    "description": "Conjuntivitis mucopurulenta"
  },
  {
    "code": "H10.1",
    "description": "Conjuntivitis at√≥pica aguda"
  },
  {
    "code": "H10.2",
    "description": "Otras conjuntivitis agudas"
  },
  {
    "code": "H10.3",
    "description": "Conjuntivitis aguda, no especificada"
  },
  {
    "code": "H10.4",
    "description": "Conjuntivitis cr√≥nica"
  },
  {
    "code": "H10.5",
    "description": "Blefaroconjuntivitis"
  },
  {
    "code": "H10.8",
    "description": "Otras conjuntivitis"
  },
  {
    "code": "H10.9",
    "description": "Conjuntivitis, no especificada"
  },
  {
    "code": "H11.0",
    "description": "Pterigi√≥n"
  },
  {
    "code": "H11.1",
    "description": "Degeneraciones y dep√≥sitos conjuntivales"
  },
  {
    "code": "H11.2",
    "description": "Cicatrices conjuntivales"
  },
  {
    "code": "H11.3",
    "description": "Hemorragia conjuntival"
  },
  {
    "code": "H11.4",
    "description": "Otros trastornos vasculares y quistes conjuntivales"
  },
  {
    "code": "H11.8",
    "description": "Otros trastornos especificados de la conjuntiva"
  },
  {
    "code": "H11.9",
    "description": "Trastorno de la conjuntiva, no especificado"
  },
  {
    "code": "H13.0",
    "description": "Infecci√≥n fil√°rica de la conjuntiva (B74.-+)"
  },
  {
    "code": "H13.1",
    "description": "Conjuntivitis en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H13.2",
    "description": "Conjuntivitis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H13.3",
    "description": "Penfigoide ocular (L12.-+)"
  },
  {
    "code": "H13.8",
    "description": "Otros trastornos de la conjuntiva en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H15.0",
    "description": "Escleritis"
  },
  {
    "code": "H15.1",
    "description": "Episcleritis"
  },
  {
    "code": "H15.8",
    "description": "Otros trastornos de la escler√≥tica"
  },
  {
    "code": "H15.9",
    "description": "Trastorno de la escler√≥tica, no especificado"
  },
  {
    "code": "H16.0",
    "description": "Ulcera de la c√≥rnea"
  },
  {
    "code": "H16.1",
    "description": "Otras queratitis superficiales sin conjuntivitis"
  },
  {
    "code": "H16.2",
    "description": "Queratoconjuntivitis"
  },
  {
    "code": "H16.3",
    "description": "Queratitis intersticial y profunda"
  },
  {
    "code": "H16.4",
    "description": "Neovascularizaci√≥n de la c√≥rnea"
  },
  {
    "code": "H16.8",
    "description": "Otras queratitis"
  },
  {
    "code": "H16.9",
    "description": "Queratitis, no especificada"
  },
  {
    "code": "H17.0",
    "description": "Leucoma adherente"
  },
  {
    "code": "H17.1",
    "description": "Otras opacidades centrales de la c√≥rnea"
  },
  {
    "code": "H17.8",
    "description": "Otras opacidades o cicatrices de la c√≥rnea"
  },
  {
    "code": "H17.9",
    "description": "Cicatriz u opacidad de la c√≥rnea, no especificada"
  },
  {
    "code": "H18.0",
    "description": "Pigmentaciones y dep√≥sitos en la c√≥rnea"
  },
  {
    "code": "H18.1",
    "description": "Queratopat√≠a vesicular"
  },
  {
    "code": "H18.2",
    "description": "Otros edemas de la c√≥rnea"
  },
  {
    "code": "H18.3",
    "description": "Cambios en las membranas de la c√≥rnea"
  },
  {
    "code": "H18.4",
    "description": "Degeneraci√≥n de la c√≥rnea"
  },
  {
    "code": "H18.5",
    "description": "Distrofia hereditaria de la c√≥rnea"
  },
  {
    "code": "H18.6",
    "description": "Queratocono"
  },
  {
    "code": "H18.7",
    "description": "Otras deformidades de la c√≥rnea"
  },
  {
    "code": "H18.8",
    "description": "Otros trastornos especificados de la c√≥rnea"
  },
  {
    "code": "H18.9",
    "description": "Trastorno de la c√≥rnea, no especificado"
  },
  {
    "code": "H19.0",
    "description": "Escleritis y episcleritis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H19.1",
    "description": "Queratitis y queratoconjuntivitis por herpes simple (B00.5+)"
  },
  {
    "code": "H19.2",
    "description": "Queratitis y queratoconjuntivitis en enfermedades infecciosas y parasitarias, clasificadas en otra parte"
  },
  {
    "code": "H19.3",
    "description": "Queratitis y queratoconjuntivitis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H19.8",
    "description": "Otros trastornos de la escler√≥tica y de la c√≥rnea en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H20.0",
    "description": "Iridociclitis aguda y subaguda"
  },
  {
    "code": "H20.1",
    "description": "Iridociclitis cr√≥nica"
  },
  {
    "code": "H20.2",
    "description": "Iridociclitis inducida por trastorno del cristalino"
  },
  {
    "code": "H20.8",
    "description": "Otras iridociclitis especificadas"
  },
  {
    "code": "H20.9",
    "description": "Iridociclitis, no especificada"
  },
  {
    "code": "H21.0",
    "description": "Hifema"
  },
  {
    "code": "H21.1",
    "description": "Otros trastornos vasculares del iris y del cuerpo ciliar"
  },
  {
    "code": "H21.2",
    "description": "Degeneraci√≥n del iris y del cuerpo ciliar"
  },
  {
    "code": "H21.3",
    "description": "Quiste del iris, del cuerpo ciliar y de la c√°mara anterior"
  },
  {
    "code": "H21.4",
    "description": "Membranas pupilares"
  },
  {
    "code": "H21.5",
    "description": "Otras adherencias y desgarros del iris y del cuerpo ciliar"
  },
  {
    "code": "H21.8",
    "description": "Otros trastornos especificados del iris y del cuerpo ciliar"
  },
  {
    "code": "H21.9",
    "description": "Trastorno del iris y del cuerpo ciliar, no especificado"
  },
  {
    "code": "H22.0",
    "description": "Iridociclitis en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H22.1",
    "description": "Iridociclitis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H22.8",
    "description": "Otros trastornos del iris y del cuerpo ciliar en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H25.0",
    "description": "Catarata senil incipiente"
  },
  {
    "code": "H25.1",
    "description": "Catarata senil nuclear"
  },
  {
    "code": "H25.2",
    "description": "Catarata senil, tipo morgagnian"
  },
  {
    "code": "H25.8",
    "description": "Otras cataratas seniles"
  },
  {
    "code": "H25.9",
    "description": "Catarata senil, no especificada"
  },
  {
    "code": "H26.0",
    "description": "Catarata infantil, juvenil y presenil"
  },
  {
    "code": "H26.1",
    "description": "Catarata traum√°tica"
  },
  {
    "code": "H26.2",
    "description": "Catarata complicada"
  },
  {
    "code": "H26.3",
    "description": "Catarata inducida por drogas"
  },
  {
    "code": "H26.4",
    "description": "Catarata residual"
  },
  {
    "code": "H26.8",
    "description": "Otras formas especificadas de catarata"
  },
  {
    "code": "H26.9",
    "description": "Catarata, no especificada"
  },
  {
    "code": "H27.0",
    "description": "Afaquia"
  },
  {
    "code": "H27.1",
    "description": "Luxaci√≥n del cristalino"
  },
  {
    "code": "H27.8",
    "description": "Otros trastornos especificados del cristalino"
  },
  {
    "code": "H27.9",
    "description": "Trastorno del cristalino, no especificado"
  },
  {
    "code": "H28.0",
    "description": "Catarata diab√©tica (E10-E14+ con cuarto car√°cter com√∫n .3)"
  },
  {
    "code": "H28.1",
    "description": "Catarata en otras enfermedades endocrinas, nutricionales y metab√≥licas clasificadas en otra parte"
  },
  {
    "code": "H28.2",
    "description": "Catarata en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H28.8",
    "description": "Otros trastornos del cristalino en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H30.0",
    "description": "Coriorretinitis focal"
  },
  {
    "code": "H30.1",
    "description": "Coriorretinitis diseminada"
  },
  {
    "code": "H30.2",
    "description": "Ciclitis posterior"
  },
  {
    "code": "H30.8",
    "description": "Otras coriorretinitis"
  },
  {
    "code": "H30.9",
    "description": "Coriorretinitis, no especificada"
  },
  {
    "code": "H31.0",
    "description": "Cicatrices coriorretinianas"
  },
  {
    "code": "H31.1",
    "description": "Degeneraci√≥n coroidea"
  },
  {
    "code": "H31.2",
    "description": "Distrofia coroidea hereditaria"
  },
  {
    "code": "H31.3",
    "description": "Hemorragia y ruptura de la coroides"
  },
  {
    "code": "H31.4",
    "description": "Desprendimiento de la coroides"
  },
  {
    "code": "H31.8",
    "description": "Otros trastornos especificados de la coroides"
  },
  {
    "code": "H31.9",
    "description": "Trastorno de la coroides, no especificado"
  },
  {
    "code": "H32.0",
    "description": "Inflamaci√≥n coriorretiniana en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H32.8",
    "description": "Otros trastornos coriorretinianos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H33.0",
    "description": "Desprendimiento de la retina con ruptura"
  },
  {
    "code": "H33.1",
    "description": "Retinosquisis y quistes de la retina"
  },
  {
    "code": "H33.2",
    "description": "Desprendimiento seroso de la retina"
  },
  {
    "code": "H33.3",
    "description": "Desgarro de la retina sin desprendimiento"
  },
  {
    "code": "H33.4",
    "description": "Desprendimiento de la retina por tracci√≥n"
  },
  {
    "code": "H33.5",
    "description": "Otros desprendimientos de la retina"
  },
  {
    "code": "H34.0",
    "description": "Oclusi√≥n arterial transitoria de la retina"
  },
  {
    "code": "H34.1",
    "description": "Oclusi√≥n de la arteria central de la retina"
  },
  {
    "code": "H34.2",
    "description": "Otras formas de oclusi√≥n de la arteria de la retina"
  },
  {
    "code": "H34.8",
    "description": "Otras oclusiones vasculares retinianas"
  },
  {
    "code": "H34.9",
    "description": "Oclusi√≥n vascular retiniana, sin otra especificaci√≥n"
  },
  {
    "code": "H35.0",
    "description": "Retinopat√≠as del fondo y cambios vasculares retinianos"
  },
  {
    "code": "H35.1",
    "description": "Retinopat√≠a de la prematuridad"
  },
  {
    "code": "H35.2",
    "description": "Otras retinopat√≠as proliferativas"
  },
  {
    "code": "H35.3",
    "description": "Degeneraci√≥n de la m√°cula y del polo posterior del ojo"
  },
  {
    "code": "H35.4",
    "description": "Degeneraci√≥n perif√©rica de la retina"
  },
  {
    "code": "H35.5",
    "description": "Distrofia hereditaria de la retina"
  },
  {
    "code": "H35.6",
    "description": "Hemorragia retiniana"
  },
  {
    "code": "H35.7",
    "description": "Separaci√≥n de las capas de la retina"
  },
  {
    "code": "H35.8",
    "description": "Otros trastornos especificados de la retina"
  },
  {
    "code": "H35.9",
    "description": "Trastorno de la retina, no especificado"
  },
  {
    "code": "H36.0",
    "description": "Retinopat√≠a diab√©tica (E10-E14+ con cuarto car√°cter com√∫n .3)"
  },
  {
    "code": "H36.8",
    "description": "Otros trastornos de la retina en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H40.0",
    "description": "Sospecha de glaucoma"
  },
  {
    "code": "H40.1",
    "description": "Glaucoma primario de √°ngulo abierto"
  },
  {
    "code": "H40.2",
    "description": "Glaucoma primario de √°ngulo cerrado"
  },
  {
    "code": "H40.3",
    "description": "Glaucoma secundario a traumatismo ocular"
  },
  {
    "code": "H40.4",
    "description": "Glaucoma secundario a inflamaci√≥n ocular"
  },
  {
    "code": "H40.5",
    "description": "Glaucoma secundario a otros trastornos del ojo"
  },
  {
    "code": "H40.6",
    "description": "Glaucoma secundario a drogas"
  },
  {
    "code": "H40.8",
    "description": "Otros glaucomas"
  },
  {
    "code": "H40.9",
    "description": "Glaucoma, no especificado"
  },
  {
    "code": "H42.0",
    "description": "Glaucoma en enfermedades endocrinas, nutricionales y metab√≥licas, clasificadas en otra parte"
  },
  {
    "code": "H42.8",
    "description": "Glaucoma en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H43.0",
    "description": "Prolapso del v√≠treo"
  },
  {
    "code": "H43.1",
    "description": "Hemorragia del v√≠treo"
  },
  {
    "code": "H43.2",
    "description": "Dep√≥sitos cristalinos en el cuerpo v√≠treo"
  },
  {
    "code": "H43.3",
    "description": "Otras opacidades v√≠treas"
  },
  {
    "code": "H43.8",
    "description": "Otros trastornos del cuerpo v√≠treo"
  },
  {
    "code": "H43.9",
    "description": "Trastorno del cuerpo v√≠treo, no especificado"
  },
  {
    "code": "H44.0",
    "description": "Endoftalmitis purulenta"
  },
  {
    "code": "H44.1",
    "description": "Otras endoftalmitis"
  },
  {
    "code": "H44.2",
    "description": "Miop√≠a degenerativa"
  },
  {
    "code": "H44.3",
    "description": "Otros trastornos degenerativos del globo ocular"
  },
  {
    "code": "H44.4",
    "description": "Hipoton√≠a ocular"
  },
  {
    "code": "H44.5",
    "description": "Afecciones degenerativas del globo ocular"
  },
  {
    "code": "H44.6",
    "description": "Retenci√≥n intraocular de cuerpo extra√±o magn√©tico (antiguo)"
  },
  {
    "code": "H44.7",
    "description": "Retenci√≥n intraocular de cuerpo extra√±o no magn√©tico (antiguo)"
  },
  {
    "code": "H44.8",
    "description": "Otros trastornos del globo ocular"
  },
  {
    "code": "H44.9",
    "description": "Trastorno del globo ocular, no especificado"
  },
  {
    "code": "H45.0",
    "description": "Hemorragia del v√≠treo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H45.1",
    "description": "Endoftalmitis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H45.8",
    "description": "Otros trastornos del cuerpo v√≠treo y del globo ocular en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H47.0",
    "description": "Trastornos del nervio √≥ptico, no clasificados en otra parte"
  },
  {
    "code": "H47.1",
    "description": "Papiledema, no especificado"
  },
  {
    "code": "H47.2",
    "description": "Atrofia √≥ptica"
  },
  {
    "code": "H47.3",
    "description": "Otros trastornos del disco √≥ptico"
  },
  {
    "code": "H47.4",
    "description": "Trastornos del quiasma √≥ptico"
  },
  {
    "code": "H47.5",
    "description": "Trastornos de otras v√≠as √≥pticas"
  },
  {
    "code": "H47.6",
    "description": "Trastornos de la corteza visual"
  },
  {
    "code": "H47.7",
    "description": "Trastorno de las v√≠as √≥pticas, no especificado"
  },
  {
    "code": "H48.0",
    "description": "Atrofia √≥ptica en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H48.1",
    "description": "Neuritis retrobulbar en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H48.8",
    "description": "Otros trastornos del nervio √≥ptico y de las v√≠as √≥pticas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H49.0",
    "description": "Par√°lisis del nervio motor ocular com√∫n [III par]"
  },
  {
    "code": "H49.1",
    "description": "Par√°lisis del nervio pat√©tico [IV par]"
  },
  {
    "code": "H49.2",
    "description": "Par√°lisis del nervio motor ocular externo [VI par]"
  },
  {
    "code": "H49.3",
    "description": "Oftalmoplej√≠a total (externa)"
  },
  {
    "code": "H49.4",
    "description": "Oftalmoplej√≠a externa progresiva"
  },
  {
    "code": "H49.8",
    "description": "Otros estrabismos paral√≠ticos"
  },
  {
    "code": "H49.9",
    "description": "Estrabismo paral√≠tico, no especificado"
  },
  {
    "code": "H50.0",
    "description": "Estrabismo concomitante convergente"
  },
  {
    "code": "H50.1",
    "description": "Estrabismo concomitante divergente"
  },
  {
    "code": "H50.2",
    "description": "Estrabismo vertical"
  },
  {
    "code": "H50.3",
    "description": "Heterotrop√≠a intermitente"
  },
  {
    "code": "H50.4",
    "description": "Otras heterotrop√≠as o las no especificadas"
  },
  {
    "code": "H50.5",
    "description": "Heteroforia"
  },
  {
    "code": "H50.6",
    "description": "Estrabismo mec√°nico"
  },
  {
    "code": "H50.8",
    "description": "Otros estrabismos especificados"
  },
  {
    "code": "H50.9",
    "description": "Estrabismo, no especificado"
  },
  {
    "code": "H51.0",
    "description": "Par√°lisis de la conjugaci√≥n de la mirada"
  },
  {
    "code": "H51.1",
    "description": "Exceso e insuficiencia de la convergencia ocular"
  },
  {
    "code": "H51.2",
    "description": "Oftalmoplej√≠a internuclear"
  },
  {
    "code": "H51.8",
    "description": "Otros trastornos especificados de los movimientos binoculares"
  },
  {
    "code": "H51.9",
    "description": "Trastorno del movimiento binocular, no especificado"
  },
  {
    "code": "H52.0",
    "description": "Hipermetrop√≠a"
  },
  {
    "code": "H52.1",
    "description": "Miop√≠a"
  },
  {
    "code": "H52.2",
    "description": "Astigmatismo"
  },
  {
    "code": "H52.3",
    "description": "Anisometrop√≠a y aniseicon√≠a"
  },
  {
    "code": "H52.4",
    "description": "Presbicia"
  },
  {
    "code": "H52.5",
    "description": "Trastornos de la acomodaci√≥n"
  },
  {
    "code": "H52.6",
    "description": "Otros trastornos de la refracci√≥n"
  },
  {
    "code": "H52.7",
    "description": "Trastorno de la refracci√≥n, no especificado"
  },
  {
    "code": "H53.0",
    "description": "Ambliop√≠a ex anopsia"
  },
  {
    "code": "H53.1",
    "description": "Alteraciones visuales subjetivas"
  },
  {
    "code": "H53.2",
    "description": "Diplop√≠a"
  },
  {
    "code": "H53.3",
    "description": "Otros trastornos de la visi√≥n binocular"
  },
  {
    "code": "H53.4",
    "description": "Defectos del campo visual"
  },
  {
    "code": "H53.5",
    "description": "Deficiencia de la visi√≥n crom√°tica"
  },
  {
    "code": "H53.6",
    "description": "Ceguera nocturna"
  },
  {
    "code": "H53.8",
    "description": "Otras alteraciones visuales"
  },
  {
    "code": "H53.9",
    "description": "Alteraci√≥n visual, no especificada"
  },
  {
    "code": "H54.0",
    "description": "Ceguera de ambos ojos"
  },
  {
    "code": "H54.1",
    "description": "Ceguera de un ojo, visi√≥n subnormal del otro"
  },
  {
    "code": "H54.2",
    "description": "Visi√≥n subnormal de ambos ojos"
  },
  {
    "code": "H54.3",
    "description": "Disminuci√≥n indeterminada de la agudeza visual en ambos ojos"
  },
  {
    "code": "H54.4",
    "description": "Ceguera de un ojo"
  },
  {
    "code": "H54.5",
    "description": "Visi√≥n subnormal de un ojo"
  },
  {
    "code": "H54.6",
    "description": "Disminuci√≥n indeterminada de la agudeza visual de un ojo"
  },
  {
    "code": "H54.7",
    "description": "Disminuci√≥n de la agudeza visual, sin especificaci√≥n"
  },
  {
    "code": "H57.0",
    "description": "Anomal√≠as de la funci√≥n pupilar"
  },
  {
    "code": "H57.1",
    "description": "Dolor ocular"
  },
  {
    "code": "H57.8",
    "description": "Otros trastornos especificados del ojo y sus anexos"
  },
  {
    "code": "H57.9",
    "description": "Trastorno del ojo y sus anexos, no especificado"
  },
  {
    "code": "H58.0",
    "description": "Anomal√≠as de la funci√≥n pupilar en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H58.1",
    "description": "Alteraciones de la visi√≥n en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H58.8",
    "description": "Otros trastornos especificados del ojo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H59.0",
    "description": "S√≠ndrome v√≠treo consecutivo a cirug√≠a de catarata"
  },
  {
    "code": "H59.8",
    "description": "Otros trastornos del ojo y sus anexos, consecutivos a procedimientos"
  },
  {
    "code": "H59.9",
    "description": "Trastorno no especificado del ojo y sus anexos, consecutivo a procedimientos"
  },
  {
    "code": "H60.0",
    "description": "Absceso del o√≠do externo"
  },
  {
    "code": "H60.1",
    "description": "Celulitis del o√≠do externo"
  },
  {
    "code": "H60.2",
    "description": "Otitis externa maligna"
  },
  {
    "code": "H60.3",
    "description": "Otras otitis externas infecciosas"
  },
  {
    "code": "H60.4",
    "description": "Colesteatoma del o√≠do externo"
  },
  {
    "code": "H60.5",
    "description": "Otitis externa aguda, no infecciosa"
  },
  {
    "code": "H60.8",
    "description": "Otras otitis externas"
  },
  {
    "code": "H60.9",
    "description": "Otitis externa, sin otra especificaci√≥n"
  },
  {
    "code": "H61.0",
    "description": "Pericondritis del o√≠do externo"
  },
  {
    "code": "H61.1",
    "description": "Afecciones no infecciosas del pabell√≥n auditivo"
  },
  {
    "code": "H61.2",
    "description": "Cerumen impactado"
  },
  {
    "code": "H61.3",
    "description": "Estenosis adquirida del conducto auditivo externo"
  },
  {
    "code": "H61.8",
    "description": "Otros trastornos especificados del o√≠do externo"
  },
  {
    "code": "H61.9",
    "description": "Trastorno del o√≠do externo, no especificado"
  },
  {
    "code": "H62.0",
    "description": "Otitis externa en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "H62.1",
    "description": "Otitis externa en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "H62.2",
    "description": "Otitis externa en micosis"
  },
  {
    "code": "H62.3",
    "description": "Otitis externa en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H62.4",
    "description": "Otitis externa en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H62.8",
    "description": "Otros trastornos del o√≠do externo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H65.0",
    "description": "Otitis media aguda serosa"
  },
  {
    "code": "H65.1",
    "description": "Otra otitis media aguda, no supurativa"
  },
  {
    "code": "H65.2",
    "description": "Otitis media cr√≥nica serosa"
  },
  {
    "code": "H65.3",
    "description": "Otitis media cr√≥nica mucoide"
  },
  {
    "code": "H65.4",
    "description": "Otras otitis medias cr√≥nicas no supurativas"
  },
  {
    "code": "H65.9",
    "description": "Otitis media no supurativa, sin otra especificaci√≥n"
  },
  {
    "code": "H66.0",
    "description": "Otitis media supurativa aguda"
  },
  {
    "code": "H66.1",
    "description": "Otitis media tubotimp√°nica supurativa cr√≥nica"
  },
  {
    "code": "H66.2",
    "description": "Otitis media supurativa cr√≥nica aticoantral"
  },
  {
    "code": "H66.3",
    "description": "Otras otitis medias cr√≥nicas supurativas"
  },
  {
    "code": "H66.4",
    "description": "Otitis media supurativa, sin otra especificaci√≥n"
  },
  {
    "code": "H66.9",
    "description": "Otitis media, no especificada"
  },
  {
    "code": "H67.0",
    "description": "Otitis media en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "H67.1",
    "description": "Otitis media en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "H67.8",
    "description": "Otitis media en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "H68.0",
    "description": "Salpingitis eustaquiana"
  },
  {
    "code": "H68.1",
    "description": "Obstrucci√≥n de la trompa de Eustaquio"
  },
  {
    "code": "H69.0",
    "description": "Distensi√≥n de la trompa de Eustaquio"
  },
  {
    "code": "H69.8",
    "description": "Otros trastornos especificados de la trompa de Eustaquio"
  },
  {
    "code": "H69.9",
    "description": "Trastorno de la trompa de Eustaquio, no especificado"
  },
  {
    "code": "H70.0",
    "description": "Mastoiditis aguda"
  },
  {
    "code": "H70.1",
    "description": "Mastoiditis cr√≥nica"
  },
  {
    "code": "H70.2",
    "description": "Petrositis"
  },
  {
    "code": "H70.8",
    "description": "Otras mastoiditis y afecciones relacionadas"
  },
  {
    "code": "H70.9",
    "description": "Mastoiditis, no especificada"
  },
  {
    "code": "H72.0",
    "description": "Perforaci√≥n central de la membrana timp√°nica"
  },
  {
    "code": "H72.1",
    "description": "Perforaci√≥n √°tica de la membrana timp√°nica"
  },
  {
    "code": "H72.2",
    "description": "Otras perforaciones marginales de la membrana timp√°nica"
  },
  {
    "code": "H72.8",
    "description": "Otras perforaciones de la membrana timp√°nica"
  },
  {
    "code": "H72.9",
    "description": "Perforaci√≥n de la membrana timp√°nica, sin otra especificaci√≥n"
  },
  {
    "code": "H73.0",
    "description": "Miringitis aguda"
  },
  {
    "code": "H73.1",
    "description": "Miringitis cr√≥nica"
  },
  {
    "code": "H73.8",
    "description": "Otros trastornos especificados de la membrana timp√°nica"
  },
  {
    "code": "H73.9",
    "description": "Trastorno de la membrana timp√°nica, no especificado"
  },
  {
    "code": "H74.0",
    "description": "Timpanosclerosis"
  },
  {
    "code": "H74.1",
    "description": "Enfermedad adhesiva del o√≠do medio"
  },
  {
    "code": "H74.2",
    "description": "Discontinuidad y dislocaci√≥n de los huesecillos del o√≠do"
  },
  {
    "code": "H74.3",
    "description": "Otras anormalidades adquiridas de los huesecillos del o√≠do"
  },
  {
    "code": "H74.4",
    "description": "P√≥lipo del o√≠do medio"
  },
  {
    "code": "H74.8",
    "description": "Otros trastornos especificados del o√≠do medio y de la ap√≥fisis mastoides"
  },
  {
    "code": "H74.9",
    "description": "Trastorno del o√≠do medio y de la ap√≥fisis mastoides, no especificado"
  },
  {
    "code": "H75.0",
    "description": "Mastoiditis en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H75.8",
    "description": "Otros trastornos especificados del o√≠do medio y de la ap√≥fisis mastoides en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H80.0",
    "description": "Otosclerosis que afecta la ventana oval, no obliterante"
  },
  {
    "code": "H80.1",
    "description": "Otosclerosis que afecta la ventana oval, obliterante"
  },
  {
    "code": "H80.2",
    "description": "Otosclerosis coclear"
  },
  {
    "code": "H80.8",
    "description": "Otras otosclerosis"
  },
  {
    "code": "H80.9",
    "description": "Otosclerosis, no especificada"
  },
  {
    "code": "H81.0",
    "description": "Enfermedad de M√©ni√®re"
  },
  {
    "code": "H81.1",
    "description": "V√©rtigo parox√≠stico benigno"
  },
  {
    "code": "H81.2",
    "description": "Neuronitis vestibular"
  },
  {
    "code": "H81.3",
    "description": "Otros v√©rtigos perif√©ricos"
  },
  {
    "code": "H81.4",
    "description": "V√©rtigo de origen central"
  },
  {
    "code": "H81.8",
    "description": "Otros trastornos de la funci√≥n vestibular"
  },
  {
    "code": "H81.9",
    "description": "Trastorno de la funci√≥n vestibular, no especificado"
  },
  {
    "code": "H83.0",
    "description": "Laberintitis"
  },
  {
    "code": "H83.1",
    "description": "F√≠stula del laberinto"
  },
  {
    "code": "H83.2",
    "description": "Disfunci√≥n del laberinto"
  },
  {
    "code": "H83.3",
    "description": "Efectos del ruido sobre el o√≠do interno"
  },
  {
    "code": "H83.8",
    "description": "Otros trastornos especificados del o√≠do interno"
  },
  {
    "code": "H83.9",
    "description": "Trastorno del o√≠do interno, no especificado"
  },
  {
    "code": "H90.0",
    "description": "Hipoacusia conductiva bilateral"
  },
  {
    "code": "H90.1",
    "description": "Hipoacusia conductiva, unilateral con audici√≥n irrestricta contralateral"
  },
  {
    "code": "H90.2",
    "description": "Hipoacusia conductiva, sin otra especificaci√≥n"
  },
  {
    "code": "H90.3",
    "description": "Hipoacusia neurosensorial, bilateral"
  },
  {
    "code": "H90.4",
    "description": "Hipoacusia neurosensorial, unilateral con audici√≥n irrestricta contralateral"
  },
  {
    "code": "H90.5",
    "description": "Hipoacusia neurosensorial, sin otra especificaci√≥n"
  },
  {
    "code": "H90.6",
    "description": "Hipoacusia mixta conductiva y neurosensorial, bilateral"
  },
  {
    "code": "H90.7",
    "description": "Hipoacusia mixta conductiva y neurosensorial, unilateral con audici√≥n irrestricta contralateral"
  },
  {
    "code": "H90.8",
    "description": "Hipoacusia mixta conductiva y neurosensorial, no especificada"
  },
  {
    "code": "H91.0",
    "description": "Hipoacusia otot√≥xica"
  },
  {
    "code": "H91.1",
    "description": "Presbiacusia"
  },
  {
    "code": "H91.2",
    "description": "Hipoacusia s√∫bita idiop√°tica"
  },
  {
    "code": "H91.3",
    "description": "Sordomudez, no clasificada en otra parte"
  },
  {
    "code": "H91.8",
    "description": "Otras hipoacusias especificadas"
  },
  {
    "code": "H91.9",
    "description": "Hipoacusia, no especificada"
  },
  {
    "code": "H92.0",
    "description": "Otalgia"
  },
  {
    "code": "H92.1",
    "description": "Otorrea"
  },
  {
    "code": "H92.2",
    "description": "Otorragia"
  },
  {
    "code": "H93.0",
    "description": "Trastornos degenerativos y vasculares del o√≠do"
  },
  {
    "code": "H93.1",
    "description": "Tinnitus"
  },
  {
    "code": "H93.2",
    "description": "Otras percepciones auditivas anormales"
  },
  {
    "code": "H93.3",
    "description": "Trastornos del nervio auditivo"
  },
  {
    "code": "H93.8",
    "description": "Otros trastornos especificados del o√≠do"
  },
  {
    "code": "H93.9",
    "description": "Trastorno del o√≠do, no especificado"
  },
  {
    "code": "H94.0",
    "description": "Neuritis del nervio auditivo en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "H94.8",
    "description": "Otros trastornos especificados del o√≠do en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H95.0",
    "description": "Colesteatoma recurrente de la cavidad resultante de la mastoidectom√≠a"
  },
  {
    "code": "H95.1",
    "description": "Otros trastornos posteriores a la mastoidectom√≠a"
  },
  {
    "code": "H95.8",
    "description": "Otros trastornos del o√≠do y de la ap√≥fisis mastoides, consecutivos a procedimientos"
  },
  {
    "code": "H95.9",
    "description": "Trastornos no especificados del o√≠do y de la ap√≥fisis mastoides, consecutivos a procedimientos"
  },
  {
    "code": "I01.0",
    "description": "Pericarditis reum√°tica aguda"
  },
  {
    "code": "I01.1",
    "description": "Endocarditis reum√°tica aguda"
  },
  {
    "code": "I01.2",
    "description": "Miocarditis reum√°tica aguda"
  },
  {
    "code": "I01.8",
    "description": "Otras enfermedades reum√°ticas agudas del coraz√≥n"
  },
  {
    "code": "I01.9",
    "description": "Enfermedad reum√°tica aguda del coraz√≥n, no especificada"
  },
  {
    "code": "I02.0",
    "description": "Corea reum√°tica con complicaci√≥n card√≠aca"
  },
  {
    "code": "I02.9",
    "description": "Corea reum√°tica sin menci√≥n de complicaci√≥n card√≠aca"
  },
  {
    "code": "I05.0",
    "description": "Estenosis mitral"
  },
  {
    "code": "I05.1",
    "description": "Insuficiencia mitral reum√°tica"
  },
  {
    "code": "I05.2",
    "description": "Estenosis mitral con insuficiencia"
  },
  {
    "code": "I05.8",
    "description": "Otras enfermedades de la v√°lvula mitral"
  },
  {
    "code": "I05.9",
    "description": "Enfermedad valvular mitral, no especificada"
  },
  {
    "code": "I06.0",
    "description": "Estenosis a√≥rtica reum√°tica"
  },
  {
    "code": "I06.1",
    "description": "Insuficiencia a√≥rtica reum√°tica"
  },
  {
    "code": "I06.2",
    "description": "Estenosis a√≥rtica reum√°tica con insuficiencia"
  },
  {
    "code": "I06.8",
    "description": "Otras enfermedades reum√°ticas de la v√°lvula a√≥rtica"
  },
  {
    "code": "I06.9",
    "description": "Enfermedad valvular a√≥rtica reum√°tica, no especificada"
  },
  {
    "code": "I07.0",
    "description": "Estenosis tric√∫spide"
  },
  {
    "code": "I07.1",
    "description": "Insuficiencia tric√∫spide"
  },
  {
    "code": "I07.2",
    "description": "Estenosis e insuficiencia tric√∫spide"
  },
  {
    "code": "I07.8",
    "description": "Otras enfermedades de la v√°lvula tric√∫spide"
  },
  {
    "code": "I07.9",
    "description": "Enfermedad de la v√°lvula tric√∫spide, no especificada"
  },
  {
    "code": "I08.0",
    "description": "Trastornos de las v√°lvulas mitral y a√≥rtica"
  },
  {
    "code": "I08.1",
    "description": "Trastornos de las v√°lvulas mitral y tric√∫spide"
  },
  {
    "code": "I08.2",
    "description": "Trastornos de las v√°lvulas a√≥rtica y tric√∫spide"
  },
  {
    "code": "I08.3",
    "description": "Trastornos combinados de las v√°lvulas mitral, tric√∫spide y a√≥rtica"
  },
  {
    "code": "I08.8",
    "description": "Otras enfermedades de m√∫ltiples v√°lvulas"
  },
  {
    "code": "I08.9",
    "description": "Enfermedad de m√∫ltiples v√°lvulas, no especificada"
  },
  {
    "code": "I09.0",
    "description": "Miocarditis reum√°tica"
  },
  {
    "code": "I09.1",
    "description": "Enfermedades reum√°ticas del endocardio, v√°lvula no especificada"
  },
  {
    "code": "I09.2",
    "description": "Pericarditis reum√°tica cr√≥nica"
  },
  {
    "code": "I09.8",
    "description": "Otras enfermedades reum√°ticas especificadas del coraz√≥n"
  },
  {
    "code": "I09.9",
    "description": "Enfermedad reum√°tica del coraz√≥n, no especificada"
  },
  {
    "code": "I11.0",
    "description": "Enfermedad card√≠aca hipertensiva con insuficiencia card√≠aca (congestiva)"
  },
  {
    "code": "I11.9",
    "description": "Enfermedad card√≠aca hipertensiva sin insuficiencia card√≠aca (congestiva)"
  },
  {
    "code": "I12.0",
    "description": "Enfermedad renal hipertensiva con insuficiencia renal"
  },
  {
    "code": "I12.9",
    "description": "Enfermedad renal hipertensiva sin insuficiencia renal"
  },
  {
    "code": "I13.0",
    "description": "Enfermedad cardiorrenal hipertensiva con insuficiencia card√≠aca (congestiva)"
  },
  {
    "code": "I13.1",
    "description": "Enfermedad cardiorrenal hipertensiva con insuficiencia renal"
  },
  {
    "code": "I13.2",
    "description": "Enfermedad cardiorrenal hipertensiva con insuficiencia card√≠aca (congestiva) e insuficiencia renal"
  },
  {
    "code": "I13.9",
    "description": "Enfermedad cardiorrenal hipertensiva, no especificada"
  },
  {
    "code": "I15.0",
    "description": "Hipertensi√≥n renovascular"
  },
  {
    "code": "I15.1",
    "description": "Hipertensi√≥n secundaria a otros trastornos renales"
  },
  {
    "code": "I15.2",
    "description": "Hipertensi√≥n secundaria a trastornos endocrinos"
  },
  {
    "code": "I15.8",
    "description": "Otros tipos de hipertensi√≥n secundaria"
  },
  {
    "code": "I15.9",
    "description": "Hipertensi√≥n secundaria, no especificada"
  },
  {
    "code": "I20.0",
    "description": "Angina inestable"
  },
  {
    "code": "I20.1",
    "description": "Angina de pecho con espasmo documentado"
  },
  {
    "code": "I20.8",
    "description": "Otras formas especificadas de angina de pecho"
  },
  {
    "code": "I20.9",
    "description": "Angina de pecho, no especificada"
  },
  {
    "code": "I21.0",
    "description": "Infarto transmural agudo del miocardio de la pared anterior"
  },
  {
    "code": "I21.1",
    "description": "Infarto transmural agudo del miocardio de la pared inferior"
  },
  {
    "code": "I21.2",
    "description": "Infarto agudo transmural del miocardio de otros sitios"
  },
  {
    "code": "I21.3",
    "description": "Infarto transmural agudo del miocardio, de sitio no especificado"
  },
  {
    "code": "I21.4",
    "description": "Infarto subendoc√°rdico agudo del miocardio"
  },
  {
    "code": "I21.9",
    "description": "Infarto agudo del miocardio, sin otra especificaci√≥n"
  },
  {
    "code": "I22.0",
    "description": "Infarto subsecuente del miocardio de la pared anterior"
  },
  {
    "code": "I22.1",
    "description": "Infarto subsecuente del miocardio de la pared inferior"
  },
  {
    "code": "I22.8",
    "description": "Infarto subsecuente del miocardio de otros sitios"
  },
  {
    "code": "I22.9",
    "description": "Infarto subsecuente del miocardio, de parte no especificada"
  },
  {
    "code": "I23.0",
    "description": "Hemopericardio como complicaci√≥n presente posterior al infarto agudo del miocardio"
  },
  {
    "code": "I23.1",
    "description": "Defecto del tabique auricular como complicaci√≥n presente posterior al infarto del miocardio"
  },
  {
    "code": "I23.2",
    "description": "Defecto del tabique ventricular como complicaci√≥n presente posterior al infarto del miocardio"
  },
  {
    "code": "I23.3",
    "description": "Ruptura de la pared card√≠aca sin hemopericardio como complicaci√≥n presente posterior al infarto agudo del miocardio"
  },
  {
    "code": "I23.4",
    "description": "Ruptura de las cuerdas tendinosas como complicaci√≥n presente posterior al infarto agudo del miocardio"
  },
  {
    "code": "I23.5",
    "description": "Ruptura de m√∫sculo papilar como complicaci√≥n presente posterior al infarto agudo del miocardio"
  },
  {
    "code": "I23.6",
    "description": ""
  },
  {
    "code": "I23.8",
    "description": "Otras complicaciones presentes posteriores al infarto agudo del miocardio"
  },
  {
    "code": "I24.0",
    "description": "Trombosis coronaria que no resulta en infarto del miocardio"
  },
  {
    "code": "I24.1",
    "description": "S√≠ndrome de Dressler"
  },
  {
    "code": "I24.8",
    "description": "Otras formas de enfermedad isqu√©mica aguda del coraz√≥n"
  },
  {
    "code": "I24.9",
    "description": "Enfermedad isqu√©mica aguda del coraz√≥n, no especificada"
  },
  {
    "code": "I25.0",
    "description": "Enfermedad cardiovascular ateroscler√≥tica, as√≠ descrita"
  },
  {
    "code": "I25.1",
    "description": "Enfermedad ateroscler√≥tica del coraz√≥n"
  },
  {
    "code": "I25.2",
    "description": "Infarto antiguo del miocardio"
  },
  {
    "code": "I25.3",
    "description": "Aneurisma card√≠aco"
  },
  {
    "code": "I25.4",
    "description": "Aneurisma de arteria coronaria"
  },
  {
    "code": "I25.5",
    "description": "Cardiomiopat√≠a isqu√©mica"
  },
  {
    "code": "I25.6",
    "description": "Isquemia silente del miocardio"
  },
  {
    "code": "I25.8",
    "description": "Otras formas de enfermedad isqu√©mica cr√≥nica del coraz√≥n"
  },
  {
    "code": "I25.9",
    "description": "Enfermedad isqu√©mica cr√≥nica del coraz√≥n, no especificada"
  },
  {
    "code": "I26.0",
    "description": "Embolia pulmonar con menci√≥n de coraz√≥n pulmonar agudo"
  },
  {
    "code": "I26.9",
    "description": "Embolia pulmonar sin menci√≥n de coraz√≥n pulmonar agudo"
  },
  {
    "code": "I27.0",
    "description": "Hipertensi√≥n pulmonar primaria"
  },
  {
    "code": "I27.1",
    "description": "Enfermedad cifoscoli√≥tica del coraz√≥n"
  },
  {
    "code": "I27.8",
    "description": "Otras enfermedades cardiopulmonares especificadas"
  },
  {
    "code": "I27.9",
    "description": "Enfermedad pulmonar del coraz√≥n, no especificada"
  },
  {
    "code": "I28.0",
    "description": "F√≠stula arteriovenosa de los vasos pulmonares"
  },
  {
    "code": "I28.1",
    "description": "Aneurisma de la arteria pulmonar"
  },
  {
    "code": "I28.8",
    "description": "Otras enfermedades especificadas de los vasos pulmonares"
  },
  {
    "code": "I28.9",
    "description": "Enfermedad de los vasos pulmonares, no especificada"
  },
  {
    "code": "I30.0",
    "description": "Pericarditis idiop√°tica aguda inespec√≠fica"
  },
  {
    "code": "I30.1",
    "description": "Pericarditis infecciosa"
  },
  {
    "code": "I30.8",
    "description": "Otras formas de pericarditis aguda"
  },
  {
    "code": "I30.9",
    "description": "Pericarditis aguda, no especificada"
  },
  {
    "code": "I31.0",
    "description": "Pericarditis cr√≥nica adhesiva"
  },
  {
    "code": "I31.1",
    "description": "Pericarditis constrictiva cr√≥nica"
  },
  {
    "code": "I31.2",
    "description": "Hemopericardio, no clasificado en otra parte"
  },
  {
    "code": "I31.3",
    "description": "Derrame peric√°rdico (no inflamatorio)"
  },
  {
    "code": "I31.8",
    "description": "Otras enfermedades especificadas del pericardio"
  },
  {
    "code": "I31.9",
    "description": "Enfermedad del pericardio, no especificada"
  },
  {
    "code": "I32.0",
    "description": "Pericarditis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "I32.1",
    "description": "Pericarditis en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I32.8",
    "description": "Pericarditis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "I33.0",
    "description": "Endocarditis infecciosa aguda y subaguda"
  },
  {
    "code": "I33.9",
    "description": "Endocarditis aguda, no especificada"
  },
  {
    "code": "I34.0",
    "description": "Insuficiencia (de la v√°lvula) mitral"
  },
  {
    "code": "I34.1",
    "description": "Prolapso (de la v√°lvula) mitral"
  },
  {
    "code": "I34.2",
    "description": "Estenosis (de la v√°lvula) mitral, no reum√°tica"
  },
  {
    "code": "I34.8",
    "description": "Otros trastornos no reum√°ticos de la v√°lvula mitral"
  },
  {
    "code": "I34.9",
    "description": "Trastorno mitral no reum√°tico, no especificado"
  },
  {
    "code": "I35.0",
    "description": "Estenosis (de la v√°lvula) a√≥rtica"
  },
  {
    "code": "I35.1",
    "description": "Insuficiencia (de la v√°lvula) a√≥rtica"
  },
  {
    "code": "I35.2",
    "description": "Estenosis (de la v√°lvula) a√≥rtica con insuficiencia"
  },
  {
    "code": "I35.8",
    "description": "Otros trastornos de la v√°lvula a√≥rtica"
  },
  {
    "code": "I35.9",
    "description": "Trastorno de la v√°lvula a√≥rtica, no especificado"
  },
  {
    "code": "I36.0",
    "description": "Estenosis no reum√°tica (de la v√°lvula) tric√∫spide"
  },
  {
    "code": "I36.1",
    "description": "Insuficiencia no reum√°tica (de la v√°lvula) tric√∫spide"
  },
  {
    "code": "I36.2",
    "description": "Estenosis con insuficiencia no reum√°tica (de la v√°lvula) tric√∫spide"
  },
  {
    "code": "I36.8",
    "description": "Otros trastornos no reum√°ticos de la v√°lvula tric√∫spide"
  },
  {
    "code": "I36.9",
    "description": "Trastorno no reum√°tico de la v√°lvula tric√∫spide, no especificado"
  },
  {
    "code": "I37.0",
    "description": "Estenosis de la v√°lvula pulmonar"
  },
  {
    "code": "I37.1",
    "description": "Insuficiencia de la v√°lvula pulmonar"
  },
  {
    "code": "I37.2",
    "description": "Estenosis de la v√°lvula pulmonar con insuficiencia"
  },
  {
    "code": "I37.8",
    "description": "Otros trastornos de la v√°lvula pulmonar"
  },
  {
    "code": "I37.9",
    "description": "Trastorno de la v√°lvula pulmonar, no especificado"
  },
  {
    "code": "I39.0",
    "description": "Trastornos de la v√°lvula mitral en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I39.1",
    "description": "Trastornos de la v√°lvula a√≥rtica en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I39.2",
    "description": "Trastornos de la v√°lvula tric√∫spide en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I39.3",
    "description": "Trastornos de la v√°lvula pulmonar en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I39.4",
    "description": "Trastornos valvulares m√∫ltiples en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I39.8",
    "description": "Endocarditis, v√°lvula no especificada, en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I40.0",
    "description": "Miocarditis infecciosa"
  },
  {
    "code": "I40.1",
    "description": "Miocarditis aislada"
  },
  {
    "code": "I40.8",
    "description": "Otras miocarditis agudas"
  },
  {
    "code": "I40.9",
    "description": "Miocarditis aguda, no especificada"
  },
  {
    "code": "I41.0",
    "description": "Miocarditis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "I41.1",
    "description": "Miocarditis en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "I41.2",
    "description": "Miocarditis en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I41.8",
    "description": "Miocarditis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "I42.0",
    "description": "Cardiomiopat√≠a dilatada"
  },
  {
    "code": "I42.1",
    "description": "Cardiomiopat√≠a hipertr√≥fica obstructiva"
  },
  {
    "code": "I42.2",
    "description": "Otras cardiomiopat√≠as hipertr√≥ficas"
  },
  {
    "code": "I42.3",
    "description": "Enfermedad endomioc√°rdica (eosinof√≠lica)"
  },
  {
    "code": "I42.4",
    "description": "Fibroelastosis endoc√°rdica"
  },
  {
    "code": "I42.5",
    "description": "Otras cardiomiopat√≠as restrictivas"
  },
  {
    "code": "I42.6",
    "description": "Cardiomiopat√≠a alcoh√≥lica"
  },
  {
    "code": "I42.7",
    "description": "Cardiomiopat√≠a debida a drogas y otros agentes externos"
  },
  {
    "code": "I42.8",
    "description": "Otras cardiomiopat√≠as"
  },
  {
    "code": "I42.9",
    "description": "Cardiomiopat√≠a, no especificada"
  },
  {
    "code": "I43.0",
    "description": "Cardiomiopat√≠a en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I43.1",
    "description": "Cardiomiopat√≠a en enfermedades metab√≥licas"
  },
  {
    "code": "I43.2",
    "description": "Cardiomiopat√≠a en enfermedades nutricionales"
  },
  {
    "code": "I43.8",
    "description": "Cardiomiopat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "I44.0",
    "description": "Bloqueo auriculoventricular de primer grado"
  },
  {
    "code": "I44.1",
    "description": "Bloqueo auriculoventricular de segundo grado"
  },
  {
    "code": "I44.2",
    "description": "Bloqueo auriculoventricular completo"
  },
  {
    "code": "I44.3",
    "description": "Otros tipos de bloqueo auriculoventricular y los no especificados"
  },
  {
    "code": "I44.4",
    "description": "Bloqueo fascicular anterior izquierdo"
  },
  {
    "code": "I44.5",
    "description": "Bloqueo fascicular posterior izquierdo"
  },
  {
    "code": "I44.6",
    "description": "Otros tipos de bloqueo fascicular y los no especificados"
  },
  {
    "code": "I44.7",
    "description": "Bloqueo de rama izquierda del haz, sin otra especificaci√≥n"
  },
  {
    "code": "I45.0",
    "description": "Bloqueo fascicular derecho"
  },
  {
    "code": "I45.1",
    "description": "Otros tipos de bloqueo de rama derecha del haz y los no especificados"
  },
  {
    "code": "I45.2",
    "description": "Bloqueo bifascicular"
  },
  {
    "code": "I45.3",
    "description": "Bloqueo trifascicular"
  },
  {
    "code": "I45.4",
    "description": "Bloqueo intraventricular no especificado"
  },
  {
    "code": "I45.5",
    "description": "Otros tipos especificados de bloqueo del coraz√≥n"
  },
  {
    "code": "I45.6",
    "description": "S√≠ndrome de preexcitaci√≥n"
  },
  {
    "code": "I45.8",
    "description": "Otros trastornos especificados de la conducci√≥n"
  },
  {
    "code": "I45.9",
    "description": "Trastorno de la conducci√≥n, no especificado"
  },
  {
    "code": "I46.0",
    "description": "Paro card√≠aco con resucitaci√≥n exitosa"
  },
  {
    "code": "I46.1",
    "description": "Muerte card√≠aca s√∫bita, as√≠ descrita"
  },
  {
    "code": "I46.9",
    "description": "Paro card√≠aco, no especificado"
  },
  {
    "code": "I47.0",
    "description": "Arritmia por reentrada ventricular"
  },
  {
    "code": "I47.1",
    "description": "Taquicardia supraventricular"
  },
  {
    "code": "I47.2",
    "description": "Taquicardia ventricular"
  },
  {
    "code": "I47.9",
    "description": "Taquicardia parox√≠stica, no especificada"
  },
  {
    "code": "I49.0",
    "description": "Fibrilaci√≥n y aleteo ventricular"
  },
  {
    "code": "I49.1",
    "description": "Despolarizaci√≥n auricular prematura"
  },
  {
    "code": "I49.2",
    "description": "Despolarizaci√≥n prematura nodal"
  },
  {
    "code": "I49.3",
    "description": "Despolarizaci√≥n ventricular prematura"
  },
  {
    "code": "I49.4",
    "description": "Otros tipos de despolarizaci√≥n prematura y los no especificados"
  },
  {
    "code": "I49.5",
    "description": "S√≠ndrome del seno enfermo"
  },
  {
    "code": "I49.8",
    "description": "Otras arritmias card√≠acas especificadas"
  },
  {
    "code": "I49.9",
    "description": "Arritmia card√≠aca, no especificada"
  },
  {
    "code": "I50.0",
    "description": "Insuficiencia card√≠aca congestiva"
  },
  {
    "code": "I50.1",
    "description": "Insuficiencia ventricular izquierda"
  },
  {
    "code": "I50.9",
    "description": "Insuficiencia card√≠aca, no especificada"
  },
  {
    "code": "I51.0",
    "description": "Defecto del tabique card√≠aco, adquirido"
  },
  {
    "code": "I51.1",
    "description": "Ruptura de cuerda tendinosa, no clasificada en otra parte"
  },
  {
    "code": "I51.2",
    "description": "Ruptura de m√∫sculo papilar, no clasificada en otra parte"
  },
  {
    "code": "I51.3",
    "description": "Trombosis intracard√≠aca, no clasificada en otra parte"
  },
  {
    "code": "I51.4",
    "description": "Miocarditis, no especificada"
  },
  {
    "code": "I51.5",
    "description": "Degeneraci√≥n mioc√°rdica"
  },
  {
    "code": "I51.6",
    "description": "Enfermedad cardiovascular, no especificada"
  },
  {
    "code": "I51.7",
    "description": "Cardiomegalia"
  },
  {
    "code": "I51.8",
    "description": "Otras enfermedades card√≠acas mal definidas"
  },
  {
    "code": "I51.9",
    "description": "Enfermedad card√≠aca, no especificada"
  },
  {
    "code": "I52.0",
    "description": "Otros trastornos card√≠acos en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "I52.1",
    "description": "Otros trastornos card√≠acos en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I52.8",
    "description": "Otros trastornos card√≠acos en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "I60.0",
    "description": "Hemorragia subaracnoidea de sif√≥n y bifurcaci√≥n carot√≠dea"
  },
  {
    "code": "I60.1",
    "description": "Hemorragia subaracnoidea de arteria cerebral media"
  },
  {
    "code": "I60.2",
    "description": "Hemorragia subaracnoidea de arteria comunicante anterior"
  },
  {
    "code": "I60.3",
    "description": "Hemorragia subaracnoidea de arteria comunicante posterior"
  },
  {
    "code": "I60.4",
    "description": "Hemorragia subaracnoidea de arteria basilar"
  },
  {
    "code": "I60.5",
    "description": "Hemorragia subaracnoidea de arteria vertebral"
  },
  {
    "code": "I60.6",
    "description": "Hemorragia subaracnoidea de otras arterias intracraneales"
  },
  {
    "code": "I60.7",
    "description": "Hemorragia subaracnoidea de arteria intracraneal no especificada"
  },
  {
    "code": "I60.8",
    "description": "Otras hemorragias subaracnoideas"
  },
  {
    "code": "I60.9",
    "description": "Hemorragia subaracnoidea, no especificada"
  },
  {
    "code": "I61.0",
    "description": "Hemorragia intracerebral en hemisferio, subcortical"
  },
  {
    "code": "I61.1",
    "description": "Hemorragia intracerebral en hemisferio, cortical"
  },
  {
    "code": "I61.2",
    "description": "Hemorragia intracerebral en hemisferio, no especificada"
  },
  {
    "code": "I61.3",
    "description": "Hemorragia intraencef√°lica en tallo cerebral"
  },
  {
    "code": "I61.4",
    "description": "Hemorragia intraencef√°lica en cerebelo"
  },
  {
    "code": "I61.5",
    "description": "Hemorragia intraencef√°lica, intraventricular"
  },
  {
    "code": "I61.6",
    "description": "Hemorragia intraencef√°lica de localizaciones m√∫ltiples"
  },
  {
    "code": "I61.8",
    "description": "Otras hemorragias intraencef√°licas"
  },
  {
    "code": "I61.9",
    "description": "Hemorragia intraencef√°lica, no especificada"
  },
  {
    "code": "I62.0",
    "description": "Hemorragia subdural (aguda) (no traum√°tica)"
  },
  {
    "code": "I62.1",
    "description": "Hemorragia extradural no traum√°tica"
  },
  {
    "code": "I62.9",
    "description": "Hemorragia intracraneal (no traum√°tica), no especificada"
  },
  {
    "code": "I63.0",
    "description": "Infarto cerebral debido a trombosis de arterias precerebrales"
  },
  {
    "code": "I63.1",
    "description": "Infarto cerebral debido a embolia de arterias precerebrales"
  },
  {
    "code": "I63.2",
    "description": "Infarto cerebral debido a oclusi√≥n o estenosis no especificada de arterias precerebrales"
  },
  {
    "code": "I63.3",
    "description": "Infarto cerebral debido a trombosis de arterias cerebrales"
  },
  {
    "code": "I63.4",
    "description": "Infarto cerebral debido a embolia de arterias cerebrales"
  },
  {
    "code": "I63.5",
    "description": "Infarto cerebral debido a oclusi√≥n o estenosis no especificada de arterias cerebrales"
  },
  {
    "code": "I63.6",
    "description": "Infarto cerebral debido a trombosis de venas cerebrales, no pi√≥geno"
  },
  {
    "code": "I63.8",
    "description": "Otros infartos cerebrales"
  },
  {
    "code": "I63.9",
    "description": "Infarto cerebral, no especificado"
  },
  {
    "code": "I65.0",
    "description": "Oclusi√≥n y estenosis de arteria vertebral"
  },
  {
    "code": "I65.1",
    "description": "Oclusi√≥n y estenosis de arteria basilar"
  },
  {
    "code": "I65.2",
    "description": "Oclusi√≥n y estenosis de arteria car√≥tida"
  },
  {
    "code": "I65.3",
    "description": "Oclusi√≥n y estenosis m√∫ltiple bilateral de arterias precerebrales"
  },
  {
    "code": "I65.8",
    "description": "Oclusi√≥n y estenosis de otras arterias precerebrales"
  },
  {
    "code": "I65.9",
    "description": "Oclusi√≥n y estenosis de arteria precerebral no especificada"
  },
  {
    "code": "I66.0",
    "description": "Oclusi√≥n y estenosis de la arteria cerebral media"
  },
  {
    "code": "I66.1",
    "description": "Oclusi√≥n y estenosis de la arteria cerebral anterior"
  },
  {
    "code": "I66.2",
    "description": "Oclusi√≥n y estenosis de la arteria cerebral posterior"
  },
  {
    "code": "I66.3",
    "description": "Oclusi√≥n y estenosis de arterias cerebelosas"
  },
  {
    "code": "I66.4",
    "description": "Oclusi√≥n y estenosis m√∫ltiple bilateral de arterias cerebrales"
  },
  {
    "code": "I66.8",
    "description": "Oclusi√≥n y estenosis de otras arterias cerebrales"
  },
  {
    "code": "I66.9",
    "description": "Oclusi√≥n y estenosis de arteria cerebral no especificada"
  },
  {
    "code": "I67.0",
    "description": "Disecci√≥n de arterias cerebrales, sin ruptura"
  },
  {
    "code": "I67.1",
    "description": "Aneurisma cerebral, sin ruptura"
  },
  {
    "code": "I67.2",
    "description": "Aterosclerosis cerebral"
  },
  {
    "code": "I67.3",
    "description": "Leucoencefalopat√≠a vascular progresiva"
  },
  {
    "code": "I67.4",
    "description": "Encefalopat√≠a hipertensiva"
  },
  {
    "code": "I67.5",
    "description": "Enfermedad de Moyamoya"
  },
  {
    "code": "I67.6",
    "description": "Trombosis api√≥gena del sistema venoso intracraneal"
  },
  {
    "code": "I67.7",
    "description": "Arteritis cerebral, no clasificada en otra parte"
  },
  {
    "code": "I67.8",
    "description": "Otras enfermedades cerebrovasculares especificadas"
  },
  {
    "code": "I67.9",
    "description": "Enfermedad cerebrovascular, no especificada"
  },
  {
    "code": "I68.0",
    "description": "Angiopat√≠a cerebral amiloide (E85.-+)"
  },
  {
    "code": "I68.1",
    "description": "Arteritis cerebral en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I68.2",
    "description": "Arteritis cerebral en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "I68.8",
    "description": "Otros trastornos cerebrovasculares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I69.0",
    "description": "Secuelas de hemorragia subaracnoidea"
  },
  {
    "code": "I69.1",
    "description": "Secuelas de hemorragia intraencef√°lica"
  },
  {
    "code": "I69.2",
    "description": "Secuelas de otras hemorragias intracraneales no traum√°ticas"
  },
  {
    "code": "I69.3",
    "description": "Secuelas de infarto cerebral"
  },
  {
    "code": "I69.4",
    "description": "Secuelas de enfermedad cerebrovascular, no especificada como hemorr√°gica u oclusiva"
  },
  {
    "code": "I69.8",
    "description": "Secuelas de otras enfermedades cerebrovasculares y de las no especificadas"
  },
  {
    "code": "I70.0",
    "description": "Aterosclerosis de la aorta"
  },
  {
    "code": "I70.1",
    "description": "Aterosclerosis de la arteria renal"
  },
  {
    "code": "I70.2",
    "description": "Aterosclerosis de las arterias de los miembros"
  },
  {
    "code": "I70.8",
    "description": "Aterosclerosis de otras arterias"
  },
  {
    "code": "I70.9",
    "description": "Aterosclerosis generalizada y la no especificada"
  },
  {
    "code": "I71.0",
    "description": "Disecci√≥n de aorta (cualquier parte)"
  },
  {
    "code": "I71.1",
    "description": "Ruptura de aneurisma de la aorta tor√°cica"
  },
  {
    "code": "I71.2",
    "description": "Aneurisma de la aorta tor√°cica, sin menci√≥n de ruptura"
  },
  {
    "code": "I71.3",
    "description": "Ruptura de aneurisma de la aorta abdominal"
  },
  {
    "code": "I71.4",
    "description": "Aneurisma de la aorta abdominal, sin menci√≥n de ruptura"
  },
  {
    "code": "I71.5",
    "description": "Ruptura de aneurisma de la aorta toracoabdominal"
  },
  {
    "code": "I71.6",
    "description": "Aneurisma de la aorta toracoabdominal, sin menci√≥n de ruptura"
  },
  {
    "code": "I71.8",
    "description": "Ruptura de aneurisma a√≥rtico, sitio no especificado"
  },
  {
    "code": "I71.9",
    "description": "Aneurisma de la aorta, sitio no especificado, sin menci√≥n de ruptura"
  },
  {
    "code": "I72.0",
    "description": "Aneurisma de la arteria car√≥tida"
  },
  {
    "code": "I72.1",
    "description": "Aneurisma de arteria del miembro superior"
  },
  {
    "code": "I72.2",
    "description": "Aneurisma de arteria renal"
  },
  {
    "code": "I72.3",
    "description": "Aneurisma de arteria iliaca"
  },
  {
    "code": "I72.4",
    "description": "Aneurisma de arteria del miembro inferior"
  },
  {
    "code": "I72.8",
    "description": "Aneurisma de otras arterias especificadas"
  },
  {
    "code": "I72.9",
    "description": "Aneurisma de sitio no especificado"
  },
  {
    "code": "I73.0",
    "description": "S√≠ndrome de Raynaud"
  },
  {
    "code": "I73.1",
    "description": "Tromboange√≠tis obliterante [Buerger]"
  },
  {
    "code": "I73.8",
    "description": "Otras enfermedades vasculares perif√©ricas especificadas"
  },
  {
    "code": "I73.9",
    "description": "Enfermedad vascular perif√©rica, no especificada"
  },
  {
    "code": "I74.0",
    "description": "Embolia y trombosis de la aorta abdominal"
  },
  {
    "code": "I74.1",
    "description": "Embolia y trombosis de otras porciones y las no especificadas de la aorta"
  },
  {
    "code": "I74.2",
    "description": "Embolia y trombosis de arterias de los miembros superiores"
  },
  {
    "code": "I74.3",
    "description": "Embolia y trombosis de arterias de los miembros inferiores"
  },
  {
    "code": "I74.4",
    "description": "Embolia y trombosis de arterias de los miembros, no especificadas"
  },
  {
    "code": "I74.5",
    "description": "Embolia y trombosis de arteria iliaca"
  },
  {
    "code": "I74.8",
    "description": "Embolia y trombosis de otras arterias"
  },
  {
    "code": "I74.9",
    "description": "Embolia y trombosis de arteria no especificada"
  },
  {
    "code": "I77.0",
    "description": "F√≠stula arteriovenosa, adquirida"
  },
  {
    "code": "I77.1",
    "description": "Estrechez arterial"
  },
  {
    "code": "I77.2",
    "description": "Ruptura arterial"
  },
  {
    "code": "I77.3",
    "description": "Displasia fibromuscular arterial"
  },
  {
    "code": "I77.4",
    "description": "S√≠ndrome de compresi√≥n del tronco cel√≠aco"
  },
  {
    "code": "I77.5",
    "description": "Necrosis arterial"
  },
  {
    "code": "I77.6",
    "description": "Arteritis, no especificada"
  },
  {
    "code": "I77.8",
    "description": "Otros trastornos especificados de arterias y arteriolas"
  },
  {
    "code": "I77.9",
    "description": "Trastorno de arterias y arteriolas, no especificado"
  },
  {
    "code": "I78.0",
    "description": "Telangiectasia hemorr√°gica hereditaria"
  },
  {
    "code": "I78.1",
    "description": "Nevo, no neopl√°sico"
  },
  {
    "code": "I78.8",
    "description": "Otras enfermedades de los capilares"
  },
  {
    "code": "I78.9",
    "description": "Enfermedad de los vasos capilares, no especificada"
  },
  {
    "code": "I79.0",
    "description": "Aneurisma de la aorta en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I79.1",
    "description": "Aortitis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I79.2",
    "description": "Angiopat√≠a perif√©rica en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I79.8",
    "description": "Otros trastornos de arterias, arteriolas y vasos capilares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I80.0",
    "description": "Flebitis y tromboflebitis de vasos superficiales de los miembros inferiores"
  },
  {
    "code": "I80.1",
    "description": "Flebitis y tromboflebitis de la vena femoral"
  },
  {
    "code": "I80.2",
    "description": "Flebitis y tromboflebitis de otros vasos profundos de los miembros inferiores"
  },
  {
    "code": "I80.3",
    "description": "Flebitis y tromboflebitis de los miembros inferiores, no especificada"
  },
  {
    "code": "I80.8",
    "description": "Flebitis y tromboflebitis de otros sitios"
  },
  {
    "code": "I80.9",
    "description": "Flebitis y tromboflebitis de sitio no especificado"
  },
  {
    "code": "I82.0",
    "description": "S√≠ndrome de Budd-Chiari"
  },
  {
    "code": "I82.1",
    "description": "Tromboflebitis migratoria"
  },
  {
    "code": "I82.2",
    "description": "Embolia y trombosis de vena cava"
  },
  {
    "code": "I82.3",
    "description": "Embolia y trombosis de vena renal"
  },
  {
    "code": "I82.8",
    "description": "Embolia y trombosis de otras venas especificadas"
  },
  {
    "code": "I82.9",
    "description": "Embolia y trombosis de vena no especificada"
  },
  {
    "code": "I83.0",
    "description": "Venas varicosas de los miembros inferiores con √∫lcera"
  },
  {
    "code": "I83.1",
    "description": "Venas varicosas de los miembros inferiores con inflamaci√≥n"
  },
  {
    "code": "I83.2",
    "description": "Venas varicosas de los miembros inferiores con √∫lcera e inflamaci√≥n"
  },
  {
    "code": "I83.9",
    "description": "Venas varicosas de los miembros inferiores sin √∫lcera ni inflamaci√≥n"
  },
  {
    "code": "I84.0",
    "description": "Hemorroides internas trombosadas"
  },
  {
    "code": "I84.1",
    "description": "Hemorroides internas con otras complicaciones"
  },
  {
    "code": "I84.2",
    "description": "Hemorroides internas sin complicaci√≥n"
  },
  {
    "code": "I84.3",
    "description": "Hemorroides externas trombosadas"
  },
  {
    "code": "I84.4",
    "description": "Hemorroides externas con otras complicaciones"
  },
  {
    "code": "I84.5",
    "description": "Hemorroides externas sin complicaci√≥n"
  },
  {
    "code": "I84.6",
    "description": "Prominencias cut√°neas, residuo de hemorroides"
  },
  {
    "code": "I84.7",
    "description": "Hemorroides trombosadas no especificadas"
  },
  {
    "code": "I84.8",
    "description": "Hemorroides no especificadas, con otras complicaciones"
  },
  {
    "code": "I84.9",
    "description": "Hemorroides no especificadas, sin complicaci√≥n"
  },
  {
    "code": "I85.0",
    "description": "V√°rices esof√°gicas con hemorragia"
  },
  {
    "code": "I85.9",
    "description": "V√°rices esof√°gicas sin hemorragia"
  },
  {
    "code": "I86.0",
    "description": "V√°rices sublinguales"
  },
  {
    "code": "I86.1",
    "description": "V√°rices escrotales"
  },
  {
    "code": "I86.2",
    "description": "V√°rices p√©lvicas"
  },
  {
    "code": "I86.3",
    "description": "V√°rices de la vulva"
  },
  {
    "code": "I86.4",
    "description": "V√°rices g√°stricas"
  },
  {
    "code": "I86.8",
    "description": "V√°rices en otros sitios especificados"
  },
  {
    "code": "I87.0",
    "description": "S√≠ndrome postfleb√≠tico"
  },
  {
    "code": "I87.1",
    "description": "Compresi√≥n de vena"
  },
  {
    "code": "I87.2",
    "description": "Insuficiencia venosa (cr√≥nica) (perif√©rica)"
  },
  {
    "code": "I87.8",
    "description": "Otros trastornos venosos especificados"
  },
  {
    "code": "I87.9",
    "description": "Trastorno venoso, no especificado"
  },
  {
    "code": "I88.0",
    "description": "Linfadenitis mesent√©rica inespec√≠fica"
  },
  {
    "code": "I88.1",
    "description": "Linfadenitis cr√≥nica, excepto la mesent√©rica"
  },
  {
    "code": "I88.8",
    "description": "Otras linfadenitis inespec√≠ficas"
  },
  {
    "code": "I88.9",
    "description": "Linfadenitis inespec√≠fica no especificada"
  },
  {
    "code": "I89.0",
    "description": "Linfedema, no clasificado en otra parte"
  },
  {
    "code": "I89.1",
    "description": "Linfangitis"
  },
  {
    "code": "I89.8",
    "description": "Otros trastornos especificados no infecciosos de los vasos y ganglios linf√°ticos"
  },
  {
    "code": "I89.9",
    "description": "Trastorno no infeccioso de vasos y ganglios linf√°ticos, no especificado"
  },
  {
    "code": "I95.0",
    "description": "Hipotensi√≥n idiop√°tica"
  },
  {
    "code": "I95.1",
    "description": "Hipotensi√≥n ortost√°tica"
  },
  {
    "code": "I95.2",
    "description": "Hipotensi√≥n debida a drogas"
  },
  {
    "code": "I95.8",
    "description": "Otros tipos de hipotensi√≥n"
  },
  {
    "code": "I95.9",
    "description": "Hipotensi√≥n, no especificada"
  },
  {
    "code": "I97.0",
    "description": "S√≠ndrome de postcardiotom√≠a"
  },
  {
    "code": "I97.1",
    "description": "Otras alteraciones funcionales consecutivas a cirug√≠a card√≠aca"
  },
  {
    "code": "I97.2",
    "description": "S√≠ndrome de linfedema postmastectom√≠a"
  },
  {
    "code": "I97.8",
    "description": "Otros trastornos del sistema circulatorio consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "I97.9",
    "description": "Trastorno no especificado del sistema circulatorio consecutivo a procedimientos"
  },
  {
    "code": "I98.0",
    "description": "S√≠filis cardiovascular"
  },
  {
    "code": "I98.1",
    "description": "Trastornos cardiovasculares en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "I98.2",
    "description": "V√°rices esof√°gicas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I98.8",
    "description": "Otros trastornos especificados del aparato circulatorio en enfermedades clasificadas en otra parte"
  },
  {
    "code": "J01.0",
    "description": "Sinusitis maxilar aguda"
  },
  {
    "code": "J01.1",
    "description": "Sinusitis frontal aguda"
  },
  {
    "code": "J01.2",
    "description": "Sinusitis etmoidal aguda"
  },
  {
    "code": "J01.3",
    "description": "Sinusitis esfenoidal aguda"
  },
  {
    "code": "J01.4",
    "description": "Pansinusitis aguda"
  },
  {
    "code": "J01.8",
    "description": "Otras sinusitis agudas"
  },
  {
    "code": "J01.9",
    "description": "Sinusitis aguda, no especificada"
  },
  {
    "code": "J02.0",
    "description": "Faringitis estreptoc√≥cica"
  },
  {
    "code": "J02.8",
    "description": "Faringitis aguda debida a otros microorganismos especificados"
  },
  {
    "code": "J02.9",
    "description": "Faringitis aguda, no especificada"
  },
  {
    "code": "J03.0",
    "description": "Amigdalitis estreptoc√≥cica"
  },
  {
    "code": "J03.8",
    "description": "Amigdalitis aguda debida a otros microorganismos especificados"
  },
  {
    "code": "J03.9",
    "description": "Amigdalitis aguda, no especificada"
  },
  {
    "code": "J04.0",
    "description": "Laringitis aguda"
  },
  {
    "code": "J04.1",
    "description": "Traque√≠tis aguda"
  },
  {
    "code": "J04.2",
    "description": "Laringotraque√≠tis aguda"
  },
  {
    "code": "J05.0",
    "description": "Laringitis obstructiva, aguda [crup]"
  },
  {
    "code": "J05.1",
    "description": "Epiglotitis aguda"
  },
  {
    "code": "J06.0",
    "description": "Laringofaringitis aguda"
  },
  {
    "code": "J06.8",
    "description": "Otras infecciones agudas de sitios m√∫ltiples de las v√≠as respiratorias superiores"
  },
  {
    "code": "J06.9",
    "description": "Infecci√≥n aguda de las v√≠as respiratorias superiores, no especificada"
  },
  {
    "code": "J10.0",
    "description": "Influenza con neumon√≠a, debida a virus de la influenza identificado"
  },
  {
    "code": "J10.1",
    "description": "Influenza con otras manifestaciones respiratorias, debida a  virus de la influenza identificado"
  },
  {
    "code": "J10.8",
    "description": "Influenza, con otras manifestaciones, debida a virus de la influenza identificado"
  },
  {
    "code": "J11.0",
    "description": "Influenza con neumon√≠a, virus no identificado"
  },
  {
    "code": "J11.1",
    "description": "Influenza con otras manifestaciones respiratorias, virus no identificado"
  },
  {
    "code": "J11.8",
    "description": "Influenza con otras manifestaciones, virus no identificado"
  },
  {
    "code": "J12.0",
    "description": "Neumon√≠a debida a adenovirus"
  },
  {
    "code": "J12.1",
    "description": "Neumon√≠a debida a virus sincitial respiratorio"
  },
  {
    "code": "J12.2",
    "description": "Neumon√≠a debida a virus parainfluenza"
  },
  {
    "code": "J12.8",
    "description": "Neumon√≠a debida a otros virus"
  },
  {
    "code": "J12.9",
    "description": "Neumon√≠a viral, no especificada"
  },
  {
    "code": "J15.0",
    "description": "Neumon√≠a debida a Klebsiella pneumoniae"
  },
  {
    "code": "J15.1",
    "description": "Neumon√≠a debida a Pseudomonas"
  },
  {
    "code": "J15.2",
    "description": "Neumon√≠a debida a estafilococos"
  },
  {
    "code": "J15.3",
    "description": "Neumon√≠a debida a estreptococos del grupo B"
  },
  {
    "code": "J15.4",
    "description": "Neumon√≠a debida a otros estreptococos"
  },
  {
    "code": "J15.5",
    "description": "Neumon√≠a debida a Escherichia coli"
  },
  {
    "code": "J15.6",
    "description": "Neumon√≠a debida a otras bacterias aer√≥bicas gramnegativas"
  },
  {
    "code": "J15.7",
    "description": "Neumon√≠a debida a Mycoplasma pneumoniae"
  },
  {
    "code": "J15.8",
    "description": "Otras neumon√≠as bacterianas"
  },
  {
    "code": "J15.9",
    "description": "Neumon√≠a bacteriana, no especificada"
  },
  {
    "code": "J16.0",
    "description": "Neumon√≠a debida a clamidias"
  },
  {
    "code": "J16.8",
    "description": "Neumon√≠a debida a otros microorganismos infecciosos especificados"
  },
  {
    "code": "J17.0",
    "description": "Neumon√≠a en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "J17.1",
    "description": "Neumon√≠a en enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "J17.2",
    "description": "Neumon√≠a en micosis"
  },
  {
    "code": "J17.3",
    "description": "Neumon√≠a en enfermedades parasitarias"
  },
  {
    "code": "J17.8",
    "description": "Neumon√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "J18.0",
    "description": "Bronconeumon√≠a, no especificada"
  },
  {
    "code": "J18.1",
    "description": "Neumon√≠a lobar, no especificada"
  },
  {
    "code": "J18.2",
    "description": "Neumon√≠a hipost√°tica, no especificada"
  },
  {
    "code": "J18.8",
    "description": "Otras neumon√≠as, de microorganismo no especificado"
  },
  {
    "code": "J18.9",
    "description": "Neumon√≠a, no especificada"
  },
  {
    "code": "J20.0",
    "description": "Bronquitis aguda debida a Mycoplasma pneumoniae"
  },
  {
    "code": "J20.1",
    "description": "Bronquitis aguda debida a Haemophilus influenzae"
  },
  {
    "code": "J20.2",
    "description": "Bronquitis aguda debida a estreptococos"
  },
  {
    "code": "J20.3",
    "description": "Bronquitis aguda debida a virus Coxsackie"
  },
  {
    "code": "J20.4",
    "description": "Bronquitis aguda debida a virus parainfluenza"
  },
  {
    "code": "J20.5",
    "description": "Bronquitis aguda debida a virus sincitial respiratorio"
  },
  {
    "code": "J20.6",
    "description": "Bronquitis aguda debida a rinovirus"
  },
  {
    "code": "J20.7",
    "description": "Bronquitis aguda debida a virus Echo"
  },
  {
    "code": "J20.8",
    "description": "Bronquitis aguda debida a otros microorganismos especificados"
  },
  {
    "code": "J20.9",
    "description": "Bronquitis aguda, no especificada"
  },
  {
    "code": "J21.0",
    "description": "Bronquiolitis aguda debida a virus sincitial respiratorio"
  },
  {
    "code": "J21.8",
    "description": "Bronquiolitis aguda debida a otros microorganismos especificados"
  },
  {
    "code": "J21.9",
    "description": "Bronquiolitis aguda, no especificada"
  },
  {
    "code": "J30.0",
    "description": "Rinitis vasomotora"
  },
  {
    "code": "J30.1",
    "description": "Rinitis al√©rgica debida al polen"
  },
  {
    "code": "J30.2",
    "description": "Otra rinitis al√©rgica estacional"
  },
  {
    "code": "J30.3",
    "description": "Otras rinitis al√©rgicas"
  },
  {
    "code": "J30.4",
    "description": "Rinitis al√©rgica, no especificada"
  },
  {
    "code": "J31.0",
    "description": "Rinitis cr√≥nica"
  },
  {
    "code": "J31.1",
    "description": "Rinofaringitis cr√≥nica"
  },
  {
    "code": "J31.2",
    "description": "Faringitis cr√≥nica"
  },
  {
    "code": "J32.0",
    "description": "Sinusitis maxilar cr√≥nica"
  },
  {
    "code": "J32.1",
    "description": "Sinusitis frontal cr√≥nica"
  },
  {
    "code": "J32.2",
    "description": "Sinusitis etmoidal cr√≥nica"
  },
  {
    "code": "J32.3",
    "description": "Sinusitis esfenoidal cr√≥nica"
  },
  {
    "code": "J32.4",
    "description": "Pansinusitis cr√≥nica"
  },
  {
    "code": "J32.8",
    "description": "Otras sinusitis cr√≥nicas"
  },
  {
    "code": "J32.9",
    "description": "Sinusitis cr√≥nica, no especificada"
  },
  {
    "code": "J33.0",
    "description": "P√≥lipo de la cavidad nasal"
  },
  {
    "code": "J33.1",
    "description": "Degeneraci√≥n polipoide de seno paranasal"
  },
  {
    "code": "J33.8",
    "description": "Otros p√≥lipos de los senos paranasales"
  },
  {
    "code": "J33.9",
    "description": "P√≥lipo nasal, no especificado"
  },
  {
    "code": "J34.0",
    "description": "Absceso, fur√∫nculo y √°ntrax de la nariz"
  },
  {
    "code": "J34.1",
    "description": "Mucocele de la nariz y del seno paranasal"
  },
  {
    "code": "J34.2",
    "description": "Desviaci√≥n del tabique nasal"
  },
  {
    "code": "J34.3",
    "description": "Hipertrofia de los cornetes nasales"
  },
  {
    "code": "J34.8",
    "description": "Otros trastornos especificados de la nariz y de los senos paranasales"
  },
  {
    "code": "J35.0",
    "description": "Amigdalitis cr√≥nica"
  },
  {
    "code": "J35.1",
    "description": "Hipertrofia de las am√≠gdalas"
  },
  {
    "code": "J35.2",
    "description": "Hipertrofia de las adenoides"
  },
  {
    "code": "J35.3",
    "description": "Hipertrofia de las am√≠gdalas con hipertrofia de las adenoides"
  },
  {
    "code": "J35.8",
    "description": "Otras enfermedades cr√≥nicas de las am√≠gdalas y de las adenoides"
  },
  {
    "code": "J35.9",
    "description": "Enfermedad cr√≥nica de las am√≠gdalas y de las adenoides, no especificada"
  },
  {
    "code": "J37.0",
    "description": "Laringitis cr√≥nica"
  },
  {
    "code": "J37.1",
    "description": "Laringotraque√≠tis cr√≥nica"
  },
  {
    "code": "J38.0",
    "description": "Par√°lisis de las cuerdas vocales y de la laringe"
  },
  {
    "code": "J38.1",
    "description": "P√≥lipo de las cuerdas vocales y de la laringe"
  },
  {
    "code": "J38.2",
    "description": "N√≥dulos de las cuerdas vocales"
  },
  {
    "code": "J38.3",
    "description": "Otras enfermedades de las cuerdas vocales"
  },
  {
    "code": "J38.4",
    "description": "Edema de laringe"
  },
  {
    "code": "J38.5",
    "description": "Espasmo lar√≠ngeo"
  },
  {
    "code": "J38.6",
    "description": "Estenosis lar√≠ngea"
  },
  {
    "code": "J38.7",
    "description": "Otras enfermedades de la laringe"
  },
  {
    "code": "J39.0",
    "description": "Absceso retrofar√≠ngeo y parafar√≠ngeo"
  },
  {
    "code": "J39.1",
    "description": "Otros abscesos de la faringe"
  },
  {
    "code": "J39.2",
    "description": "Otras enfermedades de la faringe"
  },
  {
    "code": "J39.3",
    "description": "Reacci√≥n de hipersensibilidad de las v√≠as respiratorias superiores, sitio no especificado"
  },
  {
    "code": "J39.8",
    "description": "Otras enfermedades especificadas de las v√≠as respiratorias superiores"
  },
  {
    "code": "J39.9",
    "description": "Enfermedad de las v√≠as respiratorias superiores, no especificada"
  },
  {
    "code": "J41.0",
    "description": "Bronquitis cr√≥nica simple"
  },
  {
    "code": "J41.1",
    "description": "Bronquitis cr√≥nica mucopurulenta"
  },
  {
    "code": "J41.8",
    "description": "Bronquitis cr√≥nica mixta simple y mucopurulenta"
  },
  {
    "code": "J43.0",
    "description": "S√≠ndrome de MacLeod"
  },
  {
    "code": "J43.1",
    "description": "Enfisema panlobular"
  },
  {
    "code": "J43.2",
    "description": "Enfisema centrolobular"
  },
  {
    "code": "J43.8",
    "description": "Otros tipos de enfisema"
  },
  {
    "code": "J43.9",
    "description": "Enfisema, no especificado"
  },
  {
    "code": "J44.0",
    "description": "Enfermedad pulmonar obstructiva cr√≥nica con infecci√≥n aguda de las v√≠as respiratorias inferiores"
  },
  {
    "code": "J44.1",
    "description": "Enfermedad pulmonar obstructiva cr√≥nica con exacerbaci√≥n aguda, no especificada"
  },
  {
    "code": "J44.8",
    "description": "Otras enfermedades pulmonares obstructivas cr√≥nicas especificadas"
  },
  {
    "code": "J44.9",
    "description": "Enfermedad pulmonar obstructiva cr√≥nica, no especificada"
  },
  {
    "code": "J45.0",
    "description": "Asma predominantemente al√©rgica"
  },
  {
    "code": "J45.1",
    "description": "Asma no al√©rgica"
  },
  {
    "code": "J45.8",
    "description": "Asma mixta"
  },
  {
    "code": "J45.9",
    "description": "Asma, no especificada"
  },
  {
    "code": "J62.0",
    "description": "Neumoconiosis debida a polvo de talco"
  },
  {
    "code": "J62.8",
    "description": "Neumoconiosis debida a otros polvos que contienen s√≠lice"
  },
  {
    "code": "J63.0",
    "description": "Aluminosis (del pulm√≥n)"
  },
  {
    "code": "J63.1",
    "description": "Fibrosis (del pulm√≥n) debida a bauxita"
  },
  {
    "code": "J63.2",
    "description": "Beriliosis"
  },
  {
    "code": "J63.3",
    "description": "Fibrosis (del pulm√≥n) debida a grafito"
  },
  {
    "code": "J63.4",
    "description": "Siderosis"
  },
  {
    "code": "J63.5",
    "description": "Esta√±osis"
  },
  {
    "code": "J63.8",
    "description": "Neumoconiosis debida a otros polvos inorg√°nicos especificados"
  },
  {
    "code": "J66.0",
    "description": "Bisinosis"
  },
  {
    "code": "J66.1",
    "description": "Enfermedad de los trabajadores del lino"
  },
  {
    "code": "J66.2",
    "description": "Canabinosis"
  },
  {
    "code": "J66.8",
    "description": "Enfermedad de las v√≠as a√©reas debida a otros polvos org√°nicos espec√≠ficos"
  },
  {
    "code": "J67.0",
    "description": "Pulm√≥n del granjero"
  },
  {
    "code": "J67.1",
    "description": "Bagazosis"
  },
  {
    "code": "J67.2",
    "description": "Pulm√≥n del ornit√≥filo"
  },
  {
    "code": "J67.3",
    "description": "Suberosis"
  },
  {
    "code": "J67.4",
    "description": "Pulm√≥n del manipulador de malta"
  },
  {
    "code": "J67.5",
    "description": "Pulm√≥n del manipulador de hongos"
  },
  {
    "code": "J67.6",
    "description": "Pulm√≥n del descortezador del arce"
  },
  {
    "code": "J67.7",
    "description": "Neumonitis de la ventilaci√≥n debida al acondicionador y humidificador del aire"
  },
  {
    "code": "J67.8",
    "description": "Neumonitis debidas a hipersensibilidad a otros polvos org√°nicos"
  },
  {
    "code": "J67.9",
    "description": "Neumonitis debida a hipersensibilidad a polvo org√°nico no especificado"
  },
  {
    "code": "J68.0",
    "description": "Bronquitis y neumonitis debidas a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J68.1",
    "description": "Edema pulmonar agudo debido a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J68.2",
    "description": ""
  },
  {
    "code": "J68.3",
    "description": ""
  },
  {
    "code": "J68.4",
    "description": "Afecciones respiratorias cr√≥nicas debidas a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J68.8",
    "description": "Otras afecciones respiratorias debidas a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J68.9",
    "description": "Afecci√≥n respiratoria no especificada, debida a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J69.0",
    "description": "Neumonitis debida a aspiraci√≥n de alimento o v√≥mito"
  },
  {
    "code": "J69.1",
    "description": "Neumonitis debida a aspiraci√≥n de aceites y esencias"
  },
  {
    "code": "J69.8",
    "description": "Neumonitis debida a aspiraci√≥n de otros s√≥lidos y l√≠quidos"
  },
  {
    "code": "J70.0",
    "description": "Manifestaciones pulmonares agudas debidas a radiaci√≥n"
  },
  {
    "code": "J70.1",
    "description": "Manifestaciones pulmonares cr√≥nicas y otras manifestaciones debidas a radiaci√≥n"
  },
  {
    "code": "J70.2",
    "description": "Trastornos pulmonares intersticiales agudos inducidos por drogas"
  },
  {
    "code": "J70.3",
    "description": "Trastornos pulmonares intersticiales cr√≥nicos inducidos por drogas"
  },
  {
    "code": "J70.4",
    "description": "Trastornos pulmonares intersticiales no especificados inducidos por drogas"
  },
  {
    "code": "J70.8",
    "description": "Afecciones respiratorias debidas a otros agentes externos especificados"
  },
  {
    "code": "J70.9",
    "description": "Afecciones respiratorias debidas a agentes externos no especificados"
  },
  {
    "code": "J84.0",
    "description": "Afecciones alveolares y alveoloparietales"
  },
  {
    "code": "J84.1",
    "description": "Otras enfermedades pulmonares intersticiales con fibrosis"
  },
  {
    "code": "J84.8",
    "description": "Otras enfermedades pulmonares intersticiales especificadas"
  },
  {
    "code": "J84.9",
    "description": "Enfermedad pulmonar intersticial, no especificada"
  },
  {
    "code": "J85.0",
    "description": "Gangrena y necrosis del pulm√≥n"
  },
  {
    "code": "J85.1",
    "description": "Absceso del pulm√≥n con neumon√≠a"
  },
  {
    "code": "J85.2",
    "description": "Absceso del pulm√≥n sin neumon√≠a"
  },
  {
    "code": "J85.3",
    "description": "Absceso del mediastino"
  },
  {
    "code": "J86.0",
    "description": "Piot√≥rax con f√≠stula"
  },
  {
    "code": "J86.9",
    "description": "Piot√≥rax sin f√≠stula"
  },
  {
    "code": "J92.0",
    "description": "Paquipleuritis con asbestosis"
  },
  {
    "code": "J92.9",
    "description": "Paquipleuritis sin asbestosis"
  },
  {
    "code": "J93.0",
    "description": "Neumot√≥rax espont√°neo a presi√≥n"
  },
  {
    "code": "J93.1",
    "description": "Otros tipos de neumot√≥rax espont√°neo"
  },
  {
    "code": "J93.8",
    "description": "Otros neumot√≥rax"
  },
  {
    "code": "J93.9",
    "description": "Neumot√≥rax, no especificado"
  },
  {
    "code": "J94.0",
    "description": "Quilot√≥rax"
  },
  {
    "code": "J94.1",
    "description": "Fibrot√≥rax"
  },
  {
    "code": "J94.2",
    "description": "Hemot√≥rax"
  },
  {
    "code": "J94.8",
    "description": "Otras afecciones especificadas de la pleura"
  },
  {
    "code": "J94.9",
    "description": "Afecci√≥n pleural, no especificada"
  },
  {
    "code": "J95.0",
    "description": "Funcionamiento defectuoso de la traqueostom√≠a"
  },
  {
    "code": "J95.1",
    "description": "Insuficiencia pulmonar aguda consecutiva a cirug√≠a tor√°cica"
  },
  {
    "code": "J95.2",
    "description": "Insuficiencia pulmonar aguda consecutiva a cirug√≠a extrator√°cica"
  },
  {
    "code": "J95.3",
    "description": "Insuficiencia pulmonar cr√≥nica consecutiva a cirug√≠a"
  },
  {
    "code": "J95.4",
    "description": "S√≠ndrome de Mendelson"
  },
  {
    "code": "J95.5",
    "description": "Estenosis subgl√≥tica consecutiva a procedimientos"
  },
  {
    "code": "J95.8",
    "description": "Otros trastornos respiratorios consecutivos a procedimientos"
  },
  {
    "code": "J95.9",
    "description": "Trastorno no especificado del sistema respiratorio, consecutivo a procedimientos"
  },
  {
    "code": "J96.0",
    "description": "Insuficiencia respiratoria aguda"
  },
  {
    "code": "J96.1",
    "description": "Insuficiencia respiratoria cr√≥nica"
  },
  {
    "code": "J96.9",
    "description": "Insuficiencia respiratoria, no especificada"
  },
  {
    "code": "J98.0",
    "description": "Enfermedades de la tr√°quea y de los bronquios, no clasificadas en otra parte"
  },
  {
    "code": "J98.1",
    "description": "Colapso pulmonar"
  },
  {
    "code": "J98.2",
    "description": "Enfisema intersticial"
  },
  {
    "code": "J98.3",
    "description": "Enfisema compensatorio"
  },
  {
    "code": "J98.4",
    "description": "Otros trastornos del pulm√≥n"
  },
  {
    "code": "J98.5",
    "description": "Enfermedades del mediastino, no clasificadas en otra parte"
  },
  {
    "code": "J98.6",
    "description": "Trastornos del diafragma"
  },
  {
    "code": "J98.8",
    "description": "Otros trastornos respiratorios especificados"
  },
  {
    "code": "J98.9",
    "description": "Trastorno respiratorio, no especificado"
  },
  {
    "code": "J99.0",
    "description": "Enfermedad pulmonar reumatoide (M05.1+)"
  },
  {
    "code": "J99.1",
    "description": "Trastornos respiratorios en otros trastornos difusos del tejido conjuntivo"
  },
  {
    "code": "J99.8",
    "description": "Trastornos respiratorios en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "K00.0",
    "description": "Anodoncia"
  },
  {
    "code": "K00.1",
    "description": "Dientes supernumerarios"
  },
  {
    "code": "K00.2",
    "description": "Anomal√≠as del tama√±o y de la forma del diente"
  },
  {
    "code": "K00.3",
    "description": "Dientes moteados"
  },
  {
    "code": "K00.4",
    "description": "Alteraciones en la formaci√≥n dentaria"
  },
  {
    "code": "K00.5",
    "description": "Alteraciones hereditarias de la estructura dentaria, no clasificadas en otra parte"
  },
  {
    "code": "K00.6",
    "description": "Alteraciones en la erupci√≥n dentaria"
  },
  {
    "code": "K00.7",
    "description": "S√≠ndrome de la erupci√≥n dentaria"
  },
  {
    "code": "K00.8",
    "description": "Otros trastornos del desarrollo de los dientes"
  },
  {
    "code": "K00.9",
    "description": "Trastorno del desarrollo de los dientes, no especificado"
  },
  {
    "code": "K01.0",
    "description": "Dientes incluidos"
  },
  {
    "code": "K01.1",
    "description": "Dientes impactados"
  },
  {
    "code": "K02.0",
    "description": "Caries limitada al esmalte"
  },
  {
    "code": "K02.1",
    "description": "Caries de la dentina"
  },
  {
    "code": "K02.2",
    "description": "Caries del cemento"
  },
  {
    "code": "K02.3",
    "description": "Caries dentaria detenida"
  },
  {
    "code": "K02.4",
    "description": "Odontoclasia"
  },
  {
    "code": "K02.8",
    "description": "Otras caries dentales"
  },
  {
    "code": "K02.9",
    "description": "Caries dental, no especificada"
  },
  {
    "code": "K03.0",
    "description": "Atrici√≥n excesiva de los dientes"
  },
  {
    "code": "K03.1",
    "description": "Abrasi√≥n de los dientes"
  },
  {
    "code": "K03.2",
    "description": "Erosi√≥n de los dientes"
  },
  {
    "code": "K03.3",
    "description": "Reabsorci√≥n patol√≥gica de los dientes"
  },
  {
    "code": "K03.4",
    "description": "Hipercementosis"
  },
  {
    "code": "K03.5",
    "description": "Anquilosis dental"
  },
  {
    "code": "K03.6",
    "description": "Dep√≥sitos [acreciones] en los dientes"
  },
  {
    "code": "K03.7",
    "description": "Cambios posteruptivos del color de los tejidos dentales duros"
  },
  {
    "code": "K03.8",
    "description": "Otras enfermedades especificadas de los tejidos duros de los dientes"
  },
  {
    "code": "K03.9",
    "description": "Enfermedad no especificada de los tejidos dentales duros"
  },
  {
    "code": "K04.0",
    "description": "Pulpitis"
  },
  {
    "code": "K04.1",
    "description": "Necrosis de la pulpa"
  },
  {
    "code": "K04.2",
    "description": "Degeneraci√≥n de la pulpa"
  },
  {
    "code": "K04.3",
    "description": "Formaci√≥n anormal de tejido duro en la pulpa"
  },
  {
    "code": "K04.4",
    "description": "Periodontitis apical aguda originada en la pulpa"
  },
  {
    "code": "K04.5",
    "description": "Periodontitis apical cr√≥nica"
  },
  {
    "code": "K04.6",
    "description": "Absceso periapical con f√≠stula"
  },
  {
    "code": "K04.7",
    "description": "Absceso periapical sin f√≠stula"
  },
  {
    "code": "K04.8",
    "description": "Quiste radicular"
  },
  {
    "code": "K04.9",
    "description": "Otras enfermedades y las no especificadas de la pulpa y del tejido periapical"
  },
  {
    "code": "K05.0",
    "description": "Gingivitis aguda"
  },
  {
    "code": "K05.1",
    "description": "Gingivitis cr√≥nica"
  },
  {
    "code": "K05.2",
    "description": "Periodontitis aguda"
  },
  {
    "code": "K05.3",
    "description": "Periodontitis cr√≥nica"
  },
  {
    "code": "K05.4",
    "description": "Periodontosis"
  },
  {
    "code": "K05.5",
    "description": "Otras enfermedades periodontales"
  },
  {
    "code": "K05.6",
    "description": "Enfermedad del periodonto, no especificada"
  },
  {
    "code": "K06.0",
    "description": "Retracci√≥n gingival"
  },
  {
    "code": "K06.1",
    "description": "Hiperplasia gingival"
  },
  {
    "code": "K06.2",
    "description": "Lesiones de la enc√≠a y de la zona ed√©ntula asociadas con traumatismo"
  },
  {
    "code": "K06.8",
    "description": "Otros trastornos especificados de la enc√≠a y de la zona ed√©ntula"
  },
  {
    "code": "K06.9",
    "description": "Trastorno no especificado de la enc√≠a y de la zona ed√©ntula"
  },
  {
    "code": "K07.0",
    "description": "Anomal√≠as evidentes del tama√±o de los maxilares"
  },
  {
    "code": "K07.1",
    "description": "Anomal√≠as de la relaci√≥n maxilobasilar"
  },
  {
    "code": "K07.2",
    "description": "Anomal√≠as de la relaci√≥n entre los arcos dentarios"
  },
  {
    "code": "K07.3",
    "description": "Anomal√≠as de la posici√≥n del diente"
  },
  {
    "code": "K07.4",
    "description": "Maloclusi√≥n de tipo no especificado"
  },
  {
    "code": "K07.5",
    "description": "Anomal√≠as dentofaciales funcionales"
  },
  {
    "code": "K07.6",
    "description": "Trastornos de la articulaci√≥n temporomaxilar"
  },
  {
    "code": "K07.8",
    "description": "Otras anomal√≠as dentofaciales"
  },
  {
    "code": "K07.9",
    "description": "Anomal√≠a dentofacial, no especificada"
  },
  {
    "code": "K08.0",
    "description": "Exfoliaci√≥n de los dientes debida a causas sist√©micas"
  },
  {
    "code": "K08.1",
    "description": "P√©rdida de dientes debida a accidente, extracci√≥n o enfermedad periodontal local"
  },
  {
    "code": "K08.2",
    "description": "Atrofia del reborde alveolar desdentado"
  },
  {
    "code": "K08.3",
    "description": "Ra√≠z dental retenida"
  },
  {
    "code": "K08.8",
    "description": "Otras afecciones especificadas de los dientes y de sus estructuras de sost√©n"
  },
  {
    "code": "K08.9",
    "description": "Trastorno de los dientes y de sus estructuras de sost√©n, no especificado"
  },
  {
    "code": "K09.0",
    "description": "Quistes originados por el desarrollo de los dientes"
  },
  {
    "code": "K09.1",
    "description": "Quistes de las fisuras (no odontog√©nicos)"
  },
  {
    "code": "K09.2",
    "description": "Otros quistes de los maxilares"
  },
  {
    "code": "K09.8",
    "description": "Otros quistes de la regi√≥n bucal, no clasificados en otra parte"
  },
  {
    "code": "K09.9",
    "description": "Quiste de la regi√≥n bucal, sin otra especificaci√≥n"
  },
  {
    "code": "K10.0",
    "description": "Trastornos del desarrollo de los maxilares"
  },
  {
    "code": "K10.1",
    "description": "Granuloma central de c√©lulas gigantes"
  },
  {
    "code": "K10.2",
    "description": "Afecciones inflamatorias de los maxilares"
  },
  {
    "code": "K10.3",
    "description": "Alveolitis del maxilar"
  },
  {
    "code": "K10.8",
    "description": "Otras enfermedades especificadas de los maxilares"
  },
  {
    "code": "K10.9",
    "description": "Enfermedad de los maxilares, no especificada"
  },
  {
    "code": "K11.0",
    "description": "Atrofia de gl√°ndula salival"
  },
  {
    "code": "K11.1",
    "description": "Hipertrofia de gl√°ndula salival"
  },
  {
    "code": "K11.2",
    "description": "Sialadenitis"
  },
  {
    "code": "K11.3",
    "description": "Absceso de gl√°ndula salival"
  },
  {
    "code": "K11.4",
    "description": "F√≠stula de gl√°ndula salival"
  },
  {
    "code": "K11.5",
    "description": "Sialolitiasis"
  },
  {
    "code": "K11.6",
    "description": "Mucocele de gl√°ndula salival"
  },
  {
    "code": "K11.7",
    "description": "Alteraciones de la secreci√≥n salival"
  },
  {
    "code": "K11.8",
    "description": "Otras enfermedades de las gl√°ndulas salivales"
  },
  {
    "code": "K11.9",
    "description": "Enfermedad de gl√°ndula salival, no especificada"
  },
  {
    "code": "K12.0",
    "description": "Estomatitis aftosa recurrente"
  },
  {
    "code": "K12.1",
    "description": "Otras formas de estomatitis"
  },
  {
    "code": "K12.2",
    "description": "Celulitis y abceso de boca"
  },
  {
    "code": "K13.0",
    "description": "Enfermedades de los labios"
  },
  {
    "code": "K13.1",
    "description": "Mordedura del labio y de la mejilla"
  },
  {
    "code": "K13.2",
    "description": "Leucoplasia y otras alteraciones del epitelio bucal, incluyendo la lengua"
  },
  {
    "code": "K13.3",
    "description": "Leucoplasia pilosa"
  },
  {
    "code": "K13.4",
    "description": "Granuloma y lesiones semejantes de la mucosa bucal"
  },
  {
    "code": "K13.5",
    "description": "Fibrosis de la submucosa bucal"
  },
  {
    "code": "K13.6",
    "description": "Hiperplasia irrritativa de la mucosa bucal"
  },
  {
    "code": "K13.7",
    "description": "Otras lesiones y las no especificadas de la mucosa bucal"
  },
  {
    "code": "K14.0",
    "description": "Glositis"
  },
  {
    "code": "K14.1",
    "description": "Lengua geogr√°fica"
  },
  {
    "code": "K14.2",
    "description": "Glositis romboidea mediana"
  },
  {
    "code": "K14.3",
    "description": "Hipertrofia de las papilas linguales"
  },
  {
    "code": "K14.4",
    "description": "Atrofia de las papilas linguales"
  },
  {
    "code": "K14.5",
    "description": "Lengua plegada"
  },
  {
    "code": "K14.6",
    "description": "Glosodinia"
  },
  {
    "code": "K14.8",
    "description": "Otras enfermedades de la lengua"
  },
  {
    "code": "K14.9",
    "description": "Enfermedad de la lengua, no especificada"
  },
  {
    "code": "K21.0",
    "description": "Enfermedad del reflujo gastroesof√°gico con esofagitis"
  },
  {
    "code": "K21.9",
    "description": "Enfermedad del reflujo gastroesof√°gico sin esofagitis"
  },
  {
    "code": "K22.0",
    "description": "Acalasia del cardias"
  },
  {
    "code": "K22.1",
    "description": "Ulcera del es√≥fago"
  },
  {
    "code": "K22.2",
    "description": "Obstrucci√≥n del es√≥fago"
  },
  {
    "code": "K22.3",
    "description": "Perforaci√≥n del es√≥fago"
  },
  {
    "code": "K22.4",
    "description": "Disquinesia del es√≥fago"
  },
  {
    "code": "K22.5",
    "description": "Divert√≠culo del es√≥fago, adquirido"
  },
  {
    "code": "K22.6",
    "description": "S√≠ndrome de laceraci√≥n y hemorragia gastroesof√°gicas"
  },
  {
    "code": "K22.8",
    "description": "Otras enfermedades especificadas del es√≥fago"
  },
  {
    "code": "K22.9",
    "description": "Enfermedad del es√≥fago, no especificada"
  },
  {
    "code": "K23.0",
    "description": "Esofagitis tuberculosa (A18.8+)"
  },
  {
    "code": "K23.1",
    "description": "Megaes√≥fago en la enfermedad de Chagas (B57.3+)"
  },
  {
    "code": "K23.8",
    "description": "Trastornos del es√≥fago en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "K25.0",
    "description": "Ulcera g√°strica, aguda con hemorragia"
  },
  {
    "code": "K25.1",
    "description": "Ulcera g√°strica, aguda con perforaci√≥n"
  },
  {
    "code": "K25.2",
    "description": "Ulcera g√°strica, aguda con hemorragia y perforaci√≥n"
  },
  {
    "code": "K25.3",
    "description": "Ulcera g√°strica, aguda sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K25.4",
    "description": "Ulcera g√°strica, cr√≥nica o no especificada, con hemorragia"
  },
  {
    "code": "K25.5",
    "description": "Ulcera g√°strica, cr√≥nica o no especificada, con perforaci√≥n"
  },
  {
    "code": "K25.6",
    "description": "Ulcera g√°strica, cr√≥nica o no especificada, con hemorragia y perforaci√≥n"
  },
  {
    "code": "K25.7",
    "description": "Ulcera g√°strica, cr√≥nica sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K25.9",
    "description": "Ulcera g√°strica, no especificada como aguda ni cr√≥nica, sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K26.0",
    "description": "Ulcera duodenal, aguda con hemorragia"
  },
  {
    "code": "K26.1",
    "description": "Ulcera duodenal, aguda con perforaci√≥n"
  },
  {
    "code": "K26.2",
    "description": "Ulcera duodenal, aguda con hemorragia y perforaci√≥n"
  },
  {
    "code": "K26.3",
    "description": "Ulcera duodenal, aguda sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K26.4",
    "description": "Ulcera duodenal, cr√≥nica o no especificada, con hemorragia"
  },
  {
    "code": "K26.5",
    "description": "Ulcera duodenal, cr√≥nica o no especificada, con perforaci√≥n"
  },
  {
    "code": "K26.6",
    "description": "Ulcera duodenal, cr√≥nica o no especificada, con hemorragia y perforaci√≥n"
  },
  {
    "code": "K26.7",
    "description": "Ulcera duodenal, cr√≥nica sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K26.9",
    "description": "Ulcera duodenal, no especificada como aguda ni cr√≥nica, sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K27.0",
    "description": "Ulcera p√©ptica, de sitio no especificado, aguda con hemorragia"
  },
  {
    "code": "K27.1",
    "description": "Ulcera p√©ptica, de sitio no especificado, aguda con perforaci√≥n"
  },
  {
    "code": "K27.2",
    "description": "Ulcera p√©ptica, de sitio no especificado, aguda con hemorragia y perforaci√≥n"
  },
  {
    "code": "K27.3",
    "description": "Ulcera p√©ptica, de sitio no especificado, aguda sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K27.4",
    "description": "Ulcera p√©ptica, de sitio no especificado, cr√≥nica o no especificada, conhemorragia"
  },
  {
    "code": "K27.5",
    "description": "Ulcera p√©ptica, de sitio no especificado, cr√≥nica o no especificada, conperforaci√≥n"
  },
  {
    "code": "K27.6",
    "description": "Ulcera p√©ptica, de sitio no especificado, cr√≥nica o no especificada, con hemorragia y perforaci√≥n"
  },
  {
    "code": "K27.7",
    "description": "Ulcera p√©ptica, de sitio no especificado, cr√≥nica sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K27.9",
    "description": "Ulcera p√©ptica, no especificada como aguda ni cr√≥nica, sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K28.0",
    "description": "Ulcera gastroyeyunal, aguda con hemorragia"
  },
  {
    "code": "K28.1",
    "description": "Ulcera gastroyeyunal, aguda con perforaci√≥n"
  },
  {
    "code": "K28.2",
    "description": "Ulcera gastroyeyunal, aguda con hemorragia y perforaci√≥n"
  },
  {
    "code": "K28.3",
    "description": "Ulcera gastroyeyunal, aguda sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K28.4",
    "description": "Ulcera gastroyeyunal, cr√≥nica o no especificada, con hemorragia"
  },
  {
    "code": "K28.5",
    "description": "Ulcera gastroyeyunal, cr√≥nica o no especificada, con perforaci√≥n"
  },
  {
    "code": "K28.6",
    "description": "Ulcera gastroyeyunal, cr√≥nica o no especificada, con hemorragia y perforaci√≥n"
  },
  {
    "code": "K28.7",
    "description": "Ulcera gastroyeyunal, cr√≥nica sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K28.9",
    "description": "Ulcera gastroyeyunal, no especificada como aguda ni cr√≥nica, sin hemorragia ni perforaci√≥n"
  },
  {
    "code": "K29.0",
    "description": "Gastritis aguda hemorr√°gica"
  },
  {
    "code": "K29.1",
    "description": "Otras gastritis agudas"
  },
  {
    "code": "K29.2",
    "description": "Gastritis alcoh√≥lica"
  },
  {
    "code": "K29.3",
    "description": "Gastritis cr√≥nica superficial"
  },
  {
    "code": "K29.4",
    "description": "Gastritis cr√≥nica atr√≥fica"
  },
  {
    "code": "K29.5",
    "description": "Gastritis cr√≥nica, no especificada"
  },
  {
    "code": "K29.6",
    "description": "Otras gastritis"
  },
  {
    "code": "K29.7",
    "description": "Gastritis, no especificada"
  },
  {
    "code": "K29.8",
    "description": "Duodenitis"
  },
  {
    "code": "K29.9",
    "description": "Gastroduodenitis, no especificada"
  },
  {
    "code": "K31.0",
    "description": "Dilataci√≥n aguda del est√≥mago"
  },
  {
    "code": "K31.1",
    "description": "Estenosis pil√≥rica hipertr√≥fica del adulto"
  },
  {
    "code": "K31.2",
    "description": "Estrechez o estenosis del est√≥mago en reloj de arena"
  },
  {
    "code": "K31.3",
    "description": "Espasmo del p√≠loro, no clasificado en otra parte"
  },
  {
    "code": "K31.4",
    "description": "Divert√≠culo g√°strico"
  },
  {
    "code": "K31.5",
    "description": "Obstrucci√≥n del duodeno"
  },
  {
    "code": "K31.6",
    "description": "F√≠stula del est√≥mago y del duodeno"
  },
  {
    "code": "K31.7",
    "description": "P√≥lipo adenomatoso del est√≥mago (D13.1)"
  },
  {
    "code": "K31.8",
    "description": "Otras enfermedades especificadas del est√≥mago y del duodeno"
  },
  {
    "code": "K31.9",
    "description": "Enfermedad del est√≥mago y del duodeno, no especificada"
  },
  {
    "code": "K35.0",
    "description": "Apendicitis aguda con peritonitis generalizada"
  },
  {
    "code": "K35.1",
    "description": "Apendicitis aguda con absceso peritoneal"
  },
  {
    "code": "K35.9",
    "description": "Apendicitis aguda, no especificada"
  },
  {
    "code": "K38.0",
    "description": "Hiperplasia del ap√©ndice"
  },
  {
    "code": "K38.1",
    "description": "Concreciones apendiculares"
  },
  {
    "code": "K38.2",
    "description": "Divert√≠culo del ap√©ndice"
  },
  {
    "code": "K38.3",
    "description": "F√≠stula del ap√©ndice"
  },
  {
    "code": "K38.8",
    "description": "Otras enfermedades especificadas del ap√©ndice"
  },
  {
    "code": "K38.9",
    "description": "Enfermedad del ap√©ndice, no especificada"
  },
  {
    "code": "K40.0",
    "description": "Hernia inguinal bilateral con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K40.1",
    "description": "Hernia inguinal bilateral, con gangrena"
  },
  {
    "code": "K40.2",
    "description": "Hernia inguinal bilateral, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K40.3",
    "description": "Hernia inguinal unilateral o no especificada, con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K40.4",
    "description": "Hernia inguinal unilateral o no especificada, con gangrena"
  },
  {
    "code": "K40.9",
    "description": "Hernia inguinal unilateral o no especificada, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K41.0",
    "description": "Hernia femoral bilateral, con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K41.1",
    "description": "Hernia femoral bilateral, con gangrena"
  },
  {
    "code": "K41.2",
    "description": "Hernia femoral bilateral, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K41.3",
    "description": "Hernia femoral unilateral o no especificada, con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K41.4",
    "description": "Hernia femoral unilateral o no especificada, con gangrena"
  },
  {
    "code": "K41.9",
    "description": "Hernia femoral unilateral o no especificada, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K42.0",
    "description": "Hernia umbilical con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K42.1",
    "description": "Hernia umbilical con gangrena"
  },
  {
    "code": "K42.9",
    "description": "Hernia umbilical sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K43.0",
    "description": "Hernia ventral con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K43.1",
    "description": "Hernia ventral con gangrena"
  },
  {
    "code": "K43.9",
    "description": "Hernia ventral sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K44.0",
    "description": "Hernia diafragm√°tica con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K44.1",
    "description": "Hernia diafragm√°tica con gangrena"
  },
  {
    "code": "K44.9",
    "description": "Hernia diafragm√°tica sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K45.0",
    "description": "Otras hernias de la cavidad abdominal especificadas, con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K45.1",
    "description": "Otras hernias de la cavidad abdominal especificadas, con gangrena"
  },
  {
    "code": "K45.8",
    "description": "Otras hernias de la cavidad abdominal especificadas, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K46.0",
    "description": "Hernia abdominal no especificada, con obstrucci√≥n, sin gangrena"
  },
  {
    "code": "K46.1",
    "description": "Hernia abdominal no especificada, con gangrena"
  },
  {
    "code": "K46.9",
    "description": "Hernia abdominal no especificada, sin obstrucci√≥n ni gangrena"
  },
  {
    "code": "K50.0",
    "description": "Enfermedad de Crohn del intestino delgado"
  },
  {
    "code": "K50.1",
    "description": "Enfermedad de Crohn del intestino grueso"
  },
  {
    "code": "K50.8",
    "description": "Otros tipos de enfermedad de Crohn"
  },
  {
    "code": "K50.9",
    "description": "Enfermedad de Crohn, no especificada"
  },
  {
    "code": "K51.0",
    "description": "Enterocolitis (cr√≥nica) ulcerativa"
  },
  {
    "code": "K51.1",
    "description": "Ileocolitis (cr√≥nica) ulcerativa"
  },
  {
    "code": "K51.2",
    "description": "Proctitis (cr√≥nica) ulcerativa"
  },
  {
    "code": "K51.3",
    "description": "Rectosigmoiditis (cr√≥nica) ulcerativa"
  },
  {
    "code": "K51.4",
    "description": "Seudopoliposis del colon"
  },
  {
    "code": "K51.5",
    "description": "Proctocolitis mucosa"
  },
  {
    "code": "K51.8",
    "description": "Otras colitis ulcerativas"
  },
  {
    "code": "K51.9",
    "description": "Colitis ulcerativa, sin otra especificaci√≥n"
  },
  {
    "code": "K52.0",
    "description": "Colitis y gastroenteritis debidas a radiaci√≥n"
  },
  {
    "code": "K52.1",
    "description": "Colitis y gastroenteritis t√≥xicas"
  },
  {
    "code": "K52.2",
    "description": "Colitis y gastroenteritis al√©rgicas y diet√©ticas"
  },
  {
    "code": "K52.8",
    "description": "Otras colitis y gastroenteritis no infecciosas especificadas"
  },
  {
    "code": "K52.9",
    "description": "Colitis y gastroenteritis no infecciosas, no especificadas"
  },
  {
    "code": "K55.0",
    "description": "Trastorno vascular agudo de los intestinos"
  },
  {
    "code": "K55.1",
    "description": "Trastorno vascular cr√≥nico del intestino"
  },
  {
    "code": "K55.2",
    "description": "Angiodisplasia del colon"
  },
  {
    "code": "K55.8",
    "description": "Otros trastornos vasculares del intestino"
  },
  {
    "code": "K55.9",
    "description": "Trastorno vascular del intestino, no especificado"
  },
  {
    "code": "K56.0",
    "description": "Ileo paral√≠tico"
  },
  {
    "code": "K56.1",
    "description": "Invaginaci√≥n"
  },
  {
    "code": "K56.2",
    "description": "V√≥lvulo"
  },
  {
    "code": "K56.3",
    "description": "Ileo por c√°lculo biliar"
  },
  {
    "code": "K56.4",
    "description": "Otras obstrucciones del intestino"
  },
  {
    "code": "K56.5",
    "description": "Adherencias [bridas] intestinales con obstrucci√≥n"
  },
  {
    "code": "K56.6",
    "description": "Otras obstrucciones intestinales y las no especificadas"
  },
  {
    "code": "K56.7",
    "description": "Ileo, no especificado"
  },
  {
    "code": "K57.0",
    "description": "Enfermedad diverticular del intestino delgado con perforaci√≥n y absceso"
  },
  {
    "code": "K57.1",
    "description": "Enfermedad diverticular del intestino delgado sin perforaci√≥n ni absceso"
  },
  {
    "code": "K57.2",
    "description": "Enfermedad diverticular del intestino grueso con perforaci√≥n y absceso"
  },
  {
    "code": "K57.3",
    "description": "Enfermedad diverticular del intestino grueso sin perforaci√≥n ni absceso"
  },
  {
    "code": "K57.4",
    "description": "Enfermedad diverticular de ambos intestinos con perforaci√≥n y absceso"
  },
  {
    "code": "K57.5",
    "description": "Enfermedad diverticular de ambos intestinos, sin perforaci√≥n ni absceso"
  },
  {
    "code": "K57.8",
    "description": "Enfermedad diverticular del intestino, parte no especificada, con perforaci√≥n y absceso"
  },
  {
    "code": "K57.9",
    "description": "Enfermedad diverticular del intestino, parte no especificada, sin perforaci√≥n ni absceso"
  },
  {
    "code": "K58.0",
    "description": "S√≠ndrome del colon irritable con diarrea"
  },
  {
    "code": "K58.9",
    "description": "S√≠ndrome del colon irritable sin diarrea"
  },
  {
    "code": "K59.0",
    "description": "Constipaci√≥n"
  },
  {
    "code": "K59.1",
    "description": "Diarrea funcional"
  },
  {
    "code": "K59.2",
    "description": "Intestino neurog√©nico, no clasificado en otra parte"
  },
  {
    "code": "K59.3",
    "description": "Megacolon, no clasificado en otra parte"
  },
  {
    "code": "K59.4",
    "description": "Espasmo anal"
  },
  {
    "code": "K59.8",
    "description": "Otros trastornos funcionales especificados del intestino"
  },
  {
    "code": "K59.9",
    "description": "Trastorno funcional intestinal, no especificado"
  },
  {
    "code": "K60.0",
    "description": "Fisura anal aguda"
  },
  {
    "code": "K60.1",
    "description": "Fisura anal cr√≥nica"
  },
  {
    "code": "K60.2",
    "description": "Fisura anal, no especificada"
  },
  {
    "code": "K60.3",
    "description": "F√≠stula anal"
  },
  {
    "code": "K60.4",
    "description": "F√≠stula rectal"
  },
  {
    "code": "K60.5",
    "description": "F√≠stula anorrectal"
  },
  {
    "code": "K61.0",
    "description": "Absceso anal"
  },
  {
    "code": "K61.1",
    "description": "Absceso rectal"
  },
  {
    "code": "K61.2",
    "description": "Absceso anorrectal"
  },
  {
    "code": "K61.3",
    "description": "Absceso isquiorrectal"
  },
  {
    "code": "K61.4",
    "description": "Absceso intraesfinteriano"
  },
  {
    "code": "K62.0",
    "description": "P√≥lipo anal"
  },
  {
    "code": "K62.1",
    "description": "P√≥lipo rectal"
  },
  {
    "code": "K62.2",
    "description": "Prolapso anal"
  },
  {
    "code": "K62.3",
    "description": "Prolapso rectal"
  },
  {
    "code": "K62.4",
    "description": "Estenosis del ano y del recto"
  },
  {
    "code": "K62.5",
    "description": "Hemorragia del ano y del recto"
  },
  {
    "code": "K62.6",
    "description": "Ulcera del ano y del recto"
  },
  {
    "code": "K62.7",
    "description": "Proctitis por radiaci√≥n"
  },
  {
    "code": "K62.8",
    "description": "Otras enfermedades especificadas del ano y del recto"
  },
  {
    "code": "K62.9",
    "description": "Enfermedad del ano y del recto, no especificada"
  },
  {
    "code": "K63.0",
    "description": "Absceso del intestino"
  },
  {
    "code": "K63.1",
    "description": "Perforaci√≥n del intestino (no traum√°tica)"
  },
  {
    "code": "K63.2",
    "description": "F√≠stula del intestino"
  },
  {
    "code": "K63.3",
    "description": "Ulcera del intestino"
  },
  {
    "code": "K63.4",
    "description": "Enteroptosis"
  },
  {
    "code": "K63.5",
    "description": "P√≥lipo del colon"
  },
  {
    "code": "K63.8",
    "description": "Otras enfermedades especificadas del intestino"
  },
  {
    "code": "K63.9",
    "description": "Enfermedad del intestino, no especificada"
  },
  {
    "code": "K65.0",
    "description": "Peritonitis aguda"
  },
  {
    "code": "K65.8",
    "description": "Otras peritonitis"
  },
  {
    "code": "K65.9",
    "description": "Peritonitis, no especificada"
  },
  {
    "code": "K66.0",
    "description": "Adherencias peritoneales"
  },
  {
    "code": "K66.1",
    "description": "Hemoperitoneo"
  },
  {
    "code": "K66.8",
    "description": "Otros trastornos especificados del peritoneo"
  },
  {
    "code": "K66.9",
    "description": "Trastorno del peritoneo, no especificado"
  },
  {
    "code": "K67.0",
    "description": "Peritonitis por clamidias (A74.8+)"
  },
  {
    "code": "K67.1",
    "description": "Peritonitis gonoc√≥cica (A54.8+)"
  },
  {
    "code": "K67.2",
    "description": "Peritonitis sifil√≠tica (A52.7+)"
  },
  {
    "code": "K67.3",
    "description": "Peritonitis tuberculosa (A18.3+)"
  },
  {
    "code": "K67.8",
    "description": "Otros trastornos del peritoneo en enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "K70.0",
    "description": "H√≠gado alcoh√≥lico adiposo"
  },
  {
    "code": "K70.1",
    "description": "Hepatitis alcoh√≥lica"
  },
  {
    "code": "K70.2",
    "description": "Fibrosis y esclerosis del h√≠gado, alcoh√≥lica"
  },
  {
    "code": "K70.3",
    "description": "Cirrosis hep√°tica alcoh√≥lica"
  },
  {
    "code": "K70.4",
    "description": "Insuficiencia hep√°tica alcoh√≥lica"
  },
  {
    "code": "K70.9",
    "description": "Enfermedad hep√°tica alcoh√≥lica, no especificada"
  },
  {
    "code": "K71.0",
    "description": "Enfermedad t√≥xica del h√≠gado, con colestasis"
  },
  {
    "code": "K71.1",
    "description": "Enfermedad t√≥xica del h√≠gado con necrosis hep√°tica"
  },
  {
    "code": "K71.2",
    "description": "Enfermedad t√≥xica del h√≠gado con hepatitis aguda"
  },
  {
    "code": "K71.3",
    "description": "Enfermedad t√≥xica del h√≠gado con hepatitis cr√≥nica persistente"
  },
  {
    "code": "K71.4",
    "description": "Enfermedad t√≥xica del h√≠gado con hepatitis cr√≥nica lobular"
  },
  {
    "code": "K71.5",
    "description": "Enfermedad t√≥xica del h√≠gado con hepatitis cr√≥nica activa"
  },
  {
    "code": "K71.6",
    "description": "Enfermedad t√≥xica del h√≠gado con hepatitis no clasificada en otra parte"
  },
  {
    "code": "K71.7",
    "description": "Enfermedad t√≥xica del h√≠gado con cirrosis y fibrosis del h√≠gado"
  },
  {
    "code": "K71.8",
    "description": "Enfermedad t√≥xica del h√≠gado con otros trastornos hep√°ticos"
  },
  {
    "code": "K71.9",
    "description": "Enfermedad t√≥xica del h√≠gado, no especificada"
  },
  {
    "code": "K72.0",
    "description": "Insuficiencia hep√°tica aguda o subaguda"
  },
  {
    "code": "K72.1",
    "description": "Insuficiencia hep√°tica cr√≥nica"
  },
  {
    "code": "K72.9",
    "description": "Insuficiencia hep√°tica, no especificada"
  },
  {
    "code": "K73.0",
    "description": "Hepatitis cr√≥nica persistente, no clasificada en otra parte"
  },
  {
    "code": "K73.1",
    "description": "Hepatitis cr√≥nica lobular, no clasificada en otra parte"
  },
  {
    "code": "K73.2",
    "description": "Hepatitis cr√≥nica activa, no clasificada en otra parte"
  },
  {
    "code": "K73.8",
    "description": "Otras hepatitis cr√≥nicas, no clasificadas en otra parte"
  },
  {
    "code": "K73.9",
    "description": "Hepatitis cr√≥nica, no especificada"
  },
  {
    "code": "K74.0",
    "description": "Fibrosis hep√°tica"
  },
  {
    "code": "K74.1",
    "description": "Esclerosis hep√°tica"
  },
  {
    "code": "K74.2",
    "description": "Fibrosis hep√°tica con esclerosis hep√°tica"
  },
  {
    "code": "K74.3",
    "description": "Cirrosis biliar primaria"
  },
  {
    "code": "K74.4",
    "description": "Cirrosis biliar secundaria"
  },
  {
    "code": "K74.5",
    "description": "Cirrosis biliar, no especificada"
  },
  {
    "code": "K74.6",
    "description": "Otras cirrosis del h√≠gado y las no especificadas"
  },
  {
    "code": "K75.0",
    "description": "Absceso del h√≠gado"
  },
  {
    "code": "K75.1",
    "description": "Flebitis de la vena porta"
  },
  {
    "code": "K75.2",
    "description": "Hepatitis reactiva no espec√≠fica"
  },
  {
    "code": "K75.3",
    "description": "Hepatitis granulomatosa, no clasificada en otra parte"
  },
  {
    "code": "K75.4",
    "description": "Hepatitis autoinmune"
  },
  {
    "code": "K75.8",
    "description": "Otras enfermedades inflamatorias del h√≠gado, especificadas"
  },
  {
    "code": "K75.9",
    "description": "Enfermedad inflamatoria del h√≠gado, no especificada"
  },
  {
    "code": "K76.0",
    "description": "Degeneraci√≥n grasa del h√≠gado, no clasificada en otra parte"
  },
  {
    "code": "K76.1",
    "description": "Congesti√≥n pasiva cr√≥nica del h√≠gado"
  },
  {
    "code": "K76.2",
    "description": "Necrosis hemorr√°gica central del h√≠gado"
  },
  {
    "code": "K76.3",
    "description": "Infarto del h√≠gado"
  },
  {
    "code": "K76.4",
    "description": "Peliosis hep√°tica"
  },
  {
    "code": "K76.5",
    "description": "Enfermedad veno-oclusiva del h√≠gado"
  },
  {
    "code": "K76.6",
    "description": "Hipertensi√≥n portal"
  },
  {
    "code": "K76.7",
    "description": "S√≠ndrome hepatorrenal"
  },
  {
    "code": "K76.8",
    "description": "Otras enfermedades especificadas del h√≠gado"
  },
  {
    "code": "K76.9",
    "description": "Enfermedad del h√≠gado, no especificada"
  },
  {
    "code": "K77.0",
    "description": "Trastornos del h√≠gado en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "K77.8",
    "description": "Trastornos del h√≠gado en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "K80.0",
    "description": "C√°lculo de la ves√≠cula biliar con colecistitis aguda"
  },
  {
    "code": "K80.1",
    "description": "C√°lculo de la ves√≠cula biliar con otra colecistitis"
  },
  {
    "code": "K80.2",
    "description": "C√°lculo de la ves√≠cula biliar sin colecistitis"
  },
  {
    "code": "K80.3",
    "description": "C√°lculo de conducto biliar con colangitis"
  },
  {
    "code": "K80.4",
    "description": "C√°lculo de conducto biliar con colecistitis"
  },
  {
    "code": "K80.5",
    "description": "C√°lculo de conducto biliar sin colangitis ni colecistitis"
  },
  {
    "code": "K80.8",
    "description": "Otras colelitiasis"
  },
  {
    "code": "K81.0",
    "description": "Colecistitis aguda"
  },
  {
    "code": "K81.1",
    "description": "Colecistitis cr√≥nica"
  },
  {
    "code": "K81.8",
    "description": "Otras colecistitis"
  },
  {
    "code": "K81.9",
    "description": "Colecistitis, no especificada"
  },
  {
    "code": "K82.0",
    "description": "Obstrucci√≥n de la ves√≠cula biliar"
  },
  {
    "code": "K82.1",
    "description": "Hidropes√≠a de la ves√≠cula biliar"
  },
  {
    "code": "K82.2",
    "description": "Perforaci√≥n de la ves√≠cula biliar"
  },
  {
    "code": "K82.3",
    "description": "F√≠stula de la ves√≠cula biliar"
  },
  {
    "code": "K82.4",
    "description": "Colesterolosis de la ves√≠cula biliar"
  },
  {
    "code": "K82.8",
    "description": "Otras enfermedades especificadas de la ves√≠cula biliar"
  },
  {
    "code": "K82.9",
    "description": "Enfermedad de la ves√≠cula biliar, no especificada"
  },
  {
    "code": "K83.0",
    "description": "Colangitis"
  },
  {
    "code": "K83.1",
    "description": "Obstrucci√≥n del conducto biliar"
  },
  {
    "code": "K83.2",
    "description": "Perforaci√≥n del conducto biliar"
  },
  {
    "code": "K83.3",
    "description": "F√≠stula del conducto biliar"
  },
  {
    "code": "K83.4",
    "description": "Espasmo del esf√≠nter de Oddi"
  },
  {
    "code": "K83.5",
    "description": "Quiste biliar"
  },
  {
    "code": "K83.8",
    "description": "Otras enfermedades especificadas de las v√≠as biliares"
  },
  {
    "code": "K83.9",
    "description": "Enfermedad de las v√≠as biliares, no especificada"
  },
  {
    "code": "K86.0",
    "description": "Pancreatitis cr√≥nica inducida por el alcohol"
  },
  {
    "code": "K86.1",
    "description": "Otras pancreatitis cr√≥nicas"
  },
  {
    "code": "K86.2",
    "description": "Quiste del p√°ncreas"
  },
  {
    "code": "K86.3",
    "description": "Seudoquiste del p√°ncreas"
  },
  {
    "code": "K86.8",
    "description": "Otras enfermedades especificadas del p√°ncreas"
  },
  {
    "code": "K86.9",
    "description": "Enfermedad del p√°ncreas, no especificada"
  },
  {
    "code": "K87.0",
    "description": "Trastornos de la ves√≠cula biliar y de las v√≠as biliares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K87.1",
    "description": "Trastornos del p√°ncreas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K90.0",
    "description": "Enfermedad cel√≠aca"
  },
  {
    "code": "K90.1",
    "description": "Esprue tropical"
  },
  {
    "code": "K90.2",
    "description": "S√≠ndrome del asa ciega, no clasificado en otra parte"
  },
  {
    "code": "K90.3",
    "description": "Esteatorrea pancre√°tica"
  },
  {
    "code": "K90.4",
    "description": "Malabsorci√≥n debida a intolerancia, no clasificada en otra parte"
  },
  {
    "code": "K90.8",
    "description": "Otros tipos de malabsorci√≥n intestinal"
  },
  {
    "code": "K90.9",
    "description": "Malabsorci√≥n intestinal, no especificada"
  },
  {
    "code": "K91.0",
    "description": "V√≥mito postcirug√≠a gastrointestinal"
  },
  {
    "code": "K91.1",
    "description": "S√≠ndromes consecutivos a la cirug√≠a g√°strica"
  },
  {
    "code": "K91.2",
    "description": "Malabsorci√≥n postquir√∫rgica, no clasificada en otra parte"
  },
  {
    "code": "K91.3",
    "description": "Obstrucci√≥n intestinal postoperatoria"
  },
  {
    "code": "K91.4",
    "description": "Disfunci√≥n de colostom√≠a o enterostom√≠a"
  },
  {
    "code": "K91.5",
    "description": "S√≠ndrome postcolecistectom√≠a"
  },
  {
    "code": "K91.8",
    "description": "Otros trastornos del sistema digestivo consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "K91.9",
    "description": "Trastorno no especificado del sistema digestivo consecutivo a procedimientos"
  },
  {
    "code": "K92.0",
    "description": "Hematemesis"
  },
  {
    "code": "K92.1",
    "description": "Melena"
  },
  {
    "code": "K92.2",
    "description": "Hemorragia gastrointestinal, no especificada"
  },
  {
    "code": "K92.8",
    "description": "Otras enfermedades especificadas del sistema digestivo"
  },
  {
    "code": "K92.9",
    "description": "Enfermedad del sistema digestivo, no especificada"
  },
  {
    "code": "K93.0",
    "description": "Trastornos tuberculosos del intestino, peritoneo y ganglios mesent√©ricos (A18.3+)"
  },
  {
    "code": "K93.1",
    "description": "Megacolon en la enfermedad de Chagas (B57.3+)"
  },
  {
    "code": "K93.8",
    "description": "Trastornos de otros √≥rganos digestivos especificados en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L01.0",
    "description": "Imp√©tigo [cualquier sitio anat√≥mico] [cualquier organismo]"
  },
  {
    "code": "L01.1",
    "description": "Impetiginizaci√≥n de otras dermatosis"
  },
  {
    "code": "L02.0",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax de la cara"
  },
  {
    "code": "L02.1",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax del cuello"
  },
  {
    "code": "L02.2",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax del tronco"
  },
  {
    "code": "L02.3",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax de gl√∫teos"
  },
  {
    "code": "L02.4",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax de miembro"
  },
  {
    "code": "L02.8",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax de otros sitios"
  },
  {
    "code": "L02.9",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax de sitio no especificado"
  },
  {
    "code": "L03.0",
    "description": "Celulitis de los dedos de la mano y del pie"
  },
  {
    "code": "L03.1",
    "description": "Celulitis de otras partes de los miembros"
  },
  {
    "code": "L03.2",
    "description": "Celulitis de la cara"
  },
  {
    "code": "L03.3",
    "description": "Celulitis del tronco"
  },
  {
    "code": "L03.8",
    "description": "Celulitis de otros sitios"
  },
  {
    "code": "L03.9",
    "description": "Celulitis de sitio no especificado"
  },
  {
    "code": "L04.0",
    "description": "Linfadenitis aguda de cara, cabeza y cuello"
  },
  {
    "code": "L04.1",
    "description": "Linfadenitis aguda del tronco"
  },
  {
    "code": "L04.2",
    "description": "Linfadenitis aguda del miembro superior"
  },
  {
    "code": "L04.3",
    "description": "Linfadenitis aguda del miembro inferior"
  },
  {
    "code": "L04.8",
    "description": "Linfadenitis aguda de otros sitios"
  },
  {
    "code": "L04.9",
    "description": "Linfadenitis aguda de sitio no especificado"
  },
  {
    "code": "L05.0",
    "description": "Quiste pilonidal con absceso"
  },
  {
    "code": "L05.9",
    "description": "Quiste pilonidal sin absceso"
  },
  {
    "code": "L08.0",
    "description": "Pioderma"
  },
  {
    "code": "L08.1",
    "description": "Eritrasma"
  },
  {
    "code": "L08.8",
    "description": "Otras infecciones locales especificadas de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L08.9",
    "description": "Infecci√≥n local de la piel y del tejido subcut√°neo, no especificada"
  },
  {
    "code": "L10.0",
    "description": "P√©nfigo vulgar"
  },
  {
    "code": "L10.1",
    "description": "P√©nfigo vegetante"
  },
  {
    "code": "L10.2",
    "description": "P√©nfigo foli√°ceo"
  },
  {
    "code": "L10.3",
    "description": "P√©nfigo brasile√±o [fogo selvagem]"
  },
  {
    "code": "L10.4",
    "description": "P√©nfigo eritematoso"
  },
  {
    "code": "L10.5",
    "description": "P√©nfigo inducido por drogas"
  },
  {
    "code": "L10.8",
    "description": "Otros p√©nfigos"
  },
  {
    "code": "L10.9",
    "description": "P√©nfigo, no especificado"
  },
  {
    "code": "L11.0",
    "description": "Queratosis folicular adquirida"
  },
  {
    "code": "L11.1",
    "description": "Dermatosis acantol√≠tica transitoria [Grover]"
  },
  {
    "code": "L11.8",
    "description": "Otros trastornos acantol√≠ticos especificados"
  },
  {
    "code": "L11.9",
    "description": "Trastorno acantol√≠tico, no especificado"
  },
  {
    "code": "L12.0",
    "description": "Penfigoide flictenular"
  },
  {
    "code": "L12.1",
    "description": "Penfigoide cicatricial"
  },
  {
    "code": "L12.2",
    "description": "Enfermedad flictenular cr√≥nica de la infancia"
  },
  {
    "code": "L12.3",
    "description": "Epiderm√≥lisis bullosa adquirida"
  },
  {
    "code": "L12.8",
    "description": "Otros penfigoides"
  },
  {
    "code": "L12.9",
    "description": "Penfigoide, no especificado"
  },
  {
    "code": "L13.0",
    "description": "Dermatitis herpetiforme"
  },
  {
    "code": "L13.1",
    "description": "Dermatitis pustulosa subcorneal"
  },
  {
    "code": "L13.8",
    "description": "Otros trastornos flictenulares especificados"
  },
  {
    "code": "L13.9",
    "description": "Trastorno flictenular, no especificado"
  },
  {
    "code": "L20.0",
    "description": "Prurigo de Besnier"
  },
  {
    "code": "L20.8",
    "description": "Otras dermatitis at√≥picas"
  },
  {
    "code": "L20.9",
    "description": "Dermatitis at√≥pica, no especificada"
  },
  {
    "code": "L21.0",
    "description": "Seborrea capitis"
  },
  {
    "code": "L21.1",
    "description": "Dermatitis seborreica infantil"
  },
  {
    "code": "L21.8",
    "description": "Otras dermatitis seborreicas"
  },
  {
    "code": "L21.9",
    "description": "Dermatitis seborreica, no especificada"
  },
  {
    "code": "L23.0",
    "description": "Dermatitis al√©rgica de contacto debida a metales"
  },
  {
    "code": "L23.1",
    "description": "Dermatitis al√©rgica de contacto debida a adhesivos"
  },
  {
    "code": "L23.2",
    "description": "Dermatitis al√©rgica de contacto debida a cosm√©ticos"
  },
  {
    "code": "L23.3",
    "description": "Dermatitis al√©rgica de contacto debida a drogas en contacto con la piel"
  },
  {
    "code": "L23.4",
    "description": "Dermatitis al√©rgica de contacto debida a colorantes"
  },
  {
    "code": "L23.5",
    "description": "Dermatitis al√©rgica de contacto debida a otros productos qu√≠micos"
  },
  {
    "code": "L23.6",
    "description": "Dermatitis al√©rgica de contacto debida a alimentos en contacto con la piel"
  },
  {
    "code": "L23.7",
    "description": "Dermatitis al√©rgica de contacto debida a plantas, excepto las alimenticias"
  },
  {
    "code": "L23.8",
    "description": "Dermatitis al√©rgica de contacto debida a otros agentes"
  },
  {
    "code": "L23.9",
    "description": "Dermatitis al√©rgica de contacto, de causa no especificada"
  },
  {
    "code": "L24.0",
    "description": "Dermatitis de contacto por irritantes, debida a detergentes"
  },
  {
    "code": "L24.1",
    "description": "Dermatitis de contacto por irritantes, debida a aceites y grasas"
  },
  {
    "code": "L24.2",
    "description": "Dermatitis de contacto por irritantes, debida a disolventes"
  },
  {
    "code": "L24.3",
    "description": "Dermatitis de contacto por irritantes, debida a cosm√©ticos"
  },
  {
    "code": "L24.4",
    "description": "Dermatitis de contacto por irritantes, debida a drogas en contacto con la piel"
  },
  {
    "code": "L24.5",
    "description": "Dermatitis de contacto por irritantes, debida a otros productos qu√≠micos"
  },
  {
    "code": "L24.6",
    "description": "Dermatitis de contacto por irritantes, debida a alimentos en contacto con la piel"
  },
  {
    "code": "L24.7",
    "description": "Dermatitis de contacto por irritantes, debida a plantas, excepto las alimenticias"
  },
  {
    "code": "L24.8",
    "description": "Dermatitis de contacto por irritantes, debida a otros agentes"
  },
  {
    "code": "L24.9",
    "description": "Dermatitis de contacto por irritantes, de causa no especificada"
  },
  {
    "code": "L25.0",
    "description": "Dermatitis de contacto, forma no especificada, debida a cosm√©ticos"
  },
  {
    "code": "L25.1",
    "description": "Dermatitis de contacto, forma no especificada, debida a drogas en contacto con la piel"
  },
  {
    "code": "L25.2",
    "description": "Dermatitis de contacto, forma no especificada, debida a colorantes"
  },
  {
    "code": "L25.3",
    "description": "Dermatitis de contacto, forma no especificada, debida a otros productos qu√≠micos"
  },
  {
    "code": "L25.4",
    "description": "Dermatitis de contacto, forma no especificada, debida a alimentos en contacto con la piel"
  },
  {
    "code": "L25.5",
    "description": "Dermatitis de contacto, forma no especificada, debida a plantas, excepto las alimenticias"
  },
  {
    "code": "L25.8",
    "description": "Dermatitis de contacto, forma no especificada, debida a otros agentes"
  },
  {
    "code": "L25.9",
    "description": "Dermatitis de contacto, forma y causa no especificadas"
  },
  {
    "code": "L27.0",
    "description": "Erupci√≥n cut√°nea generalizada debida a drogas y medicamentos"
  },
  {
    "code": "L27.1",
    "description": "Erupci√≥n cut√°nea localizada debida a drogas y medicamentos"
  },
  {
    "code": "L27.2",
    "description": "Dermatitis debida a ingesti√≥n de alimentos"
  },
  {
    "code": "L27.8",
    "description": "Dermatitis debida a otras sustancias ingeridas"
  },
  {
    "code": "L27.9",
    "description": "Dermatitis debida a sustancias ingeridas no especificadas"
  },
  {
    "code": "L28.0",
    "description": "Liquen simple cr√≥nico"
  },
  {
    "code": "L28.1",
    "description": "Prurigo nodular"
  },
  {
    "code": "L28.2",
    "description": "Otros prurigos"
  },
  {
    "code": "L29.0",
    "description": "Prurito anal"
  },
  {
    "code": "L29.1",
    "description": "Prurito escrotal"
  },
  {
    "code": "L29.2",
    "description": "Prurito vulvar"
  },
  {
    "code": "L29.3",
    "description": "Prurito anogenital, no especificado"
  },
  {
    "code": "L29.8",
    "description": "Otros pruritos"
  },
  {
    "code": "L29.9",
    "description": "Prurito, no especificado"
  },
  {
    "code": "L30.0",
    "description": "Dermatitis numular"
  },
  {
    "code": "L30.1",
    "description": "Dishidrosis [ponf√≥lix]"
  },
  {
    "code": "L30.2",
    "description": "Autosensibilizaci√≥n cut√°nea"
  },
  {
    "code": "L30.3",
    "description": "Dermatitis infecciosa"
  },
  {
    "code": "L30.4",
    "description": "Eritema intertrigo"
  },
  {
    "code": "L30.5",
    "description": "Pitiriasis alba"
  },
  {
    "code": "L30.8",
    "description": "Otras dermatitis especificadas"
  },
  {
    "code": "L30.9",
    "description": "Dermatitis, no especificada"
  },
  {
    "code": "L40.0",
    "description": "Psoriasis vulgar"
  },
  {
    "code": "L40.1",
    "description": "Psoriasis pustulosa generalizada"
  },
  {
    "code": "L40.2",
    "description": "Acrodermatitis continua"
  },
  {
    "code": "L40.3",
    "description": "Pustulosis palmar y plantar"
  },
  {
    "code": "L40.4",
    "description": "Psoriasis guttata"
  },
  {
    "code": "L40.5",
    "description": "Artropat√≠a psori√°sica (M07.0*-M07.3*, M09.0*)"
  },
  {
    "code": "L40.8",
    "description": "Otras psoriasis"
  },
  {
    "code": "L40.9",
    "description": "Psoriasis, no especificada"
  },
  {
    "code": "L41.0",
    "description": "Pitiriasis liquenoide y varioliforme aguda"
  },
  {
    "code": "L41.1",
    "description": "Pitiriasis liquenoide cr√≥nica"
  },
  {
    "code": "L41.2",
    "description": "Papulosis linfomatoide"
  },
  {
    "code": "L41.3",
    "description": "Parapsoriasis en placas peque√±as"
  },
  {
    "code": "L41.4",
    "description": "Parapsoriasis en placas grandes"
  },
  {
    "code": "L41.5",
    "description": "Parapsoriasis retiforme"
  },
  {
    "code": "L41.8",
    "description": "Otras parapsoriasis"
  },
  {
    "code": "L41.9",
    "description": "Parapsoriasis, no especificada"
  },
  {
    "code": "L43.0",
    "description": "Liquen plano hipertr√≥fico"
  },
  {
    "code": "L43.1",
    "description": "Liquen plano flictenular"
  },
  {
    "code": "L43.2",
    "description": "Reacci√≥n liquenoide debida a drogas"
  },
  {
    "code": "L43.3",
    "description": "Liquen plano subagudo (activo)"
  },
  {
    "code": "L43.8",
    "description": "Otros l√≠quenes planos"
  },
  {
    "code": "L43.9",
    "description": "Liquen plano, no especificado"
  },
  {
    "code": "L44.0",
    "description": "Pitiriasis rubra pilaris"
  },
  {
    "code": "L44.1",
    "description": "Liquen n√≠tido"
  },
  {
    "code": "L44.2",
    "description": "Liquen estriado"
  },
  {
    "code": "L44.3",
    "description": "Liquen rojo moniliforme"
  },
  {
    "code": "L44.4",
    "description": "Acrodermatitis papular infantil [Giannotti-Crosti]"
  },
  {
    "code": "L44.8",
    "description": "Otros trastornos papuloescamosos especificados"
  },
  {
    "code": "L44.9",
    "description": "Trastorno papuloescamoso, no especificado"
  },
  {
    "code": "L50.0",
    "description": "Urticaria al√©rgica"
  },
  {
    "code": "L50.1",
    "description": "Urticaria idiop√°tica"
  },
  {
    "code": "L50.2",
    "description": "Urticaria debida al calor y al fr√≠o"
  },
  {
    "code": "L50.3",
    "description": "Urticaria dermatogr√°fica"
  },
  {
    "code": "L50.4",
    "description": "Urticaria vibratoria"
  },
  {
    "code": "L50.5",
    "description": "Urticaria colin√©rgica"
  },
  {
    "code": "L50.6",
    "description": "Urticaria por contacto"
  },
  {
    "code": "L50.8",
    "description": "Otras urticarias"
  },
  {
    "code": "L50.9",
    "description": "Urticaria, no especificada"
  },
  {
    "code": "L51.0",
    "description": "Eritema multiforme no flictenular"
  },
  {
    "code": "L51.1",
    "description": "Eritema multiforme flictenular"
  },
  {
    "code": "L51.2",
    "description": "Necr√≥lisis epid√©rmica t√≥xica [Lyell]"
  },
  {
    "code": "L51.8",
    "description": "Otros eritemas multiformes"
  },
  {
    "code": "L51.9",
    "description": "Eritema multiforme, no especificado"
  },
  {
    "code": "L53.0",
    "description": "Eritema t√≥xico"
  },
  {
    "code": "L53.1",
    "description": "Eritema anular centr√≠fugo"
  },
  {
    "code": "L53.2",
    "description": "Eritema marginado"
  },
  {
    "code": "L53.3",
    "description": "Otros eritemas figurados cr√≥nicos"
  },
  {
    "code": "L53.8",
    "description": "Otras afecciones eritematosas especificadas"
  },
  {
    "code": "L53.9",
    "description": "Afecci√≥n eritematosa, no especificada"
  },
  {
    "code": "L54.0",
    "description": "Eritema marginado en la fiebre reum√°tica aguda (I00+)"
  },
  {
    "code": "L54.8",
    "description": "Eritema en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "L55.0",
    "description": "Quemadura solar de primer grado"
  },
  {
    "code": "L55.1",
    "description": "Quemadura solar de segundo grado"
  },
  {
    "code": "L55.2",
    "description": "Quemadura solar de tercer grado"
  },
  {
    "code": "L55.8",
    "description": "Otras quemaduras solares"
  },
  {
    "code": "L55.9",
    "description": "Quemadura solar, no especificada"
  },
  {
    "code": "L56.0",
    "description": "Respuesta fotot√≥xica a drogas"
  },
  {
    "code": "L56.1",
    "description": "Respuesta fotoal√©rgica a drogas"
  },
  {
    "code": "L56.2",
    "description": "Dermatitis por fotocontacto [dermatitis de berloque]"
  },
  {
    "code": "L56.3",
    "description": "Urticaria solar"
  },
  {
    "code": "L56.4",
    "description": "Erupci√≥n polimorfa a la luz"
  },
  {
    "code": "L56.8",
    "description": "Otros cambios agudos especificados de la piel debidos a radiaci√≥n ultravioleta"
  },
  {
    "code": "L56.9",
    "description": "Cambio agudo de la piel debido a radiaci√≥n ultravioleta, sin otra especificaci√≥n"
  },
  {
    "code": "L57.0",
    "description": "Queratosis act√≠nica"
  },
  {
    "code": "L57.1",
    "description": "Reticuloide act√≠nico"
  },
  {
    "code": "L57.2",
    "description": "Piel romboidal de la nuca"
  },
  {
    "code": "L57.3",
    "description": "Poiquilodermia de Civatte"
  },
  {
    "code": "L57.4",
    "description": "Piel laxa senil"
  },
  {
    "code": "L57.5",
    "description": "Granuloma act√≠nico"
  },
  {
    "code": "L57.8",
    "description": "Otros cambios de la piel debidos a exposici√≥n cr√≥nica a radiaci√≥n no ionizante"
  },
  {
    "code": "L57.9",
    "description": "Cambios de la piel debidos a exposici√≥n cr√≥nica a radiaci√≥n no ionizante, sin otra especificaci√≥n"
  },
  {
    "code": "L58.0",
    "description": "Radiodermatitis aguda"
  },
  {
    "code": "L58.1",
    "description": "Radiodermatitis cr√≥nica"
  },
  {
    "code": "L58.9",
    "description": "Radiodermatitis, no especificada"
  },
  {
    "code": "L59.0",
    "description": "Eritema ab igne [dermatitis ab igne]"
  },
  {
    "code": "L59.8",
    "description": "Otros trastornos especificados de la piel y del tejido subcut√°neo relacionados con radiaci√≥n"
  },
  {
    "code": "L59.9",
    "description": "Trastornos no especificados de la piel y del tejido subcut√°neo relacionados con radiaci√≥n"
  },
  {
    "code": "L60.0",
    "description": "U√±a encarnada"
  },
  {
    "code": "L60.1",
    "description": "Onic√≥lisis"
  },
  {
    "code": "L60.2",
    "description": "Onicogriposis"
  },
  {
    "code": "L60.3",
    "description": "Distrofia ungueal"
  },
  {
    "code": "L60.4",
    "description": "L√≠neas de Beau"
  },
  {
    "code": "L60.5",
    "description": "S√≠ndrome de la u√±a amarilla"
  },
  {
    "code": "L60.8",
    "description": "Otros trastornos de las u√±as"
  },
  {
    "code": "L60.9",
    "description": "Trastorno de la u√±a, no especificado"
  },
  {
    "code": "L62.0",
    "description": "U√±a deforme de la paquidermoperiostosis (M89.4+)"
  },
  {
    "code": "L62.8",
    "description": "Trastornos de las u√±as en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "L63.0",
    "description": "Alopecia (capitis) total"
  },
  {
    "code": "L63.1",
    "description": "Alopecia universal"
  },
  {
    "code": "L63.2",
    "description": "Ofiasis"
  },
  {
    "code": "L63.8",
    "description": "Otras alopecias areatas"
  },
  {
    "code": "L63.9",
    "description": "Alopecia areata, no especificada"
  },
  {
    "code": "L64.0",
    "description": "Alopecia andr√≥gena, inducida por drogas"
  },
  {
    "code": "L64.8",
    "description": "Otras alopecias andr√≥genas"
  },
  {
    "code": "L64.9",
    "description": "Alopecia andr√≥gena, no especificada"
  },
  {
    "code": "L65.0",
    "description": "P√©rdida capilar tel√≥gena"
  },
  {
    "code": "L65.1",
    "description": "P√©rdida capilar an√°gena"
  },
  {
    "code": "L65.2",
    "description": "Alopecia mucinosa"
  },
  {
    "code": "L65.8",
    "description": "Otras p√©rdidas especificadas no cicatriciales del pelo"
  },
  {
    "code": "L65.9",
    "description": "P√©rdida no cicatricial del pelo, sin otra especificaci√≥n"
  },
  {
    "code": "L66.0",
    "description": "Seudopelada"
  },
  {
    "code": "L66.1",
    "description": "Liquen plano pilaris"
  },
  {
    "code": "L66.2",
    "description": "Foliculitis decalvante"
  },
  {
    "code": "L66.3",
    "description": "Perifoliculitis capitis abscedens"
  },
  {
    "code": "L66.4",
    "description": "Foliculitis uleritematosa reticulada"
  },
  {
    "code": "L66.8",
    "description": "Otras alopecias cicatriciales"
  },
  {
    "code": "L66.9",
    "description": "Alopecia cicatricial, no especificada"
  },
  {
    "code": "L67.0",
    "description": "Tricorrexis nudosa"
  },
  {
    "code": "L67.1",
    "description": "Variaci√≥n del color del pelo"
  },
  {
    "code": "L67.8",
    "description": "Otras anormalidades del tallo y del color del pelo"
  },
  {
    "code": "L67.9",
    "description": "Anormalidad no especificada del tallo y del color del pelo"
  },
  {
    "code": "L68.0",
    "description": "Hirsutismo"
  },
  {
    "code": "L68.1",
    "description": "Hipertricosis lanuginosa adquirida"
  },
  {
    "code": "L68.2",
    "description": "Hipertricosis localizada"
  },
  {
    "code": "L68.3",
    "description": "Politriquia"
  },
  {
    "code": "L68.8",
    "description": "Otras hipertricosis"
  },
  {
    "code": "L68.9",
    "description": "Hipertricosis, no especificada"
  },
  {
    "code": "L70.0",
    "description": "Acn√© vulgar"
  },
  {
    "code": "L70.1",
    "description": "Acn√© conglobado"
  },
  {
    "code": "L70.2",
    "description": "Acn√© varioliforme"
  },
  {
    "code": "L70.3",
    "description": "Acn√© tropical"
  },
  {
    "code": "L70.4",
    "description": "Acn√© infantil"
  },
  {
    "code": "L70.5",
    "description": "Acn√© excoriado de la mujer joven"
  },
  {
    "code": "L70.8",
    "description": "Otros acn√©s"
  },
  {
    "code": "L70.9",
    "description": "Acn√©, no especificado"
  },
  {
    "code": "L71.0",
    "description": "Dermatitis peribucal"
  },
  {
    "code": "L71.1",
    "description": "Rinofima"
  },
  {
    "code": "L71.8",
    "description": "Otras ros√°ceas"
  },
  {
    "code": "L71.9",
    "description": "Ros√°cea, no especificada"
  },
  {
    "code": "L72.0",
    "description": "Quiste epid√©rmico"
  },
  {
    "code": "L72.1",
    "description": "Quiste tricod√©rmico"
  },
  {
    "code": "L72.2",
    "description": "Esteatocistoma m√∫ltiple"
  },
  {
    "code": "L72.8",
    "description": "Otros quistes foliculares de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L72.9",
    "description": "Quiste folicular de la piel y del tejido subcut√°neo, sin otra especificaci√≥n"
  },
  {
    "code": "L73.0",
    "description": "Acn√© queloide"
  },
  {
    "code": "L73.1",
    "description": "Seudofoliculitis de la barba"
  },
  {
    "code": "L73.2",
    "description": "Hidradenitis supurativa"
  },
  {
    "code": "L73.8",
    "description": "Otros trastornos foliculares especificados"
  },
  {
    "code": "L73.9",
    "description": "Trastorno folicular, no especificado"
  },
  {
    "code": "L74.0",
    "description": "Miliaria rubra"
  },
  {
    "code": "L74.1",
    "description": "Miliaria cristalina"
  },
  {
    "code": "L74.2",
    "description": "Miliaria profunda"
  },
  {
    "code": "L74.3",
    "description": "Miliaria, no especificada"
  },
  {
    "code": "L74.4",
    "description": "Anhidrosis"
  },
  {
    "code": "L74.8",
    "description": "Otros trastornos sudor√≠paros ecrinos"
  },
  {
    "code": "L74.9",
    "description": "Trastorno sudor√≠paro ecrino, no especificado"
  },
  {
    "code": "L75.0",
    "description": "Bromhidrosis"
  },
  {
    "code": "L75.1",
    "description": "Cromhidrosis"
  },
  {
    "code": "L75.2",
    "description": "Miliaria apocrina"
  },
  {
    "code": "L75.8",
    "description": "Otros trastornos sudor√≠paros apocrinos"
  },
  {
    "code": "L75.9",
    "description": "Trastorno sudor√≠paro apocrino, no especificado"
  },
  {
    "code": "L81.0",
    "description": "Hiperpigmentaci√≥n postinflamatoria"
  },
  {
    "code": "L81.1",
    "description": "Cloasma"
  },
  {
    "code": "L81.2",
    "description": "Ef√©lide"
  },
  {
    "code": "L81.3",
    "description": "Manchas caf√© con leche"
  },
  {
    "code": "L81.4",
    "description": "Otros tipos de hiperpigmentaci√≥n melanod√©rmica"
  },
  {
    "code": "L81.5",
    "description": "Leucodermia, no clasificada en otra parte"
  },
  {
    "code": "L81.6",
    "description": "Otros trastornos de disminuci√≥n de la formaci√≥n de la melanina"
  },
  {
    "code": "L81.7",
    "description": "Dermatosis purp√∫rica pigmentada"
  },
  {
    "code": "L81.8",
    "description": "Otros trastornos especificados de la pigmentaci√≥n"
  },
  {
    "code": "L81.9",
    "description": "Trastorno de la pigmentaci√≥n, no especificado"
  },
  {
    "code": "L85.0",
    "description": "Ictiosis adquirida"
  },
  {
    "code": "L85.1",
    "description": "Queratosis [queratodermia] palmar y plantar adquirida"
  },
  {
    "code": "L85.2",
    "description": "Queratosis punctata (palmar y plantar)"
  },
  {
    "code": "L85.3",
    "description": "Xerosis del cutis"
  },
  {
    "code": "L85.8",
    "description": "Otros engrosamientos epid√©rmicos especificados"
  },
  {
    "code": "L85.9",
    "description": "Engrosamiento epid√©rmico, no especificado"
  },
  {
    "code": "L87.0",
    "description": "Queratosis folicular y parafolicular penetrante del cutis [Kyrle]"
  },
  {
    "code": "L87.1",
    "description": "Colagenosis perforante reactiva"
  },
  {
    "code": "L87.2",
    "description": "Elastosis serpiginosa perforante"
  },
  {
    "code": "L87.8",
    "description": "Otros trastornos de la eliminaci√≥n transepid√©rmica"
  },
  {
    "code": "L87.9",
    "description": "Trastorno de la eliminaci√≥n transepid√©rmica, no especificado"
  },
  {
    "code": "L90.0",
    "description": "Liquen escleroso y atr√≥fico"
  },
  {
    "code": "L90.1",
    "description": "Anetodermia de Schweninger-Buzzi"
  },
  {
    "code": "L90.2",
    "description": "Anetodermia de Jadassohn-Pellizzari"
  },
  {
    "code": "L90.3",
    "description": "Atrofoderma de Pasini y Pierini"
  },
  {
    "code": "L90.4",
    "description": "Acrodermatitis cr√≥nica atr√≥fica"
  },
  {
    "code": "L90.5",
    "description": "Fibrosis y afecciones cicatriciales de la piel"
  },
  {
    "code": "L90.6",
    "description": "Estr√≠as atr√≥ficas"
  },
  {
    "code": "L90.8",
    "description": "Otros trastornos atr√≥ficos de la piel"
  },
  {
    "code": "L90.9",
    "description": "Trastorno atr√≥fico de la piel, no especificado"
  },
  {
    "code": "L91.0",
    "description": "Cicatriz queloide"
  },
  {
    "code": "L91.8",
    "description": "Otros trastornos hipertr√≥ficos de la piel"
  },
  {
    "code": "L91.9",
    "description": "Trastorno hipertr√≥fico de la piel, no especificado"
  },
  {
    "code": "L92.0",
    "description": "Granuloma anular"
  },
  {
    "code": "L92.1",
    "description": "Necrobiosis lip√≠dica, no clasificada en otra parte"
  },
  {
    "code": "L92.2",
    "description": "Granuloma facial [granuloma eosin√≥filo de la piel]"
  },
  {
    "code": "L92.3",
    "description": "Granuloma por cuerpo extra√±o en la piel y en el tejido subcut√°neo"
  },
  {
    "code": "L92.8",
    "description": "Otros trastornos granulomatosos de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L92.9",
    "description": "Trastorno granulomatoso de la piel y del tejido subcut√°neo, no especificado"
  },
  {
    "code": "L93.0",
    "description": "Lupus eritematoso discoide"
  },
  {
    "code": "L93.1",
    "description": "Lupus eritematoso cut√°neo subagudo"
  },
  {
    "code": "L93.2",
    "description": "Otros lupus eritematosos localizados"
  },
  {
    "code": "L94.0",
    "description": "Escleroderma localizado [morfea]"
  },
  {
    "code": "L94.1",
    "description": "Escleroderma lineal"
  },
  {
    "code": "L94.2",
    "description": "Calcinosis de la piel"
  },
  {
    "code": "L94.3",
    "description": "Esclerodactilia"
  },
  {
    "code": "L94.4",
    "description": "P√°pulas de Gottron"
  },
  {
    "code": "L94.5",
    "description": "Poiquilodermia vascular atr√≥fica"
  },
  {
    "code": "L94.6",
    "description": "Ainhum"
  },
  {
    "code": "L94.8",
    "description": "Otros trastornos localizados especificados del tejido conjuntivo"
  },
  {
    "code": "L94.9",
    "description": "Trastorno localizado del tejido conjuntivo, no especificado"
  },
  {
    "code": "L95.0",
    "description": "Vasculitis livedoide"
  },
  {
    "code": "L95.1",
    "description": "Eritema elevatum diutinum"
  },
  {
    "code": "L95.8",
    "description": "Otras vasculitis limitadas a la piel"
  },
  {
    "code": "L95.9",
    "description": "Vasculitis limitada a la piel, sin otra especificaci√≥n"
  },
  {
    "code": "L98.0",
    "description": "Granuloma pi√≥geno"
  },
  {
    "code": "L98.1",
    "description": "Dermatitis facticia"
  },
  {
    "code": "L98.2",
    "description": "Dermatosis neutr√≥fila febril [Sweet]"
  },
  {
    "code": "L98.3",
    "description": "Celulitis eosin√≥fila [Wells]"
  },
  {
    "code": "L98.4",
    "description": "Ulcera cr√≥nica de la piel, no clasificada en otra parte"
  },
  {
    "code": "L98.5",
    "description": "Mucinosis de la piel"
  },
  {
    "code": "L98.6",
    "description": "Otros trastornos infiltrativos de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L98.8",
    "description": "Otros trastornos especificados de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L98.9",
    "description": "Trastorno de la piel y del tejido subcut√°neo, no especificado"
  },
  {
    "code": "L99.0",
    "description": "Amiloidosis de la piel (E85.-+)"
  },
  {
    "code": "L99.8",
    "description": "Otros trastornos de la piel y del tejido subcut√°neo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M00.0",
    "description": "Artritis y poliartritis estafiloc√≥cica"
  },
  {
    "code": "M00.1",
    "description": "Artritis y poliartritis neumoc√≥cica"
  },
  {
    "code": "M00.2",
    "description": "Otras artritis y poliartritis estreptoc√≥cicas"
  },
  {
    "code": "M00.8",
    "description": "Artritis y poliartritis debidas a otros agentes bacterianos especificados"
  },
  {
    "code": "M00.9",
    "description": "Artritis pi√≥gena, no especificada"
  },
  {
    "code": "M01.0",
    "description": "Artritis meningoc√≥cica (A39.8+)"
  },
  {
    "code": "M01.1",
    "description": "Artritis tuberculosa (A18.0+)"
  },
  {
    "code": "M01.2",
    "description": "Artritis en la enfermedad de Lyme (A69.2+)"
  },
  {
    "code": "M01.3",
    "description": "Artritis en otras enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "M01.4",
    "description": "Artritis en rub√©ola (B06.8+)"
  },
  {
    "code": "M01.5",
    "description": "Artritis en otras enfermedades virales clasificadas en otra parte"
  },
  {
    "code": "M01.6",
    "description": "Artritis en micosis (B35-B49+)"
  },
  {
    "code": "M01.8",
    "description": "Artritis en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "M02.0",
    "description": "Artropat√≠a consecutiva a derivaci√≥n intestinal"
  },
  {
    "code": "M02.1",
    "description": "Artropat√≠a postdisent√©rica"
  },
  {
    "code": "M02.2",
    "description": "Artropat√≠a postinmunizaci√≥n"
  },
  {
    "code": "M02.3",
    "description": "Enfermedad de Reiter"
  },
  {
    "code": "M02.8",
    "description": "Otras artropat√≠as reactivas"
  },
  {
    "code": "M02.9",
    "description": "Artropat√≠a reactiva, no especificada"
  },
  {
    "code": "M03.0",
    "description": "Artritis postmeningoc√≥cica (A39.8+)"
  },
  {
    "code": "M03.1",
    "description": "Artropat√≠a postinfecciosa en s√≠filis"
  },
  {
    "code": "M03.2",
    "description": "Otras artropat√≠as postinfecciosas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M03.6",
    "description": "Artropat√≠a reactiva en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M05.0",
    "description": "S√≠ndrome de Felty"
  },
  {
    "code": "M05.1",
    "description": "Enfermedad reumatoide del pulm√≥n (J99.0*)"
  },
  {
    "code": "M05.2",
    "description": "Vasculitis reumatoide"
  },
  {
    "code": "M05.3",
    "description": "Artritis reumatoide con compromiso de otros √≥rganos o sistemas"
  },
  {
    "code": "M05.8",
    "description": "Otras artritis reumatoideas seropositivas"
  },
  {
    "code": "M05.9",
    "description": "Artritis reumatoidea seropositiva, sin otra especificaci√≥n"
  },
  {
    "code": "M06.0",
    "description": "Artritis reumatoide seronegativa"
  },
  {
    "code": "M06.1",
    "description": "Enfermedad de Still de comienzo en el adulto"
  },
  {
    "code": "M06.2",
    "description": "Bursitis reumatoide"
  },
  {
    "code": "M06.3",
    "description": "N√≥dulo reumatoide"
  },
  {
    "code": "M06.4",
    "description": "Poliartropat√≠a inflamatoria"
  },
  {
    "code": "M06.8",
    "description": "Otras artritis reumatoides especificadas"
  },
  {
    "code": "M06.9",
    "description": "Artritis reumatoide, no especificada"
  },
  {
    "code": "M07.0",
    "description": "Artropat√≠a psori√°sica interfal√°ngica distal (L40.5+)"
  },
  {
    "code": "M07.1",
    "description": "Artritis mutilante (L40.5+)"
  },
  {
    "code": "M07.2",
    "description": "Espondilitis psori√°sica (L40.5+)"
  },
  {
    "code": "M07.3",
    "description": "Otras artropat√≠as psori√°sicas (L40.5+)"
  },
  {
    "code": "M07.4",
    "description": "Artropat√≠a en la enfermedad de Crohn [enteritis regional] (K50.-+)"
  },
  {
    "code": "M07.5",
    "description": "Artropat√≠a en la colitis ulcerativa (K51.-+)"
  },
  {
    "code": "M07.6",
    "description": "Otras artropat√≠as enterop√°ticas"
  },
  {
    "code": "M08.0",
    "description": "Artritis reumatoide juvenil"
  },
  {
    "code": "M08.1",
    "description": "Espondilitis anquilosante juvenil"
  },
  {
    "code": "M08.2",
    "description": "Artritis juvenil de comienzo generalizado"
  },
  {
    "code": "M08.3",
    "description": "Poliartritis juvenil (seronegativa)"
  },
  {
    "code": "M08.4",
    "description": "Artritis juvenil pauciarticular"
  },
  {
    "code": "M08.8",
    "description": "Otras artritis juveniles"
  },
  {
    "code": "M08.9",
    "description": "Artritis juvenil, no especificada"
  },
  {
    "code": "M09.0",
    "description": "Artritis juvenil en la psoriasis (L40.5+)"
  },
  {
    "code": "M09.1",
    "description": "Artritis juvenil en la enfermedad de Crohn [enteritis regional] (K50.-+)"
  },
  {
    "code": "M09.2",
    "description": "Artritis juvenil en la colitis ulcerativa (K51.-+)"
  },
  {
    "code": "M09.8",
    "description": "Artritis juvenil en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M10.0",
    "description": "Gota idiop√°tica"
  },
  {
    "code": "M10.1",
    "description": "Gota saturnina"
  },
  {
    "code": "M10.2",
    "description": "Gota inducida por drogas"
  },
  {
    "code": "M10.3",
    "description": "Gota debida a alteraci√≥n renal"
  },
  {
    "code": "M10.4",
    "description": "Otras gotas secundarias"
  },
  {
    "code": "M10.9",
    "description": "Gota, no especificada"
  },
  {
    "code": "M11.0",
    "description": "Enfermedad por dep√≥sito de hidroxiapatita"
  },
  {
    "code": "M11.1",
    "description": "Condrocalcinosis familiar"
  },
  {
    "code": "M11.2",
    "description": "Otras condrocalcinosis"
  },
  {
    "code": "M11.8",
    "description": "Otras artropat√≠as por cristales, especificadas"
  },
  {
    "code": "M11.9",
    "description": "Artropat√≠a por cristales, no especificada"
  },
  {
    "code": "M12.0",
    "description": "Artropat√≠a postreum√°tica cr√≥nica [de Jaccoud]"
  },
  {
    "code": "M12.1",
    "description": "Enfermedad de Kaschin-Beck"
  },
  {
    "code": "M12.2",
    "description": "Sinovitis vellonodular (pigmentada)"
  },
  {
    "code": "M12.3",
    "description": "Reumatismo palindr√≥mico"
  },
  {
    "code": "M12.4",
    "description": "Hidrartrosis intermitente"
  },
  {
    "code": "M12.5",
    "description": "Artropat√≠a traum√°tica"
  },
  {
    "code": "M12.8",
    "description": "Otras artropat√≠as espec√≠ficas, no clasificadas en otra parte"
  },
  {
    "code": "M13.0",
    "description": "Poliartritis, no especificada"
  },
  {
    "code": "M13.1",
    "description": "Monoartritis, no clasificada en otra parte"
  },
  {
    "code": "M13.8",
    "description": "Otras artritis especificadas"
  },
  {
    "code": "M13.9",
    "description": "Artritis, no especificada"
  },
  {
    "code": "M14.0",
    "description": "Artropat√≠a gotosa debida a defectos enzim√°ticos y a otros trastornos hereditarios, clasificados en otra parte"
  },
  {
    "code": "M14.1",
    "description": "Artropat√≠a por cristales en otros trastornos metab√≥licos"
  },
  {
    "code": "M14.2",
    "description": "Artropat√≠a diab√©tica (E10-E14+ con cuarto car√°cter com√∫n .6)"
  },
  {
    "code": "M14.3",
    "description": "Dermatoartritis lipoide (E78.8+)"
  },
  {
    "code": "M14.4",
    "description": "Artropat√≠a en la amiloidosis (E85.-+)"
  },
  {
    "code": "M14.5",
    "description": "Artropat√≠a en otros trastornos endocrinos, metab√≥licos y nutricionales"
  },
  {
    "code": "M14.6",
    "description": "Artropat√≠a neurop√°tica"
  },
  {
    "code": "M14.8",
    "description": "Artropat√≠a en otras enfermedades especificadas, clasificadas en otra parte"
  },
  {
    "code": "M15.0",
    "description": "(Osteo)artrosis primaria generalizada"
  },
  {
    "code": "M15.1",
    "description": "N√≥dulos de Heberden (con artropat√≠a)"
  },
  {
    "code": "M15.2",
    "description": "N√≥dulos de Bouchard (con artropat√≠a)"
  },
  {
    "code": "M15.3",
    "description": "Artrosis secundaria m√∫ltiple"
  },
  {
    "code": "M15.4",
    "description": "(Osteo)artrosis erosiva"
  },
  {
    "code": "M15.8",
    "description": "Otras poliartrosis"
  },
  {
    "code": "M15.9",
    "description": "Poliartrosis, no especificada"
  },
  {
    "code": "M16.0",
    "description": "Coxartrosis primaria, bilateral"
  },
  {
    "code": "M16.1",
    "description": "Otras coxartrosis primarias"
  },
  {
    "code": "M16.2",
    "description": "Coxartrosis a consecuencia de displasia, bilateral"
  },
  {
    "code": "M16.3",
    "description": "Otras coxartrosis displ√°sicas"
  },
  {
    "code": "M16.4",
    "description": "Coartrosis postraum√°tica, bilateral"
  },
  {
    "code": "M16.5",
    "description": "Otra coxartrosis postraum√°tica"
  },
  {
    "code": "M16.6",
    "description": "Otra coxartrosis secundaria, bilateral"
  },
  {
    "code": "M16.7",
    "description": "Otras coxartrosis secundarias"
  },
  {
    "code": "M16.9",
    "description": "Coxartrosis, no especificada"
  },
  {
    "code": "M17.0",
    "description": "Gonartrosis primaria, bilateral"
  },
  {
    "code": "M17.1",
    "description": "Otras gonartrosis primarias"
  },
  {
    "code": "M17.2",
    "description": "Gonartrosis postraum√°tica, bilateral"
  },
  {
    "code": "M17.3",
    "description": "Otras gonartrosis postraum√°ticas"
  },
  {
    "code": "M17.4",
    "description": "Otras gonartrosis secundarias, bilaterales"
  },
  {
    "code": "M17.5",
    "description": "Otras gonartrosis secundarias"
  },
  {
    "code": "M17.9",
    "description": "Gonartrosis, no especificada"
  },
  {
    "code": "M18.0",
    "description": "Artrosis primaria de la primera articulaci√≥n carpometacarpiana, bilateral"
  },
  {
    "code": "M18.1",
    "description": "Otras artrosis primarias de la primera articulaci√≥n carpometacarpiana"
  },
  {
    "code": "M18.2",
    "description": "Artrosis postraum√°tica de la primera articulaci√≥n carpometacarpiana, bilateral"
  },
  {
    "code": "M18.3",
    "description": "Otras artrosis postraum√°ticas de la primera articulaci√≥n carpometacarpiana"
  },
  {
    "code": "M18.4",
    "description": "Otras artrosis secundarias de la primera articulaci√≥n carpometacarpiana, bilaterales"
  },
  {
    "code": "M18.5",
    "description": "Otras artrosis secundarias de la primera articulaci√≥n carpometacarpiana"
  },
  {
    "code": "M18.9",
    "description": "Artrosis de la primera articulaci√≥n carpometacarpiana, sin otra especificaci√≥n"
  },
  {
    "code": "M19.0",
    "description": "Artrosis primaria de otras articulaciones"
  },
  {
    "code": "M19.1",
    "description": "Artrosis postraum√°tica de otras articulaciones"
  },
  {
    "code": "M19.2",
    "description": "Artrosis secundaria de otras articulaciones"
  },
  {
    "code": "M19.8",
    "description": "Otras artrosis especificadas"
  },
  {
    "code": "M19.9",
    "description": "Artrosis, no especificada"
  },
  {
    "code": "M20.0",
    "description": "Deformidad de dedo(s) de la mano"
  },
  {
    "code": "M20.1",
    "description": "Hallux valgus (adquirido)"
  },
  {
    "code": "M20.2",
    "description": "Hallux rigidus"
  },
  {
    "code": "M20.3",
    "description": "Otras deformidades del hallux (adquiridas)"
  },
  {
    "code": "M20.4",
    "description": "Otro(s) dedo(s) del pie en martillo (adquiridos)"
  },
  {
    "code": "M20.5",
    "description": "Otras deformidades (adquiridas) del (de los) dedo(s) del pie"
  },
  {
    "code": "M20.6",
    "description": "Deformidades adquiridas de los dedos del pie, no especificadas"
  },
  {
    "code": "M21.0",
    "description": "Deformidad en valgo, no clasificada en otra parte"
  },
  {
    "code": "M21.1",
    "description": "Deformidad en varo, no clasificada en otra parte"
  },
  {
    "code": "M21.2",
    "description": "Deformidad en flexi√≥n"
  },
  {
    "code": "M21.3",
    "description": "Mu√±eca o pie en p√©ndulo (adquirido)"
  },
  {
    "code": "M21.4",
    "description": "Pie plano [pes planus] (adquirido)"
  },
  {
    "code": "M21.5",
    "description": "Mano o pie en garra o en talipes, pie equinovaro o zambo adquiridos"
  },
  {
    "code": "M21.6",
    "description": "Otras deformidades adquiridas del tobillo y del pie"
  },
  {
    "code": "M21.7",
    "description": "Longitud desigual de los miembros (adquirida)"
  },
  {
    "code": "M21.8",
    "description": "Otras deformidades adquiridas de los miembros, especificadas"
  },
  {
    "code": "M21.9",
    "description": "Deformidad adquirida del miembro, no especificada"
  },
  {
    "code": "M22.0",
    "description": "Luxaci√≥n recidivante de la r√≥tula"
  },
  {
    "code": "M22.1",
    "description": "Subluxaci√≥n recidivante de la r√≥tula"
  },
  {
    "code": "M22.2",
    "description": "Trastornos rotulofemorales"
  },
  {
    "code": "M22.3",
    "description": "Otros desarreglos de la r√≥tula"
  },
  {
    "code": "M22.4",
    "description": "Condromalacia de la r√≥tula"
  },
  {
    "code": "M22.8",
    "description": "Otros trastornos de la r√≥tula"
  },
  {
    "code": "M22.9",
    "description": "Trastorno de la r√≥tula, no especificado"
  },
  {
    "code": "M23.0",
    "description": "Menisco qu√≠stico"
  },
  {
    "code": "M23.1",
    "description": "Menisco discoide (cong√©nito)"
  },
  {
    "code": "M23.2",
    "description": "Trastorno de menisco debido a desgarro o lesi√≥n antigua"
  },
  {
    "code": "M23.3",
    "description": "Otros trastornos de los meniscos"
  },
  {
    "code": "M23.4",
    "description": "Cuerpo flotante en la rodilla"
  },
  {
    "code": "M23.5",
    "description": "Inestabilidad cr√≥nica de la rodilla"
  },
  {
    "code": "M23.6",
    "description": "Otra ruptura espont√°nea del (de los) ligamento(s) de la rodilla"
  },
  {
    "code": "M23.8",
    "description": "Otros trastornos internos de la rodilla"
  },
  {
    "code": "M23.9",
    "description": "Trastorno interno de la rodilla, no especificado"
  },
  {
    "code": "M24.0",
    "description": "Cuerpo flotante articular"
  },
  {
    "code": "M24.1",
    "description": "Otros trastornos del cart√≠lago articular"
  },
  {
    "code": "M24.2",
    "description": "Trastorno del ligamento"
  },
  {
    "code": "M24.3",
    "description": "Luxaci√≥n y subluxaci√≥n patol√≥gica de la articulaci√≥n, no clasificada en otra parte"
  },
  {
    "code": "M24.4",
    "description": "Luxaci√≥n y subluxaci√≥n recidivante de la articulaci√≥n"
  },
  {
    "code": "M24.5",
    "description": "Contractura articular"
  },
  {
    "code": "M24.6",
    "description": "Anquilosis articular"
  },
  {
    "code": "M24.7",
    "description": "Protrusi√≥n de acet√°bulo"
  },
  {
    "code": "M24.8",
    "description": "Otras lesiones articulares espec√≠ficas, no clasificadas en otra parte"
  },
  {
    "code": "M24.9",
    "description": "Desarreglo articular, no especificado"
  },
  {
    "code": "M25.0",
    "description": "Hemartrosis"
  },
  {
    "code": "M25.1",
    "description": "F√≠stula articular"
  },
  {
    "code": "M25.2",
    "description": "Articulaci√≥n inestable"
  },
  {
    "code": "M25.3",
    "description": "Otras inestabilidades articulares"
  },
  {
    "code": "M25.4",
    "description": "Derrame articular"
  },
  {
    "code": "M25.5",
    "description": "Dolor en articulaci√≥n"
  },
  {
    "code": "M25.6",
    "description": "Rigidez articular, no clasificada en otra parte"
  },
  {
    "code": "M25.7",
    "description": "Osteofito"
  },
  {
    "code": "M25.8",
    "description": "Otros trastornos articulares especificados"
  },
  {
    "code": "M25.9",
    "description": "Trastorno articular, no especificado"
  },
  {
    "code": "M30.0",
    "description": "Poliarteritis nudosa"
  },
  {
    "code": "M30.1",
    "description": "Poliarteritis con compromiso pulmonar [Churg-Strauss]"
  },
  {
    "code": "M30.2",
    "description": "Poliarteritis juvenil"
  },
  {
    "code": "M30.3",
    "description": "S√≠ndrome mucocut√°neo linfonodular [Kawasaki]"
  },
  {
    "code": "M30.8",
    "description": "Otras afecciones relacionadas con la poliarteritis nudosa"
  },
  {
    "code": "M31.0",
    "description": "Angi√≠tis debida a hipersensibilidad"
  },
  {
    "code": "M31.1",
    "description": "Microangiopat√≠a tromb√≥tica"
  },
  {
    "code": "M31.2",
    "description": "Granuloma letal de la l√≠nea media"
  },
  {
    "code": "M31.3",
    "description": "Granulomatosis de Wegener"
  },
  {
    "code": "M31.4",
    "description": "S√≠ndrome del cayado de la aorta [Takayasu]"
  },
  {
    "code": "M31.5",
    "description": "Arteritis de c√©lulas gigantes con polimialgia reum√°tica"
  },
  {
    "code": "M31.6",
    "description": "Otras arteritis de c√©lulas gigantes"
  },
  {
    "code": "M31.8",
    "description": "Otras vasculopat√≠as necrotizantes especificadas"
  },
  {
    "code": "M31.9",
    "description": "Vasculopat√≠a necrotizante, no especificada"
  },
  {
    "code": "M32.0",
    "description": "Lupus eritematoso sist√©mico, inducido por drogas"
  },
  {
    "code": "M32.1",
    "description": "Lupus eritematoso sist√©mico con compromiso de √≥rganos o sistemas"
  },
  {
    "code": "M32.8",
    "description": "Otras formas de lupus eritematoso sist√©mico"
  },
  {
    "code": "M32.9",
    "description": "Lupus eritematoso sist√©mico, sin otra especificaci√≥n"
  },
  {
    "code": "M33.0",
    "description": "Dermatomiositis juvenil"
  },
  {
    "code": "M33.1",
    "description": "Otras dermatomiositis"
  },
  {
    "code": "M33.2",
    "description": "Polimiositis"
  },
  {
    "code": "M33.9",
    "description": "Dermatopolimiositis, no especificada"
  },
  {
    "code": "M34.0",
    "description": "Esclerosis sist√©mica progresiva"
  },
  {
    "code": "M34.1",
    "description": "S√≠ndrome CR(E)ST"
  },
  {
    "code": "M34.2",
    "description": "Esclerosis sist√©mica inducida por drogas o productos qu√≠micos"
  },
  {
    "code": "M34.8",
    "description": "Otras formas de esclerosis sist√©mica"
  },
  {
    "code": "M34.9",
    "description": "Esclerosis sist√©mica, no especificada"
  },
  {
    "code": "M35.0",
    "description": "S√≠ndrome seco [Sj√∂gren]"
  },
  {
    "code": "M35.1",
    "description": "Otros s√≠ndromes superpuestos"
  },
  {
    "code": "M35.2",
    "description": "Enfermedad de Beh√ßet"
  },
  {
    "code": "M35.3",
    "description": "Polimialgia reum√°tica"
  },
  {
    "code": "M35.4",
    "description": "Fascitis difusa (eosinof√≠lica)"
  },
  {
    "code": "M35.5",
    "description": "Fibrosclerosis multifocal"
  },
  {
    "code": "M35.6",
    "description": "Paniculitis recidivante [Weber-Christian]"
  },
  {
    "code": "M35.7",
    "description": "S√≠ndrome de hipermovilidad"
  },
  {
    "code": "M35.8",
    "description": "Otras enfermedades especificadas con compromiso sist√©mico del tejido conjuntivo"
  },
  {
    "code": "M35.9",
    "description": "Compromiso sist√©mico del tejido conjuntivo, no especificado"
  },
  {
    "code": "M36.0",
    "description": "Dermato(poli)miositis en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "M36.1",
    "description": "Artropat√≠a en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "M36.2",
    "description": "Artropat√≠a hemof√≠lica (D66-D68+)"
  },
  {
    "code": "M36.3",
    "description": "Artropat√≠a en otros trastornos de la sangre (D50-D76+)"
  },
  {
    "code": "M36.4",
    "description": "Artropat√≠a en reacciones de hipersensibilidad clasificadas en otra parte"
  },
  {
    "code": "M36.8",
    "description": "Trastornos sist√©micos del tejido conjuntivo en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M40.0",
    "description": "Cifosis postural"
  },
  {
    "code": "M40.1",
    "description": "Otras cifosis secundarias"
  },
  {
    "code": "M40.2",
    "description": "Otras cifosis y las no especificadas"
  },
  {
    "code": "M40.3",
    "description": "S√≠ndrome de espalda plana"
  },
  {
    "code": "M40.4",
    "description": "Otras lordosis"
  },
  {
    "code": "M40.5",
    "description": "Lordosis, no especificada"
  },
  {
    "code": "M41.0",
    "description": "Escoliosis idiop√°tica infantil"
  },
  {
    "code": "M41.1",
    "description": "Escoliosis idiop√°tica juvenil"
  },
  {
    "code": "M41.2",
    "description": "Otras escoliosis idiop√°ticas"
  },
  {
    "code": "M41.3",
    "description": "Escoliosis toracog√©nica"
  },
  {
    "code": "M41.4",
    "description": "Escoliosis neuromuscular"
  },
  {
    "code": "M41.5",
    "description": "Otras escoliosis secundarias"
  },
  {
    "code": "M41.8",
    "description": "Otras formas de escoliosis"
  },
  {
    "code": "M41.9",
    "description": "Escoliosis, no especificada"
  },
  {
    "code": "M42.0",
    "description": "Osteocondrosis juvenil de la columna vertebral"
  },
  {
    "code": "M42.1",
    "description": "Osteocondrosis de la columna vertebral del adulto"
  },
  {
    "code": "M42.9",
    "description": "Osteocondrosis vertebral, no especificada"
  },
  {
    "code": "M43.0",
    "description": "Espondil√≥lisis"
  },
  {
    "code": "M43.1",
    "description": "Espondilolistesis"
  },
  {
    "code": "M43.2",
    "description": "Otras fusiones de la columna vertebral"
  },
  {
    "code": "M43.3",
    "description": "Subluxaci√≥n atlanto-axoidea recurrente, con mielopat√≠a"
  },
  {
    "code": "M43.4",
    "description": "Otras subluxaciones atlanto-axoideas recurrentes"
  },
  {
    "code": "M43.5",
    "description": "Otras subluxaciones vertebrales recurrentes"
  },
  {
    "code": "M43.6",
    "description": "Tort√≠colis"
  },
  {
    "code": "M43.8",
    "description": "Otras dorsopat√≠as deformantes de la columna vertebral especificadas"
  },
  {
    "code": "M43.9",
    "description": "Dorsopat√≠a deformante, no especificada"
  },
  {
    "code": "M46.0",
    "description": "Entesopat√≠a vertebral"
  },
  {
    "code": "M46.1",
    "description": "Sacroili√≠tis, no clasificada en otra parte"
  },
  {
    "code": "M46.2",
    "description": "Osteomielitis de v√©rtebra"
  },
  {
    "code": "M46.3",
    "description": "Infecci√≥n de disco intervertebral (pi√≥gena)"
  },
  {
    "code": "M46.4",
    "description": "Discitis, no especificada"
  },
  {
    "code": "M46.5",
    "description": "Otras espondilopat√≠as infecciosas"
  },
  {
    "code": "M46.8",
    "description": "Otras espondilopat√≠as inflamatorias especificadas"
  },
  {
    "code": "M46.9",
    "description": "Espondilopat√≠a inflamatoria, no especificada"
  },
  {
    "code": "M47.0",
    "description": "S√≠ndromes de compresi√≥n de la arteria espinal o vertebral anterior (G99.2*)"
  },
  {
    "code": "M47.1",
    "description": "Otras espondilosis con mielopat√≠a"
  },
  {
    "code": "M47.2",
    "description": "Otras espondilosis con radiculopat√≠a"
  },
  {
    "code": "M47.8",
    "description": "Otras espondilosis"
  },
  {
    "code": "M47.9",
    "description": "Espondilosis, no especificada"
  },
  {
    "code": "M48.0",
    "description": "Estenosis espinal"
  },
  {
    "code": "M48.1",
    "description": "Hiperostosis anquilosante [Forestier]"
  },
  {
    "code": "M48.2",
    "description": "Espondilopat√≠a interespinosa (v√©rtebras \"en beso\")"
  },
  {
    "code": "M48.3",
    "description": "Espondilopat√≠a traum√°tica"
  },
  {
    "code": "M48.4",
    "description": "Fractura de v√©rtebra por fatiga"
  },
  {
    "code": "M48.5",
    "description": "V√©rtebra colapsada, no clasificada en otra parte"
  },
  {
    "code": "M48.8",
    "description": "Otras espondilopat√≠as especificadas"
  },
  {
    "code": "M48.9",
    "description": "Espondilopat√≠a, no especificada"
  },
  {
    "code": "M49.0",
    "description": "Tuberculosis de la columna vertebral (A18.0+)"
  },
  {
    "code": "M49.1",
    "description": "Espondilitis por brucelosis (A23.-+)"
  },
  {
    "code": "M49.2",
    "description": "Espondilitis por enterobacterias (A01-A04+)"
  },
  {
    "code": "M49.3",
    "description": "Espondilopat√≠a en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "M49.4",
    "description": "Espondilopat√≠a neurop√°tica"
  },
  {
    "code": "M49.5",
    "description": "V√©rtebra colapsada en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M49.8",
    "description": "Espondilopat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M50.0",
    "description": "Trastorno de disco cervical con mielopat√≠a (G99.2*)"
  },
  {
    "code": "M50.1",
    "description": "Trastorno de disco cervical con radiculopat√≠a"
  },
  {
    "code": "M50.2",
    "description": "Otros desplazamientos de disco cervical"
  },
  {
    "code": "M50.3",
    "description": "Otras degeneraciones de disco cervical"
  },
  {
    "code": "M50.8",
    "description": "Otros trastornos de disco cervical"
  },
  {
    "code": "M50.9",
    "description": "Trastorno de disco cervical, no especificado"
  },
  {
    "code": "M51.0",
    "description": "Trastornos de discos intervertebrales lumbares y otros, con mielopat√≠a (G99.2*)"
  },
  {
    "code": "M51.1",
    "description": "Trastornos de disco lumbar y otros, con radiculopat√≠a"
  },
  {
    "code": "M51.2",
    "description": "Otros desplazamientos especificados de disco intervertebral"
  },
  {
    "code": "M51.3",
    "description": "Otras degeneraciones especificadas de disco intervertebral"
  },
  {
    "code": "M51.4",
    "description": "N√≥dulos de Schmorl"
  },
  {
    "code": "M51.8",
    "description": "Otros trastornos especificados de los discos intervertebrales"
  },
  {
    "code": "M51.9",
    "description": "Trastorno de los discos intervertebrales, no especificado"
  },
  {
    "code": "M53.0",
    "description": "S√≠ndrome cervicocraneal"
  },
  {
    "code": "M53.1",
    "description": "S√≠ndrome cervicobraquial"
  },
  {
    "code": "M53.2",
    "description": "Inestabilidad de la columna vertebral"
  },
  {
    "code": "M53.3",
    "description": "Trastornos sacrococc√≠geos, no clasificados en otra parte"
  },
  {
    "code": "M53.8",
    "description": "Otras dorsopat√≠as especificadas"
  },
  {
    "code": "M53.9",
    "description": "Dorsopat√≠a, no especificada"
  },
  {
    "code": "M54.0",
    "description": "Paniculitis que afecta regiones del cuello y de la espalda"
  },
  {
    "code": "M54.1",
    "description": "Radiculopat√≠a"
  },
  {
    "code": "M54.2",
    "description": "Cervicalgia"
  },
  {
    "code": "M54.3",
    "description": "Ci√°tica"
  },
  {
    "code": "M54.4",
    "description": "Lumbago con ci√°tica"
  },
  {
    "code": "M54.5",
    "description": "Lumbago no especificado"
  },
  {
    "code": "M54.6",
    "description": "Dolor en la columna dorsal"
  },
  {
    "code": "M54.8",
    "description": "Otras dorsalgias"
  },
  {
    "code": "M54.9",
    "description": "Dorsalgia, no especificada"
  },
  {
    "code": "M60.0",
    "description": "Miositis infecciosa"
  },
  {
    "code": "M60.1",
    "description": "Miositis intersticial"
  },
  {
    "code": "M60.2",
    "description": "Granuloma por cuerpo extra√±o en tejido blando, no clasificado en otra parte"
  },
  {
    "code": "M60.8",
    "description": "Otras miositis"
  },
  {
    "code": "M60.9",
    "description": "Miositis, no especificada"
  },
  {
    "code": "M61.0",
    "description": "Miositis osificante traum√°tica"
  },
  {
    "code": "M61.1",
    "description": "Miositis osificante progresiva"
  },
  {
    "code": "M61.2",
    "description": "Calcificaci√≥n y osificaci√≥n paral√≠tica del m√∫sculo"
  },
  {
    "code": "M61.3",
    "description": "Calcificaci√≥n y osificaci√≥n de los m√∫sculos asociadas con quemaduras"
  },
  {
    "code": "M61.4",
    "description": "Otras calcificaciones del m√∫sculo"
  },
  {
    "code": "M61.5",
    "description": "Otras osificaciones del m√∫sculo"
  },
  {
    "code": "M61.9",
    "description": "Calcificaci√≥n y osificaci√≥n del m√∫sculo, no especificada"
  },
  {
    "code": "M62.0",
    "description": "Di√°stasis del m√∫sculo"
  },
  {
    "code": "M62.1",
    "description": "Otros desgarros (no traum√°ticos) del m√∫sculo"
  },
  {
    "code": "M62.2",
    "description": "Infarto isqu√©mico del m√∫sculo"
  },
  {
    "code": "M62.3",
    "description": "S√≠ndrome de inmovilidad (parapl√©jico)"
  },
  {
    "code": "M62.4",
    "description": "Contractura muscular"
  },
  {
    "code": "M62.5",
    "description": "Atrofia y desgaste musculares, no clasificados en otra parte"
  },
  {
    "code": "M62.6",
    "description": "Distensi√≥n muscular"
  },
  {
    "code": "M62.8",
    "description": "Otros trastornos especificados de los m√∫sculos"
  },
  {
    "code": "M62.9",
    "description": "Trastorno muscular, no especificado"
  },
  {
    "code": "M63.0",
    "description": "Miositis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "M63.1",
    "description": "Miositis en infecciones por protozoarios y par√°sitos clasificadas en otra parte"
  },
  {
    "code": "M63.2",
    "description": "Miositis en otras enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "M63.3",
    "description": "Miositis en sarcoidosis (D86.8+)"
  },
  {
    "code": "M63.8",
    "description": "Otros trastornos de los m√∫sculos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M65.0",
    "description": "Absceso de vaina tendinosa"
  },
  {
    "code": "M65.1",
    "description": "Otras (teno)sinovitis infecciosas"
  },
  {
    "code": "M65.2",
    "description": "Tendinitis calcificada"
  },
  {
    "code": "M65.3",
    "description": "Dedo en gatillo"
  },
  {
    "code": "M65.4",
    "description": "Tenosinovitis de estiloides radial [de Quervain]"
  },
  {
    "code": "M65.8",
    "description": "Otras sinovitis y tenosinovitis"
  },
  {
    "code": "M65.9",
    "description": "Sinovitis y tenosinovitis, no especificada"
  },
  {
    "code": "M66.0",
    "description": "Ruptura de quiste sinovial popl√≠teo"
  },
  {
    "code": "M66.1",
    "description": "Ruptura de la sinovia"
  },
  {
    "code": "M66.2",
    "description": "Ruptura espont√°nea de tendones extensores"
  },
  {
    "code": "M66.3",
    "description": "Ruptura espont√°nea de tendones flexores"
  },
  {
    "code": "M66.4",
    "description": "Ruptura espont√°nea de otros tendones"
  },
  {
    "code": "M66.5",
    "description": "Ruptura espont√°nea de tend√≥n no especificado"
  },
  {
    "code": "M67.0",
    "description": "Acortamiento del tend√≥n de Aquiles (adquirido)"
  },
  {
    "code": "M67.1",
    "description": "Otras contracturas de tend√≥n (vaina)"
  },
  {
    "code": "M67.2",
    "description": "Hipertrofia sinovial, no clasificada en otra parte"
  },
  {
    "code": "M67.3",
    "description": "Sinovitis transitoria"
  },
  {
    "code": "M67.4",
    "description": "Gangli√≥n"
  },
  {
    "code": "M67.8",
    "description": "Otros trastornos especificados de la sinovia y del tend√≥n"
  },
  {
    "code": "M67.9",
    "description": "Trastorno sinovial y tendinoso, no especificado"
  },
  {
    "code": "M68.0",
    "description": "Sinovitis y tenosinovitis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "M68.8",
    "description": "Otros trastornos sinoviales y tendinosos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M70.0",
    "description": "Sinovitis crepitante cr√≥nica de la mano y de la mu√±eca"
  },
  {
    "code": "M70.1",
    "description": "Bursitis de la mano"
  },
  {
    "code": "M70.2",
    "description": "Bursitis del ol√©cranon"
  },
  {
    "code": "M70.3",
    "description": "Otras bursitis del codo"
  },
  {
    "code": "M70.4",
    "description": "Otras bursitis prerrotulianas"
  },
  {
    "code": "M70.5",
    "description": "Otras bursitis de la rodilla"
  },
  {
    "code": "M70.6",
    "description": "Bursitis del troc√°nter"
  },
  {
    "code": "M70.7",
    "description": "Otras bursitis de la cadera"
  },
  {
    "code": "M70.8",
    "description": "Otros trastornos de los tejidos blandos relacionados con el uso, el uso excesivo y la presi√≥n"
  },
  {
    "code": "M70.9",
    "description": "Trastorno no especificado de los tejidos blandos relacionado con el uso, el uso excesivo y la presi√≥n"
  },
  {
    "code": "M71.0",
    "description": "Absceso de la bolsa sinovial"
  },
  {
    "code": "M71.1",
    "description": "Otras bursitis infecciosas"
  },
  {
    "code": "M71.2",
    "description": "Quiste sinovial del hueco popl√≠teo [de Baker]"
  },
  {
    "code": "M71.3",
    "description": "Otros quistes de la bolsa serosa"
  },
  {
    "code": "M71.4",
    "description": "Dep√≥sito de calcio en la bolsa serosa"
  },
  {
    "code": "M71.5",
    "description": "Otras bursitis, no clasificadas en otra parte"
  },
  {
    "code": "M71.8",
    "description": "Otros trastornos especificados de la bolsa serosa"
  },
  {
    "code": "M71.9",
    "description": "Bursopat√≠a, no especificada"
  },
  {
    "code": "M72.0",
    "description": "Fibromatosis de la aponeurosis palmar [Dupuytren]"
  },
  {
    "code": "M72.1",
    "description": "N√≥dulos interfal√°ngicos"
  },
  {
    "code": "M72.2",
    "description": "Fibromatosis de la aponeurosis plantar"
  },
  {
    "code": "M72.3",
    "description": "Fascitis nodular"
  },
  {
    "code": "M72.4",
    "description": "Fibromatosis seudosarcomatosa"
  },
  {
    "code": "M72.5",
    "description": "Fascitis, no clasificada en otra parte"
  },
  {
    "code": "M72.8",
    "description": "Otros trastornos fibrobl√°sticos"
  },
  {
    "code": "M72.9",
    "description": "Trastorno fibrobl√°stico, no especificado"
  },
  {
    "code": "M73.0",
    "description": "Bursitis gonoc√≥cica (A54.4+)"
  },
  {
    "code": "M73.1",
    "description": "Bursitis sifil√≠tica (A52.7+)"
  },
  {
    "code": "M73.8",
    "description": "Otros trastornos de los tejidos blandos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M75.0",
    "description": "Capsulitis adhesiva del hombro"
  },
  {
    "code": "M75.1",
    "description": "S√≠ndrome del manguito rotatorio"
  },
  {
    "code": "M75.2",
    "description": "Tendinitis del b√≠ceps"
  },
  {
    "code": "M75.3",
    "description": "Tendinitis calcificante del hombro"
  },
  {
    "code": "M75.4",
    "description": "S√≠ndrome de abducci√≥n dolorosa del hombro"
  },
  {
    "code": "M75.5",
    "description": "Bursitis del hombro"
  },
  {
    "code": "M75.8",
    "description": "Otras lesiones del hombro"
  },
  {
    "code": "M75.9",
    "description": "Lesi√≥n del hombro, no especificada"
  },
  {
    "code": "M76.0",
    "description": "Tendinitis del gl√∫teo"
  },
  {
    "code": "M76.1",
    "description": "Tendinitis del psoas"
  },
  {
    "code": "M76.2",
    "description": "Espol√≥n de la cresta iliaca"
  },
  {
    "code": "M76.3",
    "description": "S√≠ndrome del tend√≥n del tensor de la fascia lata"
  },
  {
    "code": "M76.4",
    "description": "Bursitis tibial colateral [Pellegrini-Stieda]"
  },
  {
    "code": "M76.5",
    "description": "Tendinitis rotuliana"
  },
  {
    "code": "M76.6",
    "description": "Tendinitis aquiliana"
  },
  {
    "code": "M76.7",
    "description": "Tendinitis peroneal"
  },
  {
    "code": "M76.8",
    "description": "Otras entesopat√≠as del miembro inferior, excluido el pie"
  },
  {
    "code": "M76.9",
    "description": "Entesopat√≠a del miembro inferior, no especificada"
  },
  {
    "code": "M77.0",
    "description": "Epicondilitis media"
  },
  {
    "code": "M77.1",
    "description": "Epicondilitis lateral"
  },
  {
    "code": "M77.2",
    "description": "Periartritis de la mu√±eca"
  },
  {
    "code": "M77.3",
    "description": "Espol√≥n calc√°neo"
  },
  {
    "code": "M77.4",
    "description": "Metatarsalgia"
  },
  {
    "code": "M77.5",
    "description": "Otras entesopat√≠as del pie"
  },
  {
    "code": "M77.8",
    "description": "Otras entesopat√≠as, no clasificadas en otra parte"
  },
  {
    "code": "M77.9",
    "description": "Entesopat√≠a, no especificada"
  },
  {
    "code": "M79.0",
    "description": "Reumatismo, no especificado"
  },
  {
    "code": "M79.1",
    "description": "Mialgia"
  },
  {
    "code": "M79.2",
    "description": "Neuralgia y neuritis, no especificadas"
  },
  {
    "code": "M79.3",
    "description": "Paniculitis, no especificada"
  },
  {
    "code": "M79.4",
    "description": "Hipertrofia de paquete adiposo (infrarrotuliano)"
  },
  {
    "code": "M79.5",
    "description": "Cuerpo extra√±o residual en tejido blando"
  },
  {
    "code": "M79.6",
    "description": "Dolor en miembro"
  },
  {
    "code": "M79.8",
    "description": "Otros trastornos especificados de los tejidos blandos"
  },
  {
    "code": "M79.9",
    "description": "Trastorno de los tejidos blandos, no especificado"
  },
  {
    "code": "M80.0",
    "description": "Osteoporosis postmenop√°usica, con fractura patol√≥gica"
  },
  {
    "code": "M80.1",
    "description": "Osteoporosis postooforectom√≠a, con fractura patol√≥gica"
  },
  {
    "code": "M80.2",
    "description": "Osteoporosis por desuso, con fractura patol√≥gica"
  },
  {
    "code": "M80.3",
    "description": "Osteoporosis por malabsorci√≥n postquir√∫rgica, con fractura patol√≥gica"
  },
  {
    "code": "M80.4",
    "description": "Osteoporosis inducida por drogas, con fractura patol√≥gica"
  },
  {
    "code": "M80.5",
    "description": "Osteoporosis idiop√°tica, con fractura patol√≥gica"
  },
  {
    "code": "M80.8",
    "description": "Otras osteoporosis, con fractura patol√≥gica"
  },
  {
    "code": "M80.9",
    "description": "Osteoporosis no especificada, con fractura patol√≥gica"
  },
  {
    "code": "M81.0",
    "description": "Osteoporosis postmenop√°usica, sin fractura patol√≥gica"
  },
  {
    "code": "M81.1",
    "description": "Osteoporosis postooforectom√≠a, sin fractura patol√≥gica"
  },
  {
    "code": "M81.2",
    "description": "Osteoporosis por desuso, sin fractura patol√≥gica"
  },
  {
    "code": "M81.3",
    "description": "Osteoporosis por malabsorci√≥n postquir√∫rgica, sin fractura patol√≥gica"
  },
  {
    "code": "M81.4",
    "description": "Osteoporosis inducida por drogas, sin fractura patol√≥gica"
  },
  {
    "code": "M81.5",
    "description": "Osteoporosis idiop√°tica, sin fractura patol√≥gica"
  },
  {
    "code": "M81.6",
    "description": "Osteoporosis localizada [Lequesne], sin fractura patol√≥gica"
  },
  {
    "code": "M81.8",
    "description": "Otras osteoporosis, sin fractura patol√≥gica"
  },
  {
    "code": "M81.9",
    "description": "Osteoporosis no especificada, sin fractura patol√≥gica"
  },
  {
    "code": "M82.0",
    "description": "Osteoporosis en mielomatosis m√∫ltiple (C90.0+)"
  },
  {
    "code": "M82.1",
    "description": "Osteoporosis en trastornos endocrinos (E00-E34+)"
  },
  {
    "code": "M82.8",
    "description": "Osteoporosis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M83.0",
    "description": "Osteomalacia puerperal"
  },
  {
    "code": "M83.1",
    "description": "Osteomalacia senil"
  },
  {
    "code": "M83.2",
    "description": "Osteomalacia del adulto debida a malabsorci√≥n"
  },
  {
    "code": "M83.3",
    "description": "Osteomalacia del adulto debida a desnutrici√≥n"
  },
  {
    "code": "M83.4",
    "description": "Enfermedad de los huesos por aluminio"
  },
  {
    "code": "M83.5",
    "description": "Otras osteomalacias del adulto inducidas por drogas"
  },
  {
    "code": "M83.8",
    "description": "Otras osteomalacias del adulto"
  },
  {
    "code": "M83.9",
    "description": "Osteomalacia del adulto, no especificada"
  },
  {
    "code": "M84.0",
    "description": "Consolidaci√≥n defectuosa de fractura"
  },
  {
    "code": "M84.1",
    "description": "Falta de consolidaci√≥n de fractura [seudoartrosis]"
  },
  {
    "code": "M84.2",
    "description": "Consolidaci√≥n retardada de fractura"
  },
  {
    "code": "M84.3",
    "description": "Fractura por tensi√≥n, no clasificada en otra parte"
  },
  {
    "code": "M84.4",
    "description": "Fractura patol√≥gica, no clasificada en otra parte"
  },
  {
    "code": "M84.8",
    "description": "Otros trastornos de la continuidad del hueso"
  },
  {
    "code": "M84.9",
    "description": "Trastorno de la continuidad del hueso, no especificado"
  },
  {
    "code": "M85.0",
    "description": "Displasia fibrosa (monost√≥tica)"
  },
  {
    "code": "M85.1",
    "description": "Fluorosis del esqueleto"
  },
  {
    "code": "M85.2",
    "description": "Hiperostosis del cr√°neo"
  },
  {
    "code": "M85.3",
    "description": "Oste√≠tis condensante"
  },
  {
    "code": "M85.4",
    "description": "Quiste √≥seo solitario"
  },
  {
    "code": "M85.5",
    "description": "Quiste √≥seo aneurism√°tico"
  },
  {
    "code": "M85.6",
    "description": "Otros quistes √≥seos"
  },
  {
    "code": "M85.8",
    "description": "Otros trastornos especificados de la densidad y de la estructura √≥seas"
  },
  {
    "code": "M85.9",
    "description": "Trastorno de la densidad y de la estructura √≥seas, no especificado"
  },
  {
    "code": "M86.0",
    "description": "Osteomielitis hemat√≥gena aguda"
  },
  {
    "code": "M86.1",
    "description": "Otras osteomielitis agudas"
  },
  {
    "code": "M86.2",
    "description": "Osteomielitis subaguda"
  },
  {
    "code": "M86.3",
    "description": "Osteomielitis multifocal cr√≥nica"
  },
  {
    "code": "M86.4",
    "description": "Osteomielitis cr√≥nica con drenaje del seno"
  },
  {
    "code": "M86.5",
    "description": "Otras osteomielitis hemat√≥genas cr√≥nicas"
  },
  {
    "code": "M86.6",
    "description": "Otras osteomielitis cr√≥nicas"
  },
  {
    "code": "M86.8",
    "description": "Otras osteomielitis"
  },
  {
    "code": "M86.9",
    "description": "Osteomielitis, no especificada"
  },
  {
    "code": "M87.0",
    "description": "Necrosis as√©ptica idiop√°tica √≥sea"
  },
  {
    "code": "M87.1",
    "description": "Osteonecrosis debida a drogas"
  },
  {
    "code": "M87.2",
    "description": "Osteonecrosis debida a traumatismo previo"
  },
  {
    "code": "M87.3",
    "description": "Otras osteonecrosis secundarias"
  },
  {
    "code": "M87.8",
    "description": "Otras osteonecrosis"
  },
  {
    "code": "M87.9",
    "description": "Osteonecrosis, no especificada"
  },
  {
    "code": "M88.0",
    "description": "Enfermedad de Paget del cr√°neo"
  },
  {
    "code": "M88.8",
    "description": "Enfermedad de Paget de otros huesos"
  },
  {
    "code": "M88.9",
    "description": "Enfermedad √≥sea de Paget, huesos no especificados"
  },
  {
    "code": "M89.0",
    "description": "Algoneurodistrofia"
  },
  {
    "code": "M89.1",
    "description": "Detenci√≥n del crecimiento epifisario"
  },
  {
    "code": "M89.2",
    "description": "Otros trastornos del desarrollo y crecimiento √≥seo"
  },
  {
    "code": "M89.3",
    "description": "Hipertrofia del hueso"
  },
  {
    "code": "M89.4",
    "description": "Otras osteoartropat√≠as hipertr√≥ficas"
  },
  {
    "code": "M89.5",
    "description": "Oste√≥lisis"
  },
  {
    "code": "M89.6",
    "description": "Osteopat√≠a a consecuencia de poliomielitis"
  },
  {
    "code": "M89.8",
    "description": "Otros trastornos especificados del hueso"
  },
  {
    "code": "M89.9",
    "description": "Trastorno del hueso, no especificado"
  },
  {
    "code": "M90.0",
    "description": "Tuberculosis √≥sea (A18.0+)"
  },
  {
    "code": "M90.1",
    "description": "Periostitis en otras enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "M90.2",
    "description": "Osteopat√≠a en otras enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "M90.3",
    "description": "Osteonecrosis en la enfermedad causada por descompresi√≥n (T70.3+)"
  },
  {
    "code": "M90.4",
    "description": "Osteonecrosis debida a hemoglobinopat√≠a (D50-D64+)"
  },
  {
    "code": "M90.5",
    "description": "Osteonecrosis en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M90.6",
    "description": "Oste√≠tis deformante en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "M90.7",
    "description": "Fractura √≥sea en enfermedad neopl√°sica (C00-D48+)"
  },
  {
    "code": "M90.8",
    "description": "Osteopat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M91.0",
    "description": "Osteocondrosis juvenil de la pelvis"
  },
  {
    "code": "M91.1",
    "description": "Osteocondrosis juvenil de la cabeza del f√©mur [Legg-Calv√©-Perthes]"
  },
  {
    "code": "M91.2",
    "description": "Coxa plana"
  },
  {
    "code": "M91.3",
    "description": "Pseudocoxalgia"
  },
  {
    "code": "M91.8",
    "description": "Otras osteocondrosis juveniles de la cadera y de la pelvis"
  },
  {
    "code": "M91.9",
    "description": "Osteocondrosis juvenil de la cadera y de la pelvis, sin otra especificaci√≥n"
  },
  {
    "code": "M92.0",
    "description": "Osteocondrosis juvenil del h√∫mero"
  },
  {
    "code": "M92.1",
    "description": "Osteocondrosis juvenil del c√∫bito y del radio"
  },
  {
    "code": "M92.2",
    "description": "Osteocondrosis juvenil de la mano"
  },
  {
    "code": "M92.3",
    "description": "Otras osteocondrosis juveniles del miembro superior"
  },
  {
    "code": "M92.4",
    "description": "Osteocondrosis juvenil de la r√≥tula"
  },
  {
    "code": "M92.5",
    "description": "Osteocondrosis juvenil de la tibia y del peron√©"
  },
  {
    "code": "M92.6",
    "description": "Osteocondrosis juvenil del tarso"
  },
  {
    "code": "M92.7",
    "description": "Osteocondrosis juvenil del metatarso"
  },
  {
    "code": "M92.8",
    "description": "Otras osteocondrosis juveniles especificadas"
  },
  {
    "code": "M92.9",
    "description": "Osteocondrosis juvenil, no especificada"
  },
  {
    "code": "M93.0",
    "description": "Deslizamiento de la ep√≠fisis femoral superior (no traum√°tico)"
  },
  {
    "code": "M93.1",
    "description": "Enfermedad de Kienb√∂ck del adulto"
  },
  {
    "code": "M93.2",
    "description": "Osteocondritis disecante"
  },
  {
    "code": "M93.8",
    "description": "Otras osteocondropat√≠as especificadas"
  },
  {
    "code": "M93.9",
    "description": "Osteocondropat√≠a, no especificada"
  },
  {
    "code": "M94.0",
    "description": "S√≠ndrome de la articulaci√≥n condrocostal [Tietze]"
  },
  {
    "code": "M94.1",
    "description": "Policondritis recidivante"
  },
  {
    "code": "M94.2",
    "description": "Condromalacia"
  },
  {
    "code": "M94.3",
    "description": "Condr√≥lisis"
  },
  {
    "code": "M94.8",
    "description": "Otros trastornos especificados del cart√≠lago"
  },
  {
    "code": "M94.9",
    "description": "Trastorno del cart√≠lago, no especificado"
  },
  {
    "code": "M95.0",
    "description": "Deformidad adquirida de la nariz"
  },
  {
    "code": "M95.1",
    "description": "Oreja en coliflor"
  },
  {
    "code": "M95.2",
    "description": "Otras deformidades adquiridas de la cabeza"
  },
  {
    "code": "M95.3",
    "description": "Deformidad adquirida del cuello"
  },
  {
    "code": "M95.4",
    "description": "Deformidad adquirida de costillas y t√≥rax"
  },
  {
    "code": "M95.5",
    "description": "Deformidad adquirida de la pelvis"
  },
  {
    "code": "M95.8",
    "description": "Otras deformidades adquiridas especificadas del sistema osteomuscular"
  },
  {
    "code": "M95.9",
    "description": "Deformidad adquirida del sistema osteomuscular, no especificada"
  },
  {
    "code": "M96.0",
    "description": "Seudoartrosis consecutiva a fusi√≥n o artrodesis"
  },
  {
    "code": "M96.1",
    "description": "S√≠ndrome postlaminectom√≠a, no clasificado en otra parte"
  },
  {
    "code": "M96.2",
    "description": "Cifosis postradiaci√≥n"
  },
  {
    "code": "M96.3",
    "description": "Cifosis postlaminectom√≠a"
  },
  {
    "code": "M96.4",
    "description": "Lordosis postquir√∫rgica"
  },
  {
    "code": "M96.5",
    "description": "Escoliosis postradiaci√≥n"
  },
  {
    "code": "M96.6",
    "description": "Fractura de hueso posterior a inserci√≥n o implante ortop√©dico, pr√≥tesis articular o placa √≥sea"
  },
  {
    "code": "M96.8",
    "description": "Otros trastornos osteomusculares consecutivos a procedimientos"
  },
  {
    "code": "M96.9",
    "description": "Trastornos osteomusculares no especificados consecutivos a procedimientos"
  },
  {
    "code": "M99.0",
    "description": "Disfunci√≥n segmental o som√°tica"
  },
  {
    "code": "M99.1",
    "description": "Complejo de subluxaci√≥n (vertebral)"
  },
  {
    "code": "M99.2",
    "description": "Subluxaci√≥n con estenosis del canal neural"
  },
  {
    "code": "M99.3",
    "description": "Estenosis √≥sea del canal neural"
  },
  {
    "code": "M99.4",
    "description": "Estenosis del canal neural por tejido conjuntivo"
  },
  {
    "code": "M99.5",
    "description": "Estenosis del canal neural por disco intervertebral"
  },
  {
    "code": "M99.6",
    "description": "Estenosis √≥sea y subluxaci√≥n de los agujeros intervertebrales"
  },
  {
    "code": "M99.7",
    "description": "Estenosis de los agujeros intervertebrales por tejido conjuntivo o por disco intervertebral"
  },
  {
    "code": "M99.8",
    "description": "Otras lesiones biomec√°nicas"
  },
  {
    "code": "M99.9",
    "description": "Lesi√≥n biomec√°nica, no especificada"
  },
  {
    "code": "N00.0",
    "description": "S√≠ndrome nefr√≠tico agudo, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N00.1",
    "description": "S√≠ndrome nefr√≠tico agudo, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N00.2",
    "description": "S√≠ndrome nefr√≠tico agudo, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N00.3",
    "description": "S√≠ndrome nefr√≠tico agudo, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N00.4",
    "description": "S√≠ndrome nefr√≠tico agudo, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N00.5",
    "description": "S√≠ndrome nefr√≠tico agudo, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N00.6",
    "description": "S√≠ndrome nefr√≠tico agudo, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N00.7",
    "description": "S√≠ndrome nefr√≠tico agudo, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N00.8",
    "description": "S√≠ndrome nefr√≠tico agudo, otras"
  },
  {
    "code": "N00.9",
    "description": "S√≠ndrome nefr√≠tico agudo, no especificada"
  },
  {
    "code": "N01.0",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N01.1",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N01.2",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N01.3",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N01.4",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N01.5",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N01.6",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N01.7",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N01.8",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, otras"
  },
  {
    "code": "N01.9",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo, no especificada"
  },
  {
    "code": "N02.0",
    "description": "Hematuria recurrente y persistente, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N02.1",
    "description": "Hematuria recurrente y persistente, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N02.2",
    "description": "Hematuria recurrente y persistente, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N02.3",
    "description": "Hematuria recurrente y persistente, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N02.4",
    "description": "Hematuria recurrente y persistente, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N02.5",
    "description": "Hematuria recurrente y persistente, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N02.6",
    "description": "Hematuria recurrente y persistente, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N02.7",
    "description": "Hematuria recurrente y persistente, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N02.8",
    "description": "Hematuria recurrente y persistente, otras"
  },
  {
    "code": "N02.9",
    "description": "Hematuria recurrente y persistente, no especificada"
  },
  {
    "code": "N03.0",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N03.1",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N03.2",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N03.3",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N03.4",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N03.5",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N03.6",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N03.7",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N03.8",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, otras"
  },
  {
    "code": "N03.9",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico, no especificada"
  },
  {
    "code": "N04.0",
    "description": "S√≠ndrome nefr√≥tico, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N04.1",
    "description": "S√≠ndrome nefr√≥tico, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N04.2",
    "description": "S√≠ndrome nefr√≥tico, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N04.3",
    "description": "S√≠ndrome nefr√≥tico, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N04.4",
    "description": "S√≠ndrome nefr√≥tico, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N04.5",
    "description": "S√≠ndrome nefr√≥tico, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N04.6",
    "description": "S√≠ndrome nefr√≥tico, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N04.7",
    "description": "S√≠ndrome nefr√≥tico, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N04.8",
    "description": "S√≠ndrome nefr√≥tico, otras"
  },
  {
    "code": "N04.9",
    "description": "S√≠ndrome nefr√≥tico, no especificada"
  },
  {
    "code": "N05.0",
    "description": "S√≠ndrome nefr√≠tico no especificado, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N05.1",
    "description": "S√≠ndrome nefr√≠tico no especificado, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N05.2",
    "description": "S√≠ndrome nefr√≠tico no especificado, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N05.3",
    "description": "S√≠ndrome nefr√≠tico no especificado, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N05.4",
    "description": "S√≠ndrome nefr√≠tico no especificado, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N05.5",
    "description": "S√≠ndrome nefr√≠tico no especificado, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N05.6",
    "description": "S√≠ndrome nefr√≠tico no especificado, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N05.7",
    "description": "S√≠ndrome nefr√≠tico no especificado, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N05.8",
    "description": "S√≠ndrome nefr√≠tico no especificado, otras"
  },
  {
    "code": "N05.9",
    "description": "S√≠ndrome nefr√≠tico no especificado, no especificada"
  },
  {
    "code": "N06.0",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N06.1",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N06.2",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N06.3",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N06.4",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N06.5",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N06.6",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N06.7",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N06.8",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, otras"
  },
  {
    "code": "N06.9",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada, no especificada"
  },
  {
    "code": "N07.0",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, anomal√≠a glomerular m√≠nima"
  },
  {
    "code": "N07.1",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, lesiones glomerulares focales y segmentarias"
  },
  {
    "code": "N07.2",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, glomerulonefritis membranosa difusa"
  },
  {
    "code": "N07.3",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, glomerulonefritis proliferativa mesangial difusa"
  },
  {
    "code": "N07.4",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, glomerulonefritis proliferativa endocapilar difusa"
  },
  {
    "code": "N07.5",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, glomerulonefritis mesangiocapilar difusa"
  },
  {
    "code": "N07.6",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, enfermedad por dep√≥sitos densos"
  },
  {
    "code": "N07.7",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, glomerulonefritis difusa en media luna"
  },
  {
    "code": "N07.8",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, otras"
  },
  {
    "code": "N07.9",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte, no especificada"
  },
  {
    "code": "N08.0",
    "description": "Trastornos glomerulares en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "N08.1",
    "description": "Trastornos glomerulares en enfermedades neopl√°sicas"
  },
  {
    "code": "N08.2",
    "description": "Trastornos glomerulares en enfermedades de la sangre y otros trastornos que afectan al mecanismo inmunitario"
  },
  {
    "code": "N08.3",
    "description": "Trastornos glomerulares en diabetes mellitus (E10-E14+ con cuarto car√°cter com√∫n .2)"
  },
  {
    "code": "N08.4",
    "description": "Trastornos glomerulares en otras enfermedades endocrinas, nutricionales y metab√≥licas"
  },
  {
    "code": "N08.5",
    "description": "Trastornos glomerulares en trastornos sist√©micos del tejido conjuntivo"
  },
  {
    "code": "N08.8",
    "description": "Trastornos glomerulares en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N11.0",
    "description": "Pielonefritis cr√≥nica no obstructiva asociada con reflujo"
  },
  {
    "code": "N11.1",
    "description": "Pielonefritis cr√≥nica obstructiva"
  },
  {
    "code": "N11.8",
    "description": "Otras nefritis tubulointersticiales cr√≥nicas"
  },
  {
    "code": "N11.9",
    "description": "Nefritis tubulointersticial cr√≥nica, sin otra especificaci√≥n"
  },
  {
    "code": "N13.0",
    "description": "Hidronefrosis con obstrucci√≥n de la uni√≥n ur√©tero-p√©lvica"
  },
  {
    "code": "N13.1",
    "description": "Hidronefrosis con estrechez ureteral, no clasificada en otra parte"
  },
  {
    "code": "N13.2",
    "description": "Hidronefrosis con obstrucci√≥n por c√°lculos del ri√±√≥n y del ur√©ter"
  },
  {
    "code": "N13.3",
    "description": "Otras hidronefrosis y las no especificadas"
  },
  {
    "code": "N13.4",
    "description": "Hidrour√©ter"
  },
  {
    "code": "N13.5",
    "description": "Torsi√≥n y estrechez del ur√©ter sin hidronefrosis"
  },
  {
    "code": "N13.6",
    "description": "Pionefrosis"
  },
  {
    "code": "N13.7",
    "description": "Uropat√≠a asociada con reflujo vesicoureteral"
  },
  {
    "code": "N13.8",
    "description": "Otras uropat√≠as obstructivas y por reflujo"
  },
  {
    "code": "N13.9",
    "description": "Uropat√≠a obstructiva y por reflujo, sin otra especificaci√≥n"
  },
  {
    "code": "N14.0",
    "description": "Nefropat√≠a inducida por analg√©sicos"
  },
  {
    "code": "N14.1",
    "description": "Nefropat√≠a inducida por otras drogas, medicamentos y sustancias biol√≥gicas"
  },
  {
    "code": "N14.2",
    "description": "Nefropat√≠a inducida por drogas, medicamentos y sustancias biol√≥gicas no especificadas"
  },
  {
    "code": "N14.3",
    "description": "Nefropat√≠a inducida por metales pesados"
  },
  {
    "code": "N14.4",
    "description": "Nefropat√≠a t√≥xica, no clasificada en otra parte"
  },
  {
    "code": "N15.0",
    "description": "Nefropat√≠a de los Balcanes"
  },
  {
    "code": "N15.1",
    "description": "Absceso renal y perirrenal"
  },
  {
    "code": "N15.8",
    "description": "Otras enfermedades renales tubulointersticiales especificadas"
  },
  {
    "code": "N15.9",
    "description": "Enfermedad renal tubulointersticial, no especificada"
  },
  {
    "code": "N16.0",
    "description": "Trastornos renales tubulointersticiales en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "N16.1",
    "description": "Trastornos renales tubulointersticiales en enfermedades neopl√°sicas"
  },
  {
    "code": "N16.2",
    "description": ""
  },
  {
    "code": "N16.3",
    "description": "Trastornos renales tubulointersticiales en enfermedades metab√≥licas"
  },
  {
    "code": "N16.4",
    "description": "Trastornos renales tubulointersticiales en enfermedades del tejido conjuntivo"
  },
  {
    "code": "N16.5",
    "description": "Trastornos renales tubulointersticiales en rechazo de trasplante (T86.- +)"
  },
  {
    "code": "N16.8",
    "description": "Trastornos renales tubulointersticiales en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N17.0",
    "description": "Insuficiencia renal aguda con necrosis tubular"
  },
  {
    "code": "N17.1",
    "description": "Insuficiencia renal aguda con necrosis cortical aguda"
  },
  {
    "code": "N17.2",
    "description": "Insuficiencia renal aguda con necrosis medular"
  },
  {
    "code": "N17.8",
    "description": "Otras insuficiencias renales agudas"
  },
  {
    "code": "N17.9",
    "description": "Insuficiencia renal aguda, no especificada"
  },
  {
    "code": "N18.0",
    "description": "Insuficiencia renal terminal"
  },
  {
    "code": "N18.8",
    "description": "Otras insuficiencias renales cr√≥nicas"
  },
  {
    "code": "N18.9",
    "description": "Insuficiencia renal cr√≥nica, no especificada"
  },
  {
    "code": "N20.0",
    "description": "C√°lculo del ri√±√≥n"
  },
  {
    "code": "N20.1",
    "description": "C√°lculo del ur√©ter"
  },
  {
    "code": "N20.2",
    "description": "C√°lculo del ri√±√≥n con c√°lculo del ur√©ter"
  },
  {
    "code": "N20.9",
    "description": "C√°lculo urinario, no especificado"
  },
  {
    "code": "N21.0",
    "description": "C√°lculo en la vejiga"
  },
  {
    "code": "N21.1",
    "description": "C√°lculo en la uretra"
  },
  {
    "code": "N21.8",
    "description": "Otros c√°lculos de las v√≠as urinarias inferiores"
  },
  {
    "code": "N21.9",
    "description": "C√°lculo de las v√≠as urinarias inferiores, no especificado"
  },
  {
    "code": "N22.0",
    "description": "Litiasis urinaria en esquistosomiasis [bilharziasis] (B65.-+)"
  },
  {
    "code": "N22.8",
    "description": "C√°lculo de las v√≠as urinarias en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N25.0",
    "description": "Osteodistrofia renal"
  },
  {
    "code": "N25.1",
    "description": "Diabetes ins√≠pida nefr√≥gena"
  },
  {
    "code": "N25.8",
    "description": "Otros trastornos resultantes de la funci√≥n tubular renal alterada"
  },
  {
    "code": "N25.9",
    "description": "Trastorno no especificado, resultante de la funci√≥n tubular renal alterada"
  },
  {
    "code": "N27.0",
    "description": "Ri√±√≥n peque√±o, unilateral"
  },
  {
    "code": "N27.1",
    "description": "Ri√±√≥n peque√±o, bilateral"
  },
  {
    "code": "N27.9",
    "description": "Ri√±√≥n peque√±o, no especificado"
  },
  {
    "code": "N28.0",
    "description": "Isquemia e infarto del ri√±√≥n"
  },
  {
    "code": "N28.1",
    "description": "Quiste de ri√±√≥n, adquirido"
  },
  {
    "code": "N28.8",
    "description": "Otros trastornos especificados del ri√±√≥n y del ur√©ter"
  },
  {
    "code": "N28.9",
    "description": "Trastorno del ri√±√≥n y del ur√©ter, no especificado"
  },
  {
    "code": "N29.0",
    "description": "S√≠filis renal tard√≠a (A52.7+)"
  },
  {
    "code": "N29.1",
    "description": "Otros trastornos del ri√±√≥n y del ur√©ter en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "N29.8",
    "description": "Otros trastornos del ri√±√≥n y del ur√©ter en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N30.0",
    "description": "Cistitis aguda"
  },
  {
    "code": "N30.1",
    "description": "Cistitis intersticial (cr√≥nica)"
  },
  {
    "code": "N30.2",
    "description": "Otras cistitis cr√≥nicas"
  },
  {
    "code": "N30.3",
    "description": "Trigonitis"
  },
  {
    "code": "N30.4",
    "description": "Cistitis por irradiaci√≥n"
  },
  {
    "code": "N30.8",
    "description": "Otras cistitis"
  },
  {
    "code": "N30.9",
    "description": "Cistitis, no especificada"
  },
  {
    "code": "N31.0",
    "description": "Vejiga neurop√°tica no inhibida, no clasificada en otra parte"
  },
  {
    "code": "N31.1",
    "description": "Vejiga neurop√°tica refleja, no clasificada en otra parte"
  },
  {
    "code": "N31.2",
    "description": "Vejiga neurop√°tica fl√°cida, no clasificada en otra parte"
  },
  {
    "code": "N31.8",
    "description": "Otras disfunciones neuromusculares de la vejiga"
  },
  {
    "code": "N31.9",
    "description": "Disfunci√≥n neuromuscular de la vejiga, no especificada"
  },
  {
    "code": "N32.0",
    "description": "Obstrucci√≥n de cuello de la vejiga"
  },
  {
    "code": "N32.1",
    "description": "F√≠stula vesicointestinal"
  },
  {
    "code": "N32.2",
    "description": "F√≠stula de la vejiga, no clasificada en otra parte"
  },
  {
    "code": "N32.3",
    "description": "Divert√≠culo de la vejiga"
  },
  {
    "code": "N32.4",
    "description": "Ruptura de la vejiga, no traum√°tica"
  },
  {
    "code": "N32.8",
    "description": "Otros trastornos especificados de la vejiga"
  },
  {
    "code": "N32.9",
    "description": "Trastorno de la vejiga, no especificado"
  },
  {
    "code": "N33.0",
    "description": "Cistitis tuberculosa (A18.1+)"
  },
  {
    "code": "N33.8",
    "description": "Trastornos de la vejiga en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N34.0",
    "description": "Absceso uretral"
  },
  {
    "code": "N34.1",
    "description": "Uretritis no espec√≠fica"
  },
  {
    "code": "N34.2",
    "description": "Otras uretritis"
  },
  {
    "code": "N34.3",
    "description": "S√≠ndrome uretral, no especificado"
  },
  {
    "code": "N35.0",
    "description": "Estrechez uretral postraum√°tica"
  },
  {
    "code": "N35.1",
    "description": "Estrechez uretral postinfecci√≥n, no clasificada en otra parte"
  },
  {
    "code": "N35.8",
    "description": "Otras estrecheces uretrales"
  },
  {
    "code": "N35.9",
    "description": "Estrechez uretral, no especificada"
  },
  {
    "code": "N36.0",
    "description": "F√≠stula de la uretra"
  },
  {
    "code": "N36.1",
    "description": "Divert√≠culo de la uretra"
  },
  {
    "code": "N36.2",
    "description": "Car√∫ncula uretral"
  },
  {
    "code": "N36.3",
    "description": "Prolapso de la mucosa uretral"
  },
  {
    "code": "N36.8",
    "description": "Otros trastornos especificados de la uretra"
  },
  {
    "code": "N36.9",
    "description": "Trastorno de la uretra, no especificado"
  },
  {
    "code": "N37.0",
    "description": "Uretritis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N37.8",
    "description": "Otros trastornos uretrales en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N39.0",
    "description": "Infecci√≥n de v√≠as urinarias, sitio no especificado"
  },
  {
    "code": "N39.1",
    "description": "Proteinuria persistente, no especificada"
  },
  {
    "code": "N39.2",
    "description": "Proteinuria ortost√°tica, no especificada"
  },
  {
    "code": "N39.3",
    "description": "Incontinencia urinaria por tensi√≥n"
  },
  {
    "code": "N39.4",
    "description": "Otras incontinencias urinarias especificadas"
  },
  {
    "code": "N39.8",
    "description": "Otros trastornos especificados del sistema urinario"
  },
  {
    "code": "N39.9",
    "description": "Trastorno del sistema urinario, no especificado"
  },
  {
    "code": "N41.0",
    "description": "Prostatitis aguda"
  },
  {
    "code": "N41.1",
    "description": "Prostatitis cr√≥nica"
  },
  {
    "code": "N41.2",
    "description": "Absceso de la pr√≥stata"
  },
  {
    "code": "N41.3",
    "description": "Prostatocistitis"
  },
  {
    "code": "N41.8",
    "description": "Otras enfermedades inflamatorias de la pr√≥stata"
  },
  {
    "code": "N41.9",
    "description": "Enfermedad inflamatoria de la pr√≥stata, no especificada"
  },
  {
    "code": "N42.0",
    "description": "C√°lculo de la pr√≥stata"
  },
  {
    "code": "N42.1",
    "description": "Congesti√≥n y hemorragia de la pr√≥stata"
  },
  {
    "code": "N42.2",
    "description": "Atrofia de la pr√≥stata"
  },
  {
    "code": "N42.8",
    "description": "Otros trastornos especificados de la pr√≥stata"
  },
  {
    "code": "N42.9",
    "description": "Trastorno de la pr√≥stata, no especificado"
  },
  {
    "code": "N43.0",
    "description": "Hidrocele enquistado"
  },
  {
    "code": "N43.1",
    "description": "Hidrocele infectado"
  },
  {
    "code": "N43.2",
    "description": "Otros hidroceles"
  },
  {
    "code": "N43.3",
    "description": "Hidrocele, no especificado"
  },
  {
    "code": "N43.4",
    "description": "Espermatocele"
  },
  {
    "code": "N45.0",
    "description": "Orquitis, epididimitis y orquiepididimitis con absceso"
  },
  {
    "code": "N45.9",
    "description": "Orquitis, epididimitis y orquiepididimitis sin absceso"
  },
  {
    "code": "N48.0",
    "description": "Leucoplasia del pene"
  },
  {
    "code": "N48.1",
    "description": "Balanopostitis"
  },
  {
    "code": "N48.2",
    "description": "Otros trastornos inflamatorios del pene"
  },
  {
    "code": "N48.3",
    "description": "Priapismo"
  },
  {
    "code": "N48.4",
    "description": "Impotencia de origen org√°nico"
  },
  {
    "code": "N48.5",
    "description": "Ulcera del pene"
  },
  {
    "code": "N48.6",
    "description": "Balanitis xer√≥tica obliterante"
  },
  {
    "code": "N48.8",
    "description": "Otros trastornos especificados del pene"
  },
  {
    "code": "N48.9",
    "description": "Trastorno del pene, no especificado"
  },
  {
    "code": "N49.0",
    "description": "Trastornos inflamatorios de ves√≠cula seminal"
  },
  {
    "code": "N49.1",
    "description": "Trastornos inflamatorios del cord√≥n esperm√°tico, t√∫nica vaginal y conducto deferente"
  },
  {
    "code": "N49.2",
    "description": "Trastornos inflamatorios del escroto"
  },
  {
    "code": "N49.8",
    "description": "Otros trastornos inflamatorios de los √≥rganos genitales masculinos"
  },
  {
    "code": "N49.9",
    "description": "Trastorno inflamatorio de √≥rgano genital masculino, no especificado"
  },
  {
    "code": "N50.0",
    "description": "Atrofia del test√≠culo"
  },
  {
    "code": "N50.1",
    "description": "Trastornos vasculares de los √≥rganos genitales masculinos"
  },
  {
    "code": "N50.8",
    "description": "Otros trastornos especificados de los √≥rganos genitales masculinos"
  },
  {
    "code": "N50.9",
    "description": "Trastorno no especificado de los √≥rganos genitales masculinos"
  },
  {
    "code": "N51.0",
    "description": "Trastornos de pr√≥stata en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N51.1",
    "description": "Trastornos del test√≠culo y del epid√≠dimo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N51.2",
    "description": "Balanitis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N51.8",
    "description": "Otros trastornos de los √≥rganos genitales masculinos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N60.0",
    "description": "Quiste solitario de la mama"
  },
  {
    "code": "N60.1",
    "description": "Mastopat√≠a qu√≠stica difusa"
  },
  {
    "code": "N60.2",
    "description": "Fibroadenosis de mama"
  },
  {
    "code": "N60.3",
    "description": "Fibroesclerosis de mama"
  },
  {
    "code": "N60.4",
    "description": "Ectasia de conducto mamario"
  },
  {
    "code": "N60.8",
    "description": "Otras displasias mamarias benignas"
  },
  {
    "code": "N60.9",
    "description": "Displasia mamaria benigna, sin otra especificaci√≥n"
  },
  {
    "code": "N64.0",
    "description": "Fisura y f√≠stula del pez√≥n"
  },
  {
    "code": "N64.1",
    "description": "Necrosis grasa de la mama"
  },
  {
    "code": "N64.2",
    "description": "Atrofia de la mama"
  },
  {
    "code": "N64.3",
    "description": "Galactorrea no asociada con el parto"
  },
  {
    "code": "N64.4",
    "description": "Mastodinia"
  },
  {
    "code": "N64.5",
    "description": "Otros signos y s√≠ntomas relativos a la mama"
  },
  {
    "code": "N64.8",
    "description": "Otros trastornos especificados de la mama"
  },
  {
    "code": "N64.9",
    "description": "Trastorno de la mama, no especificado"
  },
  {
    "code": "N70.0",
    "description": "Salpingitis y ooforitis aguda"
  },
  {
    "code": "N70.1",
    "description": "Salpingitis y ooforitis cr√≥nica"
  },
  {
    "code": "N70.9",
    "description": "Salpingitis y ooforitis, no especificadas"
  },
  {
    "code": "N71.0",
    "description": "Enfermedad inflamatoria aguda del √∫tero"
  },
  {
    "code": "N71.1",
    "description": "Enfermedad inflamatoria cr√≥nica del √∫tero"
  },
  {
    "code": "N71.9",
    "description": "Enfermedad inflamatoria del √∫tero, no especificada"
  },
  {
    "code": "N73.0",
    "description": "Parametritis y celulitis p√©lvica aguda"
  },
  {
    "code": "N73.1",
    "description": "Parametritis y celulitis p√©lvica cr√≥nica"
  },
  {
    "code": "N73.2",
    "description": "Parametritis y celulitis p√©lvica no especificada"
  },
  {
    "code": "N73.3",
    "description": "Peritonitis p√©lvica aguda, femenina"
  },
  {
    "code": "N73.4",
    "description": "Peritonitis p√©lvica cr√≥nica, femenina"
  },
  {
    "code": "N73.5",
    "description": "Peritonitis p√©lvica femenina, no especificada"
  },
  {
    "code": "N73.6",
    "description": "Adherencias peritoneales p√©lvicas femeninas"
  },
  {
    "code": "N73.8",
    "description": "Otras enfermedades inflamatorias p√©lvicas femeninas"
  },
  {
    "code": "N73.9",
    "description": "Enfermedad inflamatoria p√©lvica femenina, no especificada"
  },
  {
    "code": "N74.0",
    "description": "Infecci√≥n tuberculosa del cuello del √∫tero (A18.1+)"
  },
  {
    "code": "N74.1",
    "description": "Enfermedad inflamatoria p√©lvica femenina por tuberculosis (A18.1+)"
  },
  {
    "code": "N74.2",
    "description": "Enfermedad inflamatoria p√©lvica femenina por s√≠filis (A51.4+, A52.7+)"
  },
  {
    "code": "N74.3",
    "description": "Enfermedad inflamatoria p√©lvica femenina por gonococos (A54.2+)"
  },
  {
    "code": "N74.4",
    "description": "Enfermedad inflamatoria p√©lvica femenina por clamidias (A56.1+)"
  },
  {
    "code": "N74.8",
    "description": "Trastornos inflamatorios p√©lvicos femeninos en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N75.0",
    "description": "Quiste de la gl√°ndula de Bartholin"
  },
  {
    "code": "N75.1",
    "description": "Absceso de la gl√°ndula de Bartholin"
  },
  {
    "code": "N75.8",
    "description": "Otras enfermedades de la gl√°ndula de Bartholin"
  },
  {
    "code": "N75.9",
    "description": "Enfermedad de la gl√°ndula de Bartholin, no especificada"
  },
  {
    "code": "N76.0",
    "description": "Vaginitis aguda"
  },
  {
    "code": "N76.1",
    "description": "Vaginitis subaguda y cr√≥nica"
  },
  {
    "code": "N76.2",
    "description": "Vulvitis aguda"
  },
  {
    "code": "N76.3",
    "description": "Vulvitis subaguda y cr√≥nica"
  },
  {
    "code": "N76.4",
    "description": "Absceso vulvar"
  },
  {
    "code": "N76.5",
    "description": "Ulceraci√≥n de la vagina"
  },
  {
    "code": "N76.6",
    "description": "Ulceraci√≥n de la vulva"
  },
  {
    "code": "N76.8",
    "description": "Otras inflamaciones especificadas de la vagina y de la vulva"
  },
  {
    "code": "N77.0",
    "description": "Ulceraci√≥n de la vulva en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "N77.1",
    "description": "Vaginitis, vulvitis y vulvovaginitis en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "N77.8",
    "description": "Ulceraci√≥n e inflamaci√≥n vulvovaginal en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "N80.0",
    "description": "Endometriosis del √∫tero"
  },
  {
    "code": "N80.1",
    "description": "Endometriosis del ovario"
  },
  {
    "code": "N80.2",
    "description": "Endometriosis de la trompa de Falopio"
  },
  {
    "code": "N80.3",
    "description": "Endometriosis del peritoneo p√©lvico"
  },
  {
    "code": "N80.4",
    "description": "Endometriosis del tabique rectovaginal y de la vagina"
  },
  {
    "code": "N80.5",
    "description": "Endometriosis del intestino"
  },
  {
    "code": "N80.6",
    "description": "Endometriosis en cicatriz cut√°nea"
  },
  {
    "code": "N80.8",
    "description": "Otras endometriosis"
  },
  {
    "code": "N80.9",
    "description": "Endometriosis, no especificada"
  },
  {
    "code": "N81.0",
    "description": "Uretrocele femenino"
  },
  {
    "code": "N81.1",
    "description": "Cistocele"
  },
  {
    "code": "N81.2",
    "description": "Prolapso uterovaginal incompleto"
  },
  {
    "code": "N81.3",
    "description": "Prolapso uterovaginal completo"
  },
  {
    "code": "N81.4",
    "description": "Prolapso uterovaginal, sin otra especificaci√≥n"
  },
  {
    "code": "N81.5",
    "description": "Enterocele vaginal"
  },
  {
    "code": "N81.6",
    "description": "Rectocele"
  },
  {
    "code": "N81.8",
    "description": "Otros prolapsos genitales femeninos"
  },
  {
    "code": "N81.9",
    "description": "Prolapso genital femenino, no especificado"
  },
  {
    "code": "N82.0",
    "description": "F√≠stula vesicovaginal"
  },
  {
    "code": "N82.1",
    "description": "Otras f√≠stulas de las v√≠as genitourinarias femeninas"
  },
  {
    "code": "N82.2",
    "description": "F√≠stula de la vagina al intestino delgado"
  },
  {
    "code": "N82.3",
    "description": "F√≠stula de la vagina al intestino grueso"
  },
  {
    "code": "N82.4",
    "description": "Otras f√≠stulas del tracto genital femenino al tracto intestinal"
  },
  {
    "code": "N82.5",
    "description": "F√≠stula del tracto genital femenino a la piel"
  },
  {
    "code": "N82.8",
    "description": "Otras f√≠stulas del tracto genital femenino"
  },
  {
    "code": "N82.9",
    "description": "F√≠stula del tracto genital femenino, sin otra especificaci√≥n"
  },
  {
    "code": "N83.0",
    "description": "Quiste folicular del ovario"
  },
  {
    "code": "N83.1",
    "description": "Quiste del cuerpo amarillo"
  },
  {
    "code": "N83.2",
    "description": "Otros quistes ov√°ricos y los no especificados"
  },
  {
    "code": "N83.3",
    "description": "Atrofia adquirida del ovario y de la trompa de Falopio"
  },
  {
    "code": "N83.4",
    "description": "Prolapso y hernia del ovario y de la trompa de Falopio"
  },
  {
    "code": "N83.5",
    "description": "Torsi√≥n de ovario, ped√≠culo de ovario y trompa de Falopio"
  },
  {
    "code": "N83.6",
    "description": "Hematosalpinx"
  },
  {
    "code": "N83.7",
    "description": "Hematoma del ligamento ancho"
  },
  {
    "code": "N83.8",
    "description": "Otros trastornos no inflamatorios del ovario, de la trompa de Falopio y del ligamento ancho"
  },
  {
    "code": "N83.9",
    "description": "Enfermedad no inflamatoria del ovario, de la trompa de Falopio y del ligamento ancho, no especificada"
  },
  {
    "code": "N84.0",
    "description": "P√≥lipo del cuerpo del √∫tero"
  },
  {
    "code": "N84.1",
    "description": "P√≥lipo del cuello del √∫tero"
  },
  {
    "code": "N84.2",
    "description": "P√≥lipo de la vagina"
  },
  {
    "code": "N84.3",
    "description": "P√≥lipo de la vulva"
  },
  {
    "code": "N84.8",
    "description": "P√≥lipos de otras partes del tracto genital femenino"
  },
  {
    "code": "N84.9",
    "description": "P√≥lipo del tracto genital femenino, no especificado"
  },
  {
    "code": "N85.0",
    "description": "Hiperplasia de gl√°ndula del endometrio:"
  },
  {
    "code": "N85.1",
    "description": "Hiperplasia adenomatosa del endometrio"
  },
  {
    "code": "N85.2",
    "description": "Hipertrofia del √∫tero"
  },
  {
    "code": "N85.3",
    "description": "Subinvoluci√≥n del √∫tero"
  },
  {
    "code": "N85.4",
    "description": "Mala posici√≥n del √∫tero"
  },
  {
    "code": "N85.5",
    "description": "Inversi√≥n del √∫tero"
  },
  {
    "code": "N85.6",
    "description": "Sinequias intrauterinas"
  },
  {
    "code": "N85.7",
    "description": "Hemat√≥metra"
  },
  {
    "code": "N85.8",
    "description": "Otros trastornos no inflamatorios especificados del √∫tero"
  },
  {
    "code": "N85.9",
    "description": "Trastorno no inflamatorio del √∫tero, no especificado"
  },
  {
    "code": "N87.0",
    "description": "Displasia cervical leve"
  },
  {
    "code": "N87.1",
    "description": "Displasia cervical moderada"
  },
  {
    "code": "N87.2",
    "description": "Displasia cervical severa, no clasificada en otra parte"
  },
  {
    "code": "N87.9",
    "description": "Displasia del cuello del √∫tero, no especificada"
  },
  {
    "code": "N88.0",
    "description": "Leucoplasia del cuello del √∫tero"
  },
  {
    "code": "N88.1",
    "description": "Laceraci√≥n antigua del cuello del √∫tero"
  },
  {
    "code": "N88.2",
    "description": "Estrechez y estenosis del cuello del √∫tero"
  },
  {
    "code": "N88.3",
    "description": "Incompetencia del cuello del √∫tero"
  },
  {
    "code": "N88.4",
    "description": "Elongaci√≥n hipertr√≥fica del cuello del √∫tero"
  },
  {
    "code": "N88.8",
    "description": "Otros trastornos no inflamatorios especificados del cuello del √∫tero"
  },
  {
    "code": "N88.9",
    "description": "Trastorno no inflamatorio del cuello del √∫tero, no especificado"
  },
  {
    "code": "N89.0",
    "description": "Displasia vaginal leve"
  },
  {
    "code": "N89.1",
    "description": "Displasia vaginal moderada"
  },
  {
    "code": "N89.2",
    "description": "Displasia vaginal severa, no clasificada en otra parte"
  },
  {
    "code": "N89.3",
    "description": "Displasia de la vagina, no especificada"
  },
  {
    "code": "N89.4",
    "description": "Leucoplasia de la vagina"
  },
  {
    "code": "N89.5",
    "description": "Estrechez y atresia de la vagina"
  },
  {
    "code": "N89.6",
    "description": "Anillo de himen estrecho"
  },
  {
    "code": "N89.7",
    "description": "Hematocolpos"
  },
  {
    "code": "N89.8",
    "description": "Otros trastornos especificados no inflamatorios de la vagina"
  },
  {
    "code": "N89.9",
    "description": "Trastorno no inflamatorio de la vagina, no especificado"
  },
  {
    "code": "N90.0",
    "description": "Displasia vulvar leve"
  },
  {
    "code": "N90.1",
    "description": "Displasia vulvar moderada"
  },
  {
    "code": "N90.2",
    "description": "Displasia vulvar severa, no clasificada en otra parte"
  },
  {
    "code": "N90.3",
    "description": "Displasia de la vulva, no especificada"
  },
  {
    "code": "N90.4",
    "description": "Leucoplasia de la vulva"
  },
  {
    "code": "N90.5",
    "description": "Atrofia de la vulva"
  },
  {
    "code": "N90.6",
    "description": "Hipertrofia de la vulva"
  },
  {
    "code": "N90.7",
    "description": "Quiste de la vulva"
  },
  {
    "code": "N90.8",
    "description": "Otros trastornos no inflamatorios especificados de la vulva y del perineo"
  },
  {
    "code": "N90.9",
    "description": "Trastorno no inflamatorio de la vulva y del perineo, no especificado"
  },
  {
    "code": "N91.0",
    "description": "Amenorrea primaria"
  },
  {
    "code": "N91.1",
    "description": "Amenorrea secundaria"
  },
  {
    "code": "N91.2",
    "description": "Amenorrea, sin otra especificaci√≥n"
  },
  {
    "code": "N91.3",
    "description": "Oligomenorrea primaria"
  },
  {
    "code": "N91.4",
    "description": "Oligomenorrea secundaria"
  },
  {
    "code": "N91.5",
    "description": "Oligomenorrea, no especificada"
  },
  {
    "code": "N92.0",
    "description": "Menstruaci√≥n excesiva y frecuente con ciclo regular"
  },
  {
    "code": "N92.1",
    "description": "Menstruaci√≥n excesiva y frecuente con ciclo irregular"
  },
  {
    "code": "N92.2",
    "description": "Menstruaci√≥n excesiva en la pubertad"
  },
  {
    "code": "N92.3",
    "description": "Hemorragia por ovulaci√≥n"
  },
  {
    "code": "N92.4",
    "description": "Hemorragia excesiva en per√≠odo premenop√°usico"
  },
  {
    "code": "N92.5",
    "description": "Otras menstruaciones irregulares especificadas"
  },
  {
    "code": "N92.6",
    "description": "Menstruaci√≥n irregular, no especificada"
  },
  {
    "code": "N93.0",
    "description": "Hemorragia postcoito y postcontacto"
  },
  {
    "code": "N93.8",
    "description": "Otras hemorragias uterinas o vaginales anormales especificadas"
  },
  {
    "code": "N93.9",
    "description": "Hemorragia vaginal y uterina anormal, no especificada"
  },
  {
    "code": "N94.0",
    "description": "Dolor intermenstrual"
  },
  {
    "code": "N94.1",
    "description": "Dispareunia"
  },
  {
    "code": "N94.2",
    "description": "Vaginismo"
  },
  {
    "code": "N94.3",
    "description": "S√≠ndrome de tensi√≥n premenstrual"
  },
  {
    "code": "N94.4",
    "description": "Dismenorrea primaria"
  },
  {
    "code": "N94.5",
    "description": "Dismenorrea secundaria"
  },
  {
    "code": "N94.6",
    "description": "Dismenorrea, no especificada"
  },
  {
    "code": "N94.8",
    "description": "Otras afecciones especificadas asociadas con los √≥rganos genitales femeninos y el ciclo menstrual"
  },
  {
    "code": "N94.9",
    "description": "Afecciones no especificadas asociadas con los √≥rganos genitales femeninos y el ciclo menstrual"
  },
  {
    "code": "N95.0",
    "description": "Hemorragia postmenop√°usica"
  },
  {
    "code": "N95.1",
    "description": "Estados menop√°usicos y climat√©ricos femeninos"
  },
  {
    "code": "N95.2",
    "description": "Vaginitis atr√≥fica postmenop√°usica"
  },
  {
    "code": "N95.3",
    "description": "Estados asociados con menopausia artificial"
  },
  {
    "code": "N95.8",
    "description": "Otros trastornos menop√°usicos y perimenop√°usicos especificados"
  },
  {
    "code": "N95.9",
    "description": "Trastorno menop√°usico y perimenop√°usico, no especificado"
  },
  {
    "code": "N97.0",
    "description": "Infertilidad femenina asociada con falta de ovulaci√≥n"
  },
  {
    "code": "N97.1",
    "description": "Infertilidad femenina de origen tub√°rico"
  },
  {
    "code": "N97.2",
    "description": "Infertilidad femenina de origen uterino"
  },
  {
    "code": "N97.3",
    "description": "Infertilidad femenina de origen cervical"
  },
  {
    "code": "N97.4",
    "description": "Infertilidad femenina asociada con factores masculinos"
  },
  {
    "code": "N97.8",
    "description": "Infertilidad femenina de otro origen"
  },
  {
    "code": "N97.9",
    "description": "Infertilidad femenina, no especificada"
  },
  {
    "code": "N98.0",
    "description": "Infecci√≥n asociada con inseminaci√≥n artificial"
  },
  {
    "code": "N98.1",
    "description": "Hiperestimulaci√≥n de ovarios"
  },
  {
    "code": "N98.2",
    "description": "Complicaciones en el intento de introducci√≥n del huevo fecundado en la fertilizaci√≥n in vitro"
  },
  {
    "code": "N98.3",
    "description": "Complicaciones en el intento de introducci√≥n del embri√≥n en la transferencia de embriones"
  },
  {
    "code": "N98.8",
    "description": "Otras complicaciones asociadas con la fecundaci√≥n artificial"
  },
  {
    "code": "N98.9",
    "description": "Complicaci√≥n no especificada asociada con la fecundaci√≥n artificial"
  },
  {
    "code": "N99.0",
    "description": "Insuficiencia renal consecutiva a procedimientos"
  },
  {
    "code": "N99.1",
    "description": "Estrechez uretral consecutiva a procedimientos"
  },
  {
    "code": "N99.2",
    "description": "Adherencias postoperatorias de la vagina"
  },
  {
    "code": "N99.3",
    "description": "Prolapso de la c√∫pula vaginal despu√©s de histerectom√≠a"
  },
  {
    "code": "N99.4",
    "description": "Adherencias peritoneales p√©lvicas consecutivas a procedimientos"
  },
  {
    "code": "N99.5",
    "description": "Mal funcionamiento de estoma externo de v√≠as urinarias"
  },
  {
    "code": "N99.8",
    "description": "Otros trastornos del sistema genitourinario consecutivos a procedimientos"
  },
  {
    "code": "N99.9",
    "description": "Trastorno no especificado del sistema genitourinario consecutivo a procedimientos"
  },
  {
    "code": "O00.0",
    "description": "Embarazo abdominal"
  },
  {
    "code": "O00.1",
    "description": "Embarazo tub√°rico"
  },
  {
    "code": "O00.2",
    "description": "Embarazo ov√°rico"
  },
  {
    "code": "O00.8",
    "description": "Otros embarazos ect√≥picos"
  },
  {
    "code": "O00.9",
    "description": "Embarazo ect√≥pico, no especificado"
  },
  {
    "code": "O01.0",
    "description": "Mola hidatiforme cl√°sica"
  },
  {
    "code": "O01.1",
    "description": "Mola hidatiforme, incompleta o parcial"
  },
  {
    "code": "O01.9",
    "description": "Mola hidatiforme, no especificada"
  },
  {
    "code": "O02.0",
    "description": "Detenci√≥n del desarrollo del huevo y mola no hidatiforme"
  },
  {
    "code": "O02.1",
    "description": "Aborto retenido"
  },
  {
    "code": "O02.8",
    "description": "Otros productos anormales especificados de la concepci√≥n"
  },
  {
    "code": "O02.9",
    "description": "Producto anormal de la concepci√≥n, no especificado"
  },
  {
    "code": "O03.0",
    "description": "Aborto espont√°neo, incompleto, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O03.1",
    "description": "Aborto espont√°neo, incompleto, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O03.2",
    "description": "Aborto espont√°neo, incompleto, complicado por embolia"
  },
  {
    "code": "O03.3",
    "description": "Aborto espont√°neo, incompleto, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O03.4",
    "description": "Aborto espont√°neo, incompleto, sin complicaci√≥n"
  },
  {
    "code": "O03.5",
    "description": "Aborto espont√°neo, completo o no especificado, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O03.6",
    "description": "Aborto espont√°neo, completo o no especificado, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O03.7",
    "description": "Aborto espont√°neo, completo o no especificado, complicado por embolia"
  },
  {
    "code": "O03.8",
    "description": "Aborto espont√°neo, completo o no especificado, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O03.9",
    "description": "Aborto espont√°neo, completo o no especificado, sin complicaci√≥n"
  },
  {
    "code": "O04.0",
    "description": "Aborto m√©dico, incompleto, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O04.1",
    "description": "Aborto m√©dico, incompleto, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O04.2",
    "description": "Aborto m√©dico, incompleto, complicado por embolia"
  },
  {
    "code": "O04.3",
    "description": "Aborto m√©dico, incompleto, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O04.4",
    "description": "Aborto m√©dico, incompleto, sin complicaci√≥n"
  },
  {
    "code": "O04.5",
    "description": "Aborto m√©dico, completo o no especificado, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O04.6",
    "description": "Aborto m√©dico, completo o no especificado, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O04.7",
    "description": "Aborto m√©dico, completo o no especificado, complicado por embolia"
  },
  {
    "code": "O04.8",
    "description": "Aborto m√©dico, completo o no especificado, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O04.9",
    "description": "Aborto m√©dico, completo o no especificado, sin complicaci√≥n"
  },
  {
    "code": "O05.0",
    "description": "Otro aborto, incompleto, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O05.1",
    "description": "Otro aborto, incompleto, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O05.2",
    "description": "Otro aborto, incompleto, complicado por embolia"
  },
  {
    "code": "O05.3",
    "description": "Otro aborto, incompleto, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O05.4",
    "description": "Otro aborto, incompleto, sin complicaci√≥n"
  },
  {
    "code": "O05.5",
    "description": "Otro aborto, completo o no especificado, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O05.6",
    "description": "Otro aborto, completo o no especificado, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O05.7",
    "description": "Otro aborto, completo o no especificado, complicado por embolia"
  },
  {
    "code": "O05.8",
    "description": "Otro aborto, completo o no especificado, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O05.9",
    "description": "Otro aborto, completo o no especificado, sin complicaci√≥n"
  },
  {
    "code": "O06.0",
    "description": "Aborto no especificado, incompleto, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O06.1",
    "description": "Aborto no especificado, incompleto, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O06.2",
    "description": "Aborto no especificado, incompleto, complicado por embolia"
  },
  {
    "code": "O06.3",
    "description": "Aborto no especificado, incompleto, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O06.4",
    "description": "Aborto no especificado, incompleto, sin complicaci√≥n"
  },
  {
    "code": "O06.5",
    "description": "Aborto no especificado, completo o no especificado, complicado con infecci√≥n genital y pelviana"
  },
  {
    "code": "O06.6",
    "description": "Aborto no especificado, completo o no especificado, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O06.7",
    "description": "Aborto no especificado, completo o no especificado, complicado por embolia"
  },
  {
    "code": "O06.8",
    "description": "Aborto no especificado, completo o no especificado, con otras complicaciones especificadas y las no especificadas"
  },
  {
    "code": "O06.9",
    "description": "Aborto no especificado, completo o no especificado, sin complicaci√≥n"
  },
  {
    "code": "O07.0",
    "description": "Falla de la inducci√≥n m√©dica del aborto, complicado por infecci√≥n genital y pelviana"
  },
  {
    "code": "O07.1",
    "description": "Falla de la inducci√≥n m√©dica del aborto, complicado por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O07.2",
    "description": "Falla de la inducci√≥n m√©dica del aborto, complicado por embolia"
  },
  {
    "code": "O07.3",
    "description": "Falla de la inducci√≥n m√©dica del aborto, con otras complicaciones y las no especificadas"
  },
  {
    "code": "O07.4",
    "description": "Falla de la inducci√≥n m√©dica del aborto, sin complicaci√≥n"
  },
  {
    "code": "O07.5",
    "description": "Otros intentos fallidos de aborto y los no especificados, complicados por infecci√≥n genital y pelviana"
  },
  {
    "code": "O07.6",
    "description": "Otros intentos fallidos de aborto y los no especificados, complicados por hemorragia excesiva o tard√≠a"
  },
  {
    "code": "O07.7",
    "description": "Otros intentos fallidos de aborto y los no especificados, complicados por embolia"
  },
  {
    "code": "O07.8",
    "description": "Otros intentos fallidos de aborto y los no especificados, con otras complicaciones y las no especificadas"
  },
  {
    "code": "O07.9",
    "description": "Otros intentos fallidos de aborto y los no especificados, sin complicaci√≥n"
  },
  {
    "code": "O08.0",
    "description": "Infecci√≥n genital y pelviana consecutiva al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.1",
    "description": "Hemorragia excesiva o tard√≠a consecutiva al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.2",
    "description": "Embolia consecutiva al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.3",
    "description": "Choque consecutivo al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.4",
    "description": "Insuficiencia renal consecutiva al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.5",
    "description": "Trastorno metab√≥lico consecutivo al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.6",
    "description": "Lesi√≥n de √≥rganos o tejidos de la pelvis consecutivo al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.7",
    "description": "Otras complicaciones venosas consecutivas al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.8",
    "description": "Otras complicaciones consecutivas al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O08.9",
    "description": "Complicaci√≥n no especificada consecutiva al aborto, al embarazo ect√≥pico y al embarazo molar"
  },
  {
    "code": "O10.0",
    "description": "Hipertensi√≥n esencial preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O10.1",
    "description": "Enfermedad card√≠aca hipertensiva preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O10.2",
    "description": "Enfermedad renal hipertensiva preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O10.3",
    "description": "Enfermedad cardiorrenal hipertensiva preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O10.4",
    "description": "Hipertensi√≥n secundaria preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O10.9",
    "description": "Hipertensi√≥n preexistente no especificada, que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O12.0",
    "description": "Edema gestacional"
  },
  {
    "code": "O12.1",
    "description": "Proteinuria gestacional"
  },
  {
    "code": "O12.2",
    "description": "Edema gestacional con proteinuria"
  },
  {
    "code": "O14.0",
    "description": "Preeclampsia moderada"
  },
  {
    "code": "O14.1",
    "description": "Preeclampsia severa"
  },
  {
    "code": "O14.9",
    "description": "Preeclampsia, no especificada"
  },
  {
    "code": "O15.0",
    "description": "Eclampsia en el embarazo"
  },
  {
    "code": "O15.1",
    "description": "Eclampsia durante el trabajo de parto"
  },
  {
    "code": "O15.2",
    "description": "Eclampsia en el puerperio"
  },
  {
    "code": "O15.9",
    "description": "Eclampsia, en per√≠odo no especificado"
  },
  {
    "code": "O20.0",
    "description": "Amenaza de aborto"
  },
  {
    "code": "O20.8",
    "description": "Otras hemorragias precoces del embarazo"
  },
  {
    "code": "O20.9",
    "description": "Hemorragia precoz del embarazo, sin otra especificaci√≥n"
  },
  {
    "code": "O21.0",
    "description": "Hiperemesis grav√≠dica leve"
  },
  {
    "code": "O21.1",
    "description": "Hiperemesis grav√≠dica con trastornos metab√≥licos"
  },
  {
    "code": "O21.2",
    "description": "Hiperemesis grav√≠dica tard√≠a"
  },
  {
    "code": "O21.8",
    "description": "Otros v√≥mitos que complican el embarazo"
  },
  {
    "code": "O21.9",
    "description": "V√≥mitos del embarazo, no especificados"
  },
  {
    "code": "O22.0",
    "description": "Venas varicosas de los miembros inferiores en el embarazo"
  },
  {
    "code": "O22.1",
    "description": "V√°rices genitales en el embarazo"
  },
  {
    "code": "O22.2",
    "description": "Tromboflebitis superficial en el embarazo"
  },
  {
    "code": "O22.3",
    "description": "Flebotrombosis profunda en el embarazo"
  },
  {
    "code": "O22.4",
    "description": "Hemorroides en el embarazo"
  },
  {
    "code": "O22.5",
    "description": "Trombosis venosa cerebral en el embarazo"
  },
  {
    "code": "O22.8",
    "description": "Otras complicaciones venosas en el embarazo"
  },
  {
    "code": "O22.9",
    "description": "Complicaci√≥n venosa no especificada en el embarazo"
  },
  {
    "code": "O23.0",
    "description": "Infecci√≥n del ri√±√≥n en el embarazo"
  },
  {
    "code": "O23.1",
    "description": "Infecci√≥n de la vejiga urinaria en el embarazo"
  },
  {
    "code": "O23.2",
    "description": "Infecci√≥n de la uretra en el embarazo"
  },
  {
    "code": "O23.3",
    "description": "Infecci√≥n de otras partes de las v√≠as urinarias en el embarazo"
  },
  {
    "code": "O23.4",
    "description": "Infecci√≥n no especificada de las v√≠as urinarias en el embarazo"
  },
  {
    "code": "O23.5",
    "description": "Infecci√≥n genital en el embarazo"
  },
  {
    "code": "O23.9",
    "description": "Otras infecciones y las no especificadas de las v√≠as genitourinarias en el embarazo"
  },
  {
    "code": "O24.0",
    "description": "Diabetes mellitus preexistente insulinodependiente, en el embarazo"
  },
  {
    "code": "O24.1",
    "description": "Diabetes mellitus preexistente no insulinodependiente, en el embarazo"
  },
  {
    "code": "O24.2",
    "description": "Diabetes mellitus preexistente relacionada con desnutrici√≥n, en el embarazo"
  },
  {
    "code": "O24.3",
    "description": "Diabetes mellitus preexistente, sin otra especificaci√≥n, en el embarazo"
  },
  {
    "code": "O24.4",
    "description": "Diabetes mellitus que se origina con el embarazo"
  },
  {
    "code": "O24.9",
    "description": "Diabetes mellitus no especificada, en el embarazo"
  },
  {
    "code": "O26.0",
    "description": "Aumento excesivo de peso en el embarazo"
  },
  {
    "code": "O26.1",
    "description": "Aumento peque√±o de peso en el embarazo"
  },
  {
    "code": "O26.2",
    "description": "Atenci√≥n del embarazo en una abortadora habitual"
  },
  {
    "code": "O26.3",
    "description": "Retenci√≥n de dispositivo anticonceptivo intrauterino en el embarazo"
  },
  {
    "code": "O26.4",
    "description": "Herpes gestacional"
  },
  {
    "code": "O26.5",
    "description": "S√≠ndrome de hipotensi√≥n materna"
  },
  {
    "code": "O26.6",
    "description": "Trastornos del h√≠gado en el embarazo, el parto y el puerperio"
  },
  {
    "code": "O26.7",
    "description": "Subluxaci√≥n de la s√≠nfisis (del pubis) en el embarazo, el parto y el puerperio"
  },
  {
    "code": "O26.8",
    "description": "Otras complicaciones especificadas relacionadas con el embarazo"
  },
  {
    "code": "O26.9",
    "description": "Complicaci√≥n relacionada con el embarazo, no especificada"
  },
  {
    "code": "O28.0",
    "description": "Hallazgo hematol√≥gico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.1",
    "description": "Hallazgo bioqu√≠mico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.2",
    "description": "Hallazgo citol√≥gico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.3",
    "description": "Hallazgo ultras√≥nico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.4",
    "description": "Hallazgo radiol√≥gico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.5",
    "description": "Hallazgo cromos√≥mico o gen√©tico anormal en el examen prenatal de la madre"
  },
  {
    "code": "O28.8",
    "description": "Otros hallazgos anormales en el examen prenatal de la madre"
  },
  {
    "code": "O28.9",
    "description": "Hallazgo anormal no especificado en el examen prenatal de la madre"
  },
  {
    "code": "O29.0",
    "description": "Complicaciones pulmonares de la anestesia administrada durante el embarazo"
  },
  {
    "code": "O29.1",
    "description": "Complicaciones card√≠acas de la anestesia administrada durante el embarazo"
  },
  {
    "code": "O29.2",
    "description": "Complicaciones del sistema nervioso central debidas a la anestesia administrada durante el embarazo"
  },
  {
    "code": "O29.3",
    "description": "Reacci√≥n t√≥xica a la anestesia local administrada durante el embarazo"
  },
  {
    "code": "O29.4",
    "description": "Cefalalgia inducida por la anestesia espinal o epidural administradas durante el embarazo"
  },
  {
    "code": "O29.5",
    "description": "Otras complicaciones de la anestesia espinal o epidural administradas durante el embarazo"
  },
  {
    "code": "O29.6",
    "description": "Falla o dificultad en la intubaci√≥n durante el embarazo"
  },
  {
    "code": "O29.8",
    "description": "Otras complicaciones de la anestesia administrada durante el embarazo"
  },
  {
    "code": "O29.9",
    "description": "Complicaci√≥n no especificada de la anestesia administrada durante el embarazo"
  },
  {
    "code": "O30.0",
    "description": "Embarazo doble"
  },
  {
    "code": "O30.1",
    "description": "Embarazo triple"
  },
  {
    "code": "O30.2",
    "description": "Embarazo cu√°druple"
  },
  {
    "code": "O30.8",
    "description": "Otros embarazos m√∫ltiples"
  },
  {
    "code": "O30.9",
    "description": "Embarazo m√∫ltiple, no especificado"
  },
  {
    "code": "O31.0",
    "description": "Feto papir√°ceo"
  },
  {
    "code": "O31.1",
    "description": "Embarazo que contin√∫a despu√©s del aborto de un feto o m√°s"
  },
  {
    "code": "O31.2",
    "description": "Embarazo que contin√∫a despu√©s de la muerte intrauterina de un feto o m√°s"
  },
  {
    "code": "O31.8",
    "description": "Otras complicaciones espec√≠ficas del embarazo m√∫ltiple"
  },
  {
    "code": "O32.0",
    "description": "Atenci√≥n materna por posici√≥n fetal inestable"
  },
  {
    "code": "O32.1",
    "description": "Atenci√≥n materna por presentaci√≥n de nalgas"
  },
  {
    "code": "O32.2",
    "description": "Atenci√≥n materna por posici√≥n fetal oblicua o transversa"
  },
  {
    "code": "O32.3",
    "description": "Atenci√≥n materna por presentaci√≥n de cara, de frente o de ment√≥n"
  },
  {
    "code": "O32.4",
    "description": "Atenci√≥n materna por cabeza alta en gestaci√≥n a t√©rmino"
  },
  {
    "code": "O32.5",
    "description": "Atenci√≥n materna por embarazo m√∫ltiple con presentaci√≥n anormal de un feto o m√°s"
  },
  {
    "code": "O32.6",
    "description": "Atenci√≥n materna por presentaci√≥n compuesta"
  },
  {
    "code": "O32.8",
    "description": "Atenci√≥n materna por otras presentaciones anormales del feto"
  },
  {
    "code": "O32.9",
    "description": "Atenci√≥n materna por presentaci√≥n anormal no especificada del feto"
  },
  {
    "code": "O33.0",
    "description": "Atenci√≥n materna por desproporci√≥n debida a deformidad de la pelvis √≥sea en la madre"
  },
  {
    "code": "O33.1",
    "description": "Atenci√≥n materna por desproporci√≥n debida a estrechez general de la pelvis"
  },
  {
    "code": "O33.2",
    "description": "Atenci√≥n materna por desproporci√≥n debida a disminuci√≥n del estrecho superior de la pelvis"
  },
  {
    "code": "O33.3",
    "description": "Atenci√≥n materna por desproporci√≥n debida a disminuci√≥n del estrecho inferior de la pelvis"
  },
  {
    "code": "O33.4",
    "description": "Atenci√≥n materna por desproporci√≥n fetopelviana de origen mixto, materno y fetal"
  },
  {
    "code": "O33.5",
    "description": "Atenci√≥n materna por desproporci√≥n debida a feto demasiado grande"
  },
  {
    "code": "O33.6",
    "description": "Atenci√≥n materna por desproporci√≥n debida a feto hidrocef√°lico"
  },
  {
    "code": "O33.7",
    "description": "Atenci√≥n materna por desproporci√≥n debida a otra deformidad fetal"
  },
  {
    "code": "O33.8",
    "description": "Atenci√≥n materna por desproporci√≥n de otro origen"
  },
  {
    "code": "O33.9",
    "description": "Atenci√≥n materna por desproporci√≥n de origen no especificado"
  },
  {
    "code": "O34.0",
    "description": "Atenci√≥n materna por anomal√≠a cong√©nita del √∫tero"
  },
  {
    "code": "O34.1",
    "description": "Atenci√≥n materna por tumor del cuerpo del √∫tero"
  },
  {
    "code": "O34.2",
    "description": "Atenci√≥n materna por cicatriz uterina debida a cirug√≠a previa"
  },
  {
    "code": "O34.3",
    "description": "Atenci√≥n materna por incompetencia del cuello uterino"
  },
  {
    "code": "O34.4",
    "description": "Atenci√≥n materna por otra anormalidad del cuello uterino"
  },
  {
    "code": "O34.5",
    "description": "Atenci√≥n materna por otras anormalidades del √∫tero gr√°vido"
  },
  {
    "code": "O34.6",
    "description": "Atenci√≥n materna por anormalidad de la vagina"
  },
  {
    "code": "O34.7",
    "description": "Atenci√≥n materna por anormalidad de la vulva y del perineo"
  },
  {
    "code": "O34.8",
    "description": "Atenci√≥n materna por otras anormalidades de los √≥rganos pelvianos"
  },
  {
    "code": "O34.9",
    "description": "Atenci√≥n materna por anormalidad no especificada de √≥rgano pelviano"
  },
  {
    "code": "O35.0",
    "description": "Atenci√≥n materna por (presunta) malformaci√≥n del sistema nervioso central en el feto"
  },
  {
    "code": "O35.1",
    "description": "Atenci√≥n materna por (presunta) anormalidad cromos√≥mica en el feto"
  },
  {
    "code": "O35.2",
    "description": "Atenci√≥n materna por (presunta) enfermedad hereditaria en el feto"
  },
  {
    "code": "O35.3",
    "description": "Atenci√≥n materna por (presunta) lesi√≥n fetal debida a enfermedad v√≠rica en la madre"
  },
  {
    "code": "O35.4",
    "description": "Atenci√≥n materna por (presunta) lesi√≥n al feto debida al alcohol"
  },
  {
    "code": "O35.5",
    "description": "Atenci√≥n materna por (presunta) lesi√≥n fetal debida a drogas"
  },
  {
    "code": "O35.6",
    "description": "Atenci√≥n materna por (presunta) lesi√≥n al feto debida a radiaci√≥n"
  },
  {
    "code": "O35.7",
    "description": "Atenci√≥n materna por (presunta) lesi√≥n fetal debida a otros procedimientos m√©dicos"
  },
  {
    "code": "O35.8",
    "description": "Atenci√≥n materna por otras (presuntas) anormalidades y lesiones fetales"
  },
  {
    "code": "O35.9",
    "description": "Atenci√≥n materna por (presunta) anormalidad y lesi√≥n fetal no especificada"
  },
  {
    "code": "O36.0",
    "description": "Atenci√≥n materna por isoinmunizaci√≥n rhesus"
  },
  {
    "code": "O36.1",
    "description": "Atenci√≥n materna por otra isoinmunizaci√≥n"
  },
  {
    "code": "O36.2",
    "description": "Atenci√≥n materna por hidropes√≠a fetal"
  },
  {
    "code": "O36.3",
    "description": "Atenci√≥n materna por signos de hipoxia fetal"
  },
  {
    "code": "O36.4",
    "description": "Atenci√≥n materna por muerte intrauterina"
  },
  {
    "code": "O36.5",
    "description": "Atenci√≥n materna por d√©ficit del crecimiento fetal"
  },
  {
    "code": "O36.6",
    "description": "Atenci√≥n materna por crecimiento fetal excesivo"
  },
  {
    "code": "O36.7",
    "description": "Atenci√≥n materna por feto viable en embarazo abdominal"
  },
  {
    "code": "O36.8",
    "description": "Atenci√≥n materna por otros problemas fetales especificados"
  },
  {
    "code": "O36.9",
    "description": "Atenci√≥n materna por problemas fetales no especificados"
  },
  {
    "code": "O41.0",
    "description": "Oligohidramnios"
  },
  {
    "code": "O41.1",
    "description": "Infecci√≥n de la bolsa amni√≥tica o de las membranas"
  },
  {
    "code": "O41.8",
    "description": "Otros trastornos especificados del l√≠quido amni√≥tico y de las membranas"
  },
  {
    "code": "O41.9",
    "description": "Trastorno del l√≠quido amni√≥tico y de las membranas, no especificado"
  },
  {
    "code": "O42.0",
    "description": "Ruptura prematura de las membranas, e inicio del trabajo de parto dentro de las 24 horas"
  },
  {
    "code": "O42.1",
    "description": "Ruptura prematura de las membranas, e inicio del trabajo de parto despu√©s de las 24 horas"
  },
  {
    "code": "O42.2",
    "description": "Ruptura prematura de las membranas, trabajo de parto retrasado por la terap√©utica"
  },
  {
    "code": "O42.9",
    "description": "Ruptura prematura de las membranas, sin otra especificaci√≥n"
  },
  {
    "code": "O43.0",
    "description": "S√≠ndrome de transfusi√≥n placentaria"
  },
  {
    "code": "O43.1",
    "description": "Malformaci√≥n de la placenta"
  },
  {
    "code": "O43.8",
    "description": "Otros trastornos placentarios"
  },
  {
    "code": "O43.9",
    "description": "Trastorno de la placenta, no especificado"
  },
  {
    "code": "O44.0",
    "description": "Placenta previa con especificaci√≥n de que no hubo hemorragia"
  },
  {
    "code": "O44.1",
    "description": "Placenta previa con hemorragia"
  },
  {
    "code": "O45.0",
    "description": "Desprendimiento prematuro de la placenta con defecto de la coagulaci√≥n"
  },
  {
    "code": "O45.8",
    "description": "Otros desprendimientos prematuros de la placenta"
  },
  {
    "code": "O45.9",
    "description": "Desprendimiento prematuro de la placenta, sin otra especificaci√≥n"
  },
  {
    "code": "O46.0",
    "description": "Hemorragia anteparto con defecto de la coagulaci√≥n"
  },
  {
    "code": "O46.8",
    "description": "Otras hemorragias anteparto"
  },
  {
    "code": "O46.9",
    "description": "Hemorragia anteparto, no especificada"
  },
  {
    "code": "O47.0",
    "description": "Falso trabajo de parto antes de las 37 semanas completas de gestaci√≥n"
  },
  {
    "code": "O47.1",
    "description": "Falso trabajo de parto a las 37 y m√°s semanas completas de gestaci√≥n"
  },
  {
    "code": "O47.9",
    "description": "Falso trabajo de parto, sin otra especificaci√≥n"
  },
  {
    "code": "O61.0",
    "description": "Fracaso de la inducci√≥n m√©dica del trabajo de parto"
  },
  {
    "code": "O61.1",
    "description": "Fracaso de la inducci√≥n instrumental del trabajo de parto"
  },
  {
    "code": "O61.8",
    "description": "Otros fracasos de la inducci√≥n del trabajo de parto"
  },
  {
    "code": "O61.9",
    "description": "Fracaso no especificado de la inducci√≥n del trabajo de parto"
  },
  {
    "code": "O62.0",
    "description": "Contracciones primarias inadecuadas"
  },
  {
    "code": "O62.1",
    "description": "Inercia uterina secundaria"
  },
  {
    "code": "O62.2",
    "description": "Otras inercias uterinas"
  },
  {
    "code": "O62.3",
    "description": "Trabajo de parto precipitado"
  },
  {
    "code": "O62.4",
    "description": "Contracciones uterinas hipert√≥nicas, incoordinadas y prolongadas"
  },
  {
    "code": "O62.8",
    "description": "Otras anomal√≠as din√°micas del trabajo de parto"
  },
  {
    "code": "O62.9",
    "description": "Anomal√≠a din√°mica del trabajo de parto, no especificada"
  },
  {
    "code": "O63.0",
    "description": "Prolongaci√≥n del primer per√≠odo (del trabajo de parto)"
  },
  {
    "code": "O63.1",
    "description": "Prolongaci√≥n del segundo per√≠odo (del trabajo de parto)"
  },
  {
    "code": "O63.2",
    "description": "Retraso de la expulsi√≥n del segundo gemelo, del tercero, etc."
  },
  {
    "code": "O63.9",
    "description": "Trabajo de parto prolongado, no especificado"
  },
  {
    "code": "O64.0",
    "description": "Trabajo de parto obstruido debido a rotaci√≥n incompleta de la cabeza fetal"
  },
  {
    "code": "O64.1",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n de nalgas"
  },
  {
    "code": "O64.2",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n de cara"
  },
  {
    "code": "O64.3",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n de frente"
  },
  {
    "code": "O64.4",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n de hombro"
  },
  {
    "code": "O64.5",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n compuesta"
  },
  {
    "code": "O64.8",
    "description": "Trabajo de parto obstruido debido a otras presentaciones anormales del feto"
  },
  {
    "code": "O64.9",
    "description": "Trabajo de parto obstruido debido a presentaci√≥n anormal del feto no especificada"
  },
  {
    "code": "O65.0",
    "description": "Trabajo de parto obstruido debido a deformidad de la pelvis"
  },
  {
    "code": "O65.1",
    "description": "Trabajo de parto obstruido debido a estrechez general de la pelvis"
  },
  {
    "code": "O65.2",
    "description": "Trabajo de parto obstruido debido a disminuci√≥n del estrecho superior de la pelvis"
  },
  {
    "code": "O65.3",
    "description": "Trabajo de parto obstruido debido a disminuci√≥n del estrecho inferior de la pelvis"
  },
  {
    "code": "O65.4",
    "description": "Trabajo de parto obstruido debido a desproporci√≥n fetopelviana, sin otra especificaci√≥n"
  },
  {
    "code": "O65.5",
    "description": "Trabajo de parto obstruido debido a anomal√≠as de los √≥rganos pelvianos maternos"
  },
  {
    "code": "O65.8",
    "description": "Trabajo de parto obstruido debido a otras anomal√≠as pelvianas maternas"
  },
  {
    "code": "O65.9",
    "description": "Trabajo de parto obstruido debido a anomal√≠a pelviana no especificada"
  },
  {
    "code": "O66.0",
    "description": "Trabajo de parto obstruido debido a distocia de hombros"
  },
  {
    "code": "O66.1",
    "description": "Trabajo de parto obstruido debido a distocia gemelar"
  },
  {
    "code": "O66.2",
    "description": "Trabajo de parto obstruido debido a distocia por feto inusualmente grande"
  },
  {
    "code": "O66.3",
    "description": "Trabajo de parto obstruido debido a otras anormalidades del feto"
  },
  {
    "code": "O66.4",
    "description": "Fracaso de la prueba del trabajo de parto, no especificada"
  },
  {
    "code": "O66.5",
    "description": "Fracaso no especificado de la aplicaci√≥n de f√≥rceps o de ventosa extractora"
  },
  {
    "code": "O66.8",
    "description": "Otras obstrucciones especificadas del trabajo de parto"
  },
  {
    "code": "O66.9",
    "description": "Trabajo de parto obstruido, sin otra especificaci√≥n"
  },
  {
    "code": "O67.0",
    "description": "Hemorragia intraparto con defectos de la coagulaci√≥n"
  },
  {
    "code": "O67.8",
    "description": "Otras hemorragias intraparto"
  },
  {
    "code": "O67.9",
    "description": "Hemorragia intraparto, no especificada"
  },
  {
    "code": "O68.0",
    "description": "Trabajo de parto y parto complicados por anomal√≠a de la frecuencia card√≠aca fetal"
  },
  {
    "code": "O68.1",
    "description": "Trabajo de parto y parto complicados por la presencia de meconio en el l√≠quido amni√≥tico"
  },
  {
    "code": "O68.2",
    "description": ""
  },
  {
    "code": "O68.3",
    "description": "Trabajo de parto y parto complicados por evidencia bioqu√≠mica de sufrimiento fetal"
  },
  {
    "code": "O68.8",
    "description": "Trabajo de parto y parto complicados por otras evidencias de sufrimiento fetal"
  },
  {
    "code": "O68.9",
    "description": "Trabajo de parto y parto complicados por sufrimiento fetal, sin otra especificaci√≥n"
  },
  {
    "code": "O69.0",
    "description": "Trabajo de parto y parto complicados por prolapso del cord√≥n umbilical"
  },
  {
    "code": "O69.1",
    "description": "Trabajo de parto y parto complicados por circular pericervical del cord√≥n, con compresi√≥n"
  },
  {
    "code": "O69.2",
    "description": "Trabajo de parto y parto complicados por otros enredos del cord√≥n"
  },
  {
    "code": "O69.3",
    "description": "Trabajo de parto y parto complicados por cord√≥n umbilical corto"
  },
  {
    "code": "O69.4",
    "description": "Trabajo de parto y parto complicados por vasa previa"
  },
  {
    "code": "O69.5",
    "description": "Trabajo de parto y parto complicados por lesi√≥n vascular del cord√≥n"
  },
  {
    "code": "O69.8",
    "description": "Trabajo de parto y parto complicados por otros problemas del cord√≥n umbilical"
  },
  {
    "code": "O69.9",
    "description": "Trabajo de parto y parto complicados por problemas no especificados del cord√≥n umbilical"
  },
  {
    "code": "O70.0",
    "description": "Desgarro perineal de primer grado durante el parto"
  },
  {
    "code": "O70.1",
    "description": "Desgarro perineal de segundo grado durante el parto"
  },
  {
    "code": "O70.2",
    "description": "Desgarro perineal de tercer grado durante el parto"
  },
  {
    "code": "O70.3",
    "description": "Desgarro perineal de cuarto grado durante el parto"
  },
  {
    "code": "O70.9",
    "description": "Desgarro perineal durante el parto, de grado no especificado"
  },
  {
    "code": "O71.0",
    "description": "Ruptura del √∫tero antes del inicio del trabajo de parto"
  },
  {
    "code": "O71.1",
    "description": "Ruptura del √∫tero durante el trabajo de parto"
  },
  {
    "code": "O71.2",
    "description": "Inversi√≥n del √∫tero, postparto"
  },
  {
    "code": "O71.3",
    "description": "Desgarro obst√©trico del cuello uterino"
  },
  {
    "code": "O71.4",
    "description": "Desgarro vaginal obst√©trico alto, s√≥lo"
  },
  {
    "code": "O71.5",
    "description": "Otros traumatismos obst√©tricos de los √≥rganos pelvianos"
  },
  {
    "code": "O71.6",
    "description": "Traumatismo obst√©trico de los ligamentos y articulaciones de la pelvis"
  },
  {
    "code": "O71.7",
    "description": "Hematoma obst√©trico de la pelvis"
  },
  {
    "code": "O71.8",
    "description": "Otros traumas obst√©tricos especificados"
  },
  {
    "code": "O71.9",
    "description": "Trauma obst√©trico, no especificado"
  },
  {
    "code": "O72.0",
    "description": "Hemorragia del tercer per√≠odo del parto"
  },
  {
    "code": "O72.1",
    "description": "Otras hemorragias postparto inmediatas"
  },
  {
    "code": "O72.2",
    "description": "Hemorragia postparto secundaria o tard√≠a"
  },
  {
    "code": "O72.3",
    "description": "Defecto de la coagulaci√≥n postparto"
  },
  {
    "code": "O73.0",
    "description": "Retenci√≥n de la placenta sin hemorragia"
  },
  {
    "code": "O73.1",
    "description": "Retenci√≥n de fragmentos de la placenta o de las membranas, sin hemorragia"
  },
  {
    "code": "O74.0",
    "description": "Neumonitis por aspiraci√≥n debida a la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.1",
    "description": "Otras complicaciones pulmonares debidas a la anestesia administrada  durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.2",
    "description": "Complicaciones card√≠acas de la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.3",
    "description": "Complicaciones del sistema nervioso central por la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.4",
    "description": "Reacci√≥n t√≥xica a la anestesia local administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.5",
    "description": "Cefalalgia inducida por la anestesia espinal o epidural administradas  durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.6",
    "description": "Otras complicaciones de la anestesia espinal o epidural administradas durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.7",
    "description": "Falla o dificultad en la intubaci√≥n durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.8",
    "description": "Otras complicaciones de la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O74.9",
    "description": "Complicaci√≥n no especificada de la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O75.0",
    "description": "Sufrimiento materno durante el trabajo de parto y el parto"
  },
  {
    "code": "O75.1",
    "description": "Choque durante o despu√©s del trabajo de parto y el parto"
  },
  {
    "code": "O75.2",
    "description": "Pirexia durante el trabajo de parto, no clasificada en otra parte"
  },
  {
    "code": "O75.3",
    "description": "Otras infecciones durante el trabajo de parto"
  },
  {
    "code": "O75.4",
    "description": "Otras complicaciones de la cirug√≠a y de otros procedimientos obst√©tricos"
  },
  {
    "code": "O75.5",
    "description": "Retraso del parto despu√©s de la ruptura artificial de las membranas"
  },
  {
    "code": "O75.6",
    "description": "Retraso del parto despu√©s de la ruptura espont√°nea o no especificada de las membranas"
  },
  {
    "code": "O75.7",
    "description": "Parto vaginal posterior a una ces√°rea previa"
  },
  {
    "code": "O75.8",
    "description": "Otras complicaciones especificadas del trabajo de parto y del parto"
  },
  {
    "code": "O75.9",
    "description": "Complicaci√≥n no especificada del trabajo de parto y del parto"
  },
  {
    "code": "O80.0",
    "description": "Parto √∫nico espont√°neo, presentaci√≥n cef√°lica de v√©rtice"
  },
  {
    "code": "O80.1",
    "description": "Parto √∫nico espont√°neo, presentaci√≥n de nalgas o pod√°lica"
  },
  {
    "code": "O80.8",
    "description": "Parto √∫nico espont√°neo, otras presentaciones"
  },
  {
    "code": "O80.9",
    "description": "Parto √∫nico espont√°neo, sin otra especificaci√≥n"
  },
  {
    "code": "O81.0",
    "description": "Parto con f√≥rceps bajo"
  },
  {
    "code": "O81.1",
    "description": "Parto con f√≥rceps medio"
  },
  {
    "code": "O81.2",
    "description": "Parto con f√≥rceps medio con rotaci√≥n"
  },
  {
    "code": "O81.3",
    "description": "Parto con f√≥rceps de otros tipos y los no especificados"
  },
  {
    "code": "O81.4",
    "description": "Parto con ventosa extractora"
  },
  {
    "code": "O81.5",
    "description": "Parto con combinaci√≥n de f√≥rceps y ventosa extractora"
  },
  {
    "code": "O82.0",
    "description": "Parto por ces√°rea electiva"
  },
  {
    "code": "O82.1",
    "description": "Parto por ces√°rea de emergencia"
  },
  {
    "code": "O82.2",
    "description": "Parto por ces√°rea con histerectom√≠a"
  },
  {
    "code": "O82.8",
    "description": "Otros partos √∫nicos por ces√°rea"
  },
  {
    "code": "O82.9",
    "description": "Parto por ces√°rea, sin otra especificaci√≥n"
  },
  {
    "code": "O83.0",
    "description": "Extracci√≥n de nalgas"
  },
  {
    "code": "O83.1",
    "description": "Otros partos √∫nicos asistidos, de nalgas"
  },
  {
    "code": "O83.2",
    "description": "Otros partos √∫nicos con ayuda de manipulaci√≥n obst√©trica"
  },
  {
    "code": "O83.3",
    "description": "Parto de feto viable en embarazo abdominal"
  },
  {
    "code": "O83.4",
    "description": "Operaci√≥n destructiva para facilitar el parto"
  },
  {
    "code": "O83.8",
    "description": "Otros partos √∫nicos asistidos especificados"
  },
  {
    "code": "O83.9",
    "description": "Parto √∫nico asistido, sin otra especificaci√≥n"
  },
  {
    "code": "O84.0",
    "description": "Parto m√∫ltiple, todos espont√°neos"
  },
  {
    "code": "O84.1",
    "description": "Parto m√∫ltiple, todos por f√≥rceps y ventosa extractora"
  },
  {
    "code": "O84.2",
    "description": "Parto m√∫ltiple, todos por ces√°rea"
  },
  {
    "code": "O84.8",
    "description": "Otros partos m√∫ltiples"
  },
  {
    "code": "O84.9",
    "description": "Parto m√∫ltiple, no especificado"
  },
  {
    "code": "O86.0",
    "description": "Infecci√≥n de herida quir√∫rgica obst√©trica"
  },
  {
    "code": "O86.1",
    "description": "Otras infecciones genitales consecutivas al parto"
  },
  {
    "code": "O86.2",
    "description": "Infecci√≥n de las v√≠as urinarias consecutiva al parto"
  },
  {
    "code": "O86.3",
    "description": "Otras infecciones de las v√≠as genitourinarias consecutivas al parto"
  },
  {
    "code": "O86.4",
    "description": "Pirexia de origen desconocido consecutiva al parto"
  },
  {
    "code": "O86.8",
    "description": "Otras infecciones puerperales especificadas"
  },
  {
    "code": "O87.0",
    "description": "Tromboflebitis superficial en el puerperio"
  },
  {
    "code": "O87.1",
    "description": "Flebotrombosis profunda en el puerperio"
  },
  {
    "code": "O87.2",
    "description": "Hemorroides en el puerperio"
  },
  {
    "code": "O87.3",
    "description": "Trombosis venosa cerebral en el puerperio"
  },
  {
    "code": "O87.8",
    "description": "Otras complicaciones venosas en el puerperio"
  },
  {
    "code": "O87.9",
    "description": "Complicaci√≥n venosa en el puerperio, no especificada"
  },
  {
    "code": "O88.0",
    "description": "Embolia gaseosa, obst√©trica"
  },
  {
    "code": "O88.1",
    "description": "Embolia de l√≠quido amni√≥tico"
  },
  {
    "code": "O88.2",
    "description": "Embolia de co√°gulo sangu√≠neo, obst√©trica"
  },
  {
    "code": "O88.3",
    "description": "Embolia s√©ptica y pi√©mica, obst√©trica"
  },
  {
    "code": "O88.8",
    "description": "Otras embolias obst√©tricas"
  },
  {
    "code": "O89.0",
    "description": "Complicaciones pulmonares de la anestesia administrada durante el puerperio"
  },
  {
    "code": "O89.1",
    "description": "Complicaciones card√≠acas de la anestesia administrada durante el puerperio"
  },
  {
    "code": "O89.2",
    "description": "Complicaciones del sistema nervioso central debidas a la anestesia administrada durante el puerperio"
  },
  {
    "code": "O89.3",
    "description": "Reacci√≥n t√≥xica a la anestesia local administrada durante el puerperio"
  },
  {
    "code": "O89.4",
    "description": "Cefalalgia inducida por la anestesia espinal o epidural administradas durante el puerperio"
  },
  {
    "code": "O89.5",
    "description": "Otras complicaciones de la anestesia espinal o epidural administradas durante el puerperio"
  },
  {
    "code": "O89.6",
    "description": "Falla o dificultad de intubaci√≥n durante el puerperio"
  },
  {
    "code": "O89.8",
    "description": "Otras complicaciones de la anestesia administrada durante el puerperio"
  },
  {
    "code": "O89.9",
    "description": "Complicaci√≥n no especificada de la anestesia administrada durante el puerperio"
  },
  {
    "code": "O90.0",
    "description": "Dehiscencia de sutura de ces√°rea"
  },
  {
    "code": "O90.1",
    "description": "Dehiscencia de sutura obst√©trica perineal"
  },
  {
    "code": "O90.2",
    "description": "Hematoma de herida quir√∫rgica obst√©trica"
  },
  {
    "code": "O90.3",
    "description": "Cardiomiopat√≠a en el puerperio"
  },
  {
    "code": "O90.4",
    "description": "Insuficiencia renal aguda postparto"
  },
  {
    "code": "O90.5",
    "description": "Tiroiditis postparto"
  },
  {
    "code": "O90.8",
    "description": "Otras complicaciones puerperales, no clasificadas en otra parte"
  },
  {
    "code": "O90.9",
    "description": "Complicaci√≥n puerperal, no especificada"
  },
  {
    "code": "O91.0",
    "description": "Infecciones del pez√≥n asociadas con el parto"
  },
  {
    "code": "O91.1",
    "description": "Absceso de la mama asociado con el parto"
  },
  {
    "code": "O91.2",
    "description": "Mastitis no purulenta asociada con el parto"
  },
  {
    "code": "O92.0",
    "description": "Retracci√≥n del pez√≥n asociada con el parto"
  },
  {
    "code": "O92.1",
    "description": "Fisuras del pez√≥n asociadas con el parto"
  },
  {
    "code": "O92.2",
    "description": "Otros trastornos de la mama y los no especificados asociados con el parto"
  },
  {
    "code": "O92.3",
    "description": "Agalactia"
  },
  {
    "code": "O92.4",
    "description": "Hipogalactia"
  },
  {
    "code": "O92.5",
    "description": "Supresi√≥n de la lactancia"
  },
  {
    "code": "O92.6",
    "description": "Galactorrea"
  },
  {
    "code": "O92.7",
    "description": "Otros trastornos y los no especificados de la lactancia"
  },
  {
    "code": "O98.0",
    "description": "Tuberculosis que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.1",
    "description": "S√≠filis que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.2",
    "description": "Gonorrea que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.3",
    "description": ""
  },
  {
    "code": "O98.4",
    "description": "Hepatitis viral que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.5",
    "description": "Otras enfermedades virales que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.6",
    "description": "Enfermedades causadas por protozoarios que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.8",
    "description": "Otras enfermedades infecciosas y parasitarias maternas que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O98.9",
    "description": "Enfermedad infecciosa y parasitaria materna no especificada que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.0",
    "description": "Anemia que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.1",
    "description": ""
  },
  {
    "code": "O99.2",
    "description": "Enfermedades endocrinas, de la nutrici√≥n y del metabolismo que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.3",
    "description": "Trastornos mentales y enfermedades del sistema nervioso que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.4",
    "description": "Enfermedades del sistema circulatorio que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.5",
    "description": "Enfermedades del sistema respiratorio que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.6",
    "description": "Enfermedades del sistema digestivo que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.7",
    "description": "Enfermedades de la piel y del tejido subcut√°neo que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "O99.8",
    "description": "Otras enfermedades especificadas y afecciones que complican el embarazo, el parto y el puerperio"
  },
  {
    "code": "P00.0",
    "description": "Feto y reci√©n nacido afectados por trastornos hipertensivos de la madre"
  },
  {
    "code": "P00.1",
    "description": "Feto y reci√©n nacido afectados por enfermedades renales y de las v√≠as urinarias de la madre"
  },
  {
    "code": "P00.2",
    "description": "Feto y reci√©n nacido afectados por enfermedades infecciosas y parasitarias de la madre"
  },
  {
    "code": "P00.3",
    "description": "Feto y reci√©n nacido afectados por otras enfermedades circulatorias y respiratorias de la madre"
  },
  {
    "code": "P00.4",
    "description": "Feto y reci√©n nacido afectados por trastornos nutricionales de la madre"
  },
  {
    "code": "P00.5",
    "description": "Feto y reci√©n nacido afectados por traumatismo de la madre"
  },
  {
    "code": "P00.6",
    "description": "Feto y reci√©n nacido afectados por procedimiento quir√∫rgico en la madre"
  },
  {
    "code": "P00.7",
    "description": "Feto y reci√©n nacido afectados por otro procedimiento m√©dico en la madre, no clasificado en otra parte"
  },
  {
    "code": "P00.8",
    "description": "Feto y reci√©n nacido afectados por otras afecciones maternas"
  },
  {
    "code": "P00.9",
    "description": "Feto y reci√©n nacido afectados por afecci√≥n materna no especificada"
  },
  {
    "code": "P01.0",
    "description": "Feto y reci√©n nacido afectados por incompetencia del cuello uterino"
  },
  {
    "code": "P01.1",
    "description": "Feto y reci√©n nacido afectados por ruptura prematura de las membranas"
  },
  {
    "code": "P01.2",
    "description": "Feto y reci√©n nacido afectados por oligohidramnios"
  },
  {
    "code": "P01.3",
    "description": "Feto y reci√©n nacido afectados por polihidramnios"
  },
  {
    "code": "P01.4",
    "description": "Feto y reci√©n nacido afectados por embarazo ect√≥pico"
  },
  {
    "code": "P01.5",
    "description": "Feto y reci√©n nacido afectados por embarazo m√∫ltiple"
  },
  {
    "code": "P01.6",
    "description": "Feto y reci√©n nacido afectados por muerte materna"
  },
  {
    "code": "P01.7",
    "description": "Feto y reci√©n nacido afectados por presentaci√≥n an√≥mala antes del trabajo de parto"
  },
  {
    "code": "P01.8",
    "description": "Feto y reci√©n nacido afectados por otras complicaciones maternas del embarazo"
  },
  {
    "code": "P01.9",
    "description": "Feto y reci√©n nacido afectados por complicaciones maternas no especificadas del embarazo"
  },
  {
    "code": "P02.0",
    "description": "Feto y reci√©n nacido afectados por placenta previa"
  },
  {
    "code": "P02.1",
    "description": "Feto y reci√©n nacido afectados por otras formas de desprendimiento y de hemorragia placentarios"
  },
  {
    "code": "P02.2",
    "description": "Feto y reci√©n nacido afectados por otras anormalidades morfol√≥gicas y funcionales de la placenta y las no especificadas"
  },
  {
    "code": "P02.3",
    "description": "Feto y reci√©n nacido afectados por s√≠ndromes de transfusi√≥n placentaria"
  },
  {
    "code": "P02.4",
    "description": "Feto y reci√©n nacido afectados por prolapso del cord√≥n umbilical"
  },
  {
    "code": "P02.5",
    "description": "Feto y reci√©n nacido afectados por otra compresi√≥n del cord√≥n umbilical"
  },
  {
    "code": "P02.6",
    "description": "Feto y reci√©n nacido afectados por otras complicaciones del cord√≥n umbilical y las no especificadas"
  },
  {
    "code": "P02.7",
    "description": "Feto y reci√©n nacido afectados por corioamnionitis"
  },
  {
    "code": "P02.8",
    "description": "Feto y reci√©n nacido afectados por otras anormalidades de las membranas"
  },
  {
    "code": "P02.9",
    "description": "Feto y reci√©n nacido afectados por anormalidad no especificada de las membranas"
  },
  {
    "code": "P03.0",
    "description": "Feto y reci√©n nacido afectados por parto y extracci√≥n de nalgas"
  },
  {
    "code": "P03.1",
    "description": ""
  },
  {
    "code": "P03.2",
    "description": "Feto y reci√©n nacido afectados por parto con f√≥rceps"
  },
  {
    "code": "P03.3",
    "description": "Feto y reci√©n nacido afectados por parto con ventosa extractora"
  },
  {
    "code": "P03.4",
    "description": "Feto y reci√©n nacido afectados por parto por ces√°rea"
  },
  {
    "code": "P03.5",
    "description": "Feto y reci√©n nacido afectados por parto precipitado"
  },
  {
    "code": "P03.6",
    "description": "Feto y reci√©n nacido afectados por contracciones uterinas anormales"
  },
  {
    "code": "P03.8",
    "description": "Feto y reci√©n nacido afectados por otras complicaciones especificadas del trabajo de parto y del parto"
  },
  {
    "code": "P03.9",
    "description": "Feto y reci√©n nacido afectados por complicaciones no especificadas del trabajo de parto y del parto"
  },
  {
    "code": "P04.0",
    "description": "Feto y reci√©n nacido afectados por anestesia y analgesia materna en el embarazo, en el trabajo de parto y en el parto"
  },
  {
    "code": "P04.1",
    "description": "Feto y reci√©n nacido afectados por otras medicaciones maternas"
  },
  {
    "code": "P04.2",
    "description": "Feto y reci√©n nacido afectados por tabaquismo de la madre"
  },
  {
    "code": "P04.3",
    "description": "Feto y reci√©n nacido afectados por alcoholismo de la madre"
  },
  {
    "code": "P04.4",
    "description": "Feto y reci√©n nacido afectados por drogradicci√≥n materna"
  },
  {
    "code": "P04.5",
    "description": "Feto y reci√©n nacido afectados por el uso materno de sustancias qu√≠micas nutricionales"
  },
  {
    "code": "P04.6",
    "description": "Feto y reci√©n nacido afectados por exposici√≥n materna a sustancias qu√≠micas ambientales"
  },
  {
    "code": "P04.8",
    "description": "Feto y reci√©n nacido afectados por otras influencias nocivas de la madre"
  },
  {
    "code": "P04.9",
    "description": "Feto y reci√©n nacido afectados por influencias nocivas de la madre, no especificadas"
  },
  {
    "code": "P05.0",
    "description": "Bajo peso para la edad gestacional"
  },
  {
    "code": "P05.1",
    "description": "Peque√±o para la edad gestacional"
  },
  {
    "code": "P05.2",
    "description": "Desnutrici√≥n fetal, sin menci√≥n de peso o talla bajos para la edad gestacional"
  },
  {
    "code": "P05.9",
    "description": "Retardo del crecimiento fetal, no especificado"
  },
  {
    "code": "P07.0",
    "description": "Peso extremadamente bajo al nacer"
  },
  {
    "code": "P07.1",
    "description": "Otro peso bajo al nacer"
  },
  {
    "code": "P07.2",
    "description": "Inmaturidad extrema"
  },
  {
    "code": "P07.3",
    "description": "Otros reci√©n nacidos pret√©rmino"
  },
  {
    "code": "P08.0",
    "description": "Reci√©n nacido excepcionalmente grande"
  },
  {
    "code": "P08.1",
    "description": "Otros reci√©n nacidos con sobrepeso para la edad gestacional"
  },
  {
    "code": "P08.2",
    "description": "Reci√©n nacido post√©rmino sin sobrepeso para su edad gestacional"
  },
  {
    "code": "P10.0",
    "description": "Hemorragia subdural debida a traumatismo del nacimiento"
  },
  {
    "code": "P10.1",
    "description": "Hemorragia cerebral debida a traumatismo del nacimiento"
  },
  {
    "code": "P10.2",
    "description": "Hemorragia intraventricular debida a traumatismo del nacimiento"
  },
  {
    "code": "P10.3",
    "description": "Hemorragia subaracnoidea debida a traumatismo del nacimiento"
  },
  {
    "code": "P10.4",
    "description": "Desgarro tentorial debido a traumatismo del nacimiento"
  },
  {
    "code": "P10.8",
    "description": "Otras hemorragias y laceraciones intracraneales debidas a traumatismo del nacimiento"
  },
  {
    "code": "P10.9",
    "description": "Hemorragia y laceraci√≥n intracraneales no especificadas, debidas a traumatismo del nacimiento"
  },
  {
    "code": "P11.0",
    "description": "Edema cerebral debido a traumatismo del nacimiento"
  },
  {
    "code": "P11.1",
    "description": "Otras lesiones especificadas del enc√©falo, debidas a traumatismo del nacimiento"
  },
  {
    "code": "P11.2",
    "description": "Lesi√≥n no especificada del enc√©falo, debida a traumatismo del nacimiento"
  },
  {
    "code": "P11.3",
    "description": "Traumatismo del nacimiento en el nervio facial"
  },
  {
    "code": "P11.4",
    "description": "Traumatismo del nacimiento en otros nervios craneales"
  },
  {
    "code": "P11.5",
    "description": "Traumatismo del nacimiento en la columna vertebral y en la m√©dula espinal"
  },
  {
    "code": "P11.9",
    "description": "Traumatismo del nacimiento en el sistema nervioso central, no especificado"
  },
  {
    "code": "P12.0",
    "description": "Cefalohematoma debido a traumatismo del nacimiento"
  },
  {
    "code": "P12.1",
    "description": "Caput succedaneum debido a traumatismo del nacimiento"
  },
  {
    "code": "P12.2",
    "description": "Hemorragia epicraneal subaponeur√≥tica debida a traumatismo del nacimiento"
  },
  {
    "code": "P12.3",
    "description": "Equimosis del cuero cabelludo debida a traumatismo del nacimiento"
  },
  {
    "code": "P12.4",
    "description": "Traumatismo en el cuero cabelludo del reci√©n nacido por monitoreo fetal"
  },
  {
    "code": "P12.8",
    "description": "Otros traumatismos del nacimiento en el cuero cabelludo"
  },
  {
    "code": "P12.9",
    "description": "Traumatismo del nacimiento en el cuero cabelludo, no especificado"
  },
  {
    "code": "P13.0",
    "description": "Fractura del cr√°neo debida a traumatismo del nacimiento"
  },
  {
    "code": "P13.1",
    "description": "Otros traumatismos del cr√°neo durante el nacimiento"
  },
  {
    "code": "P13.2",
    "description": "Traumatismo del f√©mur durante el nacimiento"
  },
  {
    "code": "P13.3",
    "description": "Traumatismo de otros huesos largos durante el nacimiento"
  },
  {
    "code": "P13.4",
    "description": "Fractura de la clav√≠cula debida a traumatismo del nacimiento"
  },
  {
    "code": "P13.8",
    "description": "Traumatismo del nacimiento en otras partes del esqueleto"
  },
  {
    "code": "P13.9",
    "description": "Traumatismo no especificado del esqueleto durante el nacimiento"
  },
  {
    "code": "P14.0",
    "description": "Par√°lisis de Erb debida a traumatismo del nacimiento"
  },
  {
    "code": "P14.1",
    "description": "Par√°lisis de Klumpke debida a traumatismo del nacimiento"
  },
  {
    "code": "P14.2",
    "description": "Par√°lisis del nervio fr√©nico debida a traumatismo del nacimiento"
  },
  {
    "code": "P14.3",
    "description": "Otro traumatismo del plexo braquial durante el nacimiento"
  },
  {
    "code": "P14.8",
    "description": "Traumatismo durante el nacimiento en otras partes del sistema nervioso perif√©rico"
  },
  {
    "code": "P14.9",
    "description": "Traumatismo no especificado del sistema nervioso perif√©rico durante el nacimiento"
  },
  {
    "code": "P15.0",
    "description": "Lesi√≥n del h√≠gado durante el nacimiento"
  },
  {
    "code": "P15.1",
    "description": "Lesi√≥n del bazo durante el nacimiento"
  },
  {
    "code": "P15.2",
    "description": "Traumatismo del m√∫sculo esternocleidomastoideo durante el nacimiento"
  },
  {
    "code": "P15.3",
    "description": "Traumatismo ocular durante el nacimiento"
  },
  {
    "code": "P15.4",
    "description": "Traumatismo facial durante el nacimiento"
  },
  {
    "code": "P15.5",
    "description": "Traumatismo de los genitales externos durante el nacimiento"
  },
  {
    "code": "P15.6",
    "description": "Necrosis grasa subcut√°nea debida a traumatismo del nacimiento"
  },
  {
    "code": "P15.8",
    "description": "Otros traumatismos especificados, durante el nacimiento"
  },
  {
    "code": "P15.9",
    "description": "Traumatismo no especificado, durante el nacimiento"
  },
  {
    "code": "P20.0",
    "description": "Hipoxia intrauterina notada por primera vez antes del inicio del trabajo de parto"
  },
  {
    "code": "P20.1",
    "description": "Hipoxia intrauterina notada por primera vez durante el trabajo de parto y el parto"
  },
  {
    "code": "P20.9",
    "description": "Hipoxia intrauterina, no especificada"
  },
  {
    "code": "P21.0",
    "description": "Asfixia del nacimiento, severa"
  },
  {
    "code": "P21.1",
    "description": "Asfixia del nacimiento, leve y moderada"
  },
  {
    "code": "P21.9",
    "description": "Asfixia del nacimiento, no especificada"
  },
  {
    "code": "P22.0",
    "description": "S√≠ndrome de dificultad respiratoria del reci√©n nacido"
  },
  {
    "code": "P22.1",
    "description": "Taquipnea transitoria del reci√©n nacido"
  },
  {
    "code": "P22.8",
    "description": "Otras dificultades respiratorias del reci√©n nacido"
  },
  {
    "code": "P22.9",
    "description": "Dificultad respiratoria del reci√©n nacido, no especificada"
  },
  {
    "code": "P23.0",
    "description": "Neumon√≠a cong√©nita debida a agente viral"
  },
  {
    "code": "P23.1",
    "description": "Neumon√≠a cong√©nita debida a Chlamydia"
  },
  {
    "code": "P23.2",
    "description": "Neumon√≠a cong√©nita debida a estafilococos"
  },
  {
    "code": "P23.3",
    "description": "Neumon√≠a cong√©nita debida a estreptococos del grupo B"
  },
  {
    "code": "P23.4",
    "description": "Neumon√≠a cong√©nita debida a Escherichia coli"
  },
  {
    "code": "P23.5",
    "description": "Neumon√≠a cong√©nita debida a Pseudomonas"
  },
  {
    "code": "P23.6",
    "description": "Neumon√≠a cong√©nita debida a otros agentes bacterianos"
  },
  {
    "code": "P23.8",
    "description": "Neumon√≠a cong√©nita debida a otros organismos"
  },
  {
    "code": "P23.9",
    "description": "Neumon√≠a cong√©nita, organismo no especificado"
  },
  {
    "code": "P24.0",
    "description": "Aspiraci√≥n neonatal de meconio"
  },
  {
    "code": "P24.1",
    "description": "Aspiraci√≥n neonatal de l√≠quido amni√≥tico y de moco"
  },
  {
    "code": "P24.2",
    "description": "Aspiraci√≥n neonatal de sangre"
  },
  {
    "code": "P24.3",
    "description": "Aspiraci√≥n neonatal de leche y alimento regurgitado"
  },
  {
    "code": "P24.8",
    "description": "Otros s√≠ndromes de aspiraci√≥n neonatal"
  },
  {
    "code": "P24.9",
    "description": "S√≠ndrome de aspiraci√≥n neonatal, sin otra especificaci√≥n"
  },
  {
    "code": "P25.0",
    "description": "Enfisema intersticial originado en el per√≠odo perinatal"
  },
  {
    "code": "P25.1",
    "description": "Neumot√≥rax originado en el per√≠odo perinatal"
  },
  {
    "code": "P25.2",
    "description": "Neumomediastino originado en el per√≠odo perinatal"
  },
  {
    "code": "P25.3",
    "description": "Neumopericardio originado en el per√≠odo perinatal"
  },
  {
    "code": "P25.8",
    "description": "Otras afecciones relacionadas con el enfisema intersticial, originadas en el per√≠odo perinatal"
  },
  {
    "code": "P26.0",
    "description": "Hemorragia traqueobronquial originada en el per√≠odo perinatal"
  },
  {
    "code": "P26.1",
    "description": "Hemorragia pulmonar masiva originada en el per√≠odo perinatal"
  },
  {
    "code": "P26.8",
    "description": "Otras hemorragias pulmonares originadas en el per√≠odo perinatal"
  },
  {
    "code": "P26.9",
    "description": "Hemorragia pulmonar no especificada, originada en el per√≠odo perinatal"
  },
  {
    "code": "P27.0",
    "description": "S√≠ndrome de Wilson-Mikity"
  },
  {
    "code": "P27.1",
    "description": "Displasia broncopulmonar originada en el per√≠odo perinatal"
  },
  {
    "code": "P27.8",
    "description": "Otras enfermedades respiratorias cr√≥nicas originadas en el per√≠odo perinatal"
  },
  {
    "code": "P27.9",
    "description": "Enfermedad respiratoria cr√≥nica no especificada originada en el per√≠odo perinatal"
  },
  {
    "code": "P28.0",
    "description": "Atelectasia primaria del reci√©n nacido"
  },
  {
    "code": "P28.1",
    "description": "Otras atelectasias del reci√©n nacido y las no especificadas"
  },
  {
    "code": "P28.2",
    "description": "Ataque cian√≥tico del reci√©n nacido"
  },
  {
    "code": "P28.3",
    "description": "Apnea primaria del sue√±o del reci√©n nacido"
  },
  {
    "code": "P28.4",
    "description": "Otras apneas del reci√©n nacido"
  },
  {
    "code": "P28.5",
    "description": "Insuficiencia respiratoria del reci√©n nacido"
  },
  {
    "code": "P28.8",
    "description": "Otros problemas respiratorios especificados del reci√©n nacido"
  },
  {
    "code": "P28.9",
    "description": "Afecci√≥n respiratoria no especificada del reci√©n nacido"
  },
  {
    "code": "P29.0",
    "description": "Insuficiencia card√≠aca neonatal"
  },
  {
    "code": "P29.1",
    "description": "Disritmia card√≠aca neonatal"
  },
  {
    "code": "P29.2",
    "description": "Hipertensi√≥n neonatal"
  },
  {
    "code": "P29.3",
    "description": "Persistencia de la circulaci√≥n fetal"
  },
  {
    "code": "P29.4",
    "description": "Isquemia mioc√°rdica transitoria del reci√©n nacido"
  },
  {
    "code": "P29.8",
    "description": "Otros trastornos cardiovasculares originados en el per√≠odo perinatal"
  },
  {
    "code": "P29.9",
    "description": "Trastorno cardiovascular no especificado, originado en el per√≠odo perinatal"
  },
  {
    "code": "P35.0",
    "description": "S√≠ndrome de rub√©ola cong√©nita"
  },
  {
    "code": "P35.1",
    "description": "Infecci√≥n citomegalov√≠rica cong√©nita"
  },
  {
    "code": "P35.2",
    "description": "Infecciones cong√©nitas por virus del herpes simple"
  },
  {
    "code": "P35.3",
    "description": "Hepatitis viral cong√©nita"
  },
  {
    "code": "P35.8",
    "description": "Otras enfermedades virales cong√©nitas"
  },
  {
    "code": "P35.9",
    "description": "Enfermedad viral cong√©nita, sin otra especificaci√≥n"
  },
  {
    "code": "P36.0",
    "description": "Sepsis del reci√©n nacido debida a estreptococo del grupo B"
  },
  {
    "code": "P36.1",
    "description": "Sepsis del reci√©n nacido debida a otros estreptococos y a los no especificados"
  },
  {
    "code": "P36.2",
    "description": "Sepsis del reci√©n nacido debida a Staphylococcus aureus"
  },
  {
    "code": "P36.3",
    "description": "Sepsis del reci√©n nacido debida a otros estafilococos y a los no especificados"
  },
  {
    "code": "P36.4",
    "description": "Sepsis del reci√©n nacido debida a Escherichia coli"
  },
  {
    "code": "P36.5",
    "description": "Sepsis del reci√©n nacido debida a anaerobios"
  },
  {
    "code": "P36.8",
    "description": "Sepsis del reci√©n nacido debida a otras bacterias"
  },
  {
    "code": "P36.9",
    "description": "Sepsis bacteriana del reci√©n nacido, no especificada"
  },
  {
    "code": "P37.0",
    "description": "Tuberculosis cong√©nita"
  },
  {
    "code": "P37.1",
    "description": "Toxoplasmosis cong√©nita"
  },
  {
    "code": "P37.2",
    "description": "Listeriosis cong√©nita (diseminada)"
  },
  {
    "code": "P37.3",
    "description": "Paludismo cong√©nito por Plasmodium falciparum"
  },
  {
    "code": "P37.4",
    "description": "Otros paludismos cong√©nitos"
  },
  {
    "code": "P37.5",
    "description": "Candidiasis neonatal"
  },
  {
    "code": "P37.8",
    "description": "Otras enfermedades neonatales infecciosas o parasitarias especificadas"
  },
  {
    "code": "P37.9",
    "description": "Enfermedad infecciosa y parasitaria cong√©nita, no especificada"
  },
  {
    "code": "P39.0",
    "description": "Mastitis infecciosa neonatal"
  },
  {
    "code": "P39.1",
    "description": "Conjuntivitis y dacriocistitis neonatales"
  },
  {
    "code": "P39.2",
    "description": "Infecci√≥n intraamni√≥tica del feto, no clasificada en otra parte"
  },
  {
    "code": "P39.3",
    "description": "Infecci√≥n neonatal de las v√≠as urinarias"
  },
  {
    "code": "P39.4",
    "description": "Infecci√≥n cut√°nea neonatal"
  },
  {
    "code": "P39.8",
    "description": "Otras infecciones especificadas propias del per√≠odo perinatal"
  },
  {
    "code": "P39.9",
    "description": "Infecci√≥n propia del per√≠odo perinatal, no especificada"
  },
  {
    "code": "P50.0",
    "description": "P√©rdida de sangre fetal por vasa previa"
  },
  {
    "code": "P50.1",
    "description": "P√©rdida de sangre fetal por ruptura del cord√≥n umbilical"
  },
  {
    "code": "P50.2",
    "description": "P√©rdida de sangre fetal por la placenta"
  },
  {
    "code": "P50.3",
    "description": "Hemorragia fetal hacia el otro gemelo"
  },
  {
    "code": "P50.4",
    "description": "Hemorragia fetal hacia la circulaci√≥n materna"
  },
  {
    "code": "P50.5",
    "description": "P√©rdida de sangre fetal por el corte del cord√≥n umbilical en el otro gemelo"
  },
  {
    "code": "P50.8",
    "description": "Otras p√©rdidas de sangre fetal"
  },
  {
    "code": "P50.9",
    "description": "P√©rdida de sangre fetal, no especificada"
  },
  {
    "code": "P51.0",
    "description": "Hemorragia umbilical masiva del reci√©n nacido"
  },
  {
    "code": "P51.8",
    "description": "Otras hemorragias umbilicales del reci√©n nacido"
  },
  {
    "code": "P51.9",
    "description": "Hemorragia umbilical del reci√©n nacido, sin otra especificaci√≥n"
  },
  {
    "code": "P52.0",
    "description": "Hemorragia intraventricular (no traum√°tica) grado 1, del feto y del reci√©n nacido"
  },
  {
    "code": "P52.1",
    "description": "Hemorragia intraventricular (no traum√°tica) grado 2, del feto y del reci√©n nacido"
  },
  {
    "code": "P52.2",
    "description": "Hemorragia intraventricular (no traum√°tica) grado 3, del feto y del reci√©n nacido"
  },
  {
    "code": "P52.3",
    "description": "Hemorragia intraventricular (no traum√°tica) del feto y del reci√©n nacido, sin otra especificaci√≥n"
  },
  {
    "code": "P52.4",
    "description": "Hemorragia intracerebral (no traum√°tica) del feto y del reci√©n nacido"
  },
  {
    "code": "P52.5",
    "description": "Hemorragia subaracnoidea (no traum√°tica) del feto y del reci√©n nacido"
  },
  {
    "code": "P52.6",
    "description": "Hemorragia cerebelosa y de la fosa posterior (no traum√°tica) del feto y del reci√©n nacido"
  },
  {
    "code": "P52.8",
    "description": "Otras hemorragias intracraneales (no traum√°ticas) del feto y del reci√©n nacido"
  },
  {
    "code": "P52.9",
    "description": "Hemorragia intracraneal (no traum√°tica) del feto y del reci√©n nacido, sin otra especificaci√≥n"
  },
  {
    "code": "P54.0",
    "description": "Hematemesis neonatal"
  },
  {
    "code": "P54.1",
    "description": "Melena neonatal"
  },
  {
    "code": "P54.2",
    "description": "Hemorragia rectal neonatal"
  },
  {
    "code": "P54.3",
    "description": "Otras hemorragias gastrointestinales neonatales"
  },
  {
    "code": "P54.4",
    "description": "Hemorragia suprarrenal neonatal"
  },
  {
    "code": "P54.5",
    "description": "Hemorragia cut√°nea neonatal"
  },
  {
    "code": "P54.6",
    "description": "Hemorragia vaginal neonatal"
  },
  {
    "code": "P54.8",
    "description": "Otras hemorragias fetales y neonatales especificadas"
  },
  {
    "code": "P54.9",
    "description": "Hemorragia fetal y neonatal, no especificada"
  },
  {
    "code": "P55.0",
    "description": "Incompatibilidad Rh del feto y del reci√©n nacido"
  },
  {
    "code": "P55.1",
    "description": "Incompatibilidad ABO del feto y del reci√©n nacido"
  },
  {
    "code": "P55.8",
    "description": "Otras enfermedades hemol√≠ticas del feto y del reci√©n nacido"
  },
  {
    "code": "P55.9",
    "description": "Enfermedad hemol√≠tica del feto y del reci√©n nacido, no especificada"
  },
  {
    "code": "P56.0",
    "description": "Hidropes√≠a fetal debida a incompatibilidad"
  },
  {
    "code": "P56.9",
    "description": "Hidropes√≠a fetal debida a otras enfermedades hemol√≠ticas especificadas y a las no especificadas"
  },
  {
    "code": "P57.0",
    "description": "Kernicterus debido a incompatibilidad"
  },
  {
    "code": "P57.8",
    "description": "Kernicterus debido a otras causas especificadas"
  },
  {
    "code": "P57.9",
    "description": "Kernicterus, no especificado"
  },
  {
    "code": "P58.0",
    "description": "Ictericia neonatal debida a contusi√≥n"
  },
  {
    "code": "P58.1",
    "description": "Ictericia neonatal debida a hemorragia"
  },
  {
    "code": "P58.2",
    "description": "Ictericia neonatal debida a infecci√≥n"
  },
  {
    "code": "P58.3",
    "description": "Ictericia neonatal debida a policitemia"
  },
  {
    "code": "P58.4",
    "description": "Ictericia neonatal debida a drogas o toxinas transmitidas por la madre o administradas al reci√©n nacido"
  },
  {
    "code": "P58.5",
    "description": "Ictericia neonatal debida a degluci√≥n de sangre materna"
  },
  {
    "code": "P58.8",
    "description": "Ictericia neonatal debida a otras hem√≥lisis excesivas especificadas"
  },
  {
    "code": "P58.9",
    "description": "Ictericia neonatal debida a hem√≥lisis excesiva, sin otra especificaci√≥n"
  },
  {
    "code": "P59.0",
    "description": "Ictericia neonatal asociada con el parto antes de t√©rmino"
  },
  {
    "code": "P59.1",
    "description": "S√≠ndrome de la bilis espesa"
  },
  {
    "code": "P59.2",
    "description": "Ictericia neonatal debida a otra lesi√≥n hep√°tica especificada o no"
  },
  {
    "code": "P59.3",
    "description": "Ictericia neonatal por inhibidor de la leche materna"
  },
  {
    "code": "P59.8",
    "description": "Ictericia neonatal por otras causas especificadas"
  },
  {
    "code": "P59.9",
    "description": "Ictericia neonatal, no especificada"
  },
  {
    "code": "P61.0",
    "description": "Trombocitopenia neonatal transitoria"
  },
  {
    "code": "P61.1",
    "description": "Policitemia neonatal"
  },
  {
    "code": "P61.2",
    "description": "Anemia de la prematuridad"
  },
  {
    "code": "P61.3",
    "description": "Anemia cong√©nita debida a p√©rdida de sangre fetal"
  },
  {
    "code": "P61.4",
    "description": "Otras anemias cong√©nitas, no clasificadas en otra parte"
  },
  {
    "code": "P61.5",
    "description": "Neutropenia neonatal transitoria"
  },
  {
    "code": "P61.6",
    "description": "Otros trastornos neonatales transitorios de la coagulaci√≥n"
  },
  {
    "code": "P61.8",
    "description": "Otros trastornos hematol√≥gicos perinatales especificados"
  },
  {
    "code": "P61.9",
    "description": "Trastorno hematol√≥gico perinatal, no especificado"
  },
  {
    "code": "P70.0",
    "description": "S√≠ndrome del reci√©n nacido de madre con diabetes gestacional"
  },
  {
    "code": "P70.1",
    "description": "S√≠ndrome del reci√©n nacido de madre diab√©tica"
  },
  {
    "code": "P70.2",
    "description": "Diabetes mellitus neonatal"
  },
  {
    "code": "P70.3",
    "description": "Hipoglicemia neonatal yatrog√©nica"
  },
  {
    "code": "P70.4",
    "description": "Otras hipoglicemias neonatales"
  },
  {
    "code": "P70.8",
    "description": "Otros trastornos transitorios del metabolismo de los carbohidratos en el feto y el reci√©n nacido"
  },
  {
    "code": "P70.9",
    "description": "Trastorno transitorio no especificado del metabolismo de los carbohidratos en el feto y el reci√©n nacido"
  },
  {
    "code": "P71.0",
    "description": "Hipocalcemia del reci√©n nacido debida a la leche de vaca"
  },
  {
    "code": "P71.1",
    "description": "Otra hipocalcemia neonatal"
  },
  {
    "code": "P71.2",
    "description": "Hipomagnesemia neonatal"
  },
  {
    "code": "P71.3",
    "description": "Tetania neonatal sin menci√≥n de deficiencia de calcio o de magnesio"
  },
  {
    "code": "P71.4",
    "description": "Hipoparatiroidismo neonatal transitorio"
  },
  {
    "code": "P71.8",
    "description": "Otros trastornos neonatales transitorios del metabolismo del calcio y del magnesio"
  },
  {
    "code": "P71.9",
    "description": "Trastorno neonatal transitorio no especificado del metabolismo del calcio y del magnesio"
  },
  {
    "code": "P72.0",
    "description": "Bocio neonatal, no clasificado en otra parte"
  },
  {
    "code": "P72.1",
    "description": "Hipertiroidismo neonatal transitorio"
  },
  {
    "code": "P72.2",
    "description": "Otros trastornos neonatales transitorios de la funci√≥n tiroidea, no clasificados en otra parte"
  },
  {
    "code": "P72.8",
    "description": "Otros trastornos endocrinos neonatales transitorios especificados"
  },
  {
    "code": "P72.9",
    "description": "Trastorno endocrino neonatal transitorio, no especificado"
  },
  {
    "code": "P74.0",
    "description": "Acidosis metab√≥lica tard√≠a del reci√©n nacido"
  },
  {
    "code": "P74.1",
    "description": "Deshidrataci√≥n del reci√©n nacido"
  },
  {
    "code": "P74.2",
    "description": "Alteraciones del equilibrio del sodio en el reci√©n nacido"
  },
  {
    "code": "P74.3",
    "description": "Alteraciones del equilibrio del potasio en el reci√©n nacido"
  },
  {
    "code": "P74.4",
    "description": "Otras alteraciones electrol√≠ticas transitorias del reci√©n nacido"
  },
  {
    "code": "P74.5",
    "description": "Tirosinemia transitoria del reci√©n nacido"
  },
  {
    "code": "P74.8",
    "description": "Otras alteraciones metab√≥licas transitorias del reci√©n nacido"
  },
  {
    "code": "P74.9",
    "description": "Trastorno metab√≥lico transitorio del reci√©n nacido, no especificado"
  },
  {
    "code": "P76.0",
    "description": "S√≠ndrome del tap√≥n de meconio"
  },
  {
    "code": "P76.1",
    "description": "Ileo transitorio del reci√©n nacido"
  },
  {
    "code": "P76.2",
    "description": "Obstrucci√≥n intestinal debida a la leche espesa"
  },
  {
    "code": "P76.8",
    "description": "Otras obstrucciones intestinales especificadas del reci√©n nacido"
  },
  {
    "code": "P76.9",
    "description": "Obstrucci√≥n intestinal del reci√©n nacido, no especificada"
  },
  {
    "code": "P78.0",
    "description": "Perforaci√≥n intestinal perinatal"
  },
  {
    "code": "P78.1",
    "description": "Otras peritonitis neonatales"
  },
  {
    "code": "P78.2",
    "description": "Hematemesis y melena neonatales debidas a la degluci√≥n de sangre materna"
  },
  {
    "code": "P78.3",
    "description": "Diarrea neonatal no infecciosa"
  },
  {
    "code": "P78.8",
    "description": "Otros trastornos perinatales espec√≠ficos del sistema digestivo"
  },
  {
    "code": "P78.9",
    "description": "Trastorno perinatal del sistema digestivo, no especificado"
  },
  {
    "code": "P80.0",
    "description": "S√≠ndrome del enfriamiento"
  },
  {
    "code": "P80.8",
    "description": "Otras hipotermias del reci√©n nacido"
  },
  {
    "code": "P80.9",
    "description": "Hipotermia del reci√©n nacido, no especificada"
  },
  {
    "code": "P81.0",
    "description": "Hipertermia del reci√©n nacido inducida por las condiciones ambientales"
  },
  {
    "code": "P81.8",
    "description": "Otras alteraciones especificadas de la regulaci√≥n de la temperatura del reci√©n nacido"
  },
  {
    "code": "P81.9",
    "description": "Alteraci√≥n no especificada de la regulaci√≥n de la temperatura en el reci√©n nacido"
  },
  {
    "code": "P83.0",
    "description": "Esclerema neonatal"
  },
  {
    "code": "P83.1",
    "description": "Eritema t√≥xico neonatal"
  },
  {
    "code": "P83.2",
    "description": "Hidropes√≠a fetal no debida a enfermedad hemol√≠tica"
  },
  {
    "code": "P83.3",
    "description": "Otros edemas y los no especificados, propios del feto y del reci√©n nacido"
  },
  {
    "code": "P83.4",
    "description": "Ingurgitaci√≥n mamaria del reci√©n nacido"
  },
  {
    "code": "P83.5",
    "description": "Hidrocele cong√©nito"
  },
  {
    "code": "P83.6",
    "description": "P√≥lipo umbilical del reci√©n nacido"
  },
  {
    "code": "P83.8",
    "description": "Otras afecciones especificadas de la piel, propias del feto y del reci√©n nacido"
  },
  {
    "code": "P83.9",
    "description": "Afecci√≥n no especificada de la piel, propia del feto y del reci√©n nacido"
  },
  {
    "code": "P91.0",
    "description": "Isquemia cerebral neonatal"
  },
  {
    "code": "P91.1",
    "description": "Quistes periventriculares adquiridos del reci√©n nacido"
  },
  {
    "code": "P91.2",
    "description": "Leucomalacia cerebral neonatal"
  },
  {
    "code": "P91.3",
    "description": "Irritabilidad cerebral neonatal"
  },
  {
    "code": "P91.4",
    "description": "Depresi√≥n cerebral neonatal"
  },
  {
    "code": "P91.5",
    "description": "Coma neonatal"
  },
  {
    "code": "P91.8",
    "description": "Otras alteraciones cerebrales especificadas del reci√©n nacido"
  },
  {
    "code": "P91.9",
    "description": "Alteraci√≥n cerebral no especificada del reci√©n nacido"
  },
  {
    "code": "P92.0",
    "description": "V√≥mitos del reci√©n nacido"
  },
  {
    "code": "P92.1",
    "description": "Regurgitaci√≥n y rumiaci√≥n del reci√©n nacido"
  },
  {
    "code": "P92.2",
    "description": "Lentitud en la ingesti√≥n de alimentos del reci√©n nacido"
  },
  {
    "code": "P92.3",
    "description": "Hipoalimentaci√≥n del reci√©n nacido"
  },
  {
    "code": "P92.4",
    "description": "Hiperalimentaci√≥n del reci√©n nacido"
  },
  {
    "code": "P92.5",
    "description": "Dificultad neonatal en la lactancia materna"
  },
  {
    "code": "P92.8",
    "description": "Otros problemas de alimentaci√≥n del reci√©n nacido"
  },
  {
    "code": "P92.9",
    "description": "Problema no especificado de la alimentaci√≥n del reci√©n nacido"
  },
  {
    "code": "P94.0",
    "description": "Miastenia grave neonatal transitoria"
  },
  {
    "code": "P94.1",
    "description": "Hiperton√≠a cong√©nita"
  },
  {
    "code": "P94.2",
    "description": "Hipoton√≠a cong√©nita"
  },
  {
    "code": "P94.8",
    "description": "Otros trastornos del tono muscular en el reci√©n nacido"
  },
  {
    "code": "P94.9",
    "description": "Trastorno no especificado del tono muscular en el reci√©n nacido"
  },
  {
    "code": "P96.0",
    "description": "Insuficiencia renal cong√©nita"
  },
  {
    "code": "P96.1",
    "description": "S√≠ntomas neonatales de abstinencia por drogadicci√≥n materna"
  },
  {
    "code": "P96.2",
    "description": "S√≠ntomas de abstinencia por el uso terap√©utico de drogas en el reci√©n nacido"
  },
  {
    "code": "P96.3",
    "description": "Amplitud de las suturas craneales del reci√©n nacido"
  },
  {
    "code": "P96.4",
    "description": "Terminaci√≥n del embarazo, feto y reci√©n nacido"
  },
  {
    "code": "P96.5",
    "description": "Complicaciones de procedimientos intrauterinos, no clasificados en otra parte"
  },
  {
    "code": "P96.8",
    "description": "Otras afecciones especificadas originadas en el per√≠odo perinatal"
  },
  {
    "code": "P96.9",
    "description": "Afecci√≥n no especificada originada en el per√≠odo perinatal"
  },
  {
    "code": "Q00.0",
    "description": "Anencefalia"
  },
  {
    "code": "Q00.1",
    "description": "Craneorraquisquisis"
  },
  {
    "code": "Q00.2",
    "description": "Iniencefalia"
  },
  {
    "code": "Q01.0",
    "description": "Encefalocele frontal"
  },
  {
    "code": "Q01.1",
    "description": "Encefalocele nasofrontal"
  },
  {
    "code": "Q01.2",
    "description": "Encefalocele occipital"
  },
  {
    "code": "Q01.8",
    "description": "Encefalocele de otros sitios"
  },
  {
    "code": "Q01.9",
    "description": "Encefalocele, no especificado"
  },
  {
    "code": "Q03.0",
    "description": "Malformaciones del acueducto de Silvio"
  },
  {
    "code": "Q03.1",
    "description": "Atresia de los agujeros de Magendie y de Luschka"
  },
  {
    "code": "Q03.8",
    "description": "Otros hidroc√©falos cong√©nitos"
  },
  {
    "code": "Q03.9",
    "description": "Hidroc√©falo cong√©nito, no especificado"
  },
  {
    "code": "Q04.0",
    "description": "Malformaciones cong√©nitas del cuerpo calloso"
  },
  {
    "code": "Q04.1",
    "description": "Arrinencefalia"
  },
  {
    "code": "Q04.2",
    "description": "Holoprosencefalia"
  },
  {
    "code": "Q04.3",
    "description": "Otras anomal√≠as hipopl√°sicas del enc√©falo"
  },
  {
    "code": "Q04.4",
    "description": "Displasia opticoseptal"
  },
  {
    "code": "Q04.5",
    "description": "Megalencefalia"
  },
  {
    "code": "Q04.6",
    "description": "Quistes cerebrales cong√©nitos"
  },
  {
    "code": "Q04.8",
    "description": "Otras malformaciones cong√©nitas del enc√©falo, especificadas"
  },
  {
    "code": "Q04.9",
    "description": "Malformaci√≥n cong√©nita del enc√©falo, no especificada"
  },
  {
    "code": "Q05.0",
    "description": "Espina b√≠fida cervical con hidroc√©falo"
  },
  {
    "code": "Q05.1",
    "description": "Espina b√≠fida tor√°cica con hidroc√©falo"
  },
  {
    "code": "Q05.2",
    "description": "Espina b√≠fida lumbar con hidroc√©falo"
  },
  {
    "code": "Q05.3",
    "description": "Espina b√≠fida sacra con hidroc√©falo"
  },
  {
    "code": "Q05.4",
    "description": "Espina b√≠fida con hidroc√©falo, sin otra especificaci√≥n"
  },
  {
    "code": "Q05.5",
    "description": "Espina b√≠fida cervical sin hidroc√©falo"
  },
  {
    "code": "Q05.6",
    "description": "Espina b√≠fida tor√°cica sin hidroc√©falo"
  },
  {
    "code": "Q05.7",
    "description": "Espina b√≠fida lumbar sin hidroc√©falo"
  },
  {
    "code": "Q05.8",
    "description": "Espina b√≠fida sacra sin hidroc√©falo"
  },
  {
    "code": "Q05.9",
    "description": "Espina b√≠fida, no especificada"
  },
  {
    "code": "Q06.0",
    "description": "Amielia"
  },
  {
    "code": "Q06.1",
    "description": "Hipoplasia y displasia de la m√©dula espinal"
  },
  {
    "code": "Q06.2",
    "description": "Diastematomielia"
  },
  {
    "code": "Q06.3",
    "description": "Otras anomal√≠as cong√©nitas de la cola de caballo"
  },
  {
    "code": "Q06.4",
    "description": "Hidromielia"
  },
  {
    "code": "Q06.8",
    "description": "Otras malformaciones cong√©nitas especificadas de la m√©dula espinal"
  },
  {
    "code": "Q06.9",
    "description": "Malformaci√≥n cong√©nita de la m√©dula espinal, no especificada"
  },
  {
    "code": "Q07.0",
    "description": "S√≠ndrome de Arnold-Chiari"
  },
  {
    "code": "Q07.8",
    "description": "Otras malformaciones cong√©nitas del sistema nervioso, especificadas"
  },
  {
    "code": "Q07.9",
    "description": "Malformaci√≥n cong√©nita del sistema nervioso, no especificada"
  },
  {
    "code": "Q10.0",
    "description": "Blefaroptosis cong√©nita"
  },
  {
    "code": "Q10.1",
    "description": "Ectropi√≥n cong√©nito"
  },
  {
    "code": "Q10.2",
    "description": "Entropi√≥n cong√©nito"
  },
  {
    "code": "Q10.3",
    "description": "Otras malformaciones cong√©nitas de los p√°rpados"
  },
  {
    "code": "Q10.4",
    "description": "Ausencia y agenesia del aparato lagrimal"
  },
  {
    "code": "Q10.5",
    "description": "Estenosis y estrechez cong√©nitas del conducto lagrimal"
  },
  {
    "code": "Q10.6",
    "description": "Otras malformaciones cong√©nitas del aparato lagrimal"
  },
  {
    "code": "Q10.7",
    "description": "Malformaci√≥n cong√©nita de la √≥rbita"
  },
  {
    "code": "Q11.0",
    "description": "Globo ocular qu√≠stico"
  },
  {
    "code": "Q11.1",
    "description": "Otras anoftalm√≠as"
  },
  {
    "code": "Q11.2",
    "description": "Microftalm√≠a"
  },
  {
    "code": "Q11.3",
    "description": "Macroftalm√≠a"
  },
  {
    "code": "Q12.0",
    "description": "Catarata cong√©nita"
  },
  {
    "code": "Q12.1",
    "description": "Desplazamiento cong√©nito del cristalino"
  },
  {
    "code": "Q12.2",
    "description": "Coloboma del cristalino"
  },
  {
    "code": "Q12.3",
    "description": "Afaquia cong√©nita"
  },
  {
    "code": "Q12.4",
    "description": "Esferofaquia"
  },
  {
    "code": "Q12.8",
    "description": "Otras malformaciones cong√©nitas del cristalino"
  },
  {
    "code": "Q12.9",
    "description": "Malformaci√≥n cong√©nita del cristalino, no especificada"
  },
  {
    "code": "Q13.0",
    "description": "Coloboma del iris"
  },
  {
    "code": "Q13.1",
    "description": "Ausencia del iris"
  },
  {
    "code": "Q13.2",
    "description": "Otras malformaciones cong√©nitas del iris"
  },
  {
    "code": "Q13.3",
    "description": "Opacidad corneal cong√©nita"
  },
  {
    "code": "Q13.4",
    "description": "Otras malformaciones cong√©nitas de la c√≥rnea"
  },
  {
    "code": "Q13.5",
    "description": "Escler√≥tica azul"
  },
  {
    "code": "Q13.8",
    "description": "Otras malformaciones cong√©nitas del segmento anterior del ojo"
  },
  {
    "code": "Q13.9",
    "description": "Malformaci√≥n cong√©nita del segmento anterior del ojo, no especificada"
  },
  {
    "code": "Q14.0",
    "description": "Malformaci√≥n cong√©nita del humor v√≠treo"
  },
  {
    "code": "Q14.1",
    "description": "Malformaci√≥n cong√©nita de la retina"
  },
  {
    "code": "Q14.2",
    "description": "Malformaci√≥n cong√©nita del disco √≥ptico"
  },
  {
    "code": "Q14.3",
    "description": "Malformaci√≥n cong√©nita de la coroides"
  },
  {
    "code": "Q14.8",
    "description": "Otras malformaciones cong√©nitas del segmento posterior del ojo"
  },
  {
    "code": "Q14.9",
    "description": "Malformaci√≥n cong√©nita del segmento posterior del ojo, no especificada"
  },
  {
    "code": "Q15.0",
    "description": "Glaucoma cong√©nito"
  },
  {
    "code": "Q15.8",
    "description": "Otras malformaciones cong√©nitas del ojo, especificadas"
  },
  {
    "code": "Q15.9",
    "description": "Malformaciones cong√©nitas del ojo, no especificadas"
  },
  {
    "code": "Q16.0",
    "description": "Ausencia cong√©nita del pabell√≥n (de la oreja)"
  },
  {
    "code": "Q16.1",
    "description": "Ausencia cong√©nita, atresia o estrechez del conducto auditivo (externo)"
  },
  {
    "code": "Q16.2",
    "description": "Ausencia de la trompa de Eustaquio"
  },
  {
    "code": "Q16.3",
    "description": "Malformaci√≥n cong√©nita de los huesecillos del o√≠do"
  },
  {
    "code": "Q16.4",
    "description": "Otras malformaciones cong√©nitas del o√≠do medio"
  },
  {
    "code": "Q16.5",
    "description": "Malformaci√≥n cong√©nita del o√≠do interno"
  },
  {
    "code": "Q16.9",
    "description": "Malformaci√≥n cong√©nita del o√≠do que causa alteraci√≥n de la audici√≥n, sin otra especificaci√≥n"
  },
  {
    "code": "Q17.0",
    "description": "Oreja supernumeraria"
  },
  {
    "code": "Q17.1",
    "description": "Macrotia"
  },
  {
    "code": "Q17.2",
    "description": "Microtia"
  },
  {
    "code": "Q17.3",
    "description": "Otras deformidades del pabell√≥n auricular"
  },
  {
    "code": "Q17.4",
    "description": "Anomal√≠a de la posici√≥n de la oreja"
  },
  {
    "code": "Q17.5",
    "description": "Oreja prominente"
  },
  {
    "code": "Q17.8",
    "description": "Otras malformaciones cong√©nitas del o√≠do, especificadas"
  },
  {
    "code": "Q17.9",
    "description": "Malformaci√≥n cong√©nita del o√≠do, no especificada"
  },
  {
    "code": "Q18.0",
    "description": "Seno, f√≠stula o quiste de la hendidura branquial"
  },
  {
    "code": "Q18.1",
    "description": "Seno y quiste preauricular"
  },
  {
    "code": "Q18.2",
    "description": "Otras malformaciones de las hendiduras branquiales"
  },
  {
    "code": "Q18.3",
    "description": "Pterigi√≥n del cuello"
  },
  {
    "code": "Q18.4",
    "description": "Macrostom√≠a"
  },
  {
    "code": "Q18.5",
    "description": "Microstom√≠a"
  },
  {
    "code": "Q18.6",
    "description": "Macroqueilia"
  },
  {
    "code": "Q18.7",
    "description": "Microqueilia"
  },
  {
    "code": "Q18.8",
    "description": "Otras malformaciones cong√©nitas especificadas de cara y cuello"
  },
  {
    "code": "Q18.9",
    "description": "Malformaci√≥n cong√©nita de la cara y del cuello, no especificada"
  },
  {
    "code": "Q20.0",
    "description": "Tronco arterioso com√∫n"
  },
  {
    "code": "Q20.1",
    "description": "Transposici√≥n de los grandes vasos en ventr√≠culo derecho"
  },
  {
    "code": "Q20.2",
    "description": "Transposici√≥n de los grandes vasos en ventr√≠culo izquierdo"
  },
  {
    "code": "Q20.3",
    "description": "Discordancia de la conexi√≥n ventriculoarterial"
  },
  {
    "code": "Q20.4",
    "description": "Ventr√≠culo con doble entrada"
  },
  {
    "code": "Q20.5",
    "description": "Discordancia de la conexi√≥n auriculoventricular"
  },
  {
    "code": "Q20.6",
    "description": "Isomerismo de los ap√©ndices auriculares"
  },
  {
    "code": "Q20.8",
    "description": "Otras malformaciones cong√©nitas de las c√°maras card√≠acas y sus conexiones"
  },
  {
    "code": "Q20.9",
    "description": "Malformaci√≥n cong√©nita de las c√°maras card√≠acas y sus conexiones, no especificada"
  },
  {
    "code": "Q21.0",
    "description": "Defecto del tabique ventricular"
  },
  {
    "code": "Q21.1",
    "description": "Defecto del tabique auricular"
  },
  {
    "code": "Q21.2",
    "description": "Defecto del tabique auriculoventricular"
  },
  {
    "code": "Q21.3",
    "description": "Tetralog√≠a de Fallot"
  },
  {
    "code": "Q21.4",
    "description": "Defecto del tabique aortopulmonar"
  },
  {
    "code": "Q21.8",
    "description": "Otras malformaciones cong√©nitas de los tabiques card√≠acos"
  },
  {
    "code": "Q21.9",
    "description": "Malformaci√≥n cong√©nita del tabique card√≠aco, no especificada"
  },
  {
    "code": "Q22.0",
    "description": "Atresia de la v√°lvula pulmonar"
  },
  {
    "code": "Q22.1",
    "description": "Estenosis cong√©nita de la v√°lvula pulmonar"
  },
  {
    "code": "Q22.2",
    "description": "Insuficiencia cong√©nita de la v√°lvula pulmonar"
  },
  {
    "code": "Q22.3",
    "description": "Otras malformaciones cong√©nitas de la v√°lvula pulmonar"
  },
  {
    "code": "Q22.4",
    "description": "Estenosis cong√©nita de la v√°lvula tric√∫spide"
  },
  {
    "code": "Q22.5",
    "description": "Anomal√≠a de Ebstein"
  },
  {
    "code": "Q22.6",
    "description": "S√≠ndrome de hipoplasia del coraz√≥n derecho"
  },
  {
    "code": "Q22.8",
    "description": "Otras malformaciones cong√©nitas de la v√°lvula tric√∫spide"
  },
  {
    "code": "Q22.9",
    "description": "Malformaci√≥n cong√©nita de la v√°lvula tric√∫spide, no especificada"
  },
  {
    "code": "Q23.0",
    "description": "Estenosis cong√©nita de la v√°lvula a√≥rtica"
  },
  {
    "code": "Q23.1",
    "description": "Insuficiencia cong√©nita de la v√°lvula a√≥rtica"
  },
  {
    "code": "Q23.2",
    "description": "Estenosis mitral cong√©nita"
  },
  {
    "code": "Q23.3",
    "description": "Insuficiencia mitral cong√©nita"
  },
  {
    "code": "Q23.4",
    "description": "S√≠ndrome de hipoplasia del coraz√≥n izquierdo"
  },
  {
    "code": "Q23.8",
    "description": "Otras malformaciones cong√©nitas de las v√°lvulas a√≥rtica y mitral"
  },
  {
    "code": "Q23.9",
    "description": "Malformaci√≥n cong√©nita de las v√°lvulas a√≥rtica y mitral, no especificada"
  },
  {
    "code": "Q24.0",
    "description": "Dextrocardia"
  },
  {
    "code": "Q24.1",
    "description": "Levocardia"
  },
  {
    "code": "Q24.2",
    "description": "Coraz√≥n triauricular"
  },
  {
    "code": "Q24.3",
    "description": "Estenosis del infund√≠bulo pulmonar"
  },
  {
    "code": "Q24.4",
    "description": "Estenosis suba√≥rtica cong√©nita"
  },
  {
    "code": "Q24.5",
    "description": "Malformaci√≥n de los vasos coronarios"
  },
  {
    "code": "Q24.6",
    "description": "Bloqueo card√≠aco cong√©nito"
  },
  {
    "code": "Q24.8",
    "description": "Otras malformaciones cong√©nitas del coraz√≥n, especificadas"
  },
  {
    "code": "Q24.9",
    "description": "Malformaci√≥n cong√©nita del coraz√≥n, no especificada"
  },
  {
    "code": "Q25.0",
    "description": "Conducto arterioso permeable"
  },
  {
    "code": "Q25.1",
    "description": "Coartaci√≥n de la aorta"
  },
  {
    "code": "Q25.2",
    "description": "Atresia de la aorta"
  },
  {
    "code": "Q25.3",
    "description": "Estenosis de la aorta"
  },
  {
    "code": "Q25.4",
    "description": "Otras malformaciones cong√©nitas de la aorta"
  },
  {
    "code": "Q25.5",
    "description": "Atresia de la arteria pulmonar"
  },
  {
    "code": "Q25.6",
    "description": "Estenosis de la arteria pulmonar"
  },
  {
    "code": "Q25.7",
    "description": "Otras malformaciones cong√©nitas de la arteria pulmonar"
  },
  {
    "code": "Q25.8",
    "description": "Otras malformaciones cong√©nitas de las grandes arterias"
  },
  {
    "code": "Q25.9",
    "description": "Malformaci√≥n cong√©nita de las grandes arterias, no especificada"
  },
  {
    "code": "Q26.0",
    "description": "Estenosis cong√©nita de la vena cava"
  },
  {
    "code": "Q26.1",
    "description": "Persistencia de la vena cava superior izquierda"
  },
  {
    "code": "Q26.2",
    "description": "Conexi√≥n an√≥mala total de las venas pulmonares"
  },
  {
    "code": "Q26.3",
    "description": "Conexi√≥n an√≥mala parcial de las venas pulmonares"
  },
  {
    "code": "Q26.4",
    "description": "Conexi√≥n an√≥mala de las venas pulmonares, sin otra especificaci√≥n"
  },
  {
    "code": "Q26.5",
    "description": "Conexi√≥n an√≥mala de la vena porta"
  },
  {
    "code": "Q26.6",
    "description": "F√≠stula arteria hep√°tica-vena porta"
  },
  {
    "code": "Q26.8",
    "description": "Otras malformaciones cong√©nitas de las grandes venas"
  },
  {
    "code": "Q26.9",
    "description": "Malformaci√≥n cong√©nita de las grandes venas, no especificada"
  },
  {
    "code": "Q27.0",
    "description": "Ausencia e hipoplasia cong√©nita de la arteria umbilical"
  },
  {
    "code": "Q27.1",
    "description": "Estenosis cong√©nita de la arteria renal"
  },
  {
    "code": "Q27.2",
    "description": "Otras malformaciones cong√©nitas de la arteria renal"
  },
  {
    "code": "Q27.3",
    "description": "Malformaci√≥n arteriovenosa perif√©rica"
  },
  {
    "code": "Q27.4",
    "description": "Flebectasia cong√©nita"
  },
  {
    "code": "Q27.8",
    "description": "Otras malformaciones cong√©nitas del sistema vascular perif√©rico, especificadas"
  },
  {
    "code": "Q27.9",
    "description": "Malformaci√≥n cong√©nita del sistema vascular perif√©rico, no especificada"
  },
  {
    "code": "Q28.0",
    "description": "Malformaci√≥n arteriovenosa de los vasos precerebrales"
  },
  {
    "code": "Q28.1",
    "description": "Otras malformaciones de los vasos precerebrales"
  },
  {
    "code": "Q28.2",
    "description": "Malformaci√≥n arteriovenosa de los vasos cerebrales"
  },
  {
    "code": "Q28.3",
    "description": "Otras malformaciones de los vasos cerebrales"
  },
  {
    "code": "Q28.8",
    "description": "Otras malformaciones cong√©nitas del sistema circulatorio, especificadas"
  },
  {
    "code": "Q28.9",
    "description": "Malformaci√≥n cong√©nita del sistema circulatorio, no especificada"
  },
  {
    "code": "Q30.0",
    "description": "Atresia de las coanas"
  },
  {
    "code": "Q30.1",
    "description": "Agenesia o hipoplasia de la nariz"
  },
  {
    "code": "Q30.2",
    "description": "Hendidura, fisura o muesca de la nariz"
  },
  {
    "code": "Q30.3",
    "description": "Perforaci√≥n cong√©nita del tabique nasal"
  },
  {
    "code": "Q30.8",
    "description": "Otras malformaciones cong√©nitas de la nariz"
  },
  {
    "code": "Q30.9",
    "description": "Malformaci√≥n cong√©nita de la nariz, no especificada"
  },
  {
    "code": "Q31.0",
    "description": "Pterigi√≥n de la laringe"
  },
  {
    "code": "Q31.1",
    "description": "Estenosis subgl√≥tica cong√©nita"
  },
  {
    "code": "Q31.2",
    "description": "Hipoplasia lar√≠ngea"
  },
  {
    "code": "Q31.3",
    "description": "Laringocele"
  },
  {
    "code": "Q31.4",
    "description": "Estridor lar√≠ngeo cong√©nito"
  },
  {
    "code": "Q31.8",
    "description": "Otras malformaciones cong√©nitas de la laringe"
  },
  {
    "code": "Q31.9",
    "description": "Malformaci√≥n cong√©nita de la laringe, no especificada"
  },
  {
    "code": "Q32.0",
    "description": "Traqueomalacia cong√©nita"
  },
  {
    "code": "Q32.1",
    "description": "Otras malformaciones cong√©nitas de la tr√°quea"
  },
  {
    "code": "Q32.2",
    "description": "Broncomalacia cong√©nita"
  },
  {
    "code": "Q32.3",
    "description": "Estenosis cong√©nita de los bronquios"
  },
  {
    "code": "Q32.4",
    "description": "Otras malformaciones cong√©nitas de los bronquios"
  },
  {
    "code": "Q33.0",
    "description": "Quiste pulmonar cong√©nito"
  },
  {
    "code": "Q33.1",
    "description": "L√≥bulo pulmonar supernumerario"
  },
  {
    "code": "Q33.2",
    "description": "Secuestro del pulm√≥n"
  },
  {
    "code": "Q33.3",
    "description": "Agenesia del pulm√≥n"
  },
  {
    "code": "Q33.4",
    "description": "Bronquiectasia cong√©nita"
  },
  {
    "code": "Q33.5",
    "description": "Tejido ect√≥pico en el pulm√≥n"
  },
  {
    "code": "Q33.6",
    "description": "Hipoplasia y displasia pulmonar"
  },
  {
    "code": "Q33.8",
    "description": "Otras malformaciones cong√©nitas del pulm√≥n"
  },
  {
    "code": "Q33.9",
    "description": "Malformaci√≥n cong√©nita del pulm√≥n, no especificada"
  },
  {
    "code": "Q34.0",
    "description": "Anomal√≠a de la pleura"
  },
  {
    "code": "Q34.1",
    "description": "Quiste cong√©nito del mediastino"
  },
  {
    "code": "Q34.8",
    "description": "Otras malformaciones cong√©nitas especificadas del sistema respiratorio"
  },
  {
    "code": "Q34.9",
    "description": "Malformaci√≥n cong√©nita del sistema respiratorio, no especificada"
  },
  {
    "code": "Q35.1",
    "description": "Fisura del paladar duro"
  },
  {
    "code": "Q35.3",
    "description": "Fisura del paladar blando"
  },
  {
    "code": "Q35.5",
    "description": "Fisura del paladar duro y del paladar blando"
  },
  {
    "code": "Q35.6",
    "description": "Fisura del paladar, l√≠nea media"
  },
  {
    "code": "Q35.7",
    "description": "Fisura de la √∫vula"
  },
  {
    "code": "Q35.9",
    "description": "Fisura del paladar, sin otra especificaci√≥n"
  },
  {
    "code": "Q36.0",
    "description": "Labio leporino, bilateral"
  },
  {
    "code": "Q36.1",
    "description": "Labio leporino, l√≠nea media"
  },
  {
    "code": "Q36.9",
    "description": "Labio leporino, unilateral"
  },
  {
    "code": "Q37.0",
    "description": "Fisura del paladar duro con labio leporino bilateral"
  },
  {
    "code": "Q37.1",
    "description": "Fisura del paladar duro con labio leporino unilateral"
  },
  {
    "code": "Q37.2",
    "description": "Fisura del paladar blando con labio leporino bilateral"
  },
  {
    "code": "Q37.3",
    "description": "Fisura del paladar blando con labio leporino unilateral"
  },
  {
    "code": "Q37.4",
    "description": "Fisura del paladar duro y del paladar blando con labio leporino bilateral"
  },
  {
    "code": "Q37.5",
    "description": "Fisura del paladar duro y del paladar blando con labio leporino unilateral"
  },
  {
    "code": "Q37.8",
    "description": "Fisura del paladar con labio leporino bilateral, sin otra especificaci√≥n"
  },
  {
    "code": "Q37.9",
    "description": "Fisura del paladar con labio leporino unilateral, sin otra especificaci√≥n"
  },
  {
    "code": "Q38.0",
    "description": "Malformaciones cong√©nitas de los labios, no clasificadas en otra parte"
  },
  {
    "code": "Q38.1",
    "description": "Anquiloglosia"
  },
  {
    "code": "Q38.2",
    "description": "Macroglosia"
  },
  {
    "code": "Q38.3",
    "description": "Otras malformaciones cong√©nitas de la lengua"
  },
  {
    "code": "Q38.4",
    "description": "Malformaciones cong√©nitas de las gl√°ndulas y de los conductos salivales"
  },
  {
    "code": "Q38.5",
    "description": "Malformaciones cong√©nitas del paladar, no clasificadas en otra parte"
  },
  {
    "code": "Q38.6",
    "description": "Otras malformaciones cong√©nitas de la boca"
  },
  {
    "code": "Q38.7",
    "description": "Divert√≠culo far√≠ngeo"
  },
  {
    "code": "Q38.8",
    "description": "Otras malformaciones cong√©nitas de la faringe"
  },
  {
    "code": "Q39.0",
    "description": "Atresia del es√≥fago sin menci√≥n de f√≠stula"
  },
  {
    "code": "Q39.1",
    "description": "Atresia del es√≥fago con f√≠stula traqueoesof√°gica"
  },
  {
    "code": "Q39.2",
    "description": "F√≠stula traqueoesof√°gica cong√©nita sin menci√≥n de atresia"
  },
  {
    "code": "Q39.3",
    "description": "Estrechez o estenosis cong√©nita del es√≥fago"
  },
  {
    "code": "Q39.4",
    "description": "Pterigi√≥n del es√≥fago"
  },
  {
    "code": "Q39.5",
    "description": "Dilataci√≥n cong√©nita del es√≥fago"
  },
  {
    "code": "Q39.6",
    "description": "Divert√≠culo del es√≥fago"
  },
  {
    "code": "Q39.8",
    "description": "Otras malformaciones cong√©nitas del es√≥fago"
  },
  {
    "code": "Q39.9",
    "description": "Malformaci√≥n cong√©nita del es√≥fago, no especificada"
  },
  {
    "code": "Q40.0",
    "description": "Estenosis hipertr√≥fica cong√©nita del p√≠loro"
  },
  {
    "code": "Q40.1",
    "description": "Hernia hiatal cong√©nita"
  },
  {
    "code": "Q40.2",
    "description": "Otras malformaciones cong√©nitas del est√≥mago, especificadas"
  },
  {
    "code": "Q40.3",
    "description": "Malformaci√≥n cong√©nita del est√≥mago, no especificada"
  },
  {
    "code": "Q40.8",
    "description": "Otras malformaciones cong√©nitas de la parte superior del tubo digestivo"
  },
  {
    "code": "Q40.9",
    "description": "Malformaci√≥n cong√©nita de la parte superior del tubo digestivo, no especificada"
  },
  {
    "code": "Q41.0",
    "description": "Ausencia, atresia y estenosis cong√©nita del duodeno"
  },
  {
    "code": "Q41.1",
    "description": "Ausencia, atresia y estenosis cong√©nita del yeyuno"
  },
  {
    "code": "Q41.2",
    "description": "Ausencia, atresia y estenosis cong√©nita del √≠leon"
  },
  {
    "code": "Q41.8",
    "description": "Ausencia, atresia y estenosis cong√©nita de otras partes especificadas del intestino delgado"
  },
  {
    "code": "Q41.9",
    "description": "Ausencia, atresia y estenosis cong√©nita del intestino delgado, parte no especificada"
  },
  {
    "code": "Q42.0",
    "description": "Ausencia, atresia y estenosis cong√©nita del recto, con f√≠stula"
  },
  {
    "code": "Q42.1",
    "description": "Ausencia, atresia y estenosis cong√©nita del recto, sin f√≠stula"
  },
  {
    "code": "Q42.2",
    "description": "Ausencia, atresia y estenosis cong√©nita del ano, con f√≠stula"
  },
  {
    "code": "Q42.3",
    "description": "Ausencia, atresia y estenosis cong√©nita del ano, sin f√≠stula"
  },
  {
    "code": "Q42.8",
    "description": "Ausencia, atresia y estenosis cong√©nita de otras partes del intestino grueso"
  },
  {
    "code": "Q42.9",
    "description": "Ausencia, atresia y estenosis cong√©nita del intestino grueso, parte no especificada"
  },
  {
    "code": "Q43.0",
    "description": "Divert√≠culo de Meckel"
  },
  {
    "code": "Q43.1",
    "description": "Enfermedad de Hirschsprung"
  },
  {
    "code": "Q43.2",
    "description": "Otros trastornos funcionales cong√©nitos del colon"
  },
  {
    "code": "Q43.3",
    "description": "Malformaciones cong√©nitas de la fijaci√≥n del intestino"
  },
  {
    "code": "Q43.4",
    "description": "Duplicaci√≥n del intestino"
  },
  {
    "code": "Q43.5",
    "description": "Ano ect√≥pico"
  },
  {
    "code": "Q43.6",
    "description": "F√≠stula cong√©nita del recto y del ano"
  },
  {
    "code": "Q43.7",
    "description": "Persistencia de la cloaca"
  },
  {
    "code": "Q43.8",
    "description": "Otras malformaciones cong√©nitas del intestino, especificadas"
  },
  {
    "code": "Q43.9",
    "description": "Malformaci√≥n cong√©nita del intestino, no especificada"
  },
  {
    "code": "Q44.0",
    "description": "Agenesia, aplasia e hipoplasia de la ves√≠cula biliar"
  },
  {
    "code": "Q44.1",
    "description": "Otras malformaciones cong√©nitas de la ves√≠cula biliar"
  },
  {
    "code": "Q44.2",
    "description": "Atresia de los conductos biliares"
  },
  {
    "code": "Q44.3",
    "description": "Estrechez y estenosis cong√©nita de los conductos biliares"
  },
  {
    "code": "Q44.4",
    "description": "Quiste del col√©doco"
  },
  {
    "code": "Q44.5",
    "description": "Otras malformaciones cong√©nitas de los conductos biliares"
  },
  {
    "code": "Q44.6",
    "description": "Enfermedad qu√≠stica del h√≠gado"
  },
  {
    "code": "Q44.7",
    "description": "Otras malformaciones cong√©nitas del h√≠gado"
  },
  {
    "code": "Q45.0",
    "description": "Agenesia, aplasia e hipoplasia del p√°ncreas"
  },
  {
    "code": "Q45.1",
    "description": "P√°ncreas anular"
  },
  {
    "code": "Q45.2",
    "description": "Quiste cong√©nito del p√°ncreas"
  },
  {
    "code": "Q45.3",
    "description": "Otras malformaciones cong√©nitas del p√°ncreas y del conducto pancre√°tico"
  },
  {
    "code": "Q45.8",
    "description": "Otras malformaciones cong√©nitas del sistema digestivo, especificadas"
  },
  {
    "code": "Q45.9",
    "description": "Malformaci√≥n cong√©nita del sistema digestivo, no especificada"
  },
  {
    "code": "Q50.0",
    "description": "Ausencia cong√©nita de ovario"
  },
  {
    "code": "Q50.1",
    "description": "Quiste en desarrollo del ovario"
  },
  {
    "code": "Q50.2",
    "description": "Torsi√≥n cong√©nita del ovario"
  },
  {
    "code": "Q50.3",
    "description": "Otras malformaciones cong√©nitas de los ovarios"
  },
  {
    "code": "Q50.4",
    "description": "Quiste embrionario de la trompa de Falopio"
  },
  {
    "code": "Q50.5",
    "description": "Quiste embrionario del ligamento ancho"
  },
  {
    "code": "Q50.6",
    "description": "Otras malformaciones cong√©nitas de la trompa de Falopio y del ligamento ancho"
  },
  {
    "code": "Q51.0",
    "description": "Agenesia y aplasia del √∫tero"
  },
  {
    "code": "Q51.1",
    "description": "Duplicaci√≥n del √∫tero con duplicaci√≥n del cuello uterino y de la vagina"
  },
  {
    "code": "Q51.2",
    "description": "Otra duplicaci√≥n del √∫tero"
  },
  {
    "code": "Q51.3",
    "description": "Utero bicorne"
  },
  {
    "code": "Q51.4",
    "description": "Utero unicorne"
  },
  {
    "code": "Q51.5",
    "description": "Agenesia y aplasia del cuello uterino"
  },
  {
    "code": "Q51.6",
    "description": "Quiste embrionario del cuello uterino"
  },
  {
    "code": "Q51.7",
    "description": "F√≠stula cong√©nita entre el √∫tero y el tracto digestivo y urinario"
  },
  {
    "code": "Q51.8",
    "description": "Otras malformaciones cong√©nitas del √∫tero y del cuello uterino"
  },
  {
    "code": "Q51.9",
    "description": "Malformaci√≥n cong√©nita del √∫tero y del cuello uterino, no especificada"
  },
  {
    "code": "Q52.0",
    "description": "Ausencia cong√©nita de la vagina"
  },
  {
    "code": "Q52.1",
    "description": "Duplicaci√≥n de la vagina"
  },
  {
    "code": "Q52.2",
    "description": "F√≠stula rectovaginal cong√©nita"
  },
  {
    "code": "Q52.3",
    "description": "Himen imperforado"
  },
  {
    "code": "Q52.4",
    "description": "Otras malformaciones cong√©nitas de la vagina"
  },
  {
    "code": "Q52.5",
    "description": "Fusi√≥n de labios de la vulva"
  },
  {
    "code": "Q52.6",
    "description": "Malformaci√≥n cong√©nita del cl√≠toris"
  },
  {
    "code": "Q52.7",
    "description": "Otras malformaciones cong√©nitas de la vulva"
  },
  {
    "code": "Q52.8",
    "description": "Otras malformaciones cong√©nitas de los √≥rganos genitales femeninos, especificadas"
  },
  {
    "code": "Q52.9",
    "description": "Malformaci√≥n cong√©nita de los genitales femeninos, no especificada"
  },
  {
    "code": "Q53.0",
    "description": "Ectopia testicular"
  },
  {
    "code": "Q53.1",
    "description": "Test√≠culo no descendido, unilateral"
  },
  {
    "code": "Q53.2",
    "description": "Test√≠culo no descendido, bilateral"
  },
  {
    "code": "Q53.9",
    "description": "Test√≠culo no descendido, sin otra especificaci√≥n"
  },
  {
    "code": "Q54.0",
    "description": "Hipospadias del glande"
  },
  {
    "code": "Q54.1",
    "description": "Hipospadias peneana"
  },
  {
    "code": "Q54.2",
    "description": "Hipospadias penoscrotal"
  },
  {
    "code": "Q54.3",
    "description": "Hipospadias perineal"
  },
  {
    "code": "Q54.4",
    "description": "Encordamiento cong√©nito del pene"
  },
  {
    "code": "Q54.8",
    "description": "Otras hipospadias"
  },
  {
    "code": "Q54.9",
    "description": "Hipospadias, no especificada"
  },
  {
    "code": "Q55.0",
    "description": "Ausencia y aplasia del test√≠culo"
  },
  {
    "code": "Q55.1",
    "description": "Hipoplasia del test√≠culo y del escroto"
  },
  {
    "code": "Q55.2",
    "description": "Otras malformaciones cong√©nitas de los test√≠culos y del escroto"
  },
  {
    "code": "Q55.3",
    "description": "Atresia del conducto deferente"
  },
  {
    "code": "Q55.4",
    "description": "Otras malformaciones cong√©nitas de los conductos deferentes, del epid√≠dimo, de las ves√≠culas seminales y de la pr√≥stata"
  },
  {
    "code": "Q55.5",
    "description": "Aplasia y ausencia cong√©nita del pene"
  },
  {
    "code": "Q55.6",
    "description": "Otras malformaciones cong√©nitas del pene"
  },
  {
    "code": "Q55.8",
    "description": "Otras malformaciones cong√©nitas de los √≥rganos genitales masculinos, especificadas"
  },
  {
    "code": "Q55.9",
    "description": "Malformaci√≥n cong√©nita de los √≥rganos genitales masculinos, no especificada"
  },
  {
    "code": "Q56.0",
    "description": "Hermafroditismo, no clasificado en otra parte"
  },
  {
    "code": "Q56.1",
    "description": "Seudohermafroditismo masculino, no clasificado en otra parte"
  },
  {
    "code": "Q56.2",
    "description": "Seudohermafroditismo femenino, no clasificado en otra parte"
  },
  {
    "code": "Q56.3",
    "description": "Seudohermafroditismo, no especificado"
  },
  {
    "code": "Q56.4",
    "description": "Sexo indeterminado, sin otra especificaci√≥n"
  },
  {
    "code": "Q60.0",
    "description": "Agenesia renal, unilateral"
  },
  {
    "code": "Q60.1",
    "description": "Agenesia renal, bilateral"
  },
  {
    "code": "Q60.2",
    "description": "Agenesia renal, sin otra especificaci√≥n"
  },
  {
    "code": "Q60.3",
    "description": "Hipoplasia renal, unilateral"
  },
  {
    "code": "Q60.4",
    "description": "Hipoplasia renal, bilateral"
  },
  {
    "code": "Q60.5",
    "description": "Hipoplasia renal, no especificada"
  },
  {
    "code": "Q60.6",
    "description": "S√≠ndrome de Potter"
  },
  {
    "code": "Q61.0",
    "description": "Quiste renal solitario cong√©nito"
  },
  {
    "code": "Q61.1",
    "description": "Ri√±√≥n poliqu√≠stico, tipo infantil"
  },
  {
    "code": "Q61.2",
    "description": "Ri√±√≥n poliqu√≠stico, tipo adulto"
  },
  {
    "code": "Q61.3",
    "description": "Ri√±√≥n poliqu√≠stico, tipo no especificado"
  },
  {
    "code": "Q61.4",
    "description": "Displasia renal"
  },
  {
    "code": "Q61.5",
    "description": "Ri√±√≥n qu√≠stico medular"
  },
  {
    "code": "Q61.8",
    "description": "Otras enfermedades renales qu√≠sticas"
  },
  {
    "code": "Q61.9",
    "description": "Enfermedad qu√≠stica del ri√±√≥n, no especificada"
  },
  {
    "code": "Q62.0",
    "description": "Hidronefrosis cong√©nita"
  },
  {
    "code": "Q62.1",
    "description": "Atresia y estenosis del ur√©ter"
  },
  {
    "code": "Q62.2",
    "description": "Megalour√©ter cong√©nito"
  },
  {
    "code": "Q62.3",
    "description": "Otros defectos obstructivos de la pelvis renal y del ur√©ter"
  },
  {
    "code": "Q62.4",
    "description": "Agenesia del ur√©ter"
  },
  {
    "code": "Q62.5",
    "description": "Duplicaci√≥n del ur√©ter"
  },
  {
    "code": "Q62.6",
    "description": "Mala posici√≥n del ur√©ter"
  },
  {
    "code": "Q62.7",
    "description": "Reflujo v√©sico-ur√©tero-renal cong√©nito"
  },
  {
    "code": "Q62.8",
    "description": "Otras malformaciones cong√©nitas del ur√©ter"
  },
  {
    "code": "Q63.0",
    "description": "Ri√±√≥n supernumerario"
  },
  {
    "code": "Q63.1",
    "description": "Ri√±√≥n lobulado, fusionado y en herradura"
  },
  {
    "code": "Q63.2",
    "description": "Ri√±√≥n ect√≥pico"
  },
  {
    "code": "Q63.3",
    "description": "Hiperplasia renal y ri√±√≥n gigante"
  },
  {
    "code": "Q63.8",
    "description": "Otras malformaciones cong√©nitas del ri√±√≥n, especificadas"
  },
  {
    "code": "Q63.9",
    "description": "Malformaci√≥n cong√©nita del ri√±√≥n, no especificada"
  },
  {
    "code": "Q64.0",
    "description": "Epispadias"
  },
  {
    "code": "Q64.1",
    "description": "Extrofia de la vejiga urinaria"
  },
  {
    "code": "Q64.2",
    "description": "V√°lvulas uretrales posteriores cong√©nitas"
  },
  {
    "code": "Q64.3",
    "description": "Otras atresias y estenosis de la uretra y del cuello de la vejiga"
  },
  {
    "code": "Q64.4",
    "description": "Malformaci√≥n del uraco"
  },
  {
    "code": "Q64.5",
    "description": "Ausencia cong√©nita de la vejiga y de la uretra"
  },
  {
    "code": "Q64.6",
    "description": "Divert√≠culo cong√©nito de la vejiga"
  },
  {
    "code": "Q64.7",
    "description": "Otras malformaciones cong√©nitas de la vejiga y de la uretra"
  },
  {
    "code": "Q64.8",
    "description": "Otras malformaciones cong√©nitas del aparato urinario, especificadas"
  },
  {
    "code": "Q64.9",
    "description": "Malformaci√≥n cong√©nita del aparato urinario, no especificada"
  },
  {
    "code": "Q65.0",
    "description": "Luxaci√≥n cong√©nita de la cadera, unilateral"
  },
  {
    "code": "Q65.1",
    "description": "Luxaci√≥n cong√©nita de la cadera, bilateral"
  },
  {
    "code": "Q65.2",
    "description": "Luxaci√≥n cong√©nita de la cadera, no especificada"
  },
  {
    "code": "Q65.3",
    "description": "Subluxaci√≥n cong√©nita de la cadera, unilateral"
  },
  {
    "code": "Q65.4",
    "description": "Subluxaci√≥n cong√©nita de la cadera, bilateral"
  },
  {
    "code": "Q65.5",
    "description": "Subluxaci√≥n cong√©nita de la cadera, no especificada"
  },
  {
    "code": "Q65.6",
    "description": "Cadera inestable"
  },
  {
    "code": "Q65.8",
    "description": "Otras deformidades cong√©nitas de la cadera"
  },
  {
    "code": "Q65.9",
    "description": "Deformidad cong√©nita de la cadera, no especificada"
  },
  {
    "code": "Q66.0",
    "description": "Talipes equinovarus"
  },
  {
    "code": "Q66.1",
    "description": "Talipes calcaneovarus"
  },
  {
    "code": "Q66.2",
    "description": "Metatarsus varus"
  },
  {
    "code": "Q66.3",
    "description": "Otras deformidades varus cong√©nitas de los pies"
  },
  {
    "code": "Q66.4",
    "description": "Talipes calcaneovalgus"
  },
  {
    "code": "Q66.5",
    "description": "Pie plano cong√©nito"
  },
  {
    "code": "Q66.6",
    "description": "Otras deformidades valgus cong√©nitas de los pies"
  },
  {
    "code": "Q66.7",
    "description": "Pie cavus"
  },
  {
    "code": "Q66.8",
    "description": "Otras deformidades cong√©nitas de los pies"
  },
  {
    "code": "Q66.9",
    "description": "Deformidad cong√©nita de los pies, no especificada"
  },
  {
    "code": "Q67.0",
    "description": "Asimetr√≠a facial"
  },
  {
    "code": "Q67.1",
    "description": "Facies comprimida"
  },
  {
    "code": "Q67.2",
    "description": "Dolicocefalia"
  },
  {
    "code": "Q67.3",
    "description": "Plagiocefalia"
  },
  {
    "code": "Q67.4",
    "description": "Otras deformidades cong√©nitas del cr√°neo, de la cara y de la mand√≠bula"
  },
  {
    "code": "Q67.5",
    "description": "Deformidad cong√©nita de la columna vertebral"
  },
  {
    "code": "Q67.6",
    "description": "T√≥rax excavado"
  },
  {
    "code": "Q67.7",
    "description": "T√≥rax en quilla"
  },
  {
    "code": "Q67.8",
    "description": "Otras deformidades cong√©nitas del t√≥rax"
  },
  {
    "code": "Q68.0",
    "description": "Deformidad cong√©nita del m√∫sculo esternocleidomastoideo"
  },
  {
    "code": "Q68.1",
    "description": "Deformidad cong√©nita de la mano"
  },
  {
    "code": "Q68.2",
    "description": "Deformidad cong√©nita de la rodilla"
  },
  {
    "code": "Q68.3",
    "description": "Curvatura cong√©nita del f√©mur"
  },
  {
    "code": "Q68.4",
    "description": "Curvatura cong√©nita de la tibia y del peron√©"
  },
  {
    "code": "Q68.5",
    "description": "Curvatura cong√©nita de hueso(s) largo(s) del miembro inferior, sin otra especificaci√≥n"
  },
  {
    "code": "Q68.8",
    "description": "Otras deformidades cong√©nitas osteomusculares, especificadas"
  },
  {
    "code": "Q69.0",
    "description": "Dedo(s) supernumerario(s) de la mano"
  },
  {
    "code": "Q69.1",
    "description": "Pulgar(es) supernumerario(s)"
  },
  {
    "code": "Q69.2",
    "description": "Dedo(s) supernumerario(s) del pie"
  },
  {
    "code": "Q69.9",
    "description": "Polidactilia, no especificada"
  },
  {
    "code": "Q70.0",
    "description": "Fusi√≥n de los dedos de la mano"
  },
  {
    "code": "Q70.1",
    "description": "Membrana interdigital de la mano"
  },
  {
    "code": "Q70.2",
    "description": "Fusi√≥n de los dedos del pie"
  },
  {
    "code": "Q70.3",
    "description": "Membrana interdigital del pie"
  },
  {
    "code": "Q70.4",
    "description": "Polisindactilia"
  },
  {
    "code": "Q70.9",
    "description": "Sindactilia, no especificada"
  },
  {
    "code": "Q71.0",
    "description": "Ausencia cong√©nita completa del (de los) miembro(s) superior(es)"
  },
  {
    "code": "Q71.1",
    "description": "Ausencia cong√©nita del brazo y del antebrazo con presencia de la mano"
  },
  {
    "code": "Q71.2",
    "description": "Ausencia cong√©nita del antebrazo y de la mano"
  },
  {
    "code": "Q71.3",
    "description": "Ausencia cong√©nita de la mano y el (los) dedo(s)"
  },
  {
    "code": "Q71.4",
    "description": "Defecto por reducci√≥n longitudinal del radio"
  },
  {
    "code": "Q71.5",
    "description": "Defecto por reducci√≥n longitudinal del c√∫bito"
  },
  {
    "code": "Q71.6",
    "description": "Mano en pinza de langosta"
  },
  {
    "code": "Q71.8",
    "description": "Otros defectos por reducci√≥n del (de los) miembro(s) superior(es)"
  },
  {
    "code": "Q71.9",
    "description": "Defecto por reducci√≥n del miembro superior, no especificado"
  },
  {
    "code": "Q72.0",
    "description": "Ausencia cong√©nita completa del (de los) miembro(s) inferior(es)"
  },
  {
    "code": "Q72.1",
    "description": "Ausencia cong√©nita del muslo y de la pierna con presencia del pie"
  },
  {
    "code": "Q72.2",
    "description": "Ausencia cong√©nita de la pierna y del pie"
  },
  {
    "code": "Q72.3",
    "description": "Ausencia cong√©nita del pie y dedo(s) del pie"
  },
  {
    "code": "Q72.4",
    "description": "Defecto por reducci√≥n longitudinal del f√©mur"
  },
  {
    "code": "Q72.5",
    "description": "Defecto por reducci√≥n longitudinal de la tibia"
  },
  {
    "code": "Q72.6",
    "description": "Defecto por reducci√≥n longitudinal del peron√©"
  },
  {
    "code": "Q72.7",
    "description": "Pie hendido"
  },
  {
    "code": "Q72.8",
    "description": "Otros defectos por reducci√≥n del (de los) miembro(s) inferior(es)"
  },
  {
    "code": "Q72.9",
    "description": "Defecto por reducci√≥n del miembro inferior, no especificado"
  },
  {
    "code": "Q73.0",
    "description": "Ausencia completa de miembro(s) no especificado(s)"
  },
  {
    "code": "Q73.1",
    "description": "Focomelia, miembro(s) no especificado(s)"
  },
  {
    "code": "Q73.8",
    "description": "Otros defectos por reducci√≥n de miembro(s) no especificado(s)"
  },
  {
    "code": "Q74.0",
    "description": "Otras malformaciones cong√©nitas del (de los) miembro(s) superior(es), incluida la cintura escapular"
  },
  {
    "code": "Q74.1",
    "description": "Malformaci√≥n cong√©nita de la rodilla"
  },
  {
    "code": "Q74.2",
    "description": "Otras malformaciones cong√©nitas del (de los) miembro(s) inferior(es), incluida la cintura pelviana"
  },
  {
    "code": "Q74.3",
    "description": "Artrogriposis m√∫ltiple cong√©nita"
  },
  {
    "code": "Q74.8",
    "description": "Otras malformaciones cong√©nitas especificadas del (de los) miembro(s)"
  },
  {
    "code": "Q74.9",
    "description": "Malformaci√≥n cong√©nita de miembro(s), no especificada"
  },
  {
    "code": "Q75.0",
    "description": "Craneosinostosis"
  },
  {
    "code": "Q75.1",
    "description": "Disostosis craneofacial"
  },
  {
    "code": "Q75.2",
    "description": "Hipertelorismo"
  },
  {
    "code": "Q75.3",
    "description": "Macrocefalia"
  },
  {
    "code": "Q75.4",
    "description": "Disostosis maxilofacial"
  },
  {
    "code": "Q75.5",
    "description": "Disostosis oculomaxilar"
  },
  {
    "code": "Q75.8",
    "description": "Otras malformaciones cong√©nitas especificadas de los huesos del cr√°neo y de la cara"
  },
  {
    "code": "Q75.9",
    "description": "Malformaci√≥n cong√©nita no especificada de los huesos del cr√°neo y de la cara"
  },
  {
    "code": "Q76.0",
    "description": "Espina b√≠fida oculta"
  },
  {
    "code": "Q76.1",
    "description": "S√≠ndrome de Klippel-Feil"
  },
  {
    "code": "Q76.2",
    "description": "Espondilolistesis cong√©nita"
  },
  {
    "code": "Q76.3",
    "description": "Escoliosis cong√©nita debida a malformaci√≥n cong√©nita √≥sea"
  },
  {
    "code": "Q76.4",
    "description": "Otra malformaci√≥n cong√©nita de la columna vertebral, no asociada con escoliosis"
  },
  {
    "code": "Q76.5",
    "description": "Costilla cervical"
  },
  {
    "code": "Q76.6",
    "description": "Otras malformaciones cong√©nitas de las costillas"
  },
  {
    "code": "Q76.7",
    "description": "Malformaci√≥n cong√©nita del estern√≥n"
  },
  {
    "code": "Q76.8",
    "description": "Otras malformaciones cong√©nitas del t√≥rax √≥seo"
  },
  {
    "code": "Q76.9",
    "description": "Malformaci√≥n cong√©nita del t√≥rax √≥seo, no especificada"
  },
  {
    "code": "Q77.0",
    "description": "Acondrog√©nesis"
  },
  {
    "code": "Q77.1",
    "description": "Enanismo tanatof√≥rico"
  },
  {
    "code": "Q77.2",
    "description": "S√≠ndrome de costilla corta"
  },
  {
    "code": "Q77.3",
    "description": "Condrodisplasia punctata"
  },
  {
    "code": "Q77.4",
    "description": "Acondroplasia"
  },
  {
    "code": "Q77.5",
    "description": "Displasia distr√≥fica"
  },
  {
    "code": "Q77.6",
    "description": "Displasia condroectod√©rmica"
  },
  {
    "code": "Q77.7",
    "description": "Displasia espondiloepifisaria"
  },
  {
    "code": "Q77.8",
    "description": "Otras osteocondrodisplasias con defectos del crecimiento de los huesos largos y de la columna vertebral"
  },
  {
    "code": "Q77.9",
    "description": ""
  },
  {
    "code": "Q78.0",
    "description": "Osteog√©nesis imperfecta"
  },
  {
    "code": "Q78.1",
    "description": "Displasia poliost√≥tica fibrosa"
  },
  {
    "code": "Q78.2",
    "description": "Osteopetrosis"
  },
  {
    "code": "Q78.3",
    "description": "Displasia diafisaria progresiva"
  },
  {
    "code": "Q78.4",
    "description": "Encondromatosis"
  },
  {
    "code": "Q78.5",
    "description": "Displasia metafisaria"
  },
  {
    "code": "Q78.6",
    "description": "Exostosis cong√©nita m√∫ltiple"
  },
  {
    "code": "Q78.8",
    "description": "Otras osteocondrodisplasias especificadas"
  },
  {
    "code": "Q78.9",
    "description": "Osteocondrodisplasia, no especificada"
  },
  {
    "code": "Q79.0",
    "description": "Hernia diafragm√°tica cong√©nita"
  },
  {
    "code": "Q79.1",
    "description": "Otras malformaciones cong√©nitas del diafragma"
  },
  {
    "code": "Q79.2",
    "description": "Ex√≥nfalos"
  },
  {
    "code": "Q79.3",
    "description": "Gastrosquisis"
  },
  {
    "code": "Q79.4",
    "description": "S√≠ndrome del abdomen en ciruela pasa"
  },
  {
    "code": "Q79.5",
    "description": "Otras malformaciones cong√©nitas de la pared abdominal"
  },
  {
    "code": "Q79.6",
    "description": "S√≠ndrome de Ehlers-Danlos"
  },
  {
    "code": "Q79.8",
    "description": "Otras malformaciones cong√©nitas del sistema osteomuscular"
  },
  {
    "code": "Q79.9",
    "description": "Malformaci√≥n cong√©nita del sistema osteomuscular, no especificada"
  },
  {
    "code": "Q80.0",
    "description": "Ictiosis vulgar"
  },
  {
    "code": "Q80.1",
    "description": "Ictiosis ligada al cromosoma X"
  },
  {
    "code": "Q80.2",
    "description": "Ictiosis lamelar"
  },
  {
    "code": "Q80.3",
    "description": "Eritrodermia ictiosiforme vesicular cong√©nita"
  },
  {
    "code": "Q80.4",
    "description": "Feto arlequ√≠n"
  },
  {
    "code": "Q80.8",
    "description": "Otras ictiosis cong√©nitas"
  },
  {
    "code": "Q80.9",
    "description": "Ictiosis cong√©nita, no especificada"
  },
  {
    "code": "Q81.0",
    "description": "Epiderm√≥lisis bullosa simple"
  },
  {
    "code": "Q81.1",
    "description": "Epiderm√≥lisis bullosa letal"
  },
  {
    "code": "Q81.2",
    "description": "Epiderm√≥lisis bullosa distr√≥fica"
  },
  {
    "code": "Q81.8",
    "description": "Otras epiderm√≥lisis bullosas"
  },
  {
    "code": "Q81.9",
    "description": "Epiderm√≥lisis bullosa, no especificada"
  },
  {
    "code": "Q82.0",
    "description": "Linfedema hereditario"
  },
  {
    "code": "Q82.1",
    "description": "Xeroderma pigmentoso"
  },
  {
    "code": "Q82.2",
    "description": "Mastocitosis"
  },
  {
    "code": "Q82.3",
    "description": "Incontinencia pigmentaria"
  },
  {
    "code": "Q82.4",
    "description": "Displasia ectod√©rmica (anhidr√≥tica)"
  },
  {
    "code": "Q82.5",
    "description": "Nevo no neopl√°sico, cong√©nito"
  },
  {
    "code": "Q82.8",
    "description": "Otras malformaciones cong√©nitas de la piel, especificadas"
  },
  {
    "code": "Q82.9",
    "description": "Malformaci√≥n cong√©nita de la piel, no especificada"
  },
  {
    "code": "Q83.0",
    "description": "Ausencia cong√©nita de la mama con ausencia del pez√≥n"
  },
  {
    "code": "Q83.1",
    "description": "Mama supernumeraria"
  },
  {
    "code": "Q83.2",
    "description": "Ausencia de pez√≥n"
  },
  {
    "code": "Q83.3",
    "description": "Pez√≥n supernumerario"
  },
  {
    "code": "Q83.8",
    "description": "Otras malformaciones cong√©nitas de la mama"
  },
  {
    "code": "Q83.9",
    "description": "Malformaci√≥n cong√©nita de la mama, no especificada"
  },
  {
    "code": "Q84.0",
    "description": "Alopecia cong√©nita"
  },
  {
    "code": "Q84.1",
    "description": "Alteraciones morfol√≥gicas cong√©nitas del pelo, no clasificadas en otra parte"
  },
  {
    "code": "Q84.2",
    "description": "Otras malformaciones cong√©nitas del pelo"
  },
  {
    "code": "Q84.3",
    "description": "Anoniquia"
  },
  {
    "code": "Q84.4",
    "description": "Leuconiquia cong√©nita"
  },
  {
    "code": "Q84.5",
    "description": "Agrandamiento e hipertrofia de las u√±as"
  },
  {
    "code": "Q84.6",
    "description": "Otras malformaciones cong√©nitas de las u√±as"
  },
  {
    "code": "Q84.8",
    "description": "Otras malformaciones cong√©nitas de las faneras, especificadas"
  },
  {
    "code": "Q84.9",
    "description": "Malformaci√≥n cong√©nita de las faneras, no especificada"
  },
  {
    "code": "Q85.0",
    "description": "Neurofibromatosis (no maligna)"
  },
  {
    "code": "Q85.1",
    "description": "Esclerosis tuberosa"
  },
  {
    "code": "Q85.8",
    "description": "Otras facomatosis, no clasificadas en otra parte"
  },
  {
    "code": "Q85.9",
    "description": "Facomatosis, no especificada"
  },
  {
    "code": "Q86.0",
    "description": "S√≠ndrome fetal (dism√≥rfico) debido al alcohol"
  },
  {
    "code": "Q86.1",
    "description": "S√≠ndrome de hidanto√≠na fetal"
  },
  {
    "code": "Q86.2",
    "description": "Dismorfismo debido a warfarina"
  },
  {
    "code": "Q86.8",
    "description": "Otros s√≠ndromes de malformaciones cong√©nitas debidos a causas ex√≥genas conocidas"
  },
  {
    "code": "Q87.0",
    "description": "S√≠ndromes de malformaciones cong√©nitas que afectan principalmente la apariencia facial"
  },
  {
    "code": "Q87.1",
    "description": "S√≠ndromes de malformaciones cong√©nitas asociadas principalmente con estatura baja:"
  },
  {
    "code": "Q87.2",
    "description": "S√≠ndromes de malformaciones cong√©nitas que afectan principalmente los miembros"
  },
  {
    "code": "Q87.3",
    "description": "S√≠ndromes de malformaciones cong√©nitas con exceso de crecimiento precoz"
  },
  {
    "code": "Q87.4",
    "description": "S√≠ndrome de Marfan"
  },
  {
    "code": "Q87.5",
    "description": "Otros s√≠ndromes de malformaciones cong√©nitas con otros cambios esquel√©ticos"
  },
  {
    "code": "Q87.8",
    "description": "Otros s√≠ndromes de malformaciones cong√©nitas especificados, no clasificados en otra parte"
  },
  {
    "code": "Q89.0",
    "description": "Malformaciones cong√©nitas del bazo"
  },
  {
    "code": "Q89.1",
    "description": "Malformaciones cong√©nitas de la gl√°ndula suprarrenal"
  },
  {
    "code": "Q89.2",
    "description": "Malformaciones cong√©nitas de otras gl√°ndulas endocrinas"
  },
  {
    "code": "Q89.3",
    "description": "Situs inversus"
  },
  {
    "code": "Q89.4",
    "description": "Gemelos siameses"
  },
  {
    "code": "Q89.7",
    "description": "Malformaciones cong√©nitas m√∫ltiples, no clasificadas en otra parte"
  },
  {
    "code": "Q89.8",
    "description": "Otras malformaciones cong√©nitas, especificadas"
  },
  {
    "code": "Q89.9",
    "description": "Malformaci√≥n cong√©nita, no especificada"
  },
  {
    "code": "Q90.0",
    "description": "Trisom√≠a 21, por falta de disyunci√≥n mei√≥tica"
  },
  {
    "code": "Q90.1",
    "description": "Trisom√≠a 21, mosaico (por falta de disyunci√≥n mit√≥tica)"
  },
  {
    "code": "Q90.2",
    "description": "Trisom√≠a 21, por translocaci√≥n"
  },
  {
    "code": "Q90.9",
    "description": "S√≠ndrome de Down, no especificado"
  },
  {
    "code": "Q91.0",
    "description": "Trisom√≠a 18, por falta de disyunci√≥n mei√≥tica"
  },
  {
    "code": "Q91.1",
    "description": "Trisom√≠a 18, mosaico (por falta de disyunci√≥n mit√≥tica)"
  },
  {
    "code": "Q91.2",
    "description": "Trisom√≠a 18, por translocaci√≥n"
  },
  {
    "code": "Q91.3",
    "description": "S√≠ndrome de Edwards, no especificado"
  },
  {
    "code": "Q91.4",
    "description": "Trisom√≠a 13, por falta de disyunci√≥n mei√≥tica"
  },
  {
    "code": "Q91.5",
    "description": "Trisom√≠a 13, mosaico (por falta de disyunci√≥n mit√≥tica)"
  },
  {
    "code": "Q91.6",
    "description": "Trisom√≠a 13, por translocaci√≥n"
  },
  {
    "code": "Q91.7",
    "description": "S√≠ndrome de Patau, no especificado"
  },
  {
    "code": "Q92.0",
    "description": "Trisom√≠a de un cromosoma completo, por falta de disyunci√≥n mei√≥tica"
  },
  {
    "code": "Q92.1",
    "description": "Trisom√≠a de un cromosoma completo, mosaico (por falta de disyunci√≥n mit√≥tica)"
  },
  {
    "code": "Q92.2",
    "description": "Trisom√≠a parcial mayor"
  },
  {
    "code": "Q92.3",
    "description": "Trisom√≠a parcial menor"
  },
  {
    "code": "Q92.4",
    "description": "Duplicaciones visibles s√≥lo en la prometafase"
  },
  {
    "code": "Q92.5",
    "description": "Duplicaciones con otros reordenamientos complejos"
  },
  {
    "code": "Q92.6",
    "description": "Cromosomas marcadores suplementarios"
  },
  {
    "code": "Q92.7",
    "description": "Triploid√≠a y poliploid√≠a"
  },
  {
    "code": "Q92.8",
    "description": "Otras trisom√≠as y trisom√≠as parciales de los autosomas, especificadas"
  },
  {
    "code": "Q92.9",
    "description": "Trisom√≠a y trisom√≠a parcial de los autosomas, sin otra especificaci√≥n"
  },
  {
    "code": "Q93.0",
    "description": "Monosom√≠a completa de un cromosoma, por falta de disyunci√≥n mei√≥tica"
  },
  {
    "code": "Q93.1",
    "description": "Monosom√≠a completa de un cromosoma, mosaico (por falta de disyunci√≥n mit√≥tica)"
  },
  {
    "code": "Q93.2",
    "description": "Cromosoma reemplazado por anillo o dic√©ntrico"
  },
  {
    "code": "Q93.3",
    "description": "Supresi√≥n del brazo corto del cromosoma 4"
  },
  {
    "code": "Q93.4",
    "description": "Supresi√≥n del brazo corto del cromosoma 5"
  },
  {
    "code": "Q93.5",
    "description": "Otras supresiones de parte de un cromosoma"
  },
  {
    "code": "Q93.6",
    "description": "Supresiones visibles s√≥lo en la prometafase"
  },
  {
    "code": "Q93.7",
    "description": "Supresiones con otros reordenamientos complejos"
  },
  {
    "code": "Q93.8",
    "description": "Otras supresiones de los autosomas"
  },
  {
    "code": "Q93.9",
    "description": "Supresi√≥n de los autosomas, no especificada"
  },
  {
    "code": "Q95.0",
    "description": "Translocaci√≥n equilibrada e inserci√≥n en individuo normal"
  },
  {
    "code": "Q95.1",
    "description": "Inversi√≥n cromos√≥mica en individuo normal"
  },
  {
    "code": "Q95.2",
    "description": "Reordenamiento autos√≥mico equilibrado en individuo anormal"
  },
  {
    "code": "Q95.3",
    "description": "Reordenamiento autos√≥mico/sexual equilibrado en individuo anormal"
  },
  {
    "code": "Q95.4",
    "description": "Individuos con heterocromatina marcadora"
  },
  {
    "code": "Q95.5",
    "description": "Individuos con sitio fr√°gil autos√≥mico"
  },
  {
    "code": "Q95.8",
    "description": "Otros reordenamientos equilibrados y marcadores estructurales"
  },
  {
    "code": "Q95.9",
    "description": "Reordenamiento equilibrado y marcador estructural, sin otra especificaci√≥n"
  },
  {
    "code": "Q96.0",
    "description": "Cariotipo 45,X"
  },
  {
    "code": "Q96.1",
    "description": "Cariotipo 46,X iso (Xq)"
  },
  {
    "code": "Q96.2",
    "description": "Cariotipo 46,X con cromosoma sexual anormal excepto iso (Xq)"
  },
  {
    "code": "Q96.3",
    "description": "Mosaico 45,X/46,XX o XY"
  },
  {
    "code": "Q96.4",
    "description": "Mosaico 45,X/otra(s) l√≠nea(s) celular(es) con cromosoma sexual anormal"
  },
  {
    "code": "Q96.8",
    "description": "Otras variantes del s√≠ndrome de Turner"
  },
  {
    "code": "Q96.9",
    "description": "S√≠ndrome de Turner, no especificado"
  },
  {
    "code": "Q97.0",
    "description": "Cariotipo 47,XXX"
  },
  {
    "code": "Q97.1",
    "description": "Mujer con m√°s de tres cromosomas X"
  },
  {
    "code": "Q97.2",
    "description": "Mosaico, l√≠neas con n√∫mero variable de cromosomas X"
  },
  {
    "code": "Q97.3",
    "description": "Mujer con cariotipo 46,XY"
  },
  {
    "code": "Q97.8",
    "description": "Otras anomal√≠as de los cromosomas sexuales, con fenotipo femenino, especificadas"
  },
  {
    "code": "Q97.9",
    "description": "Anomal√≠a de los cromosomas sexuales, con fenotipo femenino, sin otra especificaci√≥n"
  },
  {
    "code": "Q98.0",
    "description": "S√≠ndrome de Klinefelter, cariotipo 47,XXY"
  },
  {
    "code": "Q98.1",
    "description": "S√≠ndrome de Klinefelter, hombre con m√°s de dos cromosomas X"
  },
  {
    "code": "Q98.2",
    "description": "S√≠ndrome de Klinefelter, hombre con cariotipo 46,XX"
  },
  {
    "code": "Q98.3",
    "description": "Otro hombre con cariotipo 46,XX"
  },
  {
    "code": "Q98.4",
    "description": "S√≠ndrome de Klinefelter, no especificado"
  },
  {
    "code": "Q98.5",
    "description": "Cariotipo 47,XYY"
  },
  {
    "code": "Q98.6",
    "description": "Hombre con cromosoma sexual estructuralmente anormal"
  },
  {
    "code": "Q98.7",
    "description": "Hombre con mosaico de cromosomas sexuales"
  },
  {
    "code": "Q98.8",
    "description": "Otras anomal√≠as de los cromosomas sexuales, con fenotipo masculino, especificadas"
  },
  {
    "code": "Q98.9",
    "description": "Anomal√≠a de los cromosomas sexuales, fenotipo masculino, sin otra especificaci√≥n"
  },
  {
    "code": "Q99.0",
    "description": "Quimera 46,XX/46,XY"
  },
  {
    "code": "Q99.1",
    "description": "Hermafrodita verdadero 46,XX"
  },
  {
    "code": "Q99.2",
    "description": "Cromosoma X fr√°gil"
  },
  {
    "code": "Q99.8",
    "description": "Otras anomal√≠as de los cromosomas, especificadas"
  },
  {
    "code": "Q99.9",
    "description": "Anomal√≠a cromos√≥mica, no especificada"
  },
  {
    "code": "R00.0",
    "description": "Taquicardia, no especificada"
  },
  {
    "code": "R00.1",
    "description": "Bradicardia, no especificada"
  },
  {
    "code": "R00.2",
    "description": "Palpitaciones"
  },
  {
    "code": "R00.8",
    "description": "Otras anormalidades del latido card√≠aco y las no especificadas"
  },
  {
    "code": "R01.0",
    "description": "Soplos card√≠acos benignos o inocentes"
  },
  {
    "code": "R01.1",
    "description": "Soplo card√≠aco, no especificado"
  },
  {
    "code": "R01.2",
    "description": "Otros sonidos card√≠acos"
  },
  {
    "code": "R03.0",
    "description": "Lectura elevada de la presi√≥n sangu√≠nea, sin diagn√≥stico de hipertensi√≥n"
  },
  {
    "code": "R03.1",
    "description": "Lectura de presi√≥n baja no espec√≠fica"
  },
  {
    "code": "R04.0",
    "description": "Epistaxis"
  },
  {
    "code": "R04.1",
    "description": "Hemorragia de la garganta"
  },
  {
    "code": "R04.2",
    "description": "Hemoptisis"
  },
  {
    "code": "R04.8",
    "description": "Hemorragia de otros sitios de las v√≠as respiratorias"
  },
  {
    "code": "R04.9",
    "description": "Hemorragia de las v√≠as respiratorias, no especificada"
  },
  {
    "code": "R06.0",
    "description": "Disnea"
  },
  {
    "code": "R06.1",
    "description": "Estridor"
  },
  {
    "code": "R06.2",
    "description": "Silbido"
  },
  {
    "code": "R06.3",
    "description": "Respiraci√≥n peri√≥dica"
  },
  {
    "code": "R06.4",
    "description": "Hiperventilaci√≥n"
  },
  {
    "code": "R06.5",
    "description": "Respiraci√≥n con la boca"
  },
  {
    "code": "R06.6",
    "description": "Hipo"
  },
  {
    "code": "R06.7",
    "description": "Estornudo"
  },
  {
    "code": "R06.8",
    "description": "Otras anormalidades de la respiraci√≥n y las no especificadas"
  },
  {
    "code": "R07.0",
    "description": "Dolor de garganta"
  },
  {
    "code": "R07.1",
    "description": "Dolor en el pecho al respirar"
  },
  {
    "code": "R07.2",
    "description": "Dolor precordial"
  },
  {
    "code": "R07.3",
    "description": "Otros dolores en el pecho"
  },
  {
    "code": "R07.4",
    "description": "Dolor en el pecho, no especificado"
  },
  {
    "code": "R09.0",
    "description": "Asfixia"
  },
  {
    "code": "R09.1",
    "description": "Pleures√≠a"
  },
  {
    "code": "R09.2",
    "description": "Paro respiratorio"
  },
  {
    "code": "R09.3",
    "description": "Esputo anormal"
  },
  {
    "code": "R09.8",
    "description": "Otros s√≠ntomas y signos especificados que involucran los sistemas circulatorio y respiratorio"
  },
  {
    "code": "R10.0",
    "description": "Abdomen agudo"
  },
  {
    "code": "R10.1",
    "description": "Dolor abdominal localizado en parte superior"
  },
  {
    "code": "R10.2",
    "description": "Dolor p√©lvico y perineal"
  },
  {
    "code": "R10.3",
    "description": "Dolor localizado en otras partes inferiores del abdomen"
  },
  {
    "code": "R10.4",
    "description": "Otros dolores abdominales y los no especificados"
  },
  {
    "code": "R16.0",
    "description": "Hepatomegalia, no clasificada en otra parte"
  },
  {
    "code": "R16.1",
    "description": "Esplenomegalia, no clasificada en otra parte"
  },
  {
    "code": "R16.2",
    "description": "Hepatomegalia con esplenomegalia, no clasificadas en otra parte"
  },
  {
    "code": "R19.0",
    "description": "Tumefacci√≥n, masa o prominencia intraabdominal y p√©lvica"
  },
  {
    "code": "R19.1",
    "description": "Sonidos intestinales anormales"
  },
  {
    "code": "R19.2",
    "description": "Peristalsis visible"
  },
  {
    "code": "R19.3",
    "description": "Rigidez abdominal"
  },
  {
    "code": "R19.4",
    "description": "Cambios en los h√°bitos intestinales"
  },
  {
    "code": "R19.5",
    "description": "Otras anormalidades fecales"
  },
  {
    "code": "R19.6",
    "description": "Halitosis"
  },
  {
    "code": "R19.8",
    "description": "Otros s√≠ntomas y signos especificados que involucran el sistema digestivo y el abdomen"
  },
  {
    "code": "R20.0",
    "description": "Anestesia de la piel"
  },
  {
    "code": "R20.1",
    "description": "Hipoestesia de la piel"
  },
  {
    "code": "R20.2",
    "description": "Parestesia de la piel"
  },
  {
    "code": "R20.3",
    "description": "Hiperestesia"
  },
  {
    "code": "R20.8",
    "description": "Otras alteraciones de la sensibilidad cut√°nea y las no especificadas"
  },
  {
    "code": "R22.0",
    "description": "Tumefacci√≥n, masa o prominencia localizada en la cabeza"
  },
  {
    "code": "R22.1",
    "description": "Tumefacci√≥n, masa o prominencia localizada en el cuello"
  },
  {
    "code": "R22.2",
    "description": "Tumefacci√≥n, masa o prominencia localizada en el tronco"
  },
  {
    "code": "R22.3",
    "description": "Tumefacci√≥n, masa o prominencia localizada en el miembro superior"
  },
  {
    "code": "R22.4",
    "description": "Tumefacci√≥n, masa o prominencia localizada en el miembro inferior"
  },
  {
    "code": "R22.7",
    "description": "Tumefacci√≥n, masa o prominencia localizada en sitios m√∫ltiples"
  },
  {
    "code": "R22.9",
    "description": "Tumefacci√≥n, masa o prominencia localizada en parte no especificada"
  },
  {
    "code": "R23.0",
    "description": "Cianosis"
  },
  {
    "code": "R23.1",
    "description": "Palidez"
  },
  {
    "code": "R23.2",
    "description": "Rubor"
  },
  {
    "code": "R23.3",
    "description": "Equimosis espont√°nea"
  },
  {
    "code": "R23.4",
    "description": "Cambios en la textura de la piel"
  },
  {
    "code": "R23.8",
    "description": "Otros cambios de la piel y los no especificados"
  },
  {
    "code": "R25.0",
    "description": "Movimientos anormales de la cabeza"
  },
  {
    "code": "R25.1",
    "description": "Temblor no especificado"
  },
  {
    "code": "R25.2",
    "description": "Calambres y espasmos"
  },
  {
    "code": "R25.3",
    "description": "Fasciculaci√≥n"
  },
  {
    "code": "R25.8",
    "description": "Otros movimientos anormales involuntarios y los no especificados"
  },
  {
    "code": "R26.0",
    "description": "Marcha at√°xica"
  },
  {
    "code": "R26.1",
    "description": "Marcha paral√≠tica"
  },
  {
    "code": "R26.2",
    "description": "Dificultad para caminar, no clasificada en otra parte"
  },
  {
    "code": "R26.8",
    "description": "Otras anormalidades de la marcha y de la movilidad y las no especificadas"
  },
  {
    "code": "R27.0",
    "description": "Ataxia, no especificada"
  },
  {
    "code": "R27.8",
    "description": "Otras fallas de la coordinaci√≥n y las no especificadas"
  },
  {
    "code": "R29.0",
    "description": "Tetania"
  },
  {
    "code": "R29.1",
    "description": "Meningismo"
  },
  {
    "code": "R29.2",
    "description": "Reflejos anormales"
  },
  {
    "code": "R29.3",
    "description": "Postura anormal"
  },
  {
    "code": "R29.4",
    "description": "Chasquido de la cadera"
  },
  {
    "code": "R29.8",
    "description": "Otros s√≠ntomas y signos que involucran los sistemas nervioso y osteomuscular y los no especificados"
  },
  {
    "code": "R30.0",
    "description": "Disuria"
  },
  {
    "code": "R30.1",
    "description": "Tenesmo vesical"
  },
  {
    "code": "R30.9",
    "description": "Micci√≥n dolorosa, no especificada"
  },
  {
    "code": "R39.0",
    "description": "Extravasaci√≥n de la orina"
  },
  {
    "code": "R39.1",
    "description": "Otras dificultades de la micci√≥n"
  },
  {
    "code": "R39.2",
    "description": "Uremia extrarrenal"
  },
  {
    "code": "R39.8",
    "description": "Otros s√≠ntomas y signos que involucran el sistema urinario y los no especificados"
  },
  {
    "code": "R40.0",
    "description": "Somnolencia"
  },
  {
    "code": "R40.1",
    "description": "Estupor"
  },
  {
    "code": "R40.2",
    "description": "Coma, no especificado"
  },
  {
    "code": "R41.0",
    "description": "Desorientaci√≥n no especificada"
  },
  {
    "code": "R41.1",
    "description": "Amnesia anter√≥grada"
  },
  {
    "code": "R41.2",
    "description": "Amnesia retr√≥grada"
  },
  {
    "code": "R41.3",
    "description": "Otra amnesia"
  },
  {
    "code": "R41.8",
    "description": "Otros s√≠ntomas y signos que involucran la funci√≥n cognoscitiva y la conciencia y los no especificados"
  },
  {
    "code": "R43.0",
    "description": "Anosmia"
  },
  {
    "code": "R43.1",
    "description": "Parosmia"
  },
  {
    "code": "R43.2",
    "description": "Parageusia"
  },
  {
    "code": "R43.8",
    "description": "Otras alteraciones del gusto y del olfato y las no especificadas"
  },
  {
    "code": "R44.0",
    "description": "Alucinaciones auditivas"
  },
  {
    "code": "R44.1",
    "description": "Alucinaciones visuales"
  },
  {
    "code": "R44.2",
    "description": "Otras alucinaciones"
  },
  {
    "code": "R44.3",
    "description": "Alucinaciones, no especificadas"
  },
  {
    "code": "R44.8",
    "description": "Otros s√≠ntomas y signos que involucran las sensaciones y percepciones generales y los no especificados"
  },
  {
    "code": "R45.0",
    "description": "Nerviosismo"
  },
  {
    "code": "R45.1",
    "description": "Inquietud y agitaci√≥n"
  },
  {
    "code": "R45.2",
    "description": "Infelicidad"
  },
  {
    "code": "R45.3",
    "description": "Desmoralizaci√≥n y apat√≠a"
  },
  {
    "code": "R45.4",
    "description": "Irritabilidad y enojo"
  },
  {
    "code": "R45.5",
    "description": "Hostilidad"
  },
  {
    "code": "R45.6",
    "description": "Violencia f√≠sica"
  },
  {
    "code": "R45.7",
    "description": "Tensi√≥n y estado de choque emocional, no especificado"
  },
  {
    "code": "R45.8",
    "description": "Otros s√≠ntomas y signos que involucran el estado emocional"
  },
  {
    "code": "R46.0",
    "description": "Muy bajo nivel de higiene personal"
  },
  {
    "code": "R46.1",
    "description": "Apariencia personal extra√±a"
  },
  {
    "code": "R46.2",
    "description": "Conducta extra√±a e inexplicable"
  },
  {
    "code": "R46.3",
    "description": "Hiperactividad"
  },
  {
    "code": "R46.4",
    "description": "Lentitud y pobre respuesta"
  },
  {
    "code": "R46.5",
    "description": "Suspicacia y evasividad marcadas"
  },
  {
    "code": "R46.6",
    "description": "Preocupaci√≥n indebida por sucesos que causan tensi√≥n"
  },
  {
    "code": "R46.7",
    "description": "Verbosidad y detalles circunstanciales que oscurecen la raz√≥n de la consulta o el contacto"
  },
  {
    "code": "R46.8",
    "description": "Otros s√≠ntomas y signos que involucran la apariencia y el comportamiento"
  },
  {
    "code": "R47.0",
    "description": "Disfasia y afasia"
  },
  {
    "code": "R47.1",
    "description": "Disartria y anartria"
  },
  {
    "code": "R47.8",
    "description": "Otras alteraciones del habla y las no especificadas"
  },
  {
    "code": "R48.0",
    "description": "Dislexia y alexia"
  },
  {
    "code": "R48.1",
    "description": "Agnosia"
  },
  {
    "code": "R48.2",
    "description": "Apraxia"
  },
  {
    "code": "R48.8",
    "description": "Otras disfunciones simb√≥licas y las no especificadas"
  },
  {
    "code": "R49.0",
    "description": "Disfon√≠a"
  },
  {
    "code": "R49.1",
    "description": "Afon√≠a"
  },
  {
    "code": "R49.2",
    "description": "Hipernasalidad e hiponasalidad"
  },
  {
    "code": "R49.8",
    "description": "Otras alteraciones de la voz y las no especificadas"
  },
  {
    "code": "R50.0",
    "description": "Fiebre con escalofr√≠o"
  },
  {
    "code": "R50.1",
    "description": "Fiebre persistente"
  },
  {
    "code": "R50.9",
    "description": "Fiebre, no especificada"
  },
  {
    "code": "R52.0",
    "description": "Dolor agudo"
  },
  {
    "code": "R52.1",
    "description": "Dolor cr√≥nico intratable"
  },
  {
    "code": "R52.2",
    "description": "Otro dolor cr√≥nico"
  },
  {
    "code": "R52.9",
    "description": "Dolor, no especificado"
  },
  {
    "code": "R56.0",
    "description": "Convulsiones febriles"
  },
  {
    "code": "R56.8",
    "description": "Otras convulsiones y las no especificadas"
  },
  {
    "code": "R57.0",
    "description": "Choque cardiog√©nico"
  },
  {
    "code": "R57.1",
    "description": "Choque hipovol√©mico"
  },
  {
    "code": "R57.8",
    "description": "Otras formas de choque"
  },
  {
    "code": "R57.9",
    "description": "Choque, no especificado"
  },
  {
    "code": "R59.0",
    "description": "Adenomegalia localizada"
  },
  {
    "code": "R59.1",
    "description": "Adenomegalia generalizada"
  },
  {
    "code": "R59.9",
    "description": "Adenomegalia, no especificada"
  },
  {
    "code": "R60.0",
    "description": "Edema localizado"
  },
  {
    "code": "R60.1",
    "description": "Edema generalizado"
  },
  {
    "code": "R60.9",
    "description": "Edema, no especificado"
  },
  {
    "code": "R61.0",
    "description": "Hiperhidrosis localizada"
  },
  {
    "code": "R61.1",
    "description": "Hiperhidrosis generalizada"
  },
  {
    "code": "R61.9",
    "description": "Hiperhidrosis, no especificada"
  },
  {
    "code": "R62.0",
    "description": "Retardo del desarrollo"
  },
  {
    "code": "R62.8",
    "description": "Otras faltas del desarrollo fisiol√≥gico normal esperado"
  },
  {
    "code": "R62.9",
    "description": "Falta del desarrollo fisiol√≥gico normal esperado, sin otra especificaci√≥n"
  },
  {
    "code": "R63.0",
    "description": "Anorexia"
  },
  {
    "code": "R63.1",
    "description": "Polidipsia"
  },
  {
    "code": "R63.2",
    "description": "Polifagia"
  },
  {
    "code": "R63.3",
    "description": "Dificultades y mala administraci√≥n de la alimentaci√≥n"
  },
  {
    "code": "R63.4",
    "description": "P√©rdida anormal de peso"
  },
  {
    "code": "R63.5",
    "description": "Aumento anormal de peso"
  },
  {
    "code": "R63.8",
    "description": "Otros s√≠ntomas y signos concernientes a la alimentaci√≥n y a la ingesti√≥n de l√≠quidos"
  },
  {
    "code": "R68.0",
    "description": "Hipotermia no asociada con baja temperatura del ambiente"
  },
  {
    "code": "R68.1",
    "description": "S√≠ntomas no espec√≠ficos propios de la infancia"
  },
  {
    "code": "R68.2",
    "description": "Boca seca, no especificada"
  },
  {
    "code": "R68.3",
    "description": "Dedos de la mano deformes"
  },
  {
    "code": "R68.8",
    "description": "Otros s√≠ntomas y signos generales especificados"
  },
  {
    "code": "R70.0",
    "description": "Velocidad de eritrosedimentaci√≥n elevada"
  },
  {
    "code": "R70.1",
    "description": "Viscosidad plasm√°tica anormal"
  },
  {
    "code": "R73.0",
    "description": "Anormalidades en la prueba de tolerancia a la glucosa"
  },
  {
    "code": "R73.9",
    "description": "Hiperglicemia, no especificada"
  },
  {
    "code": "R74.0",
    "description": "Elevaci√≥n de los niveles de transaminasas o deshidrogenasa l√°ctica [DHL]"
  },
  {
    "code": "R74.8",
    "description": "Niveles anormales de otras enzimas en suero"
  },
  {
    "code": "R74.9",
    "description": "Nivel anormal de enzimas en suero, no especificado"
  },
  {
    "code": "R76.0",
    "description": "Titulaci√≥n elevada de anticuerpos"
  },
  {
    "code": "R76.1",
    "description": "Reacci√≥n anormal a la prueba con tuberculina"
  },
  {
    "code": "R76.2",
    "description": "Falso positivo en la prueba serol√≥gica para s√≠filis"
  },
  {
    "code": "R76.8",
    "description": "Otros hallazgos inmunol√≥gicos anormales especificados en suero"
  },
  {
    "code": "R76.9",
    "description": "Hallazgos inmunol√≥gicos anormales no especificados en suero"
  },
  {
    "code": "R77.0",
    "description": "Anormalidad de la alb√∫mina"
  },
  {
    "code": "R77.1",
    "description": "Anormalidad de la globulina"
  },
  {
    "code": "R77.2",
    "description": "Anormalidad de la alfafetoprote√≠na"
  },
  {
    "code": "R77.8",
    "description": "Otras anormalidades especificadas de las prote√≠nas plasm√°ticas"
  },
  {
    "code": "R77.9",
    "description": "Anormalidades no especificadas de las prote√≠nas plasm√°ticas"
  },
  {
    "code": "R78.0",
    "description": "Hallazgo de alcohol en la sangre"
  },
  {
    "code": "R78.1",
    "description": "Hallazgo de drogas opi√°ceas en la sangre"
  },
  {
    "code": "R78.2",
    "description": "Hallazgo de coca√≠na en la sangre"
  },
  {
    "code": "R78.3",
    "description": "Hallazgo de alucin√≥genos en la sangre"
  },
  {
    "code": "R78.4",
    "description": "Hallazgo de otras drogas potencialmente adictivas en la sangre"
  },
  {
    "code": "R78.5",
    "description": "Hallazgo de drogas psicotr√≥picas en la sangre"
  },
  {
    "code": "R78.6",
    "description": "Hallazgo de agentes esteroides en la sangre"
  },
  {
    "code": "R78.7",
    "description": "Hallazgo de niveles anormales de metales pesados en la sangre"
  },
  {
    "code": "R78.8",
    "description": "Hallazgo de otras sustancias especificadas que normalmente no se encuentran en la sangre"
  },
  {
    "code": "R78.9",
    "description": "Hallazgo de sustancia no especificada que normalmente no se encuentra en la sangre"
  },
  {
    "code": "R79.0",
    "description": "Nivel anormal de mineral en la sangre"
  },
  {
    "code": "R79.8",
    "description": "Otros hallazgos anormales especificados en la qu√≠mica sangu√≠nea"
  },
  {
    "code": "R79.9",
    "description": "Hallazgo anormal en la qu√≠mica sangu√≠nea, sin otra especificaci√≥n"
  },
  {
    "code": "R82.0",
    "description": "Quiluria"
  },
  {
    "code": "R82.1",
    "description": "Mioglobinuria"
  },
  {
    "code": "R82.2",
    "description": "Biliuria"
  },
  {
    "code": "R82.3",
    "description": "Hemoglobinuria"
  },
  {
    "code": "R82.4",
    "description": "Acetonuria"
  },
  {
    "code": "R82.5",
    "description": "Elevaci√≥n de los niveles de drogas, medicamentos y sustancias biol√≥gicas en la orina"
  },
  {
    "code": "R82.6",
    "description": "Niveles anormales en la orina de sustancias de origen principalmente no medicinal"
  },
  {
    "code": "R82.7",
    "description": "Hallazgos anormales en el examen microbiol√≥gico de la orina"
  },
  {
    "code": "R82.8",
    "description": "Hallazgos anormales en el examen citol√≥gico e histol√≥gico de la orina"
  },
  {
    "code": "R82.9",
    "description": "Otros hallazgos anormales en la orina y los no especificados"
  },
  {
    "code": "R83.0",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, nivel anormal de enzimas"
  },
  {
    "code": "R83.1",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, nivel anormal de hormonas"
  },
  {
    "code": "R83.2",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, nivel anormal de otras drogas, medicamentos y sustancias biol√≥gicas"
  },
  {
    "code": "R83.3",
    "description": ""
  },
  {
    "code": "R83.4",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, hallazgos inmunol√≥gicos anormales"
  },
  {
    "code": "R83.5",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, hallazgos microbiol√≥gicos anormales, hallazgos positivos en el cultivo"
  },
  {
    "code": "R83.6",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, hallazgos citol√≥gicos anormales, frotis anormal de Papanicolaou"
  },
  {
    "code": "R83.7",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, hallazgos histol√≥gicos anormales"
  },
  {
    "code": "R83.8",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, otros hallazgos anormales, hallazgos cromos√≥micos anormales"
  },
  {
    "code": "R83.9",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo, hallazgos anormales, no especificados"
  },
  {
    "code": "R84.0",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos, nivel anormal de enzimas"
  },
  {
    "code": "R84.1",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos, nivel anormal de hormonas"
  },
  {
    "code": "R84.2",
    "description": ""
  },
  {
    "code": "R84.3",
    "description": ""
  },
  {
    "code": "R84.4",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos, hallazgos inmunol√≥gicos anormales"
  },
  {
    "code": "R84.5",
    "description": ""
  },
  {
    "code": "R84.6",
    "description": ""
  },
  {
    "code": "R84.7",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos, hallazgos histol√≥gicos anormales"
  },
  {
    "code": "R84.8",
    "description": ""
  },
  {
    "code": "R84.9",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos, hallazgos anormales, no especificados"
  },
  {
    "code": "R85.0",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos digestivos y de la cavidad abdominal, nivel anormal de enzimas"
  },
  {
    "code": "R85.1",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos digestivos y de la cavidad abdominal, nivel anormal de hormonas"
  },
  {
    "code": "R85.2",
    "description": ""
  },
  {
    "code": "R85.3",
    "description": ""
  },
  {
    "code": "R85.4",
    "description": ""
  },
  {
    "code": "R85.5",
    "description": ""
  },
  {
    "code": "R85.6",
    "description": ""
  },
  {
    "code": "R85.7",
    "description": ""
  },
  {
    "code": "R85.8",
    "description": ""
  },
  {
    "code": "R85.9",
    "description": ""
  },
  {
    "code": "R86.0",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos, nivel anormal de enzimas"
  },
  {
    "code": "R86.1",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos, nivel anormal de hormonas"
  },
  {
    "code": "R86.2",
    "description": ""
  },
  {
    "code": "R86.3",
    "description": ""
  },
  {
    "code": "R86.4",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos, hallazgos inmunol√≥gicos anormales"
  },
  {
    "code": "R86.5",
    "description": ""
  },
  {
    "code": "R86.6",
    "description": ""
  },
  {
    "code": "R86.7",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos, hallazgos histol√≥gicos anormales"
  },
  {
    "code": "R86.8",
    "description": ""
  },
  {
    "code": "R86.9",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos, hallazgos anormales, no especificados"
  },
  {
    "code": "R87.0",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos, nivel anormal de enzimas"
  },
  {
    "code": "R87.1",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos, nivel anormal de hormonas"
  },
  {
    "code": "R87.2",
    "description": ""
  },
  {
    "code": "R87.3",
    "description": ""
  },
  {
    "code": "R87.4",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos, hallazgos inmunol√≥gicos anormales"
  },
  {
    "code": "R87.5",
    "description": ""
  },
  {
    "code": "R87.6",
    "description": ""
  },
  {
    "code": "R87.7",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos, hallazgos histol√≥gicos anormales"
  },
  {
    "code": "R87.8",
    "description": ""
  },
  {
    "code": "R87.9",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos, hallazgos anormales, no especificados"
  },
  {
    "code": "R89.0",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos, nivel anormal de enzimas"
  },
  {
    "code": "R89.1",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos, nivel anormal de hormonas"
  },
  {
    "code": "R89.2",
    "description": ""
  },
  {
    "code": "R89.3",
    "description": ""
  },
  {
    "code": "R89.4",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos, hallazgos inmunol√≥gicos anormales"
  },
  {
    "code": "R89.5",
    "description": ""
  },
  {
    "code": "R89.6",
    "description": ""
  },
  {
    "code": "R89.7",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos, hallazgos histol√≥gicos anormales"
  },
  {
    "code": "R89.8",
    "description": ""
  },
  {
    "code": "R89.9",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos, hallazgos anormales, no especificados"
  },
  {
    "code": "R90.0",
    "description": "Lesi√≥n que ocupa el espacio intracraneal"
  },
  {
    "code": "R90.8",
    "description": "Otros hallazgos anormales en diagn√≥stico por imagen del sistema nervioso central"
  },
  {
    "code": "R93.0",
    "description": "Hallazgos anormales en diagn√≥stico por imagen del cr√°neo y de la cabeza, no clasificados en otra parte"
  },
  {
    "code": "R93.1",
    "description": "Hallazgos anormales en diagn√≥stico por imagen del coraz√≥n y de la circulaci√≥n coronaria"
  },
  {
    "code": "R93.2",
    "description": "Hallazgos anormales en diagn√≥stico por imagen del h√≠gado y de las v√≠as biliares"
  },
  {
    "code": "R93.3",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de otras partes de las v√≠as digestivas"
  },
  {
    "code": "R93.4",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de los √≥rganos urinarios"
  },
  {
    "code": "R93.5",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de otras regiones abdominales, incluido el retroperitoneo"
  },
  {
    "code": "R93.6",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de los miembros"
  },
  {
    "code": "R93.7",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de otras partes del sistema osteomuscular"
  },
  {
    "code": "R93.8",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de otras estructuras especificadas del cuerpo"
  },
  {
    "code": "R94.0",
    "description": "Resultados anormales en estudios funcionales del sistema nervioso central"
  },
  {
    "code": "R94.1",
    "description": "Resultados anormales en estudios funcionales del sistema nervioso perif√©rico y sentidos especiales"
  },
  {
    "code": "R94.2",
    "description": "Resultados anormales en estudios funcionales del pulm√≥n"
  },
  {
    "code": "R94.3",
    "description": "Resultados anormales en estudios funcionales cardiovasculares"
  },
  {
    "code": "R94.4",
    "description": "Resultados anormales en estudios funcionales del ri√±√≥n"
  },
  {
    "code": "R94.5",
    "description": "Resultados anormales en estudios funcionales del h√≠gado"
  },
  {
    "code": "R94.6",
    "description": "Resultados anormales en estudios funcionales de la tiroides"
  },
  {
    "code": "R94.7",
    "description": "Resultados anormales en otros estudios funcionales endocrinos"
  },
  {
    "code": "R94.8",
    "description": "Resultados anormales en los estudios funcionales de otros √≥rganos y sistemas"
  },
  {
    "code": "R96.0",
    "description": "Muerte instant√°nea"
  },
  {
    "code": "R96.1",
    "description": "Muerte que ocurre en menos de 24 horas del inicio de los s√≠ntomas, no explicada de otra forma"
  },
  {
    "code": "S00.0",
    "description": "Traumatismo superficial del cuero cabelludo"
  },
  {
    "code": "S00.1",
    "description": "Contusi√≥n de los p√°rpados y de la regi√≥n periocular"
  },
  {
    "code": "S00.2",
    "description": "Otros traumatismos superficiales del p√°rpado y de la regi√≥n periocular"
  },
  {
    "code": "S00.3",
    "description": "Traumatismo superficial de la nariz"
  },
  {
    "code": "S00.4",
    "description": "Traumatismo superficial del o√≠do"
  },
  {
    "code": "S00.5",
    "description": "Traumatismo superficial del labio y de la cavidad bucal"
  },
  {
    "code": "S00.7",
    "description": "Traumatismos superficiales m√∫ltiples de la cabeza"
  },
  {
    "code": "S00.8",
    "description": "Traumatismo superficial de otras partes de la cabeza"
  },
  {
    "code": "S00.9",
    "description": "Traumatismo superficial de la cabeza, parte no especificada"
  },
  {
    "code": "S01.0",
    "description": "Herida del cuero cabelludo"
  },
  {
    "code": "S01.1",
    "description": "Herida del p√°rpado y de la regi√≥n periocular"
  },
  {
    "code": "S01.2",
    "description": "Herida de la nariz"
  },
  {
    "code": "S01.3",
    "description": "Herida del o√≠do"
  },
  {
    "code": "S01.4",
    "description": "Herida de la mejilla y de la regi√≥n temporomandibular"
  },
  {
    "code": "S01.5",
    "description": "Herida del labio y de la cavidad bucal"
  },
  {
    "code": "S01.7",
    "description": "Heridas m√∫ltiples de la cabeza"
  },
  {
    "code": "S01.8",
    "description": "Herida de otras partes de la cabeza"
  },
  {
    "code": "S01.9",
    "description": "Herida de la cabeza, parte no especificada"
  },
  {
    "code": "S02.0",
    "description": "Fractura de la b√≥veda del cr√°neo"
  },
  {
    "code": "S02.1",
    "description": "Fractura de la base del cr√°neo"
  },
  {
    "code": "S02.2",
    "description": "Fractura de los huesos de la nariz"
  },
  {
    "code": "S02.3",
    "description": "Fractura del suelo de la √≥rbita"
  },
  {
    "code": "S02.4",
    "description": "Fractura del malar y del hueso maxilar superior"
  },
  {
    "code": "S02.5",
    "description": "Fractura de los dientes"
  },
  {
    "code": "S02.6",
    "description": "Fractura del maxilar inferior"
  },
  {
    "code": "S02.7",
    "description": "Fracturas m√∫ltiples que comprometen el cr√°neo y los huesos de la cara"
  },
  {
    "code": "S02.8",
    "description": "Fractura de otros huesos del cr√°neo y de la cara"
  },
  {
    "code": "S02.9",
    "description": "Fractura del cr√°neo y de los huesos de la cara, parte no  especificada"
  },
  {
    "code": "S03.0",
    "description": "Luxaci√≥n del maxilar"
  },
  {
    "code": "S03.1",
    "description": "Luxaci√≥n del cart√≠lago septal de la nariz"
  },
  {
    "code": "S03.2",
    "description": "Luxaci√≥n de diente"
  },
  {
    "code": "S03.3",
    "description": "Luxaci√≥n de otras partes y de las no especificadas de la cabeza"
  },
  {
    "code": "S03.4",
    "description": "Esguinces y torceduras del maxilar"
  },
  {
    "code": "S03.5",
    "description": "Esguinces y torceduras de articulaciones y ligamentos de otras partes y las no especificadas de la cabeza"
  },
  {
    "code": "S04.0",
    "description": "Traumatismo del nervio √≥ptico [II par] y de las v√≠as √≥pticas"
  },
  {
    "code": "S04.1",
    "description": "Traumatismo del nervio motor ocular com√∫n [III par]"
  },
  {
    "code": "S04.2",
    "description": "Traumatismo del nervio pat√©tico [IV par]"
  },
  {
    "code": "S04.3",
    "description": "Traumatismo del nervio trig√©mino [V par]"
  },
  {
    "code": "S04.4",
    "description": "Traumatismo del nervio motor ocular externo [VI par]"
  },
  {
    "code": "S04.5",
    "description": "Traumatismo del nervio facial [VII par]"
  },
  {
    "code": "S04.6",
    "description": "Traumatismo del nervio ac√∫stico [VIII par]"
  },
  {
    "code": "S04.7",
    "description": "Traumatismo del nervio espinal [XI par]"
  },
  {
    "code": "S04.8",
    "description": "Traumatismo de otros nervios craneales"
  },
  {
    "code": "S04.9",
    "description": "Traumatismo de nervios craneales, no especificado"
  },
  {
    "code": "S05.0",
    "description": "Traumatismo de la conjuntiva y abrasi√≥n corneal sin menci√≥n de cuerpo extra√±o"
  },
  {
    "code": "S05.1",
    "description": "Contusi√≥n del globo ocular y del tejido orbitario"
  },
  {
    "code": "S05.2",
    "description": "Laceraci√≥n y ruptura ocular con prolapso o p√©rdida del tejido intraocular"
  },
  {
    "code": "S05.3",
    "description": "Laceraci√≥n ocular sin prolapso o p√©rdida del tejido intraocular"
  },
  {
    "code": "S05.4",
    "description": "Herida penetrante de la √≥rbita con o sin cuerpo extra√±o"
  },
  {
    "code": "S05.5",
    "description": "Herida penetrante del globo ocular con cuerpo extra√±o"
  },
  {
    "code": "S05.6",
    "description": "Herida penetrante del globo ocular sin cuerpo extra√±o"
  },
  {
    "code": "S05.7",
    "description": "Avulsi√≥n de ojo"
  },
  {
    "code": "S05.8",
    "description": "Otros traumatismos del ojo y de la √≥rbita"
  },
  {
    "code": "S05.9",
    "description": "Traumatismo del ojo y de la √≥rbita, no especificado"
  },
  {
    "code": "S06.0",
    "description": "Concusi√≥n"
  },
  {
    "code": "S06.1",
    "description": "Edema cerebral traum√°tico"
  },
  {
    "code": "S06.2",
    "description": "Traumatismo cerebral difuso"
  },
  {
    "code": "S06.3",
    "description": "Traumatismo cerebral focal"
  },
  {
    "code": "S06.4",
    "description": "Hemorragia epidural"
  },
  {
    "code": "S06.5",
    "description": "Hemorragia subdural traum√°tica"
  },
  {
    "code": "S06.6",
    "description": "Hemorragia subaracnoidea traum√°tica"
  },
  {
    "code": "S06.7",
    "description": "Traumatismo intracraneal con coma prolongado"
  },
  {
    "code": "S06.8",
    "description": "Otros traumatismos intracraneales"
  },
  {
    "code": "S06.9",
    "description": "Traumatismo intracraneal, no especificado"
  },
  {
    "code": "S07.0",
    "description": "Traumatismo por aplastamiento de la cara"
  },
  {
    "code": "S07.1",
    "description": "Traumatismo por aplastamiento del cr√°neo"
  },
  {
    "code": "S07.8",
    "description": "Traumatismo por aplastamiento de otras partes de la cabeza"
  },
  {
    "code": "S07.9",
    "description": "Traumatismo por aplastamiento de la cabeza, parte no especificada"
  },
  {
    "code": "S08.0",
    "description": "Avulsi√≥n del cuero cabelludo"
  },
  {
    "code": "S08.1",
    "description": "Amputaci√≥n traum√°tica de la oreja"
  },
  {
    "code": "S08.8",
    "description": "Amputaci√≥n traum√°tica de otras partes de la cabeza"
  },
  {
    "code": "S08.9",
    "description": "Amputaci√≥n traum√°tica de parte no especificada de la cabeza"
  },
  {
    "code": "S09.0",
    "description": "Traumatismo de los vasos sangu√≠neos de la cabeza no clasificados en otra parte"
  },
  {
    "code": "S09.1",
    "description": "Traumatismo de tend√≥n y m√∫sculos de la cabeza"
  },
  {
    "code": "S09.2",
    "description": "Ruptura traum√°tica del t√≠mpano del o√≠do"
  },
  {
    "code": "S09.7",
    "description": "Traumatismos m√∫ltiples de la cabeza"
  },
  {
    "code": "S09.8",
    "description": "Otros traumatismos de la cabeza, especificados"
  },
  {
    "code": "S09.9",
    "description": "Traumatismo de la cabeza, no especificado"
  },
  {
    "code": "S10.0",
    "description": "Contusi√≥n de la garganta"
  },
  {
    "code": "S10.1",
    "description": "Otros traumatismos superficiales y los no especificados de la garganta"
  },
  {
    "code": "S10.7",
    "description": "Traumatismo superficial m√∫ltiple del cuello"
  },
  {
    "code": "S10.8",
    "description": "Traumatismo superficial de otras partes del cuello"
  },
  {
    "code": "S10.9",
    "description": "Traumatismo superficial del cuello, parte no especificada"
  },
  {
    "code": "S11.0",
    "description": "Herida que compromete la laringe y la tr√°quea"
  },
  {
    "code": "S11.1",
    "description": "Herida que compromete la gl√°ndula tiroides"
  },
  {
    "code": "S11.2",
    "description": "Herida que compromete la faringe y el es√≥fago cervical"
  },
  {
    "code": "S11.7",
    "description": "Heridas m√∫ltiples del cuello"
  },
  {
    "code": "S11.8",
    "description": "Heridas de otras partes del cuello"
  },
  {
    "code": "S11.9",
    "description": "Herida de cuello, parte no especificada"
  },
  {
    "code": "S12.0",
    "description": "Fractura de la primera v√©rtebra cervical"
  },
  {
    "code": "S12.1",
    "description": "Fractura de la segunda v√©rtebra cervical"
  },
  {
    "code": "S12.2",
    "description": "Fractura de otras v√©rtebras cervicales especificadas"
  },
  {
    "code": "S12.7",
    "description": "Fracturas m√∫ltiples de columna cervical"
  },
  {
    "code": "S12.8",
    "description": "Fractura de otras partes del cuello"
  },
  {
    "code": "S12.9",
    "description": "Fractura del cuello, parte no especificada"
  },
  {
    "code": "S13.0",
    "description": "Ruptura traum√°tica de disco cervical intervertebral"
  },
  {
    "code": "S13.1",
    "description": "Luxaci√≥n de v√©rtebra cervical"
  },
  {
    "code": "S13.2",
    "description": "Luxaciones de otras partes y de las no especificadas del cuello"
  },
  {
    "code": "S13.3",
    "description": "Luxaciones m√∫ltiples del cuello"
  },
  {
    "code": "S13.4",
    "description": "Esguinces y torceduras de la columna cervical"
  },
  {
    "code": "S13.5",
    "description": "Esguinces y torceduras de la regi√≥n tiroidea"
  },
  {
    "code": "S13.6",
    "description": "Esguinces y torceduras de articulaciones y ligamentos de otros sitios especificados y de los no especificados del cuello"
  },
  {
    "code": "S14.0",
    "description": "Concusi√≥n y edema de la m√©dula espinal cervical"
  },
  {
    "code": "S14.1",
    "description": "Otros traumatismos de la m√©dula espinal cervical y los no especificados"
  },
  {
    "code": "S14.2",
    "description": "Traumatismo de ra√≠z nerviosa de columna cervical"
  },
  {
    "code": "S14.3",
    "description": "Traumatismo del plexo braquial"
  },
  {
    "code": "S14.4",
    "description": "Traumatismo de nervios perif√©ricos del cuello"
  },
  {
    "code": "S14.5",
    "description": "Traumatismo de nervios cervicales simp√°ticos"
  },
  {
    "code": "S14.6",
    "description": "Traumatismo de otros nervios y de los no especificados del cuello"
  },
  {
    "code": "S15.0",
    "description": "Traumatismo de la arteria car√≥tida"
  },
  {
    "code": "S15.1",
    "description": "Traumatismo de la arteria vertebral"
  },
  {
    "code": "S15.2",
    "description": "Traumatismo de la vena yugular externa"
  },
  {
    "code": "S15.3",
    "description": "Traumatismo de la vena yugular interna"
  },
  {
    "code": "S15.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel del cuello"
  },
  {
    "code": "S15.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel del cuello"
  },
  {
    "code": "S15.9",
    "description": "Traumatismo de vasos sangu√≠neos no especificados a nivel del cuello"
  },
  {
    "code": "S17.0",
    "description": "Traumatismo por aplastamiento de la laringe y de la tr√°quea"
  },
  {
    "code": "S17.8",
    "description": "Traumatismo por aplastamiento de otras partes del cuello"
  },
  {
    "code": "S17.9",
    "description": "Traumatismo por aplastamiento del cuello, parte no especificada"
  },
  {
    "code": "S19.7",
    "description": "Traumatismos m√∫ltiples del cuello"
  },
  {
    "code": "S19.8",
    "description": "Otros traumatismos del cuello, especificados"
  },
  {
    "code": "S19.9",
    "description": "Traumatismo del cuello, no especificado"
  },
  {
    "code": "S20.0",
    "description": "Contusi√≥n de la mama"
  },
  {
    "code": "S20.1",
    "description": "Otros traumatismos superficiales y los no especificados de la mama"
  },
  {
    "code": "S20.2",
    "description": "Contusi√≥n del t√≥rax"
  },
  {
    "code": "S20.3",
    "description": "Otros traumatismos superficiales de la pared anterior del t√≥rax"
  },
  {
    "code": "S20.4",
    "description": "Otros traumatismos superficiales de la pared posterior del t√≥rax"
  },
  {
    "code": "S20.7",
    "description": "Traumatismos superficiales m√∫ltiples del t√≥rax"
  },
  {
    "code": "S20.8",
    "description": "Traumatismo superficial de otras partes y de las no especificadas del t√≥rax"
  },
  {
    "code": "S21.0",
    "description": "Herida de la mama"
  },
  {
    "code": "S21.1",
    "description": "Herida de la pared anterior del t√≥rax"
  },
  {
    "code": "S21.2",
    "description": "Herida de la pared posterior del t√≥rax"
  },
  {
    "code": "S21.7",
    "description": "Herida m√∫ltiple de la pared tor√°cica"
  },
  {
    "code": "S21.8",
    "description": "Herida de otras partes del t√≥rax"
  },
  {
    "code": "S21.9",
    "description": "Herida del t√≥rax, parte no especificada"
  },
  {
    "code": "S22.0",
    "description": "Fractura de v√©rtebra tor√°cica"
  },
  {
    "code": "S22.1",
    "description": "Fracturas m√∫ltiples de columna tor√°cica"
  },
  {
    "code": "S22.2",
    "description": "Fractura del estern√≥n"
  },
  {
    "code": "S22.3",
    "description": "Fractura de costilla"
  },
  {
    "code": "S22.4",
    "description": "Fracturas m√∫ltiples de costillas"
  },
  {
    "code": "S22.5",
    "description": "T√≥rax azotado"
  },
  {
    "code": "S22.8",
    "description": "Fractura de otras partes del t√≥rax √≥seo"
  },
  {
    "code": "S22.9",
    "description": "Fractura del t√≥rax √≥seo, parte no especificada"
  },
  {
    "code": "S23.0",
    "description": "Ruptura traum√°tica de disco intervertebral tor√°cico"
  },
  {
    "code": "S23.1",
    "description": "Luxaci√≥n de v√©rtebra tor√°cica"
  },
  {
    "code": "S23.2",
    "description": "Luxaci√≥n de otras partes y de las no especificadas del t√≥rax"
  },
  {
    "code": "S23.3",
    "description": "Esguinces y torceduras de columna tor√°cica"
  },
  {
    "code": "S23.4",
    "description": "Esguinces y torceduras de costillas y estern√≥n"
  },
  {
    "code": "S23.5",
    "description": "Esguinces y torceduras de otras partes y de las no especificadas del t√≥rax"
  },
  {
    "code": "S24.0",
    "description": "Concusi√≥n y edema de la m√©dula espinal tor√°cica"
  },
  {
    "code": "S24.1",
    "description": "Otros traumatismos y los no especificados de la m√©dula espinal tor√°cica"
  },
  {
    "code": "S24.2",
    "description": "Traumatismo de ra√≠ces nerviosas de la columna tor√°cica"
  },
  {
    "code": "S24.3",
    "description": "Traumatismo de nervios perif√©ricos del t√≥rax"
  },
  {
    "code": "S24.4",
    "description": "Traumatismo de nervios simp√°ticos tor√°cicos"
  },
  {
    "code": "S24.5",
    "description": "Traumatismo de otros nervios del t√≥rax"
  },
  {
    "code": "S24.6",
    "description": "Traumatismo de nervio no especificado del t√≥rax"
  },
  {
    "code": "S25.0",
    "description": "Traumatismo de la aorta tor√°cica"
  },
  {
    "code": "S25.1",
    "description": "Traumatismo de la arteria innominada o subclavia"
  },
  {
    "code": "S25.2",
    "description": "Traumatismo de vena cava superior"
  },
  {
    "code": "S25.3",
    "description": "Traumatismo de la vena innominada o subclavia"
  },
  {
    "code": "S25.4",
    "description": "Traumatismo de vasos sangu√≠neos pulmonares"
  },
  {
    "code": "S25.5",
    "description": "Traumatismo de vasos sangu√≠neos intercostales"
  },
  {
    "code": "S25.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos del t√≥rax"
  },
  {
    "code": "S25.8",
    "description": "Traumatismo de otros vasos sangu√≠neos del t√≥rax"
  },
  {
    "code": "S25.9",
    "description": "Traumatismo de vasos sangu√≠neos no especificados del t√≥rax"
  },
  {
    "code": "S26.0",
    "description": "Traumatismo del coraz√≥n con hemopericardio"
  },
  {
    "code": "S26.8",
    "description": "Otros traumatismos del coraz√≥n"
  },
  {
    "code": "S26.9",
    "description": "Traumatismo del coraz√≥n, no especificado"
  },
  {
    "code": "S27.0",
    "description": "Neumot√≥rax traum√°tico"
  },
  {
    "code": "S27.1",
    "description": "Hemot√≥rax traum√°tico"
  },
  {
    "code": "S27.2",
    "description": "Hemoneumot√≥rax traum√°tico"
  },
  {
    "code": "S27.3",
    "description": "Otros traumatismos del pulm√≥n"
  },
  {
    "code": "S27.4",
    "description": "Traumatismo de los bronquios"
  },
  {
    "code": "S27.5",
    "description": "Traumatismo de la tr√°quea tor√°cica"
  },
  {
    "code": "S27.6",
    "description": "Traumatismo de la pleura"
  },
  {
    "code": "S27.7",
    "description": "Traumatismos m√∫ltiples de √≥rganos intrator√°cicos"
  },
  {
    "code": "S27.8",
    "description": "Traumatismo de otros √≥rganos intrator√°cicos, especificados"
  },
  {
    "code": "S27.9",
    "description": "Traumatismo de √≥rgano intrator√°cico, no especificado"
  },
  {
    "code": "S28.0",
    "description": "Aplastamiento del t√≥rax"
  },
  {
    "code": "S28.1",
    "description": "Amputaci√≥n traum√°tica de parte del t√≥rax"
  },
  {
    "code": "S29.0",
    "description": "Traumatismo de tend√≥n y m√∫sculos a nivel del t√≥rax"
  },
  {
    "code": "S29.7",
    "description": "Traumatismos m√∫ltiples del t√≥rax"
  },
  {
    "code": "S29.8",
    "description": "Otros traumatismos del t√≥rax, especificados"
  },
  {
    "code": "S29.9",
    "description": "Traumatismo del t√≥rax, no especificado"
  },
  {
    "code": "S30.0",
    "description": "Contusi√≥n de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S30.1",
    "description": "Contusi√≥n de la pared abdominal"
  },
  {
    "code": "S30.2",
    "description": "Contusi√≥n de √≥rganos genitales externos"
  },
  {
    "code": "S30.7",
    "description": "Traumatismos superficiales m√∫ltiples del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S30.8",
    "description": "Otros traumatismos superficiales del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S30.9",
    "description": "Traumatismo superficial del abdomen, de la regi√≥n lumbosacra y de la pelvis, parte no especificada"
  },
  {
    "code": "S31.0",
    "description": "Herida de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S31.1",
    "description": "Herida de la pared abdominal"
  },
  {
    "code": "S31.2",
    "description": "Herida del pene"
  },
  {
    "code": "S31.3",
    "description": "Herida del escroto y de los test√≠culos"
  },
  {
    "code": "S31.4",
    "description": "Herida de la vagina y de la vulva"
  },
  {
    "code": "S31.5",
    "description": "Herida de otros √≥rganos genitales externos y de los no especificados"
  },
  {
    "code": "S31.7",
    "description": "Heridas m√∫ltiples del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S31.8",
    "description": "Heridas de otras partes y de las no especificadas del abdomen"
  },
  {
    "code": "S32.0",
    "description": "Fractura de v√©rtebra lumbar"
  },
  {
    "code": "S32.1",
    "description": "Fractura del sacro"
  },
  {
    "code": "S32.2",
    "description": "Fractura del c√≥ccix"
  },
  {
    "code": "S32.3",
    "description": "Fractura del hueso iliaco"
  },
  {
    "code": "S32.4",
    "description": "Fractura del acet√°bulo"
  },
  {
    "code": "S32.5",
    "description": "Fractura del pubis"
  },
  {
    "code": "S32.7",
    "description": "Fracturas m√∫ltiples de la columna lumbar y de la pelvis"
  },
  {
    "code": "S32.8",
    "description": "Fractura de otras partes y de las no especificadas de la columna lumbar y de la pelvis"
  },
  {
    "code": "S33.0",
    "description": "Ruptura traum√°tica de disco intervertebral lumbar"
  },
  {
    "code": "S33.1",
    "description": "Luxaci√≥n de v√©rtebra lumbar"
  },
  {
    "code": "S33.2",
    "description": "Luxaci√≥n de articulaci√≥n sacrococc√≠gea y sacroiliaca"
  },
  {
    "code": "S33.3",
    "description": "Luxaci√≥n de otras partes y de las no especificadas de la columna lumbar y de la pelvis"
  },
  {
    "code": "S33.4",
    "description": "Ruptura traum√°tica de la s√≠nfisis del pubis"
  },
  {
    "code": "S33.5",
    "description": "Esguinces y torceduras de la columna lumbar"
  },
  {
    "code": "S33.6",
    "description": "Esguinces y torceduras de la articulaci√≥n sacroiliaca"
  },
  {
    "code": "S33.7",
    "description": "Esguinces y torceduras de otras partes y de las no especificadas de la columna lumbar y de la pelvis"
  },
  {
    "code": "S34.0",
    "description": "Concusi√≥n y edema de la m√©dula espinal lumbar"
  },
  {
    "code": "S34.1",
    "description": "Otro traumatismo de la m√©dula espinal lumbar"
  },
  {
    "code": "S34.2",
    "description": "Traumatismo de ra√≠z nerviosa de la columna lumbar y sacra"
  },
  {
    "code": "S34.3",
    "description": "Traumatismo de la cola de caballo"
  },
  {
    "code": "S34.4",
    "description": "Traumatismo del plexo lumbosacro"
  },
  {
    "code": "S34.5",
    "description": "Traumatismo de nervios(s) simp√°tico(s) lumbar(es), sacro(s) y p√©lvico(s)"
  },
  {
    "code": "S34.6",
    "description": "Traumatismo de nervio(s) perif√©rico(s) del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S34.8",
    "description": "Traumatismo de otros nervios a nivel del abdomen, de la regi√≥n lumbosacra y de la pelvis y de los no especificados"
  },
  {
    "code": "S35.0",
    "description": "Traumatismo de la aorta abdominal"
  },
  {
    "code": "S35.1",
    "description": "Traumatismo de la vena cava inferior"
  },
  {
    "code": "S35.2",
    "description": "Traumatismo de arterias cel√≠acas y mesent√©ricas"
  },
  {
    "code": "S35.3",
    "description": "Traumatismo de venas porta y espl√©nica"
  },
  {
    "code": "S35.4",
    "description": "Traumatismo de vasos sangu√≠neos renales"
  },
  {
    "code": "S35.5",
    "description": "Traumatismo de vasos sangu√≠neos iliacos"
  },
  {
    "code": "S35.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S35.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S35.9",
    "description": "Traumatismo de vasos sangu√≠neos no especificados a nivel del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S36.0",
    "description": "Traumatismo del bazo"
  },
  {
    "code": "S36.1",
    "description": "Traumatismo del h√≠gado y de la ves√≠cula biliar"
  },
  {
    "code": "S36.2",
    "description": "Traumatismo del p√°ncreas"
  },
  {
    "code": "S36.3",
    "description": "Traumatismo del est√≥mago"
  },
  {
    "code": "S36.4",
    "description": "Traumatismo del intestino delgado"
  },
  {
    "code": "S36.5",
    "description": "Traumatismo del colon"
  },
  {
    "code": "S36.6",
    "description": "Traumatismo del recto"
  },
  {
    "code": "S36.7",
    "description": "Traumatismo de m√∫ltiples √≥rganos intraabdominales"
  },
  {
    "code": "S36.8",
    "description": "Traumatismo de otros √≥rganos intraabdominales"
  },
  {
    "code": "S36.9",
    "description": "Traumatismo de √≥rgano intraabdominal no especificado"
  },
  {
    "code": "S37.0",
    "description": "Traumatismo del ri√±√≥n"
  },
  {
    "code": "S37.1",
    "description": "Traumatismo del ur√©ter"
  },
  {
    "code": "S37.2",
    "description": "Traumatismo de la vejiga"
  },
  {
    "code": "S37.3",
    "description": "Traumatismo de la uretra"
  },
  {
    "code": "S37.4",
    "description": "Traumatismo del ovario"
  },
  {
    "code": "S37.5",
    "description": "Traumatismo de la trompa de Falopio"
  },
  {
    "code": "S37.6",
    "description": "Traumatismo del √∫tero"
  },
  {
    "code": "S37.7",
    "description": "Traumatismo de m√∫ltiples √≥rganos p√©lvicos"
  },
  {
    "code": "S37.8",
    "description": "Traumatismo de otros √≥rganos p√©lvicos"
  },
  {
    "code": "S37.9",
    "description": "Traumatismo de √≥rgano p√©lvico no especificado"
  },
  {
    "code": "S38.0",
    "description": "Traumatismo por aplastamiento de √≥rganos genitales externos"
  },
  {
    "code": "S38.1",
    "description": ""
  },
  {
    "code": "S38.2",
    "description": "Amputaci√≥n traum√°tica de √≥rganos genitales externos"
  },
  {
    "code": "S38.3",
    "description": "Amputaci√≥n traum√°tica de otras partes y de las no especificadas del abdomen, regi√≥n lumbosacra y pelvis"
  },
  {
    "code": "S39.0",
    "description": "Traumatismo de tend√≥n y de m√∫sculos del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S39.6",
    "description": "Traumatismo de √≥rgano(s) intraabdominal(es) con √≥rgano(s) p√©lvico(s)"
  },
  {
    "code": "S39.7",
    "description": "Otros traumatismos m√∫ltiples del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S39.8",
    "description": "Otros traumatismos especificados del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S39.9",
    "description": "Traumatismo no especificado del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S40.0",
    "description": "Contusi√≥n del hombro y del brazo"
  },
  {
    "code": "S40.7",
    "description": "Traumatismos superficiales m√∫ltiples del hombro y del brazo"
  },
  {
    "code": "S40.8",
    "description": "Otros traumatismos superficiales del hombro y del brazo"
  },
  {
    "code": "S40.9",
    "description": "Traumatismo superficial no especificado del hombro y del brazo"
  },
  {
    "code": "S41.0",
    "description": "Herida del hombro"
  },
  {
    "code": "S41.1",
    "description": "Herida del brazo"
  },
  {
    "code": "S41.7",
    "description": "Heridas m√∫ltiples del hombro y del brazo"
  },
  {
    "code": "S41.8",
    "description": "Herida de otras partes y de las no especificadas del hombro y del brazo"
  },
  {
    "code": "S42.0",
    "description": "Fractura de la clav√≠cula"
  },
  {
    "code": "S42.1",
    "description": "Fractura del om√≥plato"
  },
  {
    "code": "S42.2",
    "description": "Fractura de la ep√≠fisis superior del h√∫mero"
  },
  {
    "code": "S42.3",
    "description": "Fractura de la di√°fisis del h√∫mero"
  },
  {
    "code": "S42.4",
    "description": "Fractura de la ep√≠fisis inferior del h√∫mero"
  },
  {
    "code": "S42.7",
    "description": "Fracturas m√∫ltiples de la clav√≠cula, del om√≥plato y del h√∫mero"
  },
  {
    "code": "S42.8",
    "description": "Fractura de otras partes del hombro y del brazo"
  },
  {
    "code": "S42.9",
    "description": "Fractura del hombro y del brazo, parte no especificada"
  },
  {
    "code": "S43.0",
    "description": "Luxaci√≥n de la articulaci√≥n del hombro"
  },
  {
    "code": "S43.1",
    "description": "Luxaci√≥n de la articulaci√≥n acromioclavicular"
  },
  {
    "code": "S43.2",
    "description": "Luxaci√≥n de la articulaci√≥n esternoclavicular"
  },
  {
    "code": "S43.3",
    "description": "Luxaci√≥n de otras partes de la cintura escapular y de las no especificadas"
  },
  {
    "code": "S43.4",
    "description": "Esguinces y torceduras de la articulaci√≥n del hombro"
  },
  {
    "code": "S43.5",
    "description": "Esguinces y torceduras de la articulaci√≥n acromioclavicular"
  },
  {
    "code": "S43.6",
    "description": "Esguinces y torceduras de la articulaci√≥n esternoclavicular"
  },
  {
    "code": "S43.7",
    "description": "Esguinces y torceduras de otras partes y de las no especificadas de la cintura escapular"
  },
  {
    "code": "S44.0",
    "description": "Traumatismo del nervio cubital a nivel del brazo"
  },
  {
    "code": "S44.1",
    "description": "Traumatismo del nervio mediano a nivel del brazo"
  },
  {
    "code": "S44.2",
    "description": "Traumatismo del nervio radial a nivel del brazo"
  },
  {
    "code": "S44.3",
    "description": "Traumatismo del nervio axilar"
  },
  {
    "code": "S44.4",
    "description": "Traumatismo del nervio musculocut√°neo"
  },
  {
    "code": "S44.5",
    "description": "Traumatismo del nervio sensitivo cut√°neo a nivel del hombro y del brazo"
  },
  {
    "code": "S44.7",
    "description": "Traumatismo de m√∫ltiples nervios a nivel del hombro y del brazo"
  },
  {
    "code": "S44.8",
    "description": "Traumatismo de otros nervios a nivel del hombro y del brazo"
  },
  {
    "code": "S44.9",
    "description": "Traumatismo de nervio no especificado a nivel del hombro y del brazo"
  },
  {
    "code": "S45.0",
    "description": "Traumatismo de la arteria axilar"
  },
  {
    "code": "S45.1",
    "description": "Traumatismo de la arteria braquial"
  },
  {
    "code": "S45.2",
    "description": "Traumatismo de la vena axilar o braquial"
  },
  {
    "code": "S45.3",
    "description": "Traumatismo de vena superficial a nivel del hombro y del brazo"
  },
  {
    "code": "S45.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel del hombro y del brazo"
  },
  {
    "code": "S45.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel del hombro y del brazo"
  },
  {
    "code": "S45.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado a nivel del hombro y del brazo"
  },
  {
    "code": "S46.0",
    "description": "Traumatismo del tend√≥n del manguito rotatorio del hombro"
  },
  {
    "code": "S46.1",
    "description": "Traumatismo del tend√≥n y m√∫sculo de la cabeza larga del b√≠ceps"
  },
  {
    "code": "S46.2",
    "description": "Traumatismo del tend√≥n y m√∫sculo de otras partes del b√≠ceps"
  },
  {
    "code": "S46.3",
    "description": "Traumatismo del tend√≥n y m√∫sculo del tr√≠ceps"
  },
  {
    "code": "S46.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos a nivel del hombro y del brazo"
  },
  {
    "code": "S46.8",
    "description": "Traumatismo de otros tendones y m√∫sculos a nivel del hombro y del brazo"
  },
  {
    "code": "S46.9",
    "description": "Traumatismo de tend√≥n y m√∫sculo no especificado, a nivel del hombro y del brazo"
  },
  {
    "code": "S48.0",
    "description": "Amputaci√≥n traum√°tica en la articulaci√≥n del hombro"
  },
  {
    "code": "S48.1",
    "description": "Amputaci√≥n traum√°tica a nivel entre el hombro y el codo"
  },
  {
    "code": "S48.9",
    "description": "Amputaci√≥n traum√°tica del hombro y del brazo, nivel no especificado"
  },
  {
    "code": "S49.7",
    "description": "Traumatismos m√∫ltiples del hombro y del brazo"
  },
  {
    "code": "S49.8",
    "description": "Otros traumatismos especificados del hombro y del brazo"
  },
  {
    "code": "S49.9",
    "description": "Traumatismos no especificados del hombro y del brazo"
  },
  {
    "code": "S50.0",
    "description": "Contusi√≥n del codo"
  },
  {
    "code": "S50.1",
    "description": "Contusi√≥n de otras partes del antebrazo y de las no especificadas"
  },
  {
    "code": "S50.7",
    "description": "Traumatismos superficiales m√∫ltiples del antebrazo"
  },
  {
    "code": "S50.8",
    "description": "Otros traumatismos superficiales del antebrazo"
  },
  {
    "code": "S50.9",
    "description": "Traumatismo superficial del antebrazo, no especificado"
  },
  {
    "code": "S51.0",
    "description": "Herida del codo"
  },
  {
    "code": "S51.7",
    "description": "Heridas m√∫ltiples del antebrazo"
  },
  {
    "code": "S51.8",
    "description": "Herida de otras partes del antebrazo"
  },
  {
    "code": "S51.9",
    "description": "Herida del antebrazo, parte no especificada"
  },
  {
    "code": "S52.0",
    "description": "Fractura de la ep√≠fisis superior del c√∫bito"
  },
  {
    "code": "S52.1",
    "description": "Fractura de la ep√≠fisis superior del radio"
  },
  {
    "code": "S52.2",
    "description": "Fractura de la di√°fisis del c√∫bito"
  },
  {
    "code": "S52.3",
    "description": "Fractura de la di√°fisis del radio"
  },
  {
    "code": "S52.4",
    "description": "Fractura de la di√°fisis del c√∫bito y del radio"
  },
  {
    "code": "S52.5",
    "description": "Fractura de la ep√≠fisis inferior del radio"
  },
  {
    "code": "S52.6",
    "description": "Fractura de la ep√≠fisis inferior del c√∫bito y del radio"
  },
  {
    "code": "S52.7",
    "description": "Fracturas m√∫ltiples del antebrazo"
  },
  {
    "code": "S52.8",
    "description": "Fractura de otras partes del antebrazo"
  },
  {
    "code": "S52.9",
    "description": "Fractura del antebrazo, parte no especificada"
  },
  {
    "code": "S53.0",
    "description": "Luxaci√≥n de la cabeza del radio"
  },
  {
    "code": "S53.1",
    "description": "Luxaci√≥n del codo, no especificada"
  },
  {
    "code": "S53.2",
    "description": "Ruptura traum√°tica del ligamento lateral del radio"
  },
  {
    "code": "S53.3",
    "description": "Ruptura traum√°tica del ligamento lateral del c√∫bito"
  },
  {
    "code": "S53.4",
    "description": "Esguinces y torceduras del codo"
  },
  {
    "code": "S54.0",
    "description": "Traumatismo del nervio cubital a nivel del antebrazo"
  },
  {
    "code": "S54.1",
    "description": "Traumatismo del nervio mediano a nivel del antebrazo"
  },
  {
    "code": "S54.2",
    "description": "Traumatismo del nervio radial a nivel del antebrazo"
  },
  {
    "code": "S54.3",
    "description": "Traumatismo del nervio sensorial cut√°neo a nivel del antebrazo"
  },
  {
    "code": "S54.7",
    "description": "Traumatismo de m√∫ltiples nervios a nivel del antebrazo"
  },
  {
    "code": "S54.8",
    "description": "Traumatismo de otros nervios a nivel del antebrazo"
  },
  {
    "code": "S54.9",
    "description": "Traumatismo de nervio no especificado a nivel del antebrazo"
  },
  {
    "code": "S55.0",
    "description": "Traumatismo de la arteria cubital a nivel del antebrazo"
  },
  {
    "code": "S55.1",
    "description": "Traumatismo de la arteria radial a nivel del antebrazo"
  },
  {
    "code": "S55.2",
    "description": "Traumatismo de vena a nivel del antebrazo"
  },
  {
    "code": "S55.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel del antebrazo"
  },
  {
    "code": "S55.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel del antebrazo"
  },
  {
    "code": "S55.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado a nivel del antebrazo"
  },
  {
    "code": "S56.0",
    "description": "Traumatismo del tend√≥n y m√∫sculo flexor del pulgar a nivel del antebrazo"
  },
  {
    "code": "S56.1",
    "description": "Traumatismo del tend√≥n y m√∫sculo flexor de otro(s) dedo(s) a nivel del antebrazo"
  },
  {
    "code": "S56.2",
    "description": "Traumatismo de otro tend√≥n y m√∫sculo flexor a nivel del antebrazo"
  },
  {
    "code": "S56.3",
    "description": "Traumatismo de tendones y m√∫sculos abductores y extensores del pulgar a nivel del antebrazo"
  },
  {
    "code": "S56.4",
    "description": "Traumatismo del tend√≥n y m√∫sculo extensor de otro(s) dedo(s) a nivel del antebrazo"
  },
  {
    "code": "S56.5",
    "description": "Traumatismo de otro tend√≥n y m√∫sculo extensor a nivel del antebrazo"
  },
  {
    "code": "S56.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos a nivel del antebrazo"
  },
  {
    "code": "S56.8",
    "description": "Traumatismo de otros tendones y m√∫sculos y de los no especificados, a nivel del antebrazo"
  },
  {
    "code": "S57.0",
    "description": "Traumatismo por aplastamiento del codo"
  },
  {
    "code": "S57.8",
    "description": "Traumatismo por aplastamiento de otras partes del antebrazo"
  },
  {
    "code": "S57.9",
    "description": "Traumatismo por aplastamiento del antebrazo, parte no especificada"
  },
  {
    "code": "S58.0",
    "description": "Amputaci√≥n traum√°tica a nivel del codo"
  },
  {
    "code": "S58.1",
    "description": "Amputaci√≥n traum√°tica nivel entre el codo y la mu√±eca"
  },
  {
    "code": "S58.9",
    "description": "Amputaci√≥n traum√°tica del antebrazo, nivel no especificado"
  },
  {
    "code": "S59.7",
    "description": "Traumatismos m√∫ltiples del antebrazo"
  },
  {
    "code": "S59.8",
    "description": "Otros traumatismos especificados del antebrazo"
  },
  {
    "code": "S59.9",
    "description": "Traumatismo no especificado del antebrazo"
  },
  {
    "code": "S60.0",
    "description": "Contusi√≥n de dedo(s) de la mano, sin da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S60.1",
    "description": "Contusi√≥n de dedo(s) de la mano con da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S60.2",
    "description": "Contusi√≥n de otras partes de la mu√±eca y de la mano"
  },
  {
    "code": "S60.7",
    "description": "Traumatismos superficiales m√∫ltiples de la mu√±eca y de la mano"
  },
  {
    "code": "S60.8",
    "description": "Otros traumatismos superficiales de la mu√±eca y de la mano"
  },
  {
    "code": "S60.9",
    "description": "Traumatismo superficial de la mu√±eca y de la mano, no especificado"
  },
  {
    "code": "S61.0",
    "description": "Herida de dedo(s) de la mano, sin da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S61.1",
    "description": "Herida de dedo(s) de la mano, con da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S61.7",
    "description": "Heridas m√∫ltiples de la mu√±eca y de la mano"
  },
  {
    "code": "S61.8",
    "description": "Herida de otras partes de la mu√±eca y de la mano"
  },
  {
    "code": "S61.9",
    "description": "Herida de la mu√±eca y de la mano, parte no especificada"
  },
  {
    "code": "S62.0",
    "description": "Fractura del hueso escafoides [navicular] de la mano"
  },
  {
    "code": "S62.1",
    "description": "Fractura de otro(s) hueso(s) del carpo"
  },
  {
    "code": "S62.2",
    "description": "Fractura del primer metacarpiano"
  },
  {
    "code": "S62.3",
    "description": "Fractura de otros huesos metacarpianos"
  },
  {
    "code": "S62.4",
    "description": "Fracturas m√∫ltiples de huesos metacarpianos"
  },
  {
    "code": "S62.5",
    "description": "Fractura del pulgar"
  },
  {
    "code": "S62.6",
    "description": "Fractura de otro dedo de la mano"
  },
  {
    "code": "S62.7",
    "description": "Fracturas m√∫ltiples de los dedos de la mano"
  },
  {
    "code": "S62.8",
    "description": "Fractura de otras partes y de las no especificadas de la mu√±eca y de la mano"
  },
  {
    "code": "S63.0",
    "description": "Luxaci√≥n de la mu√±eca"
  },
  {
    "code": "S63.1",
    "description": "Luxaci√≥n de dedos de la mano"
  },
  {
    "code": "S63.2",
    "description": "Luxaciones m√∫ltiples de dedos de la mano"
  },
  {
    "code": "S63.3",
    "description": "Ruptura traum√°tica de ligamentos de la mu√±eca y del carpo"
  },
  {
    "code": "S63.4",
    "description": "Ruptura traum√°tica de ligamentos del dedo de la mano en la(s) articulaci√≥n(es) metacarpofal√°ngica e interfal√°ngica"
  },
  {
    "code": "S63.5",
    "description": "Esguince y torcedura de la mu√±eca"
  },
  {
    "code": "S63.6",
    "description": "Esguinces y torceduras de dedo(s) de la mano"
  },
  {
    "code": "S63.7",
    "description": "Esguinces y torceduras de otras partes y de las no especificadas de la mu√±eca y de la mano"
  },
  {
    "code": "S64.0",
    "description": "Traumatismo del nervio cubital a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64.1",
    "description": "Traumatismo del nervio mediano a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64.2",
    "description": "Traumatismo del nervio radial a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64.3",
    "description": "Traumatismo del nervio digital del pulgar"
  },
  {
    "code": "S64.4",
    "description": "Traumatismo del nervio digital de otro dedo"
  },
  {
    "code": "S64.7",
    "description": "Traumatismo de m√∫ltiples nervios a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64.8",
    "description": "Traumatismo de otros nervios a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64.9",
    "description": "Traumatismo de nervio no especificado a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65.0",
    "description": "Traumatismo de la arteria cubital a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65.1",
    "description": "Traumatismo de la arteria radial a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65.2",
    "description": "Traumatismo del arco palmar superficial"
  },
  {
    "code": "S65.3",
    "description": "Traumatismo del arco palmar profundo"
  },
  {
    "code": "S65.4",
    "description": "Traumatismo de vaso(s) sangu√≠neo(s) del pulgar"
  },
  {
    "code": "S65.5",
    "description": "Traumatismo de vaso(s) sangu√≠neo(s) de otro dedo"
  },
  {
    "code": "S65.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado, a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.0",
    "description": "Traumatismo del tend√≥n y m√∫sculo flexor largo del pulgar a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.1",
    "description": "Traumatismo del tend√≥n y m√∫sculo flexor de otro dedo a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.2",
    "description": "Traumatismo del tend√≥n y m√∫sculo extensor del pulgar a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.3",
    "description": "Traumatismo del tend√≥n y m√∫sculo extensor de otro(s) dedo(s) a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.4",
    "description": "Traumatismo del m√∫sculo y tend√≥n intr√≠nseco del pulgar a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.5",
    "description": "Traumatismo del m√∫sculo y tend√≥n intr√≠nseco de otro(s) dedo(s) a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.6",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos flexores a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos extensores a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.8",
    "description": "Traumatismo de otros tendones y m√∫sculos a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66.9",
    "description": "Traumatismo de tend√≥n y m√∫sculo no especificado, a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S67.0",
    "description": "Traumatismo por aplastamiento del pulgar y otro(s) dedo(s)"
  },
  {
    "code": "S67.8",
    "description": "Traumatismo por aplastamiento de otras partes y de las no especificadas de la mu√±eca y de la mano"
  },
  {
    "code": "S68.0",
    "description": "Amputaci√≥n traum√°tica del pulgar (completa) (parcial)"
  },
  {
    "code": "S68.1",
    "description": "Amputaci√≥n traum√°tica de otro dedo √∫nico (completa) (parcial)"
  },
  {
    "code": "S68.2",
    "description": "Amputaci√≥n traum√°tica de dos o m√°s dedos solamente (completa) (parcial)"
  },
  {
    "code": "S68.3",
    "description": "Amputaci√≥n traum√°tica combinada (de parte) de dedo(s) con otras partes de la mu√±eca y de la mano"
  },
  {
    "code": "S68.4",
    "description": "Amputaci√≥n traum√°tica de la mano a nivel de la mu√±eca"
  },
  {
    "code": "S68.8",
    "description": "Amputaci√≥n traum√°tica de otras partes de la mu√±eca y de la mano"
  },
  {
    "code": "S68.9",
    "description": "Amputaci√≥n traum√°tica de la mu√±eca y de la mano, nivel no especificado"
  },
  {
    "code": "S69.7",
    "description": "Traumatismos m√∫ltiples de la mu√±eca y de la mano"
  },
  {
    "code": "S69.8",
    "description": "Otros traumatismos especificados de la mu√±eca y de la mano"
  },
  {
    "code": "S69.9",
    "description": "Traumatismo no especificado de la mu√±eca y de la mano"
  },
  {
    "code": "S70.0",
    "description": "Contusi√≥n de la cadera"
  },
  {
    "code": "S70.1",
    "description": "Contusi√≥n del muslo"
  },
  {
    "code": "S70.7",
    "description": "Traumatismos superficiales m√∫ltiples de la cadera y del muslo"
  },
  {
    "code": "S70.8",
    "description": "Otros traumatismos superficiales de la cadera y del muslo"
  },
  {
    "code": "S70.9",
    "description": "Traumatismo superficial de la cadera y del muslo, no especificado"
  },
  {
    "code": "S71.0",
    "description": "Herida de la cadera"
  },
  {
    "code": "S71.1",
    "description": "Herida del muslo"
  },
  {
    "code": "S71.7",
    "description": "Heridas m√∫ltiples de la cadera y del muslo"
  },
  {
    "code": "S71.8",
    "description": "Herida de otras partes y de las no especificadas de la cintura p√©lvica"
  },
  {
    "code": "S72.0",
    "description": "Fractura del cuello de f√©mur"
  },
  {
    "code": "S72.1",
    "description": "Fractura pertrocanteriana"
  },
  {
    "code": "S72.2",
    "description": "Fractura subtrocanteriana"
  },
  {
    "code": "S72.3",
    "description": "Fractura de la di√°fisis del f√©mur"
  },
  {
    "code": "S72.4",
    "description": "Fractura de la ep√≠fisis inferior del f√©mur"
  },
  {
    "code": "S72.7",
    "description": "Fracturas m√∫ltiples del f√©mur"
  },
  {
    "code": "S72.8",
    "description": "Fracturas de otras partes del f√©mur"
  },
  {
    "code": "S72.9",
    "description": "Fractura del f√©mur, parte no especificada"
  },
  {
    "code": "S73.0",
    "description": "Luxaci√≥n de la cadera"
  },
  {
    "code": "S73.1",
    "description": "Esguinces y torceduras de la cadera"
  },
  {
    "code": "S74.0",
    "description": "Traumatismo del nervio ci√°tico a nivel de la cadera y del muslo"
  },
  {
    "code": "S74.1",
    "description": "Traumatismo del nervio femorocut√°neo a nivel de la cadera y del muslo"
  },
  {
    "code": "S74.2",
    "description": "Traumatismo del nervio sensorial cut√°neo a nivel de la cadera y del muslo"
  },
  {
    "code": "S74.7",
    "description": "Traumatismo de nervios m√∫ltiples a nivel de la cadera y del muslo"
  },
  {
    "code": "S74.8",
    "description": "Traumatismo de otros nervios a nivel de la cadera y del muslo"
  },
  {
    "code": "S74.9",
    "description": "Traumatismo de nervio no especificado a nivel de la cadera y del muslo"
  },
  {
    "code": "S75.0",
    "description": "Traumatismo de la arteria femoral"
  },
  {
    "code": "S75.1",
    "description": "Traumatismo de la vena femoral a nivel de la cadera y del muslo"
  },
  {
    "code": "S75.2",
    "description": "Traumatismo de la gran vena safena a nivel de la cadera y del muslo"
  },
  {
    "code": "S75.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel de la cadera y del muslo"
  },
  {
    "code": "S75.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel de la cadera y del muslo"
  },
  {
    "code": "S75.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado a nivel de la cadera y del muslo"
  },
  {
    "code": "S76.0",
    "description": "Traumatismo del tend√≥n y m√∫sculo de la cadera"
  },
  {
    "code": "S76.1",
    "description": "Traumatismo del tend√≥n y m√∫sculo cu√°driceps"
  },
  {
    "code": "S76.2",
    "description": "Traumatismo del tend√≥n y m√∫sculo aductor mayor del muslo"
  },
  {
    "code": "S76.3",
    "description": "Traumatismo de tend√≥n y m√∫sculo del grupo muscular posterior a nivel del muslo"
  },
  {
    "code": "S76.4",
    "description": "Traumatismo de otros tendones y m√∫sculos y los no especificados a nivel del muslo"
  },
  {
    "code": "S76.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos a nivel de la cadera y del muslo"
  },
  {
    "code": "S77.0",
    "description": "Traumatismo por aplastamiento de la cadera"
  },
  {
    "code": "S77.1",
    "description": "Traumatismo por aplastamiento del muslo"
  },
  {
    "code": "S77.2",
    "description": "Traumatismo por aplastamiento de la cadera con el muslo"
  },
  {
    "code": "S78.0",
    "description": "Amputaci√≥n traum√°tica de la articulaci√≥n de la cadera"
  },
  {
    "code": "S78.1",
    "description": "Amputaci√≥n traum√°tica en alg√∫n nivel entre la cadera y la rodilla"
  },
  {
    "code": "S78.9",
    "description": "Amputaci√≥n traum√°tica de cadera y muslo, nivel no especificado"
  },
  {
    "code": "S79.7",
    "description": "Traumatismos m√∫ltiples de la cadera y del muslo"
  },
  {
    "code": "S79.8",
    "description": "Otros traumatismos especificados de la cadera y del muslo"
  },
  {
    "code": "S79.9",
    "description": "Traumatismo no especificado de la cadera y del muslo"
  },
  {
    "code": "S80.0",
    "description": "Contusi√≥n de la rodilla"
  },
  {
    "code": "S80.1",
    "description": "Contusi√≥n de otras partes y las no especificadas de la pierna"
  },
  {
    "code": "S80.7",
    "description": "Traumatismos superficiales m√∫ltiples de la pierna"
  },
  {
    "code": "S80.8",
    "description": "Otros traumatismos superficiales de la pierna"
  },
  {
    "code": "S80.9",
    "description": "Traumatismo superficial de la pierna, no especificado"
  },
  {
    "code": "S81.0",
    "description": "Herida de la rodilla"
  },
  {
    "code": "S81.7",
    "description": "Heridas m√∫ltiples de la pierna"
  },
  {
    "code": "S81.8",
    "description": "Herida de otras partes de la pierna"
  },
  {
    "code": "S81.9",
    "description": "Herida de la pierna, parte no especificada"
  },
  {
    "code": "S82.0",
    "description": "Fractura de la r√≥tula"
  },
  {
    "code": "S82.1",
    "description": "Fractura de la ep√≠fisis superior de la tibia"
  },
  {
    "code": "S82.2",
    "description": "Fractura de la di√°fisis de la tibia"
  },
  {
    "code": "S82.3",
    "description": "Fractura de la ep√≠fisis inferior de la tibia"
  },
  {
    "code": "S82.4",
    "description": "Fractura del peron√© solamente"
  },
  {
    "code": "S82.5",
    "description": "Fractura del mal√©olo interno"
  },
  {
    "code": "S82.6",
    "description": "Fractura del mal√©olo externo"
  },
  {
    "code": "S82.7",
    "description": "Fracturas m√∫ltiples de la pierna"
  },
  {
    "code": "S82.8",
    "description": "Fractura de otras partes de la pierna"
  },
  {
    "code": "S82.9",
    "description": "Fractura de la pierna, parte no especificada"
  },
  {
    "code": "S83.0",
    "description": "Luxaci√≥n de la r√≥tula"
  },
  {
    "code": "S83.1",
    "description": "Luxaci√≥n de la rodilla"
  },
  {
    "code": "S83.2",
    "description": "Desgarro de meniscos, presente"
  },
  {
    "code": "S83.3",
    "description": "Desgarro del cart√≠lago articular de la rodilla, presente"
  },
  {
    "code": "S83.4",
    "description": "Esguinces y torceduras que comprometen los ligamentos laterales (externo) (interno) de la rodilla"
  },
  {
    "code": "S83.5",
    "description": "Esguinces y torceduras que comprometen el ligamento cruzado (anterior) (posterior) de la rodilla"
  },
  {
    "code": "S83.6",
    "description": "Esguinces y torceduras de otras partes y las no especificadas de la rodilla"
  },
  {
    "code": "S83.7",
    "description": "Traumatismo de estructuras m√∫ltiples de la rodilla"
  },
  {
    "code": "S84.0",
    "description": "Traumatismo del nervio tibial a nivel de la pierna"
  },
  {
    "code": "S84.1",
    "description": "Traumatismo del nervio peroneo a nivel de la pierna"
  },
  {
    "code": "S84.2",
    "description": "Traumatismo del nervio sensorial cut√°neo a nivel de la pierna"
  },
  {
    "code": "S84.7",
    "description": "Traumatismo de nervios m√∫ltiples a nivel de la pierna"
  },
  {
    "code": "S84.8",
    "description": "Traumatismo de otros nervios a nivel de la pierna"
  },
  {
    "code": "S84.9",
    "description": "Traumatismo de nervio no especificado a nivel de la pierna"
  },
  {
    "code": "S85.0",
    "description": "Traumatismo de la arteria popl√≠tea"
  },
  {
    "code": "S85.1",
    "description": "Traumatismo de la arteria tibial (anterior) (posterior)"
  },
  {
    "code": "S85.2",
    "description": "Traumatismo de la arteria peronea"
  },
  {
    "code": "S85.3",
    "description": "Traumatismo de la gran vena safena a nivel de la pierna"
  },
  {
    "code": "S85.4",
    "description": "Traumatismo de la vena safena externa a nivel de la pierna"
  },
  {
    "code": "S85.5",
    "description": "Traumatismo de la vena popl√≠tea"
  },
  {
    "code": "S85.7",
    "description": "Traumatismo de vasos sangu√≠neos m√∫ltiples a nivel de la pierna"
  },
  {
    "code": "S85.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel de la pierna"
  },
  {
    "code": "S85.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado a nivel de la pierna"
  },
  {
    "code": "S86.0",
    "description": "Traumatismo del tend√≥n de Aquiles"
  },
  {
    "code": "S86.1",
    "description": "Traumatismo de otro(s) tend√≥n(es) y m√∫sculo(s) del grupo muscular posterior a nivel de la pierna"
  },
  {
    "code": "S86.2",
    "description": "Traumatismo de tend√≥n(es) y m√∫sculo(s) del grupo muscular anterior a nivel de la pierna"
  },
  {
    "code": "S86.3",
    "description": "Traumatismo de tend√≥n(es) y m√∫sculo(s) del grupo muscular peroneo a nivel de la pierna"
  },
  {
    "code": "S86.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos a nivel de la pierna"
  },
  {
    "code": "S86.8",
    "description": "Traumatismo de otros tendones y m√∫sculos a nivel de la pierna"
  },
  {
    "code": "S86.9",
    "description": "Traumatismo de tend√≥n y m√∫sculo no especificado a nivel de la pierna"
  },
  {
    "code": "S87.0",
    "description": "Traumatismo por aplastamiento de la rodilla"
  },
  {
    "code": "S87.8",
    "description": "Traumatismo por aplastamiento de otras partes y de las no especificadas de la pierna"
  },
  {
    "code": "S88.0",
    "description": "Amputaci√≥n traum√°tica a nivel de la rodilla"
  },
  {
    "code": "S88.1",
    "description": "Amputaci√≥n traum√°tica en alg√∫n nivel entre la rodilla y el tobillo"
  },
  {
    "code": "S88.9",
    "description": "Amputaci√≥n traum√°tica de la pierna, nivel no especificado"
  },
  {
    "code": "S89.7",
    "description": "Traumatismos m√∫ltiples de la pierna"
  },
  {
    "code": "S89.8",
    "description": "Otros traumatismos de la pierna, especificados"
  },
  {
    "code": "S89.9",
    "description": "Traumatismo de la pierna, no especificado"
  },
  {
    "code": "S90.0",
    "description": "Contusi√≥n del tobillo"
  },
  {
    "code": "S90.1",
    "description": "Contusi√≥n de dedo(s) del pie sin da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S90.2",
    "description": "Contusi√≥n de dedo(s) del pie con da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S90.3",
    "description": "Contusi√≥n de otras partes y de las no especificadas del pie"
  },
  {
    "code": "S90.7",
    "description": "Traumatismos superficiales m√∫ltiples del pie y del tobillo"
  },
  {
    "code": "S90.8",
    "description": "Otros traumatismos superficiales del pie y del tobillo"
  },
  {
    "code": "S90.9",
    "description": "Traumatismo superficial del pie y del tobillo, no especificado"
  },
  {
    "code": "S91.0",
    "description": "Herida del tobillo"
  },
  {
    "code": "S91.1",
    "description": "Herida de dedo(s) del pie sin da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S91.2",
    "description": "Herida de dedo(s) del pie con da√±o de la(s) u√±a(s)"
  },
  {
    "code": "S91.3",
    "description": "Herida de otras partes del pie"
  },
  {
    "code": "S91.7",
    "description": "Heridas m√∫ltiples del tobillo y del pie"
  },
  {
    "code": "S92.0",
    "description": "Fractura del calc√°neo"
  },
  {
    "code": "S92.1",
    "description": "Fractura del astr√°galo"
  },
  {
    "code": "S92.2",
    "description": "Fractura de otro(s) hueso(s) del tarso"
  },
  {
    "code": "S92.3",
    "description": "Fractura de hueso del metatarso"
  },
  {
    "code": "S92.4",
    "description": "Fractura de los huesos del dedo gordo del pie"
  },
  {
    "code": "S92.5",
    "description": "Fractura de los huesos de otro(s) dedo(s) del pie"
  },
  {
    "code": "S92.7",
    "description": "Fracturas m√∫ltiples del pie"
  },
  {
    "code": "S92.9",
    "description": "Fractura del pie, no especificada"
  },
  {
    "code": "S93.0",
    "description": "Luxaci√≥n de la articulaci√≥n del tobillo"
  },
  {
    "code": "S93.1",
    "description": "Luxaci√≥n de dedo(s) del pie"
  },
  {
    "code": "S93.2",
    "description": "Ruptura de ligamentos a nivel del tobillo y del pie"
  },
  {
    "code": "S93.3",
    "description": "Luxaci√≥n de otros sitios y los no especificados del pie"
  },
  {
    "code": "S93.4",
    "description": "Esguinces y torceduras del tobillo"
  },
  {
    "code": "S93.5",
    "description": "Esguinces y torceduras de dedo(s) del pie"
  },
  {
    "code": "S93.6",
    "description": "Esguinces y torceduras de otros sitios y de los no especificados del pie"
  },
  {
    "code": "S94.0",
    "description": "Traumatismo del nervio plantar externo"
  },
  {
    "code": "S94.1",
    "description": "Traumatismo del nervio plantar interno"
  },
  {
    "code": "S94.2",
    "description": "Traumatismo del nervio peroneal profundo a nivel del pie y del tobillo"
  },
  {
    "code": "S94.3",
    "description": "Traumatismo de nervio sensorial cut√°neo a nivel del pie y del tobillo"
  },
  {
    "code": "S94.7",
    "description": "Traumatismo de m√∫ltiples nervios a nivel del pie y del tobillo"
  },
  {
    "code": "S94.8",
    "description": "Traumatismo de otros nervios a nivel del pie y del tobillo"
  },
  {
    "code": "S94.9",
    "description": "Traumatismo de nervio no especificado a nivel del pie y del tobillo"
  },
  {
    "code": "S95.0",
    "description": "Traumatismo de la arteria dorsal del pie"
  },
  {
    "code": "S95.1",
    "description": "Traumatismo de la arteria plantar del pie"
  },
  {
    "code": "S95.2",
    "description": "Traumatismo de la vena dorsal del pie"
  },
  {
    "code": "S95.7",
    "description": "Traumatismo de m√∫ltiples vasos sangu√≠neos a nivel del pie y del tobillo"
  },
  {
    "code": "S95.8",
    "description": "Traumatismo de otros vasos sangu√≠neos a nivel del pie y del tobillo"
  },
  {
    "code": "S95.9",
    "description": "Traumatismo de vaso sangu√≠neo no especificado a nivel del pie y del tobillo"
  },
  {
    "code": "S96.0",
    "description": "Traumatismo del tend√≥n y m√∫sculo del flexor largo del dedo a nivel del pie y del tobillo"
  },
  {
    "code": "S96.1",
    "description": "Traumatismo del tend√≥n y m√∫sculo del extensor largo del (de los) dedo(s) a nivel del pie y del tobillo"
  },
  {
    "code": "S96.2",
    "description": "Traumatismo de tendones y m√∫sculos intr√≠nsecos a nivel del pie y del tobillo"
  },
  {
    "code": "S96.7",
    "description": "Traumatismo de m√∫ltiples tendones y m√∫sculos a nivel del pie y del tobillo"
  },
  {
    "code": "S96.8",
    "description": "Traumatismo de otros tendones y m√∫sculos a nivel del pie y del tobillo"
  },
  {
    "code": "S96.9",
    "description": "Traumatismo de tendones y m√∫sculos no especificados a nivel del pie y del tobillo"
  },
  {
    "code": "S97.0",
    "description": "Traumatismo por aplastamiento del tobillo"
  },
  {
    "code": "S97.1",
    "description": "Traumatismo por aplastamiento de dedo(s) del pie"
  },
  {
    "code": "S97.8",
    "description": "Traumatismo por aplastamiento de otras partes del pie y del tobillo"
  },
  {
    "code": "S98.0",
    "description": "Amputaci√≥n traum√°tica del pie a nivel del tobillo"
  },
  {
    "code": "S98.1",
    "description": "Amputaci√≥n traum√°tica de un dedo del pie"
  },
  {
    "code": "S98.2",
    "description": "Amputaci√≥n traum√°tica de dos o m√°s dedos del pie"
  },
  {
    "code": "S98.3",
    "description": "Amputaci√≥n traum√°tica de otras partes del pie"
  },
  {
    "code": "S98.4",
    "description": "Amputaci√≥n del pie, nivel no especificado"
  },
  {
    "code": "S99.7",
    "description": "Traumatismos m√∫ltiples del pie y del tobillo"
  },
  {
    "code": "S99.8",
    "description": "Otros traumatismos del pie y del tobillo, especificados"
  },
  {
    "code": "S99.9",
    "description": "Traumatismo del pie y del tobillo, no especificado"
  },
  {
    "code": "T00.0",
    "description": "Traumatismos superficiales que afectan la cabeza con el cuello"
  },
  {
    "code": "T00.1",
    "description": "Traumatismos superficiales que afectan el t√≥rax con el abdomen, la regi√≥n lumbosacra y la pelvis"
  },
  {
    "code": "T00.2",
    "description": "Traumatismos superficiales que afectan m√∫ltiples regiones del(os) miembro(s) superior(es)"
  },
  {
    "code": "T00.3",
    "description": "Traumatismos superficiales que afectan m√∫ltiples regiones del (de los) miembro(s) inferior(es)"
  },
  {
    "code": "T00.6",
    "description": ""
  },
  {
    "code": "T00.8",
    "description": "Traumatismos superficiales que afectan otras combinaciones de regiones del cuerpo"
  },
  {
    "code": "T00.9",
    "description": "Traumatismos superficiales m√∫ltiples, no especificados"
  },
  {
    "code": "T01.0",
    "description": "Heridas que afectan la cabeza con el cuello"
  },
  {
    "code": "T01.1",
    "description": "Heridas que afectan el t√≥rax con el abdomen, la regi√≥n lumbosacra y la pelvis"
  },
  {
    "code": "T01.2",
    "description": "Heridas que afectan m√∫ltiples regiones del (de los) miembro(s) superior(es)"
  },
  {
    "code": "T01.3",
    "description": "Heridas que afectan m√∫ltiples regiones del (de los) miembro(s) inferior(es)"
  },
  {
    "code": "T01.6",
    "description": "Heridas que afectan m√∫ltiples regiones del (de los)  miembro(s) superior(es) con miembro(s) inferior(es)"
  },
  {
    "code": "T01.8",
    "description": "Heridas que afectan otras combinaciones de las regiones del cuerpo"
  },
  {
    "code": "T01.9",
    "description": "Heridas m√∫ltiples, no especificadas"
  },
  {
    "code": "T02.0",
    "description": "Fracturas que afectan la cabeza con el cuello"
  },
  {
    "code": "T02.1",
    "description": "Fracturas que afectan el t√≥rax con la regi√≥n lumbosacra y la pelvis"
  },
  {
    "code": "T02.2",
    "description": "Fracturas que afectan m√∫ltiples regiones de un miembro superior"
  },
  {
    "code": "T02.3",
    "description": "Fracturas que afectan m√∫ltiples regiones de un miembro inferior"
  },
  {
    "code": "T02.4",
    "description": "Fracturas que afectan m√∫ltiples regiones de ambos miembros superiores"
  },
  {
    "code": "T02.5",
    "description": "Fracturas que afectan m√∫ltiples regiones de ambos miembros inferiores"
  },
  {
    "code": "T02.6",
    "description": "Fracturas que afectan m√∫ltiples regiones de miembro(s) superior(es) con miembro(s) inferior(es)"
  },
  {
    "code": "T02.7",
    "description": "Fracturas que afectan el t√≥rax con la regi√≥n lumbosacra y la pelvis con miembro(s)"
  },
  {
    "code": "T02.8",
    "description": "Fracturas que afectan otras combinaciones de las regiones del cuerpo"
  },
  {
    "code": "T02.9",
    "description": "Fracturas m√∫ltiples, no especificadas"
  },
  {
    "code": "T03.0",
    "description": "Luxaciones, torceduras y esguinces que afectan la cabeza con el cuello"
  },
  {
    "code": "T03.1",
    "description": "Luxaciones, torceduras y esguinces que afectan el t√≥rax con la regi√≥n lumbosacra y la pelvis"
  },
  {
    "code": "T03.2",
    "description": "Luxaciones, torceduras y esguinces que afectan m√∫ltiples regiones del (de los) miembros(s) superior(es)"
  },
  {
    "code": "T03.3",
    "description": "Luxaciones, torceduras y esguinces que afectan m√∫ltiples regiones del (de los) miembros(s) inferior(es)"
  },
  {
    "code": "T03.4",
    "description": ""
  },
  {
    "code": "T03.8",
    "description": "Luxaciones, torceduras y esguinces que afectan otras combinaciones de regiones del cuerpo"
  },
  {
    "code": "T03.9",
    "description": "Luxaciones, torceduras y esguinces m√∫ltiples, no especificados"
  },
  {
    "code": "T04.0",
    "description": "Traumatismos por aplastamiento que afectan la cabeza con el cuello"
  },
  {
    "code": "T04.1",
    "description": "Traumatismos por aplastamiento que afectan el t√≥rax con el abdomen, la regi√≥n lumbosacra y la pelvis"
  },
  {
    "code": "T04.2",
    "description": "Traumatismos por aplastamiento que afectan m√∫ltiples regiones del (de los) miembro(s) superior(es)"
  },
  {
    "code": "T04.3",
    "description": "Traumatismos por aplastamiento que afectan m√∫ltiples regiones del (de los) miembro(s) inferior(es)"
  },
  {
    "code": "T04.4",
    "description": ""
  },
  {
    "code": "T04.7",
    "description": "Traumatismos por aplastamiento del t√≥rax, del abdomen, de la regi√≥n lumbosacra y de la pelvis con miembro(s)"
  },
  {
    "code": "T04.8",
    "description": "Traumatismos por aplastamiento que afectan otras combinaciones de regiones del cuerpo"
  },
  {
    "code": "T04.9",
    "description": "Traumatismos por aplastamiento m√∫ltiple, no especificados"
  },
  {
    "code": "T05.0",
    "description": "Amputaci√≥n traum√°tica de ambas manos"
  },
  {
    "code": "T05.1",
    "description": "Amputaci√≥n traum√°tica de una mano y el otro brazo [cualquier nivel, excepto mano]"
  },
  {
    "code": "T05.2",
    "description": "Amputaci√≥n traum√°tica de ambos brazos [cualquier nivel]"
  },
  {
    "code": "T05.3",
    "description": "Amputaci√≥n traum√°tica de ambos pies"
  },
  {
    "code": "T05.4",
    "description": "Amputaci√≥n traum√°tica de un pie y la otra pierna [cualquier nivel, excepto pie]"
  },
  {
    "code": "T05.5",
    "description": "Amputaci√≥n traum√°tica de ambas piernas [cualquier nivel]"
  },
  {
    "code": "T05.6",
    "description": "Amputaci√≥n traum√°tica de miembros superior(es) e inferior(es), cualquier combinaci√≥n [cualquier nivel]"
  },
  {
    "code": "T05.8",
    "description": "Amputaci√≥n traum√°tica que afecta otras combinaciones de regiones del cuerpo"
  },
  {
    "code": "T05.9",
    "description": "Amputaciones traum√°ticas m√∫ltiples, no especificadas"
  },
  {
    "code": "T06.0",
    "description": "Traumatismos del enc√©falo y de nervios craneales con traumatismo de nervios y m√©dula espinal a nivel del cuello"
  },
  {
    "code": "T06.1",
    "description": "Traumatismos de nervios y m√©dula espinal que afectan otras m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T06.2",
    "description": "Traumatismos de nervios que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T06.3",
    "description": "Traumatismos de vasos sangu√≠neos que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T06.4",
    "description": "Traumatismos de tendones y m√∫sculos que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T06.5",
    "description": "Traumatismos de √≥rganos intrator√°cicos con √≥rganos intraabdominales y p√©lvicos"
  },
  {
    "code": "T06.8",
    "description": "Otros traumatismos especificados que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T09.0",
    "description": "Traumatismo superficial del tronco, nivel no especificado"
  },
  {
    "code": "T09.1",
    "description": "Herida del tronco, nivel no especificado"
  },
  {
    "code": "T09.2",
    "description": "Luxaci√≥n, esguince o torcedura de articulaci√≥n y ligamentos del tronco, no especificado"
  },
  {
    "code": "T09.3",
    "description": "Traumatismo de la m√©dula espinal, nivel no especificado"
  },
  {
    "code": "T09.4",
    "description": "Traumatismo de nervios, ra√≠z de nervio espinal y plexos del tronco no especificados"
  },
  {
    "code": "T09.5",
    "description": "Traumatismo de tendones y m√∫sculos del tronco no especificados"
  },
  {
    "code": "T09.6",
    "description": "Amputaci√≥n traum√°tica del tronco, nivel no especificado"
  },
  {
    "code": "T09.8",
    "description": "Otros traumatismos especificados del tronco, nivel no especificado"
  },
  {
    "code": "T09.9",
    "description": "Traumatismo no especificado del tronco, nivel no especificado"
  },
  {
    "code": "T11.0",
    "description": "Traumatismo superficial de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.1",
    "description": "Herida de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.2",
    "description": "Luxaci√≥n, esguince o torcedura de articulaci√≥n o ligamento no especificado de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.3",
    "description": "Traumatismo de nervio no especificado de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.4",
    "description": "Traumatismo de vasos sangu√≠neos no especificados de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.5",
    "description": "Traumatismo de tend√≥n y m√∫sculo no especificados de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.6",
    "description": "Amputaci√≥n traum√°tica de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.8",
    "description": "Otros traumatismos especificados de miembro superior, nivel no especificado"
  },
  {
    "code": "T11.9",
    "description": "Traumatismo no especificado de miembro superior, nivel no especificado"
  },
  {
    "code": "T13.0",
    "description": "Traumatismo superficial de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.1",
    "description": "Herida de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.2",
    "description": "Luxaci√≥n, esguince o torcedura de articulaci√≥n y ligamentos no especificados de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.3",
    "description": "Traumatismo de nervios no especificados de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.4",
    "description": "Traumatismo de vasos sangu√≠neos no especificados de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.5",
    "description": "Traumatismo de tendones y m√∫sculos no especificados de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.6",
    "description": "Amputaci√≥n traum√°tica de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.8",
    "description": "Otros traumatismos especificados de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13.9",
    "description": "Traumatismo no especificado de miembro inferior, nivel no especificado"
  },
  {
    "code": "T14.0",
    "description": "Traumatismo superficial de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.1",
    "description": "Herida de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.2",
    "description": "Fractura de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.3",
    "description": "Luxaci√≥n, esguince y torcedura de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.4",
    "description": "Traumatismo de nervio(s) de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.5",
    "description": "Traumatismo de vaso(s) sangu√≠neo(s) de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.6",
    "description": "Traumatismo de tendones y m√∫sculos de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.7",
    "description": "Traumatismo por aplastamiento y amputaci√≥n traum√°tica de regiones no especificadas del cuerpo"
  },
  {
    "code": "T14.8",
    "description": "Otros traumatismos de regi√≥n no especificada del cuerpo"
  },
  {
    "code": "T14.9",
    "description": "Traumatismo, no especificado"
  },
  {
    "code": "T15.0",
    "description": "Cuerpo extra√±o en la c√≥rnea"
  },
  {
    "code": "T15.1",
    "description": "Cuerpo extra√±o en el saco conjuntival"
  },
  {
    "code": "T15.8",
    "description": "Cuerpo extra√±o en otras y en m√∫ltiples partes de la parte externa del ojo"
  },
  {
    "code": "T15.9",
    "description": "Cuerpo extra√±o en parte externa del ojo, sitio no especificado"
  },
  {
    "code": "T17.0",
    "description": "Cuerpo extra√±o en seno paranasal"
  },
  {
    "code": "T17.1",
    "description": "Cuerpo extra√±o en el orificio nasal"
  },
  {
    "code": "T17.2",
    "description": "Cuerpo extra√±o en la faringe"
  },
  {
    "code": "T17.3",
    "description": "Cuerpo extra√±o en la laringe"
  },
  {
    "code": "T17.4",
    "description": "Cuerpo extra√±o en la tr√°quea"
  },
  {
    "code": "T17.5",
    "description": "Cuerpo extra√±o en bronquios"
  },
  {
    "code": "T17.8",
    "description": "Cuerpo extra√±o en otras y en m√∫ltiples partes de las v√≠as respiratorias"
  },
  {
    "code": "T17.9",
    "description": "Cuerpo extra√±o en las v√≠as respiratorias, parte no especificada"
  },
  {
    "code": "T18.0",
    "description": "Cuerpo extra√±o en la boca"
  },
  {
    "code": "T18.1",
    "description": "Cuerpo extra√±o en el es√≥fago"
  },
  {
    "code": "T18.2",
    "description": "Cuerpo extra√±o en el est√≥mago"
  },
  {
    "code": "T18.3",
    "description": "Cuerpo extra√±o en el intestino delgado"
  },
  {
    "code": "T18.4",
    "description": "Cuerpo extra√±o en el colon"
  },
  {
    "code": "T18.5",
    "description": "Cuerpo extra√±o en el ano y en el recto"
  },
  {
    "code": "T18.8",
    "description": "Cuerpo extra√±o en otras y en m√∫ltiples partes del tubo digestivo"
  },
  {
    "code": "T18.9",
    "description": "Cuerpo extra√±o en el tubo digestivo, parte no especificada"
  },
  {
    "code": "T19.0",
    "description": "Cuerpo extra√±o en la uretra"
  },
  {
    "code": "T19.1",
    "description": "Cuerpo extra√±o en la vejiga"
  },
  {
    "code": "T19.2",
    "description": "Cuerpo extra√±o en la vulva y en la vagina"
  },
  {
    "code": "T19.3",
    "description": "Cuerpo extra√±o en el √∫tero [cualquier parte]"
  },
  {
    "code": "T19.8",
    "description": "Cuerpo extra√±o en otras y en m√∫ltiples partes de las v√≠as genitourinarias"
  },
  {
    "code": "T19.9",
    "description": "Cuerpo extra√±o en las v√≠as genitourinarias, parte no especificada"
  },
  {
    "code": "T20.0",
    "description": "Quemadura de la cabeza y del cuello, grado no especificado"
  },
  {
    "code": "T20.1",
    "description": "Quemadura de la cabeza y del cuello, de primer grado"
  },
  {
    "code": "T20.2",
    "description": "Quemadura de la cabeza y del cuello, de segundo grado"
  },
  {
    "code": "T20.3",
    "description": "Quemadura de la cabeza y del cuello, de tercer grado"
  },
  {
    "code": "T20.4",
    "description": "Corrosi√≥n de la cabeza y del cuello, grado no especificado"
  },
  {
    "code": "T20.5",
    "description": "Corrosi√≥n de la cabeza y del cuello, de primer grado"
  },
  {
    "code": "T20.6",
    "description": "Corrosi√≥n de la cabeza y del cuello, de segundo grado"
  },
  {
    "code": "T20.7",
    "description": "Corrosi√≥n de la cabeza y del cuello, de tercer grado"
  },
  {
    "code": "T21.0",
    "description": "Quemadura del tronco, grado no especificado"
  },
  {
    "code": "T21.1",
    "description": "Quemadura del tronco, de primer grado"
  },
  {
    "code": "T21.2",
    "description": "Quemadura del tronco, de segundo grado"
  },
  {
    "code": "T21.3",
    "description": "Quemadura del tronco, de tercer grado"
  },
  {
    "code": "T21.4",
    "description": "Corrosi√≥n del tronco, grado no especificado"
  },
  {
    "code": "T21.5",
    "description": "Corrosi√≥n del tronco, de primer grado"
  },
  {
    "code": "T21.6",
    "description": "Corrosi√≥n del tronco, de segundo grado"
  },
  {
    "code": "T21.7",
    "description": "Corrosi√≥n del tronco, de tercer grado"
  },
  {
    "code": "T22.0",
    "description": "Quemadura del hombro y miembro superior, grado no especificado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.1",
    "description": "Quemadura del hombro y miembro superior, de primer grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.2",
    "description": "Quemadura del hombro y miembro superior, de segundo grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.3",
    "description": "Quemadura del hombro y miembro superior, de tercer grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.4",
    "description": "Corrosi√≥n del hombro y miembro superior, grado no especificado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.5",
    "description": "Corrosi√≥n del hombro y miembro superior, de primer grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.6",
    "description": "Corrosi√≥n del hombro y miembro superior, de segundo grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T22.7",
    "description": "Corrosi√≥n del hombro y miembro superior, de tercer grado, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T23.0",
    "description": "Quemadura de la mu√±eca y de la mano, grado no especificado"
  },
  {
    "code": "T23.1",
    "description": "Quemadura de la mu√±eca y de la mano, de primer grado"
  },
  {
    "code": "T23.2",
    "description": "Quemadura de la mu√±eca y de la mano, de segundo grado"
  },
  {
    "code": "T23.3",
    "description": "Quemadura de la mu√±eca y de la mano, de tercer grado"
  },
  {
    "code": "T23.4",
    "description": "Corrosi√≥n de la mu√±eca y de la mano, grado no especificado"
  },
  {
    "code": "T23.5",
    "description": "Corrosi√≥n de la mu√±eca y de la mano, de primer grado"
  },
  {
    "code": "T23.6",
    "description": "Corrosi√≥n de la mu√±eca y de la mano, de segundo grado"
  },
  {
    "code": "T23.7",
    "description": "Corrosi√≥n de la mu√±eca y de la mano, de tercer grado"
  },
  {
    "code": "T24.0",
    "description": "Quemadura de la cadera y miembro inferior, grado no especificado, excepto tobillo y pie"
  },
  {
    "code": "T24.1",
    "description": "Quemadura de la cadera y miembro inferior, de primer grado, excepto tobillo y pie"
  },
  {
    "code": "T24.2",
    "description": "Quemadura de la cadera y miembro inferior, de segundo grado, excepto tobillo y pie"
  },
  {
    "code": "T24.3",
    "description": "Quemadura de la cadera y miembro inferior, de tercer grado, excepto tobillo y pie"
  },
  {
    "code": "T24.4",
    "description": "Corrosi√≥n de la cadera y miembro inferior, grado no especificado, excepto tobillo y pie"
  },
  {
    "code": "T24.5",
    "description": "Corrosi√≥n de la cadera y miembro inferior, de primer grado, excepto tobillo y pie"
  },
  {
    "code": "T24.6",
    "description": "Corrosi√≥n de la cadera y miembro inferior, de segundo grado, excepto tobillo y pie"
  },
  {
    "code": "T24.7",
    "description": "Corrosi√≥n de la cadera y miembro inferior, de tercer grado, excepto tobillo y pie"
  },
  {
    "code": "T25.0",
    "description": "Quemadura del tobillo y del pie, grado no especificado"
  },
  {
    "code": "T25.1",
    "description": "Quemadura del tobillo y del pie, de primer grado"
  },
  {
    "code": "T25.2",
    "description": "Quemadura del tobillo y del pie, de segundo grado"
  },
  {
    "code": "T25.3",
    "description": "Quemadura del tobillo y del pie, de tercer grado"
  },
  {
    "code": "T25.4",
    "description": "Corrosi√≥n del tobillo y del pie, grado no especificado"
  },
  {
    "code": "T25.5",
    "description": "Corrosi√≥n del tobillo y del pie, de primer grado"
  },
  {
    "code": "T25.6",
    "description": "Corrosi√≥n del tobillo y del pie, de segundo grado"
  },
  {
    "code": "T25.7",
    "description": "Corrosi√≥n del tobillo y del pie, de tercer grado"
  },
  {
    "code": "T26.0",
    "description": "Quemadura del p√°rpado y √°rea periocular"
  },
  {
    "code": "T26.1",
    "description": "Quemadura de la c√≥rnea y saco conjuntival"
  },
  {
    "code": "T26.2",
    "description": "Quemadura con ruptura y destrucci√≥n resultantes del globo ocular"
  },
  {
    "code": "T26.3",
    "description": "Quemadura de otras partes del ojo y sus anexos"
  },
  {
    "code": "T26.4",
    "description": "Quemadura del ojo y anexos, parte no especificada"
  },
  {
    "code": "T26.5",
    "description": "Corrosi√≥n del p√°rpado y √°rea periocular"
  },
  {
    "code": "T26.6",
    "description": "Corrosi√≥n de la c√≥rnea y saco conjuntival"
  },
  {
    "code": "T26.7",
    "description": "Corrosi√≥n con ruptura y destrucci√≥n resultantes del globo ocular"
  },
  {
    "code": "T26.8",
    "description": "Corrosi√≥n de otras partes del ojo y sus anexos"
  },
  {
    "code": "T26.9",
    "description": "Corrosi√≥n del ojo y sus anexos, parte no especificada"
  },
  {
    "code": "T27.0",
    "description": "Quemadura de la laringe y de la tr√°quea"
  },
  {
    "code": "T27.1",
    "description": "Quemadura que afecta la laringe y la tr√°quea con el pulm√≥n"
  },
  {
    "code": "T27.2",
    "description": "Quemadura de otras partes de las v√≠as respiratorias"
  },
  {
    "code": "T27.3",
    "description": "Quemadura de las v√≠as respiratorias, parte no especificada"
  },
  {
    "code": "T27.4",
    "description": "Corrosi√≥n de la laringe y de la tr√°quea"
  },
  {
    "code": "T27.5",
    "description": "Corrosi√≥n que afecta la laringe y la tr√°quea con el pulm√≥n"
  },
  {
    "code": "T27.6",
    "description": "Corrosi√≥n de otras partes de las v√≠as respiratorias"
  },
  {
    "code": "T27.7",
    "description": "Corrosi√≥n de las v√≠as respiratorias, parte no especificada"
  },
  {
    "code": "T28.0",
    "description": "Quemadura de la boca y de la faringe"
  },
  {
    "code": "T28.1",
    "description": "Quemadura del es√≥fago"
  },
  {
    "code": "T28.2",
    "description": "Quemadura de otras partes del tubo digestivo"
  },
  {
    "code": "T28.3",
    "description": "Quemadura de √≥rganos genitourinarios internos"
  },
  {
    "code": "T28.4",
    "description": "Quemadura de otros √≥rganos internos y de los no especificados"
  },
  {
    "code": "T28.5",
    "description": "Corrosi√≥n de la boca y de la faringe"
  },
  {
    "code": "T28.6",
    "description": "Corrosi√≥n del es√≥fago"
  },
  {
    "code": "T28.7",
    "description": "Corrosi√≥n de otras partes del tubo digestivo"
  },
  {
    "code": "T28.8",
    "description": "Corrosi√≥n de √≥rganos genitourinarios internos"
  },
  {
    "code": "T28.9",
    "description": "Corrosi√≥n de otros √≥rganos internos y de los no especificados"
  },
  {
    "code": "T29.0",
    "description": "Quemaduras de m√∫ltiples regiones, grado no especificado"
  },
  {
    "code": "T29.1",
    "description": "Quemaduras de m√∫ltiples regiones, mencionadas como de no m√°s de primer grado"
  },
  {
    "code": "T29.2",
    "description": "Quemaduras de m√∫ltiples regiones, mencionadas como de no m√°s de segundo grado"
  },
  {
    "code": "T29.3",
    "description": "Quemaduras m√∫ltiples, con menci√≥n al menos de una quemadura de tercer grado"
  },
  {
    "code": "T29.4",
    "description": "Corrosiones de m√∫ltiples regiones, grado no especificado"
  },
  {
    "code": "T29.5",
    "description": "Corrosiones m√∫ltiples, mencionadas como de no m√°s de primer grado"
  },
  {
    "code": "T29.6",
    "description": "Corrosiones m√∫ltiples, mencionadas como de no m√°s de segundo grado"
  },
  {
    "code": "T29.7",
    "description": "Corrosiones m√∫ltiples, con menci√≥n al menos de una corrosi√≥n de tercer grado"
  },
  {
    "code": "T30.0",
    "description": "Quemadura de regi√≥n del cuerpo y grado no especificados"
  },
  {
    "code": "T30.1",
    "description": "Quemadura de primer grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T30.2",
    "description": "Quemadura de segundo grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T30.3",
    "description": "Quemadura de tercer grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T30.4",
    "description": "Corrosi√≥n de regi√≥n del cuerpo y grado no especificados"
  },
  {
    "code": "T30.5",
    "description": "Corrosi√≥n de primer grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T30.6",
    "description": "Corrosi√≥n de segundo grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T30.7",
    "description": "Corrosi√≥n de tercer grado, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T31.0",
    "description": "Quemaduras que afectan menos del 10% de la superficie del cuerpo"
  },
  {
    "code": "T31.1",
    "description": "Quemaduras que afectan del 10 al 19% de la superficie del cuerpo"
  },
  {
    "code": "T31.2",
    "description": "Quemaduras que afectan del 20 al 29% de la superficie del cuerpo"
  },
  {
    "code": "T31.3",
    "description": "Quemaduras que afectan del 30 al 39% de la superficie del cuerpo"
  },
  {
    "code": "T31.4",
    "description": "Quemaduras que afectan del 40 al 49% de la superficie del cuerpo"
  },
  {
    "code": "T31.5",
    "description": "Quemaduras que afectan del 50 al 59% de la superficie del cuerpo"
  },
  {
    "code": "T31.6",
    "description": "Quemaduras que afectan del 60 al 69% de la superficie del cuerpo"
  },
  {
    "code": "T31.7",
    "description": "Quemaduras que afectan del 70 al 79% de la superficie del cuerpo"
  },
  {
    "code": "T31.8",
    "description": "Quemaduras que afectan del 80 al 89% de la superficie del cuerpo"
  },
  {
    "code": "T31.9",
    "description": "Quemaduras que afectan el 90% o m√°s de la superficie del cuerpo"
  },
  {
    "code": "T32.0",
    "description": "Corrosiones que afectan menos del 10% de la superficie del cuerpo"
  },
  {
    "code": "T32.1",
    "description": "Corrosiones que afectan del 10 al 19% de la superficie del cuerpo"
  },
  {
    "code": "T32.2",
    "description": "Corrosiones que afectan del 20 al 29% de la superficie del cuerpo"
  },
  {
    "code": "T32.3",
    "description": "Corrosiones que afectan del 30 al 39% de la superficie del cuerpo"
  },
  {
    "code": "T32.4",
    "description": "Corrosiones que afectan del 40 al 49% de la superficie del cuerpo"
  },
  {
    "code": "T32.5",
    "description": "Corrosiones que afectan del 50 al 59% de la superficie del cuerpo"
  },
  {
    "code": "T32.6",
    "description": "Corrosiones que afectan del 60 al 69% de la superficie del cuerpo"
  },
  {
    "code": "T32.7",
    "description": "Corrosiones que afectan del 70 al 79% de la superficie del cuerpo"
  },
  {
    "code": "T32.8",
    "description": "Corrosiones que afectan del 80 al 89% de la superficie del cuerpo"
  },
  {
    "code": "T32.9",
    "description": "Corrosiones que afectan el 90% o m√°s de la superficie del cuerpo"
  },
  {
    "code": "T33.0",
    "description": "Congelamiento superficial de la cabeza"
  },
  {
    "code": "T33.1",
    "description": "Congelamiento superficial del cuello"
  },
  {
    "code": "T33.2",
    "description": "Congelamiento superficial del t√≥rax"
  },
  {
    "code": "T33.3",
    "description": "Congelamiento superficial de la pared abdominal, regi√≥n lumbosacra y pelvis"
  },
  {
    "code": "T33.4",
    "description": "Congelamiento superficial del brazo"
  },
  {
    "code": "T33.5",
    "description": "Congelamiento superficial de la mu√±eca y de la mano"
  },
  {
    "code": "T33.6",
    "description": "Congelamiento superficial de la cadera y del muslo"
  },
  {
    "code": "T33.7",
    "description": "Congelamiento superficial de la rodilla y de la pierna"
  },
  {
    "code": "T33.8",
    "description": "Congelamiento superficial del tobillo y del pie"
  },
  {
    "code": "T33.9",
    "description": "Congelamiento superficial de otros sitios y de los no especificados"
  },
  {
    "code": "T34.0",
    "description": "Congelamiento con necrosis tisular de la cabeza"
  },
  {
    "code": "T34.1",
    "description": "Congelamiento con necrosis tisular del cuello"
  },
  {
    "code": "T34.2",
    "description": "Congelamiento con necrosis tisular del t√≥rax"
  },
  {
    "code": "T34.3",
    "description": "Congelamiento con necrosis tisular de la pared abdominal, regi√≥n lumbosacra y pelvis"
  },
  {
    "code": "T34.4",
    "description": "Congelamiento con necrosis tisular del brazo"
  },
  {
    "code": "T34.5",
    "description": "Congelamiento con necrosis tisular de la mu√±eca y de la mano"
  },
  {
    "code": "T34.6",
    "description": "Congelamiento con necrosis tisular de la cadera y del muslo"
  },
  {
    "code": "T34.7",
    "description": "Congelamiento con necrosis tisular de la rodilla y de la pierna"
  },
  {
    "code": "T34.8",
    "description": "Congelamiento con necrosis tisular del tobillo y del pie"
  },
  {
    "code": "T34.9",
    "description": "Congelamiento con necrosis tisular de otros sitios y de los no especificados"
  },
  {
    "code": "T35.0",
    "description": "Congelamiento superficial que afecta m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T35.1",
    "description": "Congelamiento con necrosis tisular que afecta m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T35.2",
    "description": "Congelamiento no especificado de la cabeza y del cuello"
  },
  {
    "code": "T35.3",
    "description": "Congelamiento no especificado del t√≥rax, del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "T35.4",
    "description": "Congelamiento no especificado del miembro superior"
  },
  {
    "code": "T35.5",
    "description": "Congelamiento no especificado del miembro inferior"
  },
  {
    "code": "T35.6",
    "description": "Congelamiento no especificado que afecta m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T35.7",
    "description": "Congelamiento no especificado, de sitio no especificado"
  },
  {
    "code": "T36.0",
    "description": "Envenenamiento por Penicilinas"
  },
  {
    "code": "T36.1",
    "description": "Envenenamiento por Cefalosporinas y otros antibi√≥ticos beta-lact√°micos"
  },
  {
    "code": "T36.2",
    "description": "Envenenamiento por Grupo del cloramfenicol"
  },
  {
    "code": "T36.3",
    "description": "Envenenamiento por Macr√≥lidos"
  },
  {
    "code": "T36.4",
    "description": "Envenenamiento por Tetraciclinas"
  },
  {
    "code": "T36.5",
    "description": "Envenenamiento por Aminogluc√≥sidos"
  },
  {
    "code": "T36.6",
    "description": "Envenenamiento por Rifamicinas"
  },
  {
    "code": "T36.7",
    "description": "Envenenamiento por Antibi√≥ticos antimic√≥ticos usados sist√©micamente"
  },
  {
    "code": "T36.8",
    "description": "Envenenamiento por Otros antibi√≥ticos sist√©micos"
  },
  {
    "code": "T36.9",
    "description": "Envenenamiento por Antibi√≥ticos sist√©micos, no especificados"
  },
  {
    "code": "T37.0",
    "description": "Envenenamiento por Sulfonamidas"
  },
  {
    "code": "T37.1",
    "description": "Envenenamiento por Drogas antimicobacterianas"
  },
  {
    "code": "T37.2",
    "description": "Envenenamiento por Antipal√∫dicos y drogas de acci√≥n contra otros protozoarios sangu√≠neos"
  },
  {
    "code": "T37.3",
    "description": "Envenenamiento por Otras drogas antiprotozoarias"
  },
  {
    "code": "T37.4",
    "description": "Envenenamiento por Antihelm√≠nticos"
  },
  {
    "code": "T37.5",
    "description": "Envenenamiento por Drogas antivirales"
  },
  {
    "code": "T37.8",
    "description": "Envenenamiento por Otros antiinfecciosos y antiparasitarios sist√©micos especificados"
  },
  {
    "code": "T37.9",
    "description": "Envenenamiento por Antiinfecciosos y antiparasitarios sist√©micos, no especificados"
  },
  {
    "code": "T38.0",
    "description": "Envenenamiento por Glucocorticoides y an√°logos sint√©ticos"
  },
  {
    "code": "T38.1",
    "description": "Envenenamiento por Hormonas tiroideas y sustitutos"
  },
  {
    "code": "T38.2",
    "description": "Envenenamiento por Drogas antitiroideas"
  },
  {
    "code": "T38.3",
    "description": "Envenenamiento por Insulina y drogas hipoglucemiantes orales [antidiab√©ticas]"
  },
  {
    "code": "T38.4",
    "description": "Envenenamiento por Anticonceptivos orales"
  },
  {
    "code": "T38.5",
    "description": "Envenenamiento por Otros estr√≥genos y progest√≥genos"
  },
  {
    "code": "T38.6",
    "description": "Envenenamiento por Antigonadotrofinas, antiestr√≥genos y antiandr√≥genos, no clasificados en otra parte"
  },
  {
    "code": "T38.7",
    "description": "Envenenamiento por Andr√≥genos y sus cong√©neres anab√≥licos"
  },
  {
    "code": "T38.8",
    "description": "Envenenamiento por Otras hormonas y sustitutos sint√©ticos y los no especificados"
  },
  {
    "code": "T38.9",
    "description": "Envenenamiento por Otros antagonistas de las hormonas y los no especificados"
  },
  {
    "code": "T39.0",
    "description": "Envenenamiento por Salicilatos"
  },
  {
    "code": "T39.1",
    "description": "Envenenamiento por Derivados del paraaminofenol"
  },
  {
    "code": "T39.2",
    "description": "Envenenamiento por Derivados de la pirazolona"
  },
  {
    "code": "T39.3",
    "description": "Envenenamiento por Otras drogas antiinflamatorias no esteroideas [DAINE]"
  },
  {
    "code": "T39.4",
    "description": "Envenenamiento por Antirreum√°ticos, no clasificados en otra parte"
  },
  {
    "code": "T39.8",
    "description": "Envenenamiento por Otros analg√©sicos no narc√≥ticos y antipir√©ticos, no clasificados en otra parte"
  },
  {
    "code": "T39.9",
    "description": "Envenenamiento por Analg√©sicos no narc√≥ticos, antipir√©ticos y antirreum√°ticos, no especificados"
  },
  {
    "code": "T40.0",
    "description": "Envenenamiento por Opio"
  },
  {
    "code": "T40.1",
    "description": "Envenenamiento por Hero√≠na"
  },
  {
    "code": "T40.2",
    "description": "Envenenamiento por Otros opi√°ceos"
  },
  {
    "code": "T40.3",
    "description": "Envenenamiento por Metadona"
  },
  {
    "code": "T40.4",
    "description": "Envenenamiento por Otros narc√≥ticos sint√©ticos"
  },
  {
    "code": "T40.5",
    "description": "Envenenamiento por Coca√≠na"
  },
  {
    "code": "T40.6",
    "description": "Envenenamiento por Otros narc√≥ticos y los no especificados"
  },
  {
    "code": "T40.7",
    "description": "Envenenamiento por Cannabis (derivados)"
  },
  {
    "code": "T40.8",
    "description": "Envenenamiento por Acido lis√©rgico [LSD]"
  },
  {
    "code": "T40.9",
    "description": "Envenenamiento por Otros psicodisl√©pticos y los no especificados [alucin√≥genos]"
  },
  {
    "code": "T41.0",
    "description": "Envenenamiento por Anest√©sicos por inhalaci√≥n"
  },
  {
    "code": "T41.1",
    "description": "Envenenamiento por Anest√©sicos intravenosos"
  },
  {
    "code": "T41.2",
    "description": "Envenenamiento por Otros anest√©sicos generales y los no especificados"
  },
  {
    "code": "T41.3",
    "description": "Envenenamiento por Anest√©sicos locales"
  },
  {
    "code": "T41.4",
    "description": "Envenenamiento por Anest√©sicos, no especificados"
  },
  {
    "code": "T41.5",
    "description": "Envenenamiento por Gases terap√©uticos"
  },
  {
    "code": "T42.0",
    "description": "Envenenamiento por Derivados de la hidanto√≠na"
  },
  {
    "code": "T42.1",
    "description": "Envenenamiento por Iminostilbenos"
  },
  {
    "code": "T42.2",
    "description": "Envenenamiento por Succinamidas y derivados de la oxazolidina"
  },
  {
    "code": "T42.3",
    "description": "Envenenamiento por Barbit√∫ricos"
  },
  {
    "code": "T42.4",
    "description": "Envenenamiento por Benzodiazepinas"
  },
  {
    "code": "T42.5",
    "description": "Envenenamiento por Antiepil√©pticos mixtos, no clasificados en otra parte"
  },
  {
    "code": "T42.6",
    "description": "Envenenamiento por Otros antiepil√©pticos y drogas hipn√≥tico-sedantes"
  },
  {
    "code": "T42.7",
    "description": "Envenenamiento por Antiepil√©pticos y drogas hipn√≥tico-sedantes, no especificados"
  },
  {
    "code": "T42.8",
    "description": "Envenenamiento por Drogas antiparkinsonianas y otros depresores del tono muscular central"
  },
  {
    "code": "T43.0",
    "description": "Envenenamiento por Antidepresivos tric√≠clicos y tetrac√≠clicos"
  },
  {
    "code": "T43.1",
    "description": "Envenenamiento por Antidepresivos inhibidores de la monoaminoxidasa"
  },
  {
    "code": "T43.2",
    "description": "Envenenamiento por Otros antidepresivos y los no especificados"
  },
  {
    "code": "T43.3",
    "description": "Envenenamiento por Antipsic√≥ticos y neurol√©pticos fenotiac√≠nicos"
  },
  {
    "code": "T43.4",
    "description": "Envenenamiento por Butirofenona y neurol√©pticos tioxant√©nicos"
  },
  {
    "code": "T43.5",
    "description": "Envenenamiento por Otros antipsic√≥ticos y neurol√©pticos y los no especificados"
  },
  {
    "code": "T43.6",
    "description": "Envenenamiento por Psicoestimulantes con abuso potencial"
  },
  {
    "code": "T43.8",
    "description": "Envenenamiento por Otras drogas psicotr√≥picas, no clasificadas en otra parte"
  },
  {
    "code": "T43.9",
    "description": "Envenenamiento por Droga psicotr√≥pica, no especificada"
  },
  {
    "code": "T44.0",
    "description": "Envenenamiento por Agentes anticolinesterasa"
  },
  {
    "code": "T44.1",
    "description": "Envenenamiento por Otros parasimpaticomim√©ticos [colin√©rgicos]"
  },
  {
    "code": "T44.2",
    "description": "Envenenamiento por Drogas bloqueadoras ganglionares, no clasificadas en otra parte"
  },
  {
    "code": "T44.3",
    "description": ""
  },
  {
    "code": "T44.4",
    "description": "Envenenamiento por Agonistas, predominantemente alfa-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "T44.5",
    "description": "Envenenamiento por Agonistas, predominantemente beta-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "T44.6",
    "description": "Envenenamiento por Antagonistas alfa-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "T44.7",
    "description": "Envenenamiento por Antagonistas beta-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "T44.8",
    "description": "Envenenamiento por Agentes de acci√≥n central y bloqueadores neuronales adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "T44.9",
    "description": "Envenenamiento por Otras drogas y las no especificadas que afectan principalmente el sistema nervioso aut√≥nomo"
  },
  {
    "code": "T45.0",
    "description": "Envenenamiento por Drogas antial√©rgicas y antiem√©ticas"
  },
  {
    "code": "T45.1",
    "description": "Envenenamiento por Drogas antineopl√°sicas e inmunosupresoras"
  },
  {
    "code": "T45.2",
    "description": "Envenenamiento por Vitaminas, no clasificadas en otra parte"
  },
  {
    "code": "T45.3",
    "description": "Envenenamiento por Enzimas, no clasificadas en otra parte"
  },
  {
    "code": "T45.4",
    "description": "Envenenamiento por Hierro y sus compuestos"
  },
  {
    "code": "T45.5",
    "description": "Envenenamiento por Anticoagulantes"
  },
  {
    "code": "T45.6",
    "description": "Envenenamiento por Drogas que afectan la fibrin√≥lisis"
  },
  {
    "code": "T45.7",
    "description": "Envenenamiento por Antagonistas de anticoagulantes, vitamina K y otros coagulantes"
  },
  {
    "code": "T45.8",
    "description": "Envenenamiento por Otros agentes principalmente sist√©micos y hematol√≥gicos"
  },
  {
    "code": "T45.9",
    "description": "Envenenamiento por Agentes principalmente sist√©micos y hematol√≥gicos, no especificados"
  },
  {
    "code": "T46.0",
    "description": "Envenenamiento por Gluc√≥sidos cardiot√≥nicos y medicamentos de acci√≥n similar"
  },
  {
    "code": "T46.1",
    "description": "Envenenamiento por Bloqueadores del canal del calcio"
  },
  {
    "code": "T46.2",
    "description": "Envenenamiento por Otras drogas antiarr√≠tmicas, no clasificadas en otra parte"
  },
  {
    "code": "T46.3",
    "description": "Envenenamiento por Vasodilatadores coronarios, no clasificados en otra parte"
  },
  {
    "code": "T46.4",
    "description": "Envenenamiento por Inhibidores de la enzima convertidora de la angiotensina"
  },
  {
    "code": "T46.5",
    "description": "Envenenamiento por Otras drogas antihipertensivas, no clasificadas en otra parte"
  },
  {
    "code": "T46.6",
    "description": "Envenenamiento por Drogas antilip√©micas y antiarterioscler√≥ticas"
  },
  {
    "code": "T46.7",
    "description": "Envenenamiento por Vasodilatadores perif√©ricos"
  },
  {
    "code": "T46.8",
    "description": "Envenenamiento por Drogas antivaricosas, inclusive agentes esclerosantes"
  },
  {
    "code": "T46.9",
    "description": "Envenenamiento por Otros agentes y los no especificados que afectan principalmente el sistema cardiovascular"
  },
  {
    "code": "T47.0",
    "description": "Envenenamiento por Antagonistas del receptor H2 de histamina"
  },
  {
    "code": "T47.1",
    "description": "Envenenamiento por Otras drogas anti√°cidas y que inhiben la secreci√≥n g√°strica"
  },
  {
    "code": "T47.2",
    "description": "Envenenamiento por Laxantes estimulantes"
  },
  {
    "code": "T47.3",
    "description": "Envenenamiento por Laxantes salinos y osm√≥ticos"
  },
  {
    "code": "T47.4",
    "description": "Envenenamiento por Otros laxantes"
  },
  {
    "code": "T47.5",
    "description": "Envenenamiento por Digestivos"
  },
  {
    "code": "T47.6",
    "description": "Envenenamiento por Drogas antidiarreicas"
  },
  {
    "code": "T47.7",
    "description": "Envenenamiento por Em√©ticos"
  },
  {
    "code": "T47.8",
    "description": "Envenenamiento por Otros agentes que afectan principalmente el sistema gastrointestinal"
  },
  {
    "code": "T47.9",
    "description": "Envenenamiento por Agentes no especificados que afectan principalmente el sistema gastrointestinal"
  },
  {
    "code": "T48.0",
    "description": "Envenenamiento por Drogas oxit√≥cicas"
  },
  {
    "code": "T48.1",
    "description": "Envenenamiento por Relajantes musculoesquel√©ticos [agentes bloqueadores neuromusculares]"
  },
  {
    "code": "T48.2",
    "description": "Envenenamiento por Otros medicamentos y los no especificados de acci√≥n principal sobre los m√∫sculos"
  },
  {
    "code": "T48.3",
    "description": "Envenenamiento por Antitus√≠genos"
  },
  {
    "code": "T48.4",
    "description": "Envenenamiento por Expectorantes"
  },
  {
    "code": "T48.5",
    "description": "Envenenamiento por Drogas contra el catarro com√∫n"
  },
  {
    "code": "T48.6",
    "description": "Envenenamiento por Antiasm√°ticos, no clasificados en otra parte"
  },
  {
    "code": "T48.7",
    "description": "Envenenamiento por Otros agentes y los no especificados de acci√≥n principal sobre el sistema respiratorio"
  },
  {
    "code": "T49.0",
    "description": "Envenenamiento por Drogas locales antimic√≥ticas, antiinfecciosas y antiinflamatorias, no clasificadas en otra parte"
  },
  {
    "code": "T49.1",
    "description": "Envenenamiento por Antiprur√≠ticos"
  },
  {
    "code": "T49.2",
    "description": "Envenenamiento por Astringentes y detergentes locales"
  },
  {
    "code": "T49.3",
    "description": "Envenenamiento por Emolientes, demulcentes y protectores"
  },
  {
    "code": "T49.4",
    "description": "Envenenamiento por Queratol√≠ticos, queratopl√°sticos, drogas y otras preparaciones para el tratamiento del cabello"
  },
  {
    "code": "T49.5",
    "description": "Envenenamiento por Drogas y preparaciones oftalmol√≥gicas"
  },
  {
    "code": "T49.6",
    "description": "Envenenamiento por Drogas y preparaciones otorrinolaringol√≥gicas"
  },
  {
    "code": "T49.7",
    "description": "Envenenamiento por Drogas dentales, aplicadas t√≥picamente"
  },
  {
    "code": "T49.8",
    "description": "Envenenamiento por Otros agentes t√≥picos"
  },
  {
    "code": "T49.9",
    "description": "Envenenamiento por Agentes t√≥picos, no especificados"
  },
  {
    "code": "T50.0",
    "description": "Envenenamiento por Mineralocorticoides y sus antagonistas"
  },
  {
    "code": "T50.1",
    "description": "Envenenamiento por Diur√©ticos del asa [dintel alto]"
  },
  {
    "code": "T50.2",
    "description": "Envenenamiento por Inhibidores de la anhidrasa del √°cido carb√≥nico, benzotiazidas y otros diur√©ticos"
  },
  {
    "code": "T50.3",
    "description": "Envenenamiento por Agentes del equilibrio hidrol√≠tico, electrol√≠tico y cal√≥rico"
  },
  {
    "code": "T50.4",
    "description": "Envenenamiento por Drogas que afectan el metabolismo del √°cido √∫rico"
  },
  {
    "code": "T50.5",
    "description": "Envenenamiento por Depresores del apetito"
  },
  {
    "code": "T50.6",
    "description": "Envenenamiento por Ant√≠dotos y agentes quelantes, no clasificados en otra parte"
  },
  {
    "code": "T50.7",
    "description": "Envenenamiento por Anal√©pticos y antagonistas del opio"
  },
  {
    "code": "T50.8",
    "description": "Envenenamiento por Agentes diagn√≥sticos"
  },
  {
    "code": "T50.9",
    "description": "Envenenamiento por Otras drogas y sustancias biol√≥gicas, y las no especificadas"
  },
  {
    "code": "T51.0",
    "description": "Envenenamiento por Etanol"
  },
  {
    "code": "T51.1",
    "description": "Envenenamiento por Metanol"
  },
  {
    "code": "T51.2",
    "description": "Envenenamiento por Propanol-2"
  },
  {
    "code": "T51.3",
    "description": "Envenenamiento por Licor de alcohol insuficientemente destilado"
  },
  {
    "code": "T51.8",
    "description": "Envenenamiento por Otros alcoholes"
  },
  {
    "code": "T51.9",
    "description": "Envenenamiento por Alcohol, no especificado"
  },
  {
    "code": "T52.0",
    "description": "Envenenamiento por Productos del petr√≥leo"
  },
  {
    "code": "T52.1",
    "description": "Envenenamiento por Benceno"
  },
  {
    "code": "T52.2",
    "description": "Envenenamiento por Hom√≥logos del benceno"
  },
  {
    "code": "T52.3",
    "description": "Envenenamiento por Glicoles"
  },
  {
    "code": "T52.4",
    "description": "Envenenamiento por Cetonas"
  },
  {
    "code": "T52.8",
    "description": "Envenenamiento por Otros disolventes org√°nicos"
  },
  {
    "code": "T52.9",
    "description": "Envenenamiento por Disolventes org√°nicos, no especificados"
  },
  {
    "code": "T53.0",
    "description": "Envenenamiento por Tetracloruro de carbono"
  },
  {
    "code": "T53.1",
    "description": "Envenenamiento por Cloroformo"
  },
  {
    "code": "T53.2",
    "description": "Envenenamiento por Tricloroetileno"
  },
  {
    "code": "T53.3",
    "description": "Envenenamiento por Tetracloroetileno"
  },
  {
    "code": "T53.4",
    "description": "Envenenamiento por Dicloroetano"
  },
  {
    "code": "T53.5",
    "description": "Envenenamiento por Clorofluorocarburos"
  },
  {
    "code": "T53.6",
    "description": "Envenenamiento por Otros derivados halogenados de hidrocarburos alif√°ticos"
  },
  {
    "code": "T53.7",
    "description": "Envenenamiento por Otros derivados halogenados de hidrocarburos arom√°ticos"
  },
  {
    "code": "T53.9",
    "description": "Envenenamiento por Derivados halogenados de hidrocarburos alif√°ticos y arom√°ticos, no especificados"
  },
  {
    "code": "T54.0",
    "description": "Envenenamiento por Fenol y hom√≥logos del fenol"
  },
  {
    "code": "T54.1",
    "description": "Envenenamiento por Otros compuestos org√°nicos corrosivos"
  },
  {
    "code": "T54.2",
    "description": "Envenenamiento por Acidos corrosivos y sustancias √°cidas similares"
  },
  {
    "code": "T54.3",
    "description": "Envenenamiento por Alcalis c√°usticos y sustancias alcalinas similares"
  },
  {
    "code": "T54.9",
    "description": "Envenenamiento por Efecto t√≥xico de sustancia corrosiva, no especificada"
  },
  {
    "code": "T56.0",
    "description": "Envenenamiento por Plomo y sus compuestos"
  },
  {
    "code": "T56.1",
    "description": "Envenenamiento por Mercurio y sus compuestos"
  },
  {
    "code": "T56.2",
    "description": "Envenenamiento por Cromo y sus compuestos"
  },
  {
    "code": "T56.3",
    "description": "Envenenamiento por Cadmio y sus compuestos"
  },
  {
    "code": "T56.4",
    "description": "Envenenamiento por Cobre y sus compuestos"
  },
  {
    "code": "T56.5",
    "description": "Envenenamiento por Zinc y sus compuestos"
  },
  {
    "code": "T56.6",
    "description": "Envenenamiento por Esta√±o y sus compuestos"
  },
  {
    "code": "T56.7",
    "description": "Envenenamiento por Berilio y sus compuestos"
  },
  {
    "code": "T56.8",
    "description": "Envenenamiento por Otros metales"
  },
  {
    "code": "T56.9",
    "description": "Envenenamiento por Metal, no especificado"
  },
  {
    "code": "T57.0",
    "description": "Envenenamiento por Ars√©nico y sus compuestos"
  },
  {
    "code": "T57.1",
    "description": "Envenenamiento por F√≥sforo y sus compuestos"
  },
  {
    "code": "T57.2",
    "description": "Envenenamiento por Manganeso y sus compuestos"
  },
  {
    "code": "T57.3",
    "description": "Envenenamiento por Acido cianh√≠drico"
  },
  {
    "code": "T57.8",
    "description": "Envenenamiento por Otras sustancias inorg√°nicas, especificadas"
  },
  {
    "code": "T57.9",
    "description": "Envenenamiento por Sustancia inorg√°nica, no especificada"
  },
  {
    "code": "T59.0",
    "description": "Envenenamiento por Oxidos de nitr√≥geno"
  },
  {
    "code": "T59.1",
    "description": "Envenenamiento por Di√≥xido de sulfuro"
  },
  {
    "code": "T59.2",
    "description": "Envenenamiento por Formaldeh√≠do"
  },
  {
    "code": "T59.3",
    "description": "Envenenamiento por Gas lacrim√≥geno"
  },
  {
    "code": "T59.4",
    "description": "Envenenamiento por Cloro gaseoso"
  },
  {
    "code": "T59.5",
    "description": "Envenenamiento por Gas de fl√∫or y fluoruro de hidr√≥geno"
  },
  {
    "code": "T59.6",
    "description": "Envenenamiento por Sulfuro de hidr√≥geno"
  },
  {
    "code": "T59.7",
    "description": "Envenenamiento por Di√≥xido de carbono"
  },
  {
    "code": "T59.8",
    "description": "Envenenamiento por Otros gases, humos y vapores especificados"
  },
  {
    "code": "T59.9",
    "description": "Envenenamiento por Gases, humos y vapores no especificados"
  },
  {
    "code": "T60.0",
    "description": "Envenenamiento por Insecticidas organofosforados y carbamatos"
  },
  {
    "code": "T60.1",
    "description": "Envenenamiento por Insecticidas halogenados"
  },
  {
    "code": "T60.2",
    "description": "Envenenamiento por Otros insecticidas"
  },
  {
    "code": "T60.3",
    "description": "Envenenamiento por Herbicidas y fungicidas"
  },
  {
    "code": "T60.4",
    "description": "Envenenamiento por Rodenticidas"
  },
  {
    "code": "T60.8",
    "description": "Envenenamiento por Otros plaguicidas"
  },
  {
    "code": "T60.9",
    "description": "Envenenamiento por Plaguicida, no especificado"
  },
  {
    "code": "T61.0",
    "description": "Envenenamiento ciguatero por pescado"
  },
  {
    "code": "T61.1",
    "description": "Envenenamiento escombroideo por pescado"
  },
  {
    "code": "T61.2",
    "description": "Envenenamiento por Otros envenenamientos por pescados y mariscos"
  },
  {
    "code": "T61.8",
    "description": "Envenenamiento por Efecto t√≥xico de otros alimentos marinos"
  },
  {
    "code": "T61.9",
    "description": "Envenenamiento por Efecto t√≥xico de alimentos marinos no especificados"
  },
  {
    "code": "T62.0",
    "description": "Envenenamiento por Hongos ingeridos"
  },
  {
    "code": "T62.1",
    "description": "Envenenamiento por Bayas ingeridas"
  },
  {
    "code": "T62.2",
    "description": "Envenenamiento por Otra(s) (partes de) planta(s) ingerida(s)"
  },
  {
    "code": "T62.8",
    "description": "Envenenamiento por Otras sustancias nocivas especificadas ingeridas como alimento"
  },
  {
    "code": "T62.9",
    "description": "Envenenamiento por Sustancia nociva ingerida como alimento, no especificada"
  },
  {
    "code": "T63.0",
    "description": "Envenenamiento por Veneno de serpiente"
  },
  {
    "code": "T63.1",
    "description": "Envenenamiento por Veneno de otros reptiles"
  },
  {
    "code": "T63.2",
    "description": "Envenenamiento por Veneno de escorpi√≥n"
  },
  {
    "code": "T63.3",
    "description": "Envenenamiento por Veneno de ara√±as"
  },
  {
    "code": "T63.4",
    "description": "Envenenamiento por Veneno de otros artr√≥podos"
  },
  {
    "code": "T63.5",
    "description": "Envenenamiento por Efecto t√≥xico del contacto con peces"
  },
  {
    "code": "T63.6",
    "description": "Envenenamiento por Efecto t√≥xico del contacto con otros animales marinos"
  },
  {
    "code": "T63.8",
    "description": "Envenenamiento por Efectos t√≥xicos del contacto con otros animales venenosos"
  },
  {
    "code": "T63.9",
    "description": "Envenenamiento por Efecto t√≥xico del contacto con animal venenoso no especificado"
  },
  {
    "code": "T65.0",
    "description": "Envenenamiento por Cianuro"
  },
  {
    "code": "T65.1",
    "description": "Envenenamiento por Estricnina y sus sales"
  },
  {
    "code": "T65.2",
    "description": "Envenenamiento por Tabaco y nicotina"
  },
  {
    "code": "T65.3",
    "description": "Envenenamiento por Nitroderivados y aminoderivados del benceno y sus hom√≥logos"
  },
  {
    "code": "T65.4",
    "description": "Envenenamiento por Bisulfuro de carbono"
  },
  {
    "code": "T65.5",
    "description": "Envenenamiento por Nitroglicerina y otros √°cidos y √©steres n√≠tricos"
  },
  {
    "code": "T65.6",
    "description": "Envenenamiento por Pinturas y colorantes, no clasificados en otra parte"
  },
  {
    "code": "T65.8",
    "description": "Envenenamiento por Efectos t√≥xicos de otras sustancias especificadas"
  },
  {
    "code": "T65.9",
    "description": "Envenenamiento por Efecto t√≥xico de sustancia no especificada"
  },
  {
    "code": "T67.0",
    "description": "Golpe de calor e insolaci√≥n"
  },
  {
    "code": "T67.1",
    "description": "S√≠ncope por calor"
  },
  {
    "code": "T67.2",
    "description": "Calambre por calor"
  },
  {
    "code": "T67.3",
    "description": "Agotamiento por calor, anhidr√≥tico"
  },
  {
    "code": "T67.4",
    "description": "Agotamiento por calor debido a depleci√≥n de sal"
  },
  {
    "code": "T67.5",
    "description": "Agotamiento por calor, no especificado"
  },
  {
    "code": "T67.6",
    "description": "Fatiga por calor, transitoria"
  },
  {
    "code": "T67.7",
    "description": "Edema por calor"
  },
  {
    "code": "T67.8",
    "description": "Otros efectos del calor y de la luz"
  },
  {
    "code": "T67.9",
    "description": "Efecto del calor y de la luz, no especificado"
  },
  {
    "code": "T69.0",
    "description": "Mano y pie de inmersi√≥n"
  },
  {
    "code": "T69.1",
    "description": "Saba√±√≥n(es)"
  },
  {
    "code": "T69.8",
    "description": "Otros efectos especificados de la reducci√≥n de la temperatura"
  },
  {
    "code": "T69.9",
    "description": "Efecto de la reducci√≥n de la temperatura, no especificado"
  },
  {
    "code": "T70.0",
    "description": "Barotrauma ot√≠tico"
  },
  {
    "code": "T70.1",
    "description": "Barotrauma sinusal"
  },
  {
    "code": "T70.2",
    "description": "Otros efectos y los no especificados de la gran altitud"
  },
  {
    "code": "T70.3",
    "description": "Enfermedad por descompresi√≥n [de los cajones sumergidos]"
  },
  {
    "code": "T70.4",
    "description": "Efectos de l√≠quidos con alta presi√≥n"
  },
  {
    "code": "T70.8",
    "description": "Otros efectos de la presi√≥n del aire y del agua"
  },
  {
    "code": "T70.9",
    "description": "Efecto de la presi√≥n del aire y del agua, no especificado"
  },
  {
    "code": "T73.0",
    "description": "Efectos del hambre"
  },
  {
    "code": "T73.1",
    "description": "Efectos de la sed"
  },
  {
    "code": "T73.2",
    "description": "Agotamiento debido a exposici√≥n a la intemperie"
  },
  {
    "code": "T73.3",
    "description": "Agotamiento debido a esfuerzo excesivo"
  },
  {
    "code": "T73.8",
    "description": "Otros efectos de privaci√≥n"
  },
  {
    "code": "T73.9",
    "description": "Efectos de privaci√≥n, no especificados"
  },
  {
    "code": "T74.0",
    "description": "Negligencia o abandono"
  },
  {
    "code": "T74.1",
    "description": "Abuso f√≠sico"
  },
  {
    "code": "T74.2",
    "description": "Abuso sexual"
  },
  {
    "code": "T74.3",
    "description": "Abuso psicol√≥gico"
  },
  {
    "code": "T74.8",
    "description": "Otros s√≠ndromes del maltrato"
  },
  {
    "code": "T74.9",
    "description": "S√≠ndrome del maltrato, no especificado"
  },
  {
    "code": "T75.0",
    "description": "Efectos del rayo"
  },
  {
    "code": "T75.1",
    "description": "Ahogamiento y sumersi√≥n no mortal"
  },
  {
    "code": "T75.2",
    "description": "Efectos de la vibraci√≥n"
  },
  {
    "code": "T75.3",
    "description": "Mal del movimiento"
  },
  {
    "code": "T75.4",
    "description": "Efectos de la corriente el√©ctrica"
  },
  {
    "code": "T75.8",
    "description": "Otros efectos especificados de causas externas"
  },
  {
    "code": "T78.0",
    "description": "Choque anafil√°ctico debido a reacci√≥n adversa a alimentos"
  },
  {
    "code": "T78.1",
    "description": "Otra reacci√≥n adversa a alimentos, no clasificada en otra parte"
  },
  {
    "code": "T78.2",
    "description": "Choque anafil√°ctico, no especificado"
  },
  {
    "code": "T78.3",
    "description": "Edema angioneur√≥tico"
  },
  {
    "code": "T78.4",
    "description": "Alergia no especificada"
  },
  {
    "code": "T78.8",
    "description": "Otros efectos adversos, no clasificados en otra parte"
  },
  {
    "code": "T78.9",
    "description": "Efecto adverso no especificado"
  },
  {
    "code": "T79.0",
    "description": "Embolia gaseosa (traum√°tica)"
  },
  {
    "code": "T79.1",
    "description": "Embolia grasa (traum√°tica)"
  },
  {
    "code": "T79.2",
    "description": "Hemorragia traum√°tica secundaria y recurrente"
  },
  {
    "code": "T79.3",
    "description": "Infecci√≥n postraum√°tica de herida, no clasificada en otra parte"
  },
  {
    "code": "T79.4",
    "description": "Choque traum√°tico"
  },
  {
    "code": "T79.5",
    "description": "Anuria traum√°tica"
  },
  {
    "code": "T79.6",
    "description": "Isquemia traum√°tica de m√∫sculo"
  },
  {
    "code": "T79.7",
    "description": "Enfisema subcut√°neo traum√°tico"
  },
  {
    "code": "T79.8",
    "description": "Otras complicaciones precoces de los traumatismos"
  },
  {
    "code": "T79.9",
    "description": "Complicaciones precoces no especificadas de los traumatismos"
  },
  {
    "code": "T80.0",
    "description": "Embolia gaseosa consecutiva a infusi√≥n, transfusi√≥n e inyecci√≥n terap√©utica"
  },
  {
    "code": "T80.1",
    "description": "Complicaciones vasculares consecutivas a infusi√≥n, transfusi√≥n e inyecci√≥n terap√©utica"
  },
  {
    "code": "T80.2",
    "description": "Infecciones consecutivas a infusi√≥n, transfusi√≥n e inyecci√≥n terap√©utica"
  },
  {
    "code": "T80.3",
    "description": "Reacci√≥n de incompatibilidad al grupo ABO"
  },
  {
    "code": "T80.4",
    "description": "Reacci√≥n de incompatibilidad a Rh"
  },
  {
    "code": "T80.5",
    "description": "Choque anafil√°ctico debido a suero"
  },
  {
    "code": "T80.6",
    "description": "Otras reacciones al suero"
  },
  {
    "code": "T80.8",
    "description": "Otras complicaciones consecutivas a infusi√≥n, transfusi√≥n, e inyecci√≥n terap√©utica"
  },
  {
    "code": "T80.9",
    "description": "Complicaciones no especificadas consecutivas a infusi√≥n, transfusi√≥n e inyecci√≥n terap√©utica"
  },
  {
    "code": "T81.0",
    "description": "Hemorragia y hematoma que complican un procedimiento, no clasificados en otra parte"
  },
  {
    "code": "T81.1",
    "description": "Choque durante o resultante de un procedimiento, no clasificado en otra parte"
  },
  {
    "code": "T81.2",
    "description": "Punci√≥n o laceraci√≥n accidental durante un procedimiento, no clasificadas en otra parte"
  },
  {
    "code": "T81.3",
    "description": "Desgarro de herida operatoria, no clasificado en otra parte"
  },
  {
    "code": "T81.4",
    "description": "Infecci√≥n consecutiva a procedimiento, no clasificada en otra parte"
  },
  {
    "code": "T81.5",
    "description": "Cuerpo extra√±o dejado accidentalmente en cavidad corporal o en herida operatoria consecutiva a procedimiento"
  },
  {
    "code": "T81.6",
    "description": "Reacci√≥n aguda a sustancia extra√±a dejada accidentalmente durante un procedimiento"
  },
  {
    "code": "T81.7",
    "description": "Complicaciones vasculares consecutivas a procedimiento, no clasificadas en otra parte"
  },
  {
    "code": "T81.8",
    "description": "Otras complicaciones de procedimientos, no clasificadas en otra parte"
  },
  {
    "code": "T81.9",
    "description": "Complicaci√≥n de procedimientos, no especificada"
  },
  {
    "code": "T82.0",
    "description": "Complicaci√≥n mec√°nica de pr√≥tesis de v√°lvula card√≠aca"
  },
  {
    "code": "T82.1",
    "description": "Complicaci√≥n mec√°nica de dispositivo electr√≥nico card√≠aco"
  },
  {
    "code": "T82.2",
    "description": "Complicaci√≥n mec√°nica de derivaci√≥n de arteria coronaria e injerto valvular"
  },
  {
    "code": "T82.3",
    "description": "Complicaci√≥n mec√°nica de otros injertos vasculares"
  },
  {
    "code": "T82.4",
    "description": "Complicaci√≥n mec√°nica de cat√©ter para di√°lisis vascular"
  },
  {
    "code": "T82.5",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos e implantes cardiovasculares"
  },
  {
    "code": "T82.6",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a pr√≥tesis de v√°lvula card√≠aca"
  },
  {
    "code": "T82.7",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a otros dispositivos, implantes e injertos cardiovasculares"
  },
  {
    "code": "T82.8",
    "description": "Otras complicaciones de dispositivos prot√©sicos, implantes e injertos cardiovasculares"
  },
  {
    "code": "T82.9",
    "description": "Complicaci√≥n no especificada de dispositivo prot√©sico, implante e injerto cardiovascular"
  },
  {
    "code": "T83.0",
    "description": "Complicaci√≥n mec√°nica de cat√©ter urinario (fijo)"
  },
  {
    "code": "T83.1",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos e implantes urinarios"
  },
  {
    "code": "T83.2",
    "description": "Complicaci√≥n mec√°nica de injerto en √≥rgano urinario"
  },
  {
    "code": "T83.3",
    "description": "Complicaci√≥n mec√°nica de dispositivo anticonceptivo intrauterino"
  },
  {
    "code": "T83.4",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos, implantes e injertos en el tracto genital"
  },
  {
    "code": "T83.5",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a dispositivo prot√©sico, implante e injerto en el sistema urinario"
  },
  {
    "code": "T83.6",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a dispositivo prot√©sico, implante e injerto en el tracto genital"
  },
  {
    "code": "T83.8",
    "description": "Otras complicaciones de dispositivos prot√©sicos, implantes e injertos genitourinarios"
  },
  {
    "code": "T83.9",
    "description": "Complicaci√≥n no especificada de dispositivo prot√©sico, implante e injerto genitourinario"
  },
  {
    "code": "T84.0",
    "description": "Complicaci√≥n mec√°nica de pr√≥tesis articular interna"
  },
  {
    "code": "T84.1",
    "description": "Complicaci√≥n mec√°nica de dispositivo de fijaci√≥n interna de huesos de un miembro"
  },
  {
    "code": "T84.2",
    "description": "Complicaci√≥n mec√°nica de dispositivo de fijaci√≥n interna de otros huesos"
  },
  {
    "code": "T84.3",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos √≥seos, implantes e injertos"
  },
  {
    "code": "T84.4",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos prot√©sicos, implantes e injertos ortop√©dicos internos"
  },
  {
    "code": "T84.5",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a pr√≥tesis articular interna"
  },
  {
    "code": "T84.6",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a dispositivo de fijaci√≥n interna [cualquier sitio]"
  },
  {
    "code": "T84.7",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a otros dispositivos prot√©sicos, implantes e injertos ortop√©dicos internos"
  },
  {
    "code": "T84.8",
    "description": "Otras complicaciones de dispositivos prot√©sicos, implantes e injertos ortop√©dicos internos"
  },
  {
    "code": "T84.9",
    "description": "Complicaciones no especificadas de dispositivos prot√©sicos, implantes e injertos ortop√©dicos internos"
  },
  {
    "code": "T85.0",
    "description": "Complicaci√≥n mec√°nica de derivaci√≥n (anastom√≥tica) ventricular intracraneal"
  },
  {
    "code": "T85.1",
    "description": "Complicaci√≥n mec√°nica de implante de estimulador electr√≥nico del sistema nervioso"
  },
  {
    "code": "T85.2",
    "description": "Complicaci√≥n mec√°nica de lentes intraoculares"
  },
  {
    "code": "T85.3",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos prot√©sicos, implantes e injertos oculares"
  },
  {
    "code": "T85.4",
    "description": "Complicaci√≥n mec√°nica de pr√≥tesis e implante de mama"
  },
  {
    "code": "T85.5",
    "description": "Complicaci√≥n mec√°nica de dispositivo prot√©sico, implante e injerto gastrointestinal"
  },
  {
    "code": "T85.6",
    "description": "Complicaci√≥n mec√°nica de otros dispositivos prot√©sicos, implantes e injertos internos especificados"
  },
  {
    "code": "T85.7",
    "description": "Infecci√≥n y reacci√≥n inflamatoria debidas a otros dispositivos prot√©sicos, implantes e injertos internos"
  },
  {
    "code": "T85.8",
    "description": "Otras complicaciones de dispositivos prot√©sicos, implantes e injertos internos, no clasificadas en otra parte"
  },
  {
    "code": "T85.9",
    "description": "Complicaci√≥n no especificada de dispositivo prot√©sico, implante e injerto interno"
  },
  {
    "code": "T86.0",
    "description": "Rechazo de trasplante de m√©dula √≥sea"
  },
  {
    "code": "T86.1",
    "description": "Falla y rechazo de trasplante de ri√±√≥n"
  },
  {
    "code": "T86.2",
    "description": "Falla y rechazo de trasplante de coraz√≥n"
  },
  {
    "code": "T86.3",
    "description": "Falla y rechazo de trasplante de pulm√≥n-coraz√≥n"
  },
  {
    "code": "T86.4",
    "description": "Falla y rechazo de trasplante de h√≠gado"
  },
  {
    "code": "T86.8",
    "description": "Falla y rechazo de otros √≥rganos y tejidos trasplantados"
  },
  {
    "code": "T86.9",
    "description": "Falla y rechazo de trasplante de √≥rgano y tejido no especificado"
  },
  {
    "code": "T87.0",
    "description": "Complicaciones de la reinserci√≥n (de parte) de extremidad superior"
  },
  {
    "code": "T87.1",
    "description": "Complicaciones de la reinserci√≥n (de parte) de extremidad inferior"
  },
  {
    "code": "T87.2",
    "description": "Complicaciones de otras partes del cuerpo reinsertadas"
  },
  {
    "code": "T87.3",
    "description": "Neuroma de mu√±√≥n de amputaci√≥n"
  },
  {
    "code": "T87.4",
    "description": "Infecci√≥n de mu√±√≥n de amputaci√≥n"
  },
  {
    "code": "T87.5",
    "description": "Necrosis de mu√±√≥n de amputaci√≥n"
  },
  {
    "code": "T87.6",
    "description": "Otras complicaciones y las no especificadas de mu√±√≥n de amputaci√≥n"
  },
  {
    "code": "T88.0",
    "description": "Infecci√≥n consecutiva a inmunizaci√≥n"
  },
  {
    "code": "T88.1",
    "description": "Otras complicaciones consecutivas a inmunizaci√≥n, no clasificadas en otra parte"
  },
  {
    "code": "T88.2",
    "description": "Choque debido a la anestesia"
  },
  {
    "code": "T88.3",
    "description": "Hipertermia maligna debida a la anestesia"
  },
  {
    "code": "T88.4",
    "description": "Falla o dificultad de la intubaci√≥n"
  },
  {
    "code": "T88.5",
    "description": "Otras complicaciones de la anestesia"
  },
  {
    "code": "T88.6",
    "description": "Choque anafil√°ctico debido a efecto adverso de droga o medicamento correcto administrado apropiadamente"
  },
  {
    "code": "T88.7",
    "description": "Efecto adverso no especificado de droga o medicamento"
  },
  {
    "code": "T88.8",
    "description": "Otras complicaciones especificadas de la atenci√≥n m√©dica y quir√∫rgica, no clasificadas en otra parte"
  },
  {
    "code": "T88.9",
    "description": "Complicaciones no especificadas de la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "T90.0",
    "description": "Secuelas de traumatismo superficial de la cabeza"
  },
  {
    "code": "T90.1",
    "description": "Secuelas de herida de la cabeza"
  },
  {
    "code": "T90.2",
    "description": "Secuelas de fractura del cr√°neo y de huesos faciales"
  },
  {
    "code": "T90.3",
    "description": "Secuelas de traumatismo de nervios craneales"
  },
  {
    "code": "T90.4",
    "description": "Secuelas de traumatismo del ojo y de la √≥rbita"
  },
  {
    "code": "T90.5",
    "description": "Secuelas de traumatismo intracraneal"
  },
  {
    "code": "T90.8",
    "description": "Secuelas de otros traumatismos especificados de la cabeza"
  },
  {
    "code": "T90.9",
    "description": "Secuelas de traumatismo no especificado de la cabeza"
  },
  {
    "code": "T91.0",
    "description": "Secuelas de traumatismo superficial y de heridas del cuello y del tronco"
  },
  {
    "code": "T91.1",
    "description": "Secuelas de fractura de la columna vertebral"
  },
  {
    "code": "T91.2",
    "description": "Secuelas de otra fractura del t√≥rax y de la pelvis"
  },
  {
    "code": "T91.3",
    "description": "Secuelas de traumatismo de la m√©dula espinal"
  },
  {
    "code": "T91.4",
    "description": "Secuelas de traumatismo de √≥rganos intrator√°cicos"
  },
  {
    "code": "T91.5",
    "description": "Secuelas de traumatismo de √≥rganos intraabdominales y p√©lvicos"
  },
  {
    "code": "T91.8",
    "description": "Secuelas de otros traumatismos especificados del cuello y del tronco"
  },
  {
    "code": "T91.9",
    "description": "Secuelas de traumatismo no especificado del cuello y del tronco"
  },
  {
    "code": "T92.0",
    "description": "Secuelas de herida de miembro superior"
  },
  {
    "code": "T92.1",
    "description": "Secuelas de fractura del brazo"
  },
  {
    "code": "T92.2",
    "description": "Secuelas de fractura de la mu√±eca y de la mano"
  },
  {
    "code": "T92.3",
    "description": "Secuelas de luxaci√≥n, torcedura y esguince de miembro superior"
  },
  {
    "code": "T92.4",
    "description": "Secuelas de traumatismo de nervio de miembro superior"
  },
  {
    "code": "T92.5",
    "description": "Secuelas de traumatismo de tend√≥n y m√∫sculo de miembro superior"
  },
  {
    "code": "T92.6",
    "description": "Secuelas de aplastamiento y amputaci√≥n traum√°ticas de miembro superior"
  },
  {
    "code": "T92.8",
    "description": "Secuelas de otros traumatismos especificados de miembro superior"
  },
  {
    "code": "T92.9",
    "description": "Secuelas de traumatismo no especificado de miembro superior"
  },
  {
    "code": "T93.0",
    "description": "Secuelas de herida de miembro inferior"
  },
  {
    "code": "T93.1",
    "description": "Secuelas de fractura del f√©mur"
  },
  {
    "code": "T93.2",
    "description": "Secuelas de otras fracturas de miembro inferior"
  },
  {
    "code": "T93.3",
    "description": "Secuelas de luxaci√≥n, torcedura y esguince de miembro inferior"
  },
  {
    "code": "T93.4",
    "description": "Secuelas de traumatismo de nervio de miembro inferior"
  },
  {
    "code": "T93.5",
    "description": "Secuelas de traumatismo de tend√≥n y m√∫sculo de miembro inferior"
  },
  {
    "code": "T93.6",
    "description": "Secuelas de aplastamiento y amputaci√≥n traum√°ticas de miembro inferior"
  },
  {
    "code": "T93.8",
    "description": "Secuelas de otros traumatismos especificados de miembro inferior"
  },
  {
    "code": "T93.9",
    "description": "Secuelas de traumatismo no especificado de miembro inferior"
  },
  {
    "code": "T94.0",
    "description": "Secuelas de traumatismos que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T94.1",
    "description": "Secuelas de traumatismos de regiones no especificadas del cuerpo"
  },
  {
    "code": "T95.0",
    "description": "Secuelas de quemadura, corrosi√≥n y congelamiento de la cabeza y del cuello"
  },
  {
    "code": "T95.1",
    "description": "Secuelas de quemadura, corrosi√≥n y congelamiento del tronco"
  },
  {
    "code": "T95.2",
    "description": "Secuelas de quemadura, corrosi√≥n y congelamiento de miembro superior"
  },
  {
    "code": "T95.3",
    "description": "Secuelas de quemadura, corrosi√≥n y congelamiento de miembro inferior"
  },
  {
    "code": "T95.4",
    "description": "Secuelas de quemadura y corrosi√≥n clasificables s√≥lo de acuerdo con la extensi√≥n de la superficie del cuerpo afectada"
  },
  {
    "code": "T95.8",
    "description": "Secuelas de otras quemaduras, corrosiones y congelamientos especificados"
  },
  {
    "code": "T95.9",
    "description": "Secuelas de quemadura, corrosi√≥n y congelamiento no especificados"
  },
  {
    "code": "T98.0",
    "description": "Secuelas de efectos de cuerpos extra√±os que penetran en orificios naturales"
  },
  {
    "code": "T98.1",
    "description": "Secuelas de otros efectos y los no especificados de causas externas"
  },
  {
    "code": "T98.2",
    "description": "Secuelas de ciertas complicaciones precoces de los traumatismos"
  },
  {
    "code": "T98.3",
    "description": "Secuelas de complicaciones de la atenci√≥n m√©dica y quir√∫rgica, no clasificadas en otra parte"
  },
  {
    "code": "V01.0",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de pedal, accidente no de tr√°nsito"
  },
  {
    "code": "V01.1",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de pedal, accidente de tr√°nsito"
  },
  {
    "code": "V01.9",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de pedal, accidente no especificado como de tr√°nsito o no de tr√°nsito"
  },
  {
    "code": "V02.0",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas, accidente no de tr√°nsito"
  },
  {
    "code": "V02.1",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas, accidente de tr√°nsito"
  },
  {
    "code": "V02.9",
    "description": ""
  },
  {
    "code": "V03.0",
    "description": "Peat√≥n lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, accidente no de tr√°nsito"
  },
  {
    "code": "V03.1",
    "description": "Peat√≥n lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, accidente de tr√°nsito"
  },
  {
    "code": "V03.9",
    "description": ""
  },
  {
    "code": "V04.0",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s, accidente no de tr√°nsito"
  },
  {
    "code": "V04.1",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s, accidente de tr√°nsito"
  },
  {
    "code": "V04.9",
    "description": ""
  },
  {
    "code": "V05.0",
    "description": "Peat√≥n lesionado por colisi√≥n con tren o veh√≠culo de rieles, accidente no de tr√°nsito"
  },
  {
    "code": "V05.1",
    "description": "Peat√≥n lesionado por colisi√≥n con tren o veh√≠culo de rieles, accidente de tr√°nsito"
  },
  {
    "code": "V05.9",
    "description": "Peat√≥n lesionado por colisi√≥n con tren o veh√≠culo de rieles, accidente no especificado como de tr√°nsito o no de tr√°nsito"
  },
  {
    "code": "V06.0",
    "description": "Peat√≥n lesionado por colisi√≥n con otros veh√≠culos sin motor, accidente no de tr√°nsito"
  },
  {
    "code": "V06.1",
    "description": "Peat√≥n lesionado por colisi√≥n con otros veh√≠culos sin motor, accidente de tr√°nsito"
  },
  {
    "code": "V06.9",
    "description": "Peat√≥n lesionado por colisi√≥n con otros veh√≠culos sin motor, accidente no especificado como de tr√°nsito o no de tr√°nsito"
  },
  {
    "code": "V09.0",
    "description": "Peat√≥n lesionado en accidente no de tr√°nsito que involucra otros veh√≠culos de motor, y los no especificados"
  },
  {
    "code": "V09.1",
    "description": "Peat√≥n lesionado en accidente no de tr√°nsito no especificado"
  },
  {
    "code": "V09.2",
    "description": "Peat√≥n lesionado en accidente de tr√°nsito que involucra otros veh√≠culos de motor, y los no especificados"
  },
  {
    "code": "V09.3",
    "description": "Peat√≥n lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V09.9",
    "description": "Peat√≥n lesionado en accidente de transporte no especificado"
  },
  {
    "code": "V10.0",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V10.1",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V10.2",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, ciclista no especificado, lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V10.3",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V10.4",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V10.5",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V10.9",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V11.0",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V11.1",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V11.2",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, ciclista no especificado, lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V11.3",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V11.4",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V11.5",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V11.9",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V12.0",
    "description": ""
  },
  {
    "code": "V12.1",
    "description": ""
  },
  {
    "code": "V12.2",
    "description": ""
  },
  {
    "code": "V12.3",
    "description": ""
  },
  {
    "code": "V12.4",
    "description": "Ciclista lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V12.5",
    "description": "Ciclista lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V12.9",
    "description": ""
  },
  {
    "code": "V13.0",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V13.1",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V13.2",
    "description": ""
  },
  {
    "code": "V13.3",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V13.4",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V13.5",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V13.9",
    "description": ""
  },
  {
    "code": "V14.0",
    "description": ""
  },
  {
    "code": "V14.1",
    "description": ""
  },
  {
    "code": "V14.2",
    "description": ""
  },
  {
    "code": "V14.3",
    "description": ""
  },
  {
    "code": "V14.4",
    "description": ""
  },
  {
    "code": "V14.5",
    "description": "Ciclista lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V14.9",
    "description": ""
  },
  {
    "code": "V15.0",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V15.1",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V15.2",
    "description": ""
  },
  {
    "code": "V15.3",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V15.4",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V15.5",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V15.9",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V16.0",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V16.1",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V16.2",
    "description": ""
  },
  {
    "code": "V16.3",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V16.4",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V16.5",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V16.9",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V17.0",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V17.1",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V17.2",
    "description": ""
  },
  {
    "code": "V17.3",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V17.4",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V17.5",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V17.9",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V18.0",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V18.1",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V18.2",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, ciclista no especificado, lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V18.3",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V18.4",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V18.5",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V18.9",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n, ciclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V19.0",
    "description": ""
  },
  {
    "code": "V19.1",
    "description": ""
  },
  {
    "code": "V19.2",
    "description": ""
  },
  {
    "code": "V19.3",
    "description": "Ciclista [cualquiera] lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V19.4",
    "description": ""
  },
  {
    "code": "V19.5",
    "description": ""
  },
  {
    "code": "V19.6",
    "description": ""
  },
  {
    "code": "V19.8",
    "description": "Ciclista [cualquiera] lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V19.9",
    "description": "Ciclista [cualquiera] lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V20.0",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V20.1",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V20.2",
    "description": ""
  },
  {
    "code": "V20.3",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V20.4",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V20.5",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V20.9",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal, motociclista no especificado, lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V21.0",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V21.1",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V21.2",
    "description": ""
  },
  {
    "code": "V21.3",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V21.4",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V21.5",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V21.9",
    "description": ""
  },
  {
    "code": "V22.0",
    "description": ""
  },
  {
    "code": "V22.1",
    "description": ""
  },
  {
    "code": "V22.2",
    "description": ""
  },
  {
    "code": "V22.3",
    "description": ""
  },
  {
    "code": "V22.4",
    "description": ""
  },
  {
    "code": "V22.5",
    "description": ""
  },
  {
    "code": "V22.9",
    "description": ""
  },
  {
    "code": "V23.0",
    "description": ""
  },
  {
    "code": "V23.1",
    "description": "Motociclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V23.2",
    "description": ""
  },
  {
    "code": "V23.3",
    "description": "Motociclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V23.4",
    "description": "Motociclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V23.5",
    "description": "Motociclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V23.9",
    "description": ""
  },
  {
    "code": "V24.0",
    "description": ""
  },
  {
    "code": "V24.1",
    "description": ""
  },
  {
    "code": "V24.2",
    "description": ""
  },
  {
    "code": "V24.3",
    "description": ""
  },
  {
    "code": "V24.4",
    "description": ""
  },
  {
    "code": "V24.5",
    "description": ""
  },
  {
    "code": "V24.9",
    "description": ""
  },
  {
    "code": "V25.0",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V25.1",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V25.2",
    "description": ""
  },
  {
    "code": "V25.3",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V25.4",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V25.5",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V25.9",
    "description": ""
  },
  {
    "code": "V26.0",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V26.1",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V26.2",
    "description": ""
  },
  {
    "code": "V26.3",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V26.4",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V26.5",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V26.9",
    "description": ""
  },
  {
    "code": "V27.0",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V27.1",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V27.2",
    "description": ""
  },
  {
    "code": "V27.3",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V27.4",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V27.5",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V27.9",
    "description": ""
  },
  {
    "code": "V28.0",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V28.1",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V28.2",
    "description": ""
  },
  {
    "code": "V28.3",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V28.4",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V28.5",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V28.9",
    "description": ""
  },
  {
    "code": "V29.0",
    "description": ""
  },
  {
    "code": "V29.1",
    "description": ""
  },
  {
    "code": "V29.2",
    "description": ""
  },
  {
    "code": "V29.3",
    "description": "Motociclista [cualquiera] lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V29.4",
    "description": ""
  },
  {
    "code": "V29.5",
    "description": ""
  },
  {
    "code": "V29.6",
    "description": ""
  },
  {
    "code": "V29.8",
    "description": "Motociclista [cualquiera] lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V29.9",
    "description": "Motociclista [cualquiera] lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V30.0",
    "description": ""
  },
  {
    "code": "V30.1",
    "description": ""
  },
  {
    "code": "V30.2",
    "description": ""
  },
  {
    "code": "V30.3",
    "description": ""
  },
  {
    "code": "V30.4",
    "description": ""
  },
  {
    "code": "V30.5",
    "description": ""
  },
  {
    "code": "V30.6",
    "description": ""
  },
  {
    "code": "V30.7",
    "description": ""
  },
  {
    "code": "V30.9",
    "description": ""
  },
  {
    "code": "V31.0",
    "description": ""
  },
  {
    "code": "V31.1",
    "description": ""
  },
  {
    "code": "V31.2",
    "description": ""
  },
  {
    "code": "V31.3",
    "description": ""
  },
  {
    "code": "V31.4",
    "description": ""
  },
  {
    "code": "V31.5",
    "description": ""
  },
  {
    "code": "V31.6",
    "description": ""
  },
  {
    "code": "V31.7",
    "description": ""
  },
  {
    "code": "V31.9",
    "description": ""
  },
  {
    "code": "V32.0",
    "description": ""
  },
  {
    "code": "V32.1",
    "description": ""
  },
  {
    "code": "V32.2",
    "description": ""
  },
  {
    "code": "V32.3",
    "description": ""
  },
  {
    "code": "V32.4",
    "description": ""
  },
  {
    "code": "V32.5",
    "description": ""
  },
  {
    "code": "V32.6",
    "description": ""
  },
  {
    "code": "V32.7",
    "description": ""
  },
  {
    "code": "V32.9",
    "description": ""
  },
  {
    "code": "V33.0",
    "description": ""
  },
  {
    "code": "V33.1",
    "description": ""
  },
  {
    "code": "V33.2",
    "description": ""
  },
  {
    "code": "V33.3",
    "description": ""
  },
  {
    "code": "V33.4",
    "description": ""
  },
  {
    "code": "V33.5",
    "description": ""
  },
  {
    "code": "V33.6",
    "description": ""
  },
  {
    "code": "V33.7",
    "description": ""
  },
  {
    "code": "V33.9",
    "description": ""
  },
  {
    "code": "V34.0",
    "description": ""
  },
  {
    "code": "V34.1",
    "description": ""
  },
  {
    "code": "V34.2",
    "description": ""
  },
  {
    "code": "V34.3",
    "description": ""
  },
  {
    "code": "V34.4",
    "description": ""
  },
  {
    "code": "V34.5",
    "description": ""
  },
  {
    "code": "V34.6",
    "description": ""
  },
  {
    "code": "V34.7",
    "description": ""
  },
  {
    "code": "V34.9",
    "description": ""
  },
  {
    "code": "V35.0",
    "description": ""
  },
  {
    "code": "V35.1",
    "description": ""
  },
  {
    "code": "V35.2",
    "description": ""
  },
  {
    "code": "V35.3",
    "description": ""
  },
  {
    "code": "V35.4",
    "description": ""
  },
  {
    "code": "V35.5",
    "description": ""
  },
  {
    "code": "V35.6",
    "description": ""
  },
  {
    "code": "V35.7",
    "description": ""
  },
  {
    "code": "V35.9",
    "description": ""
  },
  {
    "code": "V36.0",
    "description": ""
  },
  {
    "code": "V36.1",
    "description": ""
  },
  {
    "code": "V36.2",
    "description": ""
  },
  {
    "code": "V36.3",
    "description": ""
  },
  {
    "code": "V36.4",
    "description": ""
  },
  {
    "code": "V36.5",
    "description": ""
  },
  {
    "code": "V36.6",
    "description": ""
  },
  {
    "code": "V36.7",
    "description": ""
  },
  {
    "code": "V36.9",
    "description": ""
  },
  {
    "code": "V37.0",
    "description": ""
  },
  {
    "code": "V37.1",
    "description": ""
  },
  {
    "code": "V37.2",
    "description": ""
  },
  {
    "code": "V37.3",
    "description": ""
  },
  {
    "code": "V37.4",
    "description": ""
  },
  {
    "code": "V37.5",
    "description": ""
  },
  {
    "code": "V37.6",
    "description": ""
  },
  {
    "code": "V37.7",
    "description": ""
  },
  {
    "code": "V37.9",
    "description": ""
  },
  {
    "code": "V38.0",
    "description": ""
  },
  {
    "code": "V38.1",
    "description": ""
  },
  {
    "code": "V38.2",
    "description": ""
  },
  {
    "code": "V38.3",
    "description": ""
  },
  {
    "code": "V38.4",
    "description": ""
  },
  {
    "code": "V38.5",
    "description": ""
  },
  {
    "code": "V38.6",
    "description": ""
  },
  {
    "code": "V38.7",
    "description": ""
  },
  {
    "code": "V38.9",
    "description": ""
  },
  {
    "code": "V39.0",
    "description": ""
  },
  {
    "code": "V39.1",
    "description": ""
  },
  {
    "code": "V39.2",
    "description": ""
  },
  {
    "code": "V39.3",
    "description": "Ocupante [cualquiera] de veh√≠culo de motor de tres ruedas lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V39.4",
    "description": ""
  },
  {
    "code": "V39.5",
    "description": ""
  },
  {
    "code": "V39.6",
    "description": ""
  },
  {
    "code": "V39.8",
    "description": "Ocupante [cualquiera] de veh√≠culo de motor de tres ruedas lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V39.9",
    "description": "Ocupante [cualquiera] de veh√≠culo de motor de tres ruedas lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V40.0",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V40.1",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V40.2",
    "description": ""
  },
  {
    "code": "V40.3",
    "description": ""
  },
  {
    "code": "V40.4",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V40.5",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V40.6",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V40.7",
    "description": ""
  },
  {
    "code": "V40.9",
    "description": ""
  },
  {
    "code": "V41.0",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V41.1",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V41.2",
    "description": ""
  },
  {
    "code": "V41.3",
    "description": ""
  },
  {
    "code": "V41.4",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V41.5",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V41.6",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V41.7",
    "description": ""
  },
  {
    "code": "V41.9",
    "description": ""
  },
  {
    "code": "V42.0",
    "description": ""
  },
  {
    "code": "V42.1",
    "description": ""
  },
  {
    "code": "V42.2",
    "description": ""
  },
  {
    "code": "V42.3",
    "description": ""
  },
  {
    "code": "V42.4",
    "description": ""
  },
  {
    "code": "V42.5",
    "description": ""
  },
  {
    "code": "V42.6",
    "description": ""
  },
  {
    "code": "V42.7",
    "description": ""
  },
  {
    "code": "V42.9",
    "description": ""
  },
  {
    "code": "V43.0",
    "description": ""
  },
  {
    "code": "V43.1",
    "description": ""
  },
  {
    "code": "V43.2",
    "description": ""
  },
  {
    "code": "V43.3",
    "description": ""
  },
  {
    "code": "V43.4",
    "description": ""
  },
  {
    "code": "V43.5",
    "description": ""
  },
  {
    "code": "V43.6",
    "description": ""
  },
  {
    "code": "V43.7",
    "description": ""
  },
  {
    "code": "V43.9",
    "description": ""
  },
  {
    "code": "V44.0",
    "description": ""
  },
  {
    "code": "V44.1",
    "description": ""
  },
  {
    "code": "V44.2",
    "description": ""
  },
  {
    "code": "V44.3",
    "description": ""
  },
  {
    "code": "V44.4",
    "description": ""
  },
  {
    "code": "V44.5",
    "description": ""
  },
  {
    "code": "V44.6",
    "description": ""
  },
  {
    "code": "V44.7",
    "description": ""
  },
  {
    "code": "V44.9",
    "description": ""
  },
  {
    "code": "V45.0",
    "description": ""
  },
  {
    "code": "V45.1",
    "description": ""
  },
  {
    "code": "V45.2",
    "description": ""
  },
  {
    "code": "V45.3",
    "description": ""
  },
  {
    "code": "V45.4",
    "description": ""
  },
  {
    "code": "V45.5",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V45.6",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V45.7",
    "description": ""
  },
  {
    "code": "V45.9",
    "description": ""
  },
  {
    "code": "V46.0",
    "description": ""
  },
  {
    "code": "V46.1",
    "description": ""
  },
  {
    "code": "V46.2",
    "description": ""
  },
  {
    "code": "V46.3",
    "description": ""
  },
  {
    "code": "V46.4",
    "description": ""
  },
  {
    "code": "V46.5",
    "description": ""
  },
  {
    "code": "V46.6",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V46.7",
    "description": ""
  },
  {
    "code": "V46.9",
    "description": ""
  },
  {
    "code": "V47.0",
    "description": ""
  },
  {
    "code": "V47.1",
    "description": ""
  },
  {
    "code": "V47.2",
    "description": ""
  },
  {
    "code": "V47.3",
    "description": ""
  },
  {
    "code": "V47.4",
    "description": ""
  },
  {
    "code": "V47.5",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con objeto fijo o estacionado, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V47.6",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con objeto fijo o estacionado, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V47.7",
    "description": ""
  },
  {
    "code": "V47.9",
    "description": ""
  },
  {
    "code": "V48.0",
    "description": ""
  },
  {
    "code": "V48.1",
    "description": "Ocupante de autom√≥vil lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V48.2",
    "description": ""
  },
  {
    "code": "V48.3",
    "description": ""
  },
  {
    "code": "V48.4",
    "description": "Ocupante de autom√≥vil lesionado en accidente de transporte sin colisi√≥n, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V48.5",
    "description": "Ocupante de autom√≥vil lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V48.6",
    "description": "Ocupante de autom√≥vil lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V48.7",
    "description": ""
  },
  {
    "code": "V48.9",
    "description": ""
  },
  {
    "code": "V49.0",
    "description": ""
  },
  {
    "code": "V49.1",
    "description": ""
  },
  {
    "code": "V49.2",
    "description": ""
  },
  {
    "code": "V49.3",
    "description": "Ocupante [cualquiera] de autom√≥vil lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V49.4",
    "description": ""
  },
  {
    "code": "V49.5",
    "description": ""
  },
  {
    "code": "V49.6",
    "description": ""
  },
  {
    "code": "V49.8",
    "description": "Ocupante [cualquiera] de autom√≥vil lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V49.9",
    "description": "Ocupante [cualquiera] de autom√≥vil lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V50.0",
    "description": ""
  },
  {
    "code": "V50.1",
    "description": ""
  },
  {
    "code": "V50.2",
    "description": ""
  },
  {
    "code": "V50.3",
    "description": ""
  },
  {
    "code": "V50.4",
    "description": ""
  },
  {
    "code": "V50.5",
    "description": ""
  },
  {
    "code": "V50.6",
    "description": ""
  },
  {
    "code": "V50.7",
    "description": ""
  },
  {
    "code": "V50.9",
    "description": ""
  },
  {
    "code": "V51.0",
    "description": ""
  },
  {
    "code": "V51.1",
    "description": ""
  },
  {
    "code": "V51.2",
    "description": ""
  },
  {
    "code": "V51.3",
    "description": ""
  },
  {
    "code": "V51.4",
    "description": ""
  },
  {
    "code": "V51.5",
    "description": ""
  },
  {
    "code": "V51.6",
    "description": ""
  },
  {
    "code": "V51.7",
    "description": ""
  },
  {
    "code": "V51.9",
    "description": ""
  },
  {
    "code": "V52.0",
    "description": ""
  },
  {
    "code": "V52.1",
    "description": ""
  },
  {
    "code": "V52.2",
    "description": ""
  },
  {
    "code": "V52.3",
    "description": ""
  },
  {
    "code": "V52.4",
    "description": ""
  },
  {
    "code": "V52.5",
    "description": ""
  },
  {
    "code": "V52.6",
    "description": ""
  },
  {
    "code": "V52.7",
    "description": ""
  },
  {
    "code": "V52.9",
    "description": ""
  },
  {
    "code": "V53.0",
    "description": ""
  },
  {
    "code": "V53.1",
    "description": ""
  },
  {
    "code": "V53.2",
    "description": ""
  },
  {
    "code": "V53.3",
    "description": ""
  },
  {
    "code": "V53.4",
    "description": ""
  },
  {
    "code": "V53.5",
    "description": ""
  },
  {
    "code": "V53.6",
    "description": ""
  },
  {
    "code": "V53.7",
    "description": ""
  },
  {
    "code": "V53.9",
    "description": ""
  },
  {
    "code": "V54.0",
    "description": ""
  },
  {
    "code": "V54.1",
    "description": ""
  },
  {
    "code": "V54.2",
    "description": ""
  },
  {
    "code": "V54.3",
    "description": ""
  },
  {
    "code": "V54.4",
    "description": ""
  },
  {
    "code": "V54.5",
    "description": ""
  },
  {
    "code": "V54.6",
    "description": ""
  },
  {
    "code": "V54.7",
    "description": ""
  },
  {
    "code": "V54.9",
    "description": ""
  },
  {
    "code": "V55.0",
    "description": ""
  },
  {
    "code": "V55.1",
    "description": ""
  },
  {
    "code": "V55.2",
    "description": ""
  },
  {
    "code": "V55.3",
    "description": ""
  },
  {
    "code": "V55.4",
    "description": ""
  },
  {
    "code": "V55.5",
    "description": ""
  },
  {
    "code": "V55.6",
    "description": ""
  },
  {
    "code": "V55.7",
    "description": ""
  },
  {
    "code": "V55.9",
    "description": ""
  },
  {
    "code": "V56.0",
    "description": ""
  },
  {
    "code": "V56.1",
    "description": ""
  },
  {
    "code": "V56.2",
    "description": ""
  },
  {
    "code": "V56.3",
    "description": ""
  },
  {
    "code": "V56.4",
    "description": ""
  },
  {
    "code": "V56.5",
    "description": ""
  },
  {
    "code": "V56.6",
    "description": ""
  },
  {
    "code": "V56.7",
    "description": ""
  },
  {
    "code": "V56.9",
    "description": ""
  },
  {
    "code": "V57.0",
    "description": ""
  },
  {
    "code": "V57.1",
    "description": ""
  },
  {
    "code": "V57.2",
    "description": ""
  },
  {
    "code": "V57.3",
    "description": ""
  },
  {
    "code": "V57.4",
    "description": ""
  },
  {
    "code": "V57.5",
    "description": ""
  },
  {
    "code": "V57.6",
    "description": ""
  },
  {
    "code": "V57.7",
    "description": ""
  },
  {
    "code": "V57.9",
    "description": ""
  },
  {
    "code": "V58.0",
    "description": ""
  },
  {
    "code": "V58.1",
    "description": ""
  },
  {
    "code": "V58.2",
    "description": ""
  },
  {
    "code": "V58.3",
    "description": ""
  },
  {
    "code": "V58.4",
    "description": ""
  },
  {
    "code": "V58.5",
    "description": ""
  },
  {
    "code": "V58.6",
    "description": ""
  },
  {
    "code": "V58.7",
    "description": ""
  },
  {
    "code": "V58.9",
    "description": ""
  },
  {
    "code": "V59.0",
    "description": ""
  },
  {
    "code": "V59.1",
    "description": ""
  },
  {
    "code": "V59.2",
    "description": ""
  },
  {
    "code": "V59.3",
    "description": "Ocupante [cualquiera] de camioneta o furgoneta lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V59.4",
    "description": ""
  },
  {
    "code": "V59.5",
    "description": ""
  },
  {
    "code": "V59.6",
    "description": ""
  },
  {
    "code": "V59.8",
    "description": "Ocupante [cualquiera] de camioneta o furgoneta lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V59.9",
    "description": "Ocupante [cualquiera] de camioneta o furgoneta lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V60.0",
    "description": ""
  },
  {
    "code": "V60.1",
    "description": ""
  },
  {
    "code": "V60.2",
    "description": ""
  },
  {
    "code": "V60.3",
    "description": ""
  },
  {
    "code": "V60.4",
    "description": ""
  },
  {
    "code": "V60.5",
    "description": ""
  },
  {
    "code": "V60.6",
    "description": ""
  },
  {
    "code": "V60.7",
    "description": ""
  },
  {
    "code": "V60.9",
    "description": ""
  },
  {
    "code": "V61.0",
    "description": ""
  },
  {
    "code": "V61.1",
    "description": ""
  },
  {
    "code": "V61.2",
    "description": ""
  },
  {
    "code": "V61.3",
    "description": ""
  },
  {
    "code": "V61.4",
    "description": ""
  },
  {
    "code": "V61.5",
    "description": ""
  },
  {
    "code": "V61.6",
    "description": ""
  },
  {
    "code": "V61.7",
    "description": ""
  },
  {
    "code": "V61.9",
    "description": ""
  },
  {
    "code": "V62.0",
    "description": ""
  },
  {
    "code": "V62.1",
    "description": ""
  },
  {
    "code": "V62.2",
    "description": ""
  },
  {
    "code": "V62.3",
    "description": ""
  },
  {
    "code": "V62.4",
    "description": ""
  },
  {
    "code": "V62.5",
    "description": ""
  },
  {
    "code": "V62.6",
    "description": ""
  },
  {
    "code": "V62.7",
    "description": ""
  },
  {
    "code": "V62.9",
    "description": ""
  },
  {
    "code": "V63.0",
    "description": ""
  },
  {
    "code": "V63.1",
    "description": ""
  },
  {
    "code": "V63.2",
    "description": ""
  },
  {
    "code": "V63.3",
    "description": ""
  },
  {
    "code": "V63.4",
    "description": ""
  },
  {
    "code": "V63.5",
    "description": ""
  },
  {
    "code": "V63.6",
    "description": ""
  },
  {
    "code": "V63.7",
    "description": ""
  },
  {
    "code": "V63.9",
    "description": ""
  },
  {
    "code": "V64.0",
    "description": ""
  },
  {
    "code": "V64.1",
    "description": ""
  },
  {
    "code": "V64.2",
    "description": ""
  },
  {
    "code": "V64.3",
    "description": ""
  },
  {
    "code": "V64.4",
    "description": ""
  },
  {
    "code": "V64.5",
    "description": ""
  },
  {
    "code": "V64.6",
    "description": ""
  },
  {
    "code": "V64.7",
    "description": ""
  },
  {
    "code": "V64.9",
    "description": ""
  },
  {
    "code": "V65.0",
    "description": ""
  },
  {
    "code": "V65.1",
    "description": ""
  },
  {
    "code": "V65.2",
    "description": ""
  },
  {
    "code": "V65.3",
    "description": ""
  },
  {
    "code": "V65.4",
    "description": ""
  },
  {
    "code": "V65.5",
    "description": ""
  },
  {
    "code": "V65.6",
    "description": ""
  },
  {
    "code": "V65.7",
    "description": ""
  },
  {
    "code": "V65.9",
    "description": ""
  },
  {
    "code": "V66.0",
    "description": ""
  },
  {
    "code": "V66.1",
    "description": ""
  },
  {
    "code": "V66.2",
    "description": ""
  },
  {
    "code": "V66.3",
    "description": ""
  },
  {
    "code": "V66.4",
    "description": ""
  },
  {
    "code": "V66.5",
    "description": ""
  },
  {
    "code": "V66.6",
    "description": ""
  },
  {
    "code": "V66.7",
    "description": ""
  },
  {
    "code": "V66.9",
    "description": ""
  },
  {
    "code": "V67.0",
    "description": ""
  },
  {
    "code": "V67.1",
    "description": ""
  },
  {
    "code": "V67.2",
    "description": ""
  },
  {
    "code": "V67.3",
    "description": ""
  },
  {
    "code": "V67.4",
    "description": ""
  },
  {
    "code": "V67.5",
    "description": ""
  },
  {
    "code": "V67.6",
    "description": ""
  },
  {
    "code": "V67.7",
    "description": ""
  },
  {
    "code": "V67.9",
    "description": ""
  },
  {
    "code": "V68.0",
    "description": ""
  },
  {
    "code": "V68.1",
    "description": ""
  },
  {
    "code": "V68.2",
    "description": ""
  },
  {
    "code": "V68.3",
    "description": ""
  },
  {
    "code": "V68.4",
    "description": ""
  },
  {
    "code": "V68.5",
    "description": ""
  },
  {
    "code": "V68.6",
    "description": ""
  },
  {
    "code": "V68.7",
    "description": ""
  },
  {
    "code": "V68.9",
    "description": ""
  },
  {
    "code": "V69.0",
    "description": ""
  },
  {
    "code": "V69.1",
    "description": ""
  },
  {
    "code": "V69.2",
    "description": ""
  },
  {
    "code": "V69.3",
    "description": "Ocupante [cualquiera] de veh√≠culo de transporte pesado lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V69.4",
    "description": ""
  },
  {
    "code": "V69.5",
    "description": ""
  },
  {
    "code": "V69.6",
    "description": ""
  },
  {
    "code": "V69.8",
    "description": "Ocupante [cualquiera] de veh√≠culo de transporte pesado lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V69.9",
    "description": "Ocupante [cualquiera] de veh√≠culo de transporte pesado lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V70.0",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V70.1",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V70.2",
    "description": ""
  },
  {
    "code": "V70.3",
    "description": ""
  },
  {
    "code": "V70.4",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V70.5",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V70.6",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V70.7",
    "description": ""
  },
  {
    "code": "V70.9",
    "description": ""
  },
  {
    "code": "V71.0",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V71.1",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V71.2",
    "description": ""
  },
  {
    "code": "V71.3",
    "description": ""
  },
  {
    "code": "V71.4",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V71.5",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V71.6",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V71.7",
    "description": ""
  },
  {
    "code": "V71.9",
    "description": ""
  },
  {
    "code": "V72.0",
    "description": ""
  },
  {
    "code": "V72.1",
    "description": ""
  },
  {
    "code": "V72.2",
    "description": ""
  },
  {
    "code": "V72.3",
    "description": ""
  },
  {
    "code": "V72.4",
    "description": ""
  },
  {
    "code": "V72.5",
    "description": ""
  },
  {
    "code": "V72.6",
    "description": ""
  },
  {
    "code": "V72.7",
    "description": ""
  },
  {
    "code": "V72.9",
    "description": ""
  },
  {
    "code": "V73.0",
    "description": ""
  },
  {
    "code": "V73.1",
    "description": ""
  },
  {
    "code": "V73.2",
    "description": ""
  },
  {
    "code": "V73.3",
    "description": ""
  },
  {
    "code": "V73.4",
    "description": ""
  },
  {
    "code": "V73.5",
    "description": ""
  },
  {
    "code": "V73.6",
    "description": ""
  },
  {
    "code": "V73.7",
    "description": ""
  },
  {
    "code": "V73.9",
    "description": ""
  },
  {
    "code": "V74.0",
    "description": ""
  },
  {
    "code": "V74.1",
    "description": ""
  },
  {
    "code": "V74.2",
    "description": ""
  },
  {
    "code": "V74.3",
    "description": ""
  },
  {
    "code": "V74.4",
    "description": ""
  },
  {
    "code": "V74.5",
    "description": ""
  },
  {
    "code": "V74.6",
    "description": ""
  },
  {
    "code": "V74.7",
    "description": ""
  },
  {
    "code": "V74.9",
    "description": ""
  },
  {
    "code": "V75.0",
    "description": ""
  },
  {
    "code": "V75.1",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V75.2",
    "description": ""
  },
  {
    "code": "V75.3",
    "description": ""
  },
  {
    "code": "V75.4",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con tren o veh√≠culo de rieles, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V75.5",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con tren o veh√≠culo de rieles, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V75.6",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con tren o veh√≠culo de rieles, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V75.7",
    "description": ""
  },
  {
    "code": "V75.9",
    "description": ""
  },
  {
    "code": "V76.0",
    "description": ""
  },
  {
    "code": "V76.1",
    "description": ""
  },
  {
    "code": "V76.2",
    "description": ""
  },
  {
    "code": "V76.3",
    "description": ""
  },
  {
    "code": "V76.4",
    "description": ""
  },
  {
    "code": "V76.5",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con otros veh√≠culos sin motor, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V76.6",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con otros veh√≠culos sin motor, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V76.7",
    "description": ""
  },
  {
    "code": "V76.9",
    "description": ""
  },
  {
    "code": "V77.0",
    "description": ""
  },
  {
    "code": "V77.1",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con objeto fijo o estacionado, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V77.2",
    "description": ""
  },
  {
    "code": "V77.3",
    "description": ""
  },
  {
    "code": "V77.4",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con objeto fijo o estacionado, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V77.5",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con objeto fijo o estacionado, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V77.6",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con objeto fijo o estacionado, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V77.7",
    "description": ""
  },
  {
    "code": "V77.9",
    "description": ""
  },
  {
    "code": "V78.0",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V78.1",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V78.2",
    "description": ""
  },
  {
    "code": "V78.3",
    "description": ""
  },
  {
    "code": "V78.4",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n, persona lesionada al subir o bajar del veh√≠culo"
  },
  {
    "code": "V78.5",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n, conductor lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V78.6",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n, pasajero lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V78.7",
    "description": ""
  },
  {
    "code": "V78.9",
    "description": ""
  },
  {
    "code": "V79.0",
    "description": ""
  },
  {
    "code": "V79.1",
    "description": ""
  },
  {
    "code": "V79.2",
    "description": ""
  },
  {
    "code": "V79.3",
    "description": "Ocupante [cualquiera] de autob√∫s lesionado en accidente no de tr√°nsito, no especificado"
  },
  {
    "code": "V79.4",
    "description": ""
  },
  {
    "code": "V79.5",
    "description": ""
  },
  {
    "code": "V79.6",
    "description": ""
  },
  {
    "code": "V79.8",
    "description": "Ocupante [cualquiera] de autob√∫s lesionado en otros accidentes de transporte especificados"
  },
  {
    "code": "V79.9",
    "description": "Ocupante [cualquiera] de autob√∫s lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V80.0",
    "description": ""
  },
  {
    "code": "V80.1",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V80.2",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V80.3",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V80.4",
    "description": ""
  },
  {
    "code": "V80.5",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con otros veh√≠culos de motor especificados"
  },
  {
    "code": "V80.6",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V80.7",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V80.8",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V80.9",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V81.0",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por colisi√≥n con veh√≠culo de motor, en accidente no de tr√°nsito"
  },
  {
    "code": "V81.1",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por colisi√≥n con veh√≠culo de motor, en accidente de tr√°nsito"
  },
  {
    "code": "V81.2",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por colisi√≥n con, o golpeado por vag√≥n"
  },
  {
    "code": "V81.3",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por colisi√≥n con otros objetos"
  },
  {
    "code": "V81.4",
    "description": "Persona lesionada al subir o bajar del tren o veh√≠culo de rieles"
  },
  {
    "code": "V81.5",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por ca√≠da dentro del tren o veh√≠culo de rieles"
  },
  {
    "code": "V81.6",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado por ca√≠da desde el tren o veh√≠culo de rieles"
  },
  {
    "code": "V81.7",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado en descarrilamiento sin colisi√≥n anterior"
  },
  {
    "code": "V81.8",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado en otros accidentes ferroviarios especificados"
  },
  {
    "code": "V81.9",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado en accidente ferroviario no especificado"
  },
  {
    "code": "V82.0",
    "description": "Ocupante de tranv√≠a lesionado por colisi√≥n con veh√≠culo de motor, en accidente no de tr√°nsito"
  },
  {
    "code": "V82.1",
    "description": "Ocupante de tranv√≠a lesionado por colisi√≥n con veh√≠culo de motor, en accidente de tr√°nsito"
  },
  {
    "code": "V82.2",
    "description": "Ocupante de tranv√≠a lesionado por colisi√≥n con, o golpeado por vag√≥n"
  },
  {
    "code": "V82.3",
    "description": "Ocupante de tranv√≠a lesionado por colisi√≥n con otros objetos"
  },
  {
    "code": "V82.4",
    "description": "Persona lesionada al subir o bajar del tranv√≠a"
  },
  {
    "code": "V82.5",
    "description": "Ocupante de tranv√≠a lesionado por ca√≠da dentro del tranv√≠a"
  },
  {
    "code": "V82.6",
    "description": "Ocupante de tranv√≠a lesionado por ca√≠da desde el tranv√≠a"
  },
  {
    "code": "V82.7",
    "description": "Ocupante de tranv√≠a lesionado por descarrilamiento, sin colisi√≥n anterior"
  },
  {
    "code": "V82.8",
    "description": "Ocupante de tranv√≠a lesionado en otros accidentes de transporte, especificados"
  },
  {
    "code": "V82.9",
    "description": "Ocupante de tranv√≠a lesionado en accidente de tr√°nsito no especificado"
  },
  {
    "code": "V83.0",
    "description": "Conductor de veh√≠culo industrial especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V83.1",
    "description": "Pasajero de veh√≠culo industrial especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V83.2",
    "description": "Persona que viaja fuera de veh√≠culo industrial especial lesionada en accidente de tr√°nsito"
  },
  {
    "code": "V83.3",
    "description": "Ocupante no especificado de veh√≠culo industrial especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V83.4",
    "description": "Persona lesionada al subir o bajar del veh√≠culo industrial especial"
  },
  {
    "code": "V83.5",
    "description": "Conductor de veh√≠culo industrial especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V83.6",
    "description": "Pasajero de veh√≠culo industrial especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V83.7",
    "description": "Persona que viaja fuera del veh√≠culo industrial especial lesionada en accidente no de tr√°nsito"
  },
  {
    "code": "V83.9",
    "description": "Ocupante no especificado del veh√≠culo industrial especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V84.0",
    "description": "Conductor de veh√≠culo agr√≠cola especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V84.1",
    "description": "Pasajero de veh√≠culo agr√≠cola especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V84.2",
    "description": "Persona que viaja fuera del veh√≠culo agr√≠cola especial lesionada en accidente de tr√°nsito"
  },
  {
    "code": "V84.3",
    "description": "Ocupante no especificado de veh√≠culo agr√≠cola especial lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V84.4",
    "description": "Persona lesionada al subir o bajar del veh√≠culo agr√≠cola especial"
  },
  {
    "code": "V84.5",
    "description": "Conductor de veh√≠culo agr√≠cola especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V84.6",
    "description": "Pasajero de veh√≠culo agr√≠cola especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V84.7",
    "description": "Persona que viaja fuera del veh√≠culo agr√≠cola especial lesionada en accidente no de tr√°nsito"
  },
  {
    "code": "V84.9",
    "description": "Ocupante no especificado de veh√≠culo agr√≠cola especial lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V85.0",
    "description": "Conductor de veh√≠culo especial para construcci√≥n lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V85.1",
    "description": "Pasajero de veh√≠culo especial para construcci√≥n lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V85.2",
    "description": "Persona que viaja fuera del veh√≠culo especial para construcci√≥n lesionada en accidente de tr√°nsito"
  },
  {
    "code": "V85.3",
    "description": "Ocupante no especificado de veh√≠culo especial para construcci√≥n lesionado en accidente de tr√°nsito"
  },
  {
    "code": "V85.4",
    "description": "Persona lesionada al subir o bajar del veh√≠culo especial para construcci√≥n"
  },
  {
    "code": "V85.5",
    "description": "Conductor de veh√≠culo especial para construcci√≥n lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V85.6",
    "description": "Pasajero de veh√≠culo especial para construcci√≥n lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V85.7",
    "description": "Persona que viaja fuera del veh√≠culo especial para construcci√≥n lesionada en accidente no de tr√°nsito"
  },
  {
    "code": "V85.9",
    "description": "Ocupante no especificado de veh√≠culo especial para construcci√≥n lesionado en accidente no de tr√°nsito"
  },
  {
    "code": "V86.0",
    "description": ""
  },
  {
    "code": "V86.1",
    "description": ""
  },
  {
    "code": "V86.2",
    "description": ""
  },
  {
    "code": "V86.3",
    "description": ""
  },
  {
    "code": "V86.4",
    "description": ""
  },
  {
    "code": "V86.5",
    "description": ""
  },
  {
    "code": "V86.6",
    "description": ""
  },
  {
    "code": "V86.7",
    "description": ""
  },
  {
    "code": "V86.9",
    "description": ""
  },
  {
    "code": "V87.0",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y veh√≠culo de motor de dos o tres ruedas (tr√°nsito)"
  },
  {
    "code": "V87.1",
    "description": "Persona lesionada por colisi√≥n entre otros veh√≠culos de motor y un veh√≠culo de motor de dos o tres ruedas  (tr√°nsito)"
  },
  {
    "code": "V87.2",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y camioneta o furgoneta (tr√°nsito)"
  },
  {
    "code": "V87.3",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y autob√∫s (tr√°nsito)"
  },
  {
    "code": "V87.4",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y veh√≠culo de transporte pesado (tr√°nsito)"
  },
  {
    "code": "V87.5",
    "description": "Persona lesionada por colisi√≥n entre veh√≠culo de transporte pesado y autob√∫s (tr√°nsito)"
  },
  {
    "code": "V87.6",
    "description": "Persona lesionada por colisi√≥n entre tren o veh√≠culo de rieles y autom√≥vil (tr√°nsito)"
  },
  {
    "code": "V87.7",
    "description": "Persona lesionada por colisi√≥n entre otros veh√≠culos de motor especificados (tr√°nsito)"
  },
  {
    "code": "V87.8",
    "description": "Persona lesionada en otros accidentes especificados de transporte de veh√≠culo de motor sin colisi√≥n (tr√°nsito)"
  },
  {
    "code": "V87.9",
    "description": ""
  },
  {
    "code": "V88.0",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y veh√≠culo de motor de dos o tres ruedas, no de tr√°nsito"
  },
  {
    "code": "V88.1",
    "description": ""
  },
  {
    "code": "V88.2",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y camioneta o furgoneta, no de tr√°nsito"
  },
  {
    "code": "V88.3",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y autob√∫s, no de tr√°nsito"
  },
  {
    "code": "V88.4",
    "description": "Persona lesionada por colisi√≥n entre autom√≥vil y veh√≠culo de transporte pesado, no de tr√°nsito"
  },
  {
    "code": "V88.5",
    "description": "Persona lesionada por colisi√≥n entre veh√≠culo de transporte pesado y autob√∫s, no de tr√°nsito"
  },
  {
    "code": "V88.6",
    "description": "Persona lesionada por colisi√≥n entre tren o veh√≠culo de rieles y autom√≥vil, no de tr√°nsito"
  },
  {
    "code": "V88.7",
    "description": "Persona lesionada por colisi√≥n entre otros veh√≠culos de motor especificados, no de tr√°nsito"
  },
  {
    "code": "V88.8",
    "description": "Persona lesionada en otros accidentes especificados de transporte de veh√≠culo de motor sin colisi√≥n, no de tr√°nsito"
  },
  {
    "code": "V88.9",
    "description": ""
  },
  {
    "code": "V89.0",
    "description": "Persona lesionada en accidente no de tr√°nsito, de veh√≠culo de motor no especificado"
  },
  {
    "code": "V89.1",
    "description": "Persona lesionada en accidente no de tr√°nsito, de veh√≠culo sin motor no especificado"
  },
  {
    "code": "V89.2",
    "description": "Persona lesionada en accidente de tr√°nsito, de veh√≠culo de motor no especificado"
  },
  {
    "code": "V89.3",
    "description": "Persona lesionada en accidente de tr√°nsito, de veh√≠culo sin motor no especificado"
  },
  {
    "code": "V89.9",
    "description": "Persona lesionada en accidente de veh√≠culo no especificado"
  },
  {
    "code": "V90.0",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, barco mercante"
  },
  {
    "code": "V90.1",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, barco de pasajeros"
  },
  {
    "code": "V90.2",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, bote de pesca"
  },
  {
    "code": "V90.3",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, otro veh√≠culo acu√°tico con motor"
  },
  {
    "code": "V90.4",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, velero"
  },
  {
    "code": "V90.5",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, canoa o kayak"
  },
  {
    "code": "V90.6",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, balsa inflable (sin motor)"
  },
  {
    "code": "V90.7",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, esqu√≠ acu√°tico"
  },
  {
    "code": "V90.8",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, otro veh√≠culo acu√°tico sin motor"
  },
  {
    "code": "V90.9",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n, veh√≠culo acu√°tico no especificado"
  },
  {
    "code": "V91.0",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, barco mercante"
  },
  {
    "code": "V91.1",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, barco de pasajeros"
  },
  {
    "code": "V91.2",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, bote de pesca"
  },
  {
    "code": "V91.3",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, otro veh√≠culo acu√°tico con motor"
  },
  {
    "code": "V91.4",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, velero"
  },
  {
    "code": "V91.5",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, canoa o kayak"
  },
  {
    "code": "V91.6",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, balsa inflable (sin motor)"
  },
  {
    "code": "V91.7",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, esqu√≠ acu√°tico"
  },
  {
    "code": "V91.8",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, otro veh√≠culo acu√°tico sin motor"
  },
  {
    "code": "V91.9",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo, veh√≠culo acu√°tico no especificado"
  },
  {
    "code": "V92.0",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, barco mercante"
  },
  {
    "code": "V92.1",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, barco de pasajeros"
  },
  {
    "code": "V92.2",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, bote de pesca"
  },
  {
    "code": "V92.3",
    "description": ""
  },
  {
    "code": "V92.4",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, velero"
  },
  {
    "code": "V92.5",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, canoa o kayak"
  },
  {
    "code": "V92.6",
    "description": ""
  },
  {
    "code": "V92.7",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n, esqu√≠ acu√°tico"
  },
  {
    "code": "V92.8",
    "description": ""
  },
  {
    "code": "V92.9",
    "description": ""
  },
  {
    "code": "V93.0",
    "description": ""
  },
  {
    "code": "V93.1",
    "description": ""
  },
  {
    "code": "V93.2",
    "description": "Accidente en una embarcaci√≥n, sin accidente a la embarcaci√≥n, que no causa ahogamiento o sumersi√≥n, bote de pesca"
  },
  {
    "code": "V93.3",
    "description": ""
  },
  {
    "code": "V93.4",
    "description": "Accidente en una embarcaci√≥n, sin accidente a la embarcaci√≥n, que no causa ahogamiento o sumersi√≥n, velero"
  },
  {
    "code": "V93.5",
    "description": "Accidente en una embarcaci√≥n, sin accidente a la embarcaci√≥n, que no causa ahogamiento o sumersi√≥n, canoa o kayak"
  },
  {
    "code": "V93.6",
    "description": ""
  },
  {
    "code": "V93.7",
    "description": "Accidente en una embarcaci√≥n, sin accidente a la embarcaci√≥n, que no causa ahogamiento o sumersi√≥n, esqu√≠ acu√°tico"
  },
  {
    "code": "V93.8",
    "description": ""
  },
  {
    "code": "V93.9",
    "description": ""
  },
  {
    "code": "V94.0",
    "description": "Otros accidentes de transporte por agua, y los no especificados, barco mercante"
  },
  {
    "code": "V94.1",
    "description": "Otros accidentes de transporte por agua, y los no especificados, barco de pasajeros"
  },
  {
    "code": "V94.2",
    "description": "Otros accidentes de transporte por agua, y los no especificados, bote de pesca"
  },
  {
    "code": "V94.3",
    "description": "Otros accidentes de transporte por agua, y los no especificados, otro veh√≠culo acu√°tico con motor"
  },
  {
    "code": "V94.4",
    "description": "Otros accidentes de transporte por agua, y los no especificados, velero"
  },
  {
    "code": "V94.5",
    "description": "Otros accidentes de transporte por agua, y los no especificados, canoa o kayak"
  },
  {
    "code": "V94.6",
    "description": "Otros accidentes de transporte por agua, y los no especificados, balsa inflable (sin motor)"
  },
  {
    "code": "V94.7",
    "description": "Otros accidentes de transporte por agua, y los no especificados, esqu√≠ acu√°tico"
  },
  {
    "code": "V94.8",
    "description": "Otros accidentes de transporte por agua, y los no especificados, otro veh√≠culo acu√°tico sin motor"
  },
  {
    "code": "V94.9",
    "description": "Otros accidentes de transporte por agua, y los no especificados, veh√≠culo acu√°tico no especificado"
  },
  {
    "code": "V95.0",
    "description": "Accidente de helic√≥ptero con ocupante lesionado"
  },
  {
    "code": "V95.1",
    "description": "Accidente de planeador ultra liviano, micro liviano o motorizado, con ocupante lesionado"
  },
  {
    "code": "V95.2",
    "description": "Accidente de otros veh√≠culos a√©reos de alas fijas, privados, con ocupante lesionado"
  },
  {
    "code": "V95.3",
    "description": "Accidente de veh√≠culo a√©reo de alas fijas, comercial, con ocupante lesionado"
  },
  {
    "code": "V95.4",
    "description": "Accidente de nave espacial, con ocupante lesionado"
  },
  {
    "code": "V95.8",
    "description": "Accidente de otras aeronaves, con ocupante lesionado"
  },
  {
    "code": "V95.9",
    "description": "Accidente de aeronave no especificada, con ocupante lesionado"
  },
  {
    "code": "V96.0",
    "description": "Accidente de globo aerost√°tico, con ocupante lesionado"
  },
  {
    "code": "V96.1",
    "description": "Accidente de ala delta, con ocupante lesionado"
  },
  {
    "code": "V96.2",
    "description": "Accidente de planeador (sin motor), con ocupante lesionado"
  },
  {
    "code": "V96.8",
    "description": "Accidente de otras aeronaves sin motor, con ocupante lesionado"
  },
  {
    "code": "V96.9",
    "description": "Accidente de aeronave sin motor no especificada, con ocupante lesionado"
  },
  {
    "code": "V97.0",
    "description": "Ocupante de aeronave lesionado en otros accidentes especificados de transporte a√©reo"
  },
  {
    "code": "V97.1",
    "description": "Persona lesionada al subir o bajar de una aeronave"
  },
  {
    "code": "V97.2",
    "description": "Paracaidista lesionado en accidente de transporte a√©reo"
  },
  {
    "code": "V97.3",
    "description": "Persona en tierra lesionada por accidente de transporte a√©reo"
  },
  {
    "code": "V97.8",
    "description": "Otros accidentes de transporte a√©reo, no clasificados en otra parte"
  },
  {
    "code": "W00.0",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en vivienda"
  },
  {
    "code": "W00.1",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en instituci√≥n residencial"
  },
  {
    "code": "W00.2",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W00.3",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en √°reas de deporte y atletismo"
  },
  {
    "code": "W00.4",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en calles y carreteras"
  },
  {
    "code": "W00.5",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en comercio y √°rea de servicios"
  },
  {
    "code": "W00.6",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W00.7",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en granja"
  },
  {
    "code": "W00.8",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en otro lugar especificado"
  },
  {
    "code": "W00.9",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve, en lugar no especificado"
  },
  {
    "code": "W01.0",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en vivienda"
  },
  {
    "code": "W01.1",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en instituci√≥n residencial"
  },
  {
    "code": "W01.2",
    "description": ""
  },
  {
    "code": "W01.3",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en √°reas de deporte y atletismo"
  },
  {
    "code": "W01.4",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en calles y carreteras"
  },
  {
    "code": "W01.5",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en comercio y √°rea de servicios"
  },
  {
    "code": "W01.6",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W01.7",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en granja"
  },
  {
    "code": "W01.8",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en otro lugar especificado"
  },
  {
    "code": "W01.9",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©, en lugar no especificado"
  },
  {
    "code": "W02.0",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en vivienda"
  },
  {
    "code": "W02.1",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en instituci√≥n residencial"
  },
  {
    "code": "W02.2",
    "description": ""
  },
  {
    "code": "W02.3",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en √°reas de deporte y atletismo"
  },
  {
    "code": "W02.4",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en calles y carreteras"
  },
  {
    "code": "W02.5",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en comercio y √°rea de servicios"
  },
  {
    "code": "W02.6",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W02.7",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en granja"
  },
  {
    "code": "W02.8",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en otro lugar especificado"
  },
  {
    "code": "W02.9",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta, en lugar no especificado"
  },
  {
    "code": "W03.0",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en vivienda"
  },
  {
    "code": "W03.1",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en instituci√≥n residencial"
  },
  {
    "code": "W03.2",
    "description": ""
  },
  {
    "code": "W03.3",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en √°reas de deporte y atletismo"
  },
  {
    "code": "W03.4",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en calles y carreteras"
  },
  {
    "code": "W03.5",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en comercio y √°rea de servicios"
  },
  {
    "code": "W03.6",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W03.7",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en granja"
  },
  {
    "code": "W03.8",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en otro lugar especificado"
  },
  {
    "code": "W03.9",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona, en lugar no especificado"
  },
  {
    "code": "W04.0",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en vivienda"
  },
  {
    "code": "W04.1",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en instituci√≥n residencial"
  },
  {
    "code": "W04.2",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W04.3",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W04.4",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en calles y carreteras"
  },
  {
    "code": "W04.5",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en comercio y √°rea de servicios"
  },
  {
    "code": "W04.6",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W04.7",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en granja"
  },
  {
    "code": "W04.8",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en otro lugar especificado"
  },
  {
    "code": "W04.9",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas, en lugar no especificado"
  },
  {
    "code": "W05.0",
    "description": "Ca√≠da que implica silla de ruedas, en vivienda"
  },
  {
    "code": "W05.1",
    "description": "Ca√≠da que implica silla de ruedas, en instituci√≥n residencial"
  },
  {
    "code": "W05.2",
    "description": "Ca√≠da que implica silla de ruedas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W05.3",
    "description": "Ca√≠da que implica silla de ruedas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W05.4",
    "description": "Ca√≠da que implica silla de ruedas, en calles y carreteras"
  },
  {
    "code": "W05.5",
    "description": "Ca√≠da que implica silla de ruedas, en comercio y √°rea de servicios"
  },
  {
    "code": "W05.6",
    "description": "Ca√≠da que implica silla de ruedas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W05.7",
    "description": "Ca√≠da que implica silla de ruedas, en granja"
  },
  {
    "code": "W05.8",
    "description": "Ca√≠da que implica silla de ruedas, en otro lugar especificado"
  },
  {
    "code": "W05.9",
    "description": "Ca√≠da que implica silla de ruedas, en lugar no especificado"
  },
  {
    "code": "W06.0",
    "description": "Ca√≠da que implica cama, en vivienda"
  },
  {
    "code": "W06.1",
    "description": "Ca√≠da que implica cama, en instituci√≥n residencial"
  },
  {
    "code": "W06.2",
    "description": "Ca√≠da que implica cama, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W06.3",
    "description": "Ca√≠da que implica cama, en √°reas de deporte y atletismo"
  },
  {
    "code": "W06.4",
    "description": "Ca√≠da que implica cama, en calles y carreteras"
  },
  {
    "code": "W06.5",
    "description": "Ca√≠da que implica cama, en comercio y √°rea de servicios"
  },
  {
    "code": "W06.6",
    "description": "Ca√≠da que implica cama, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W06.7",
    "description": "Ca√≠da que implica cama, en granja"
  },
  {
    "code": "W06.8",
    "description": "Ca√≠da que implica cama, en otro lugar especificado"
  },
  {
    "code": "W06.9",
    "description": "Ca√≠da que implica cama, en lugar no especificado"
  },
  {
    "code": "W07.0",
    "description": "Ca√≠da que implica silla, en vivienda"
  },
  {
    "code": "W07.1",
    "description": "Ca√≠da que implica silla, en instituci√≥n residencial"
  },
  {
    "code": "W07.2",
    "description": "Ca√≠da que implica silla, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W07.3",
    "description": "Ca√≠da que implica silla, en √°reas de deporte y atletismo"
  },
  {
    "code": "W07.4",
    "description": "Ca√≠da que implica silla, en calles y carreteras"
  },
  {
    "code": "W07.5",
    "description": "Ca√≠da que implica silla, en comercio y √°rea de servicios"
  },
  {
    "code": "W07.6",
    "description": "Ca√≠da que implica silla, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W07.7",
    "description": "Ca√≠da que implica silla, en granja"
  },
  {
    "code": "W07.8",
    "description": "Ca√≠da que implica silla, en otro lugar especificado"
  },
  {
    "code": "W07.9",
    "description": "Ca√≠da que implica silla, en lugar no especificado"
  },
  {
    "code": "W08.0",
    "description": "Ca√≠da que implica otro mueble, en vivienda"
  },
  {
    "code": "W08.1",
    "description": "Ca√≠da que implica otro mueble, en instituci√≥n residencial"
  },
  {
    "code": "W08.2",
    "description": "Ca√≠da que implica otro mueble, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W08.3",
    "description": "Ca√≠da que implica otro mueble, en √°reas de deporte y atletismo"
  },
  {
    "code": "W08.4",
    "description": "Ca√≠da que implica otro mueble, en calles y carreteras"
  },
  {
    "code": "W08.5",
    "description": "Ca√≠da que implica otro mueble, en comercio y √°rea de servicios"
  },
  {
    "code": "W08.6",
    "description": "Ca√≠da que implica otro mueble, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W08.7",
    "description": "Ca√≠da que implica otro mueble, en granja"
  },
  {
    "code": "W08.8",
    "description": "Ca√≠da que implica otro mueble, en otro lugar especificado"
  },
  {
    "code": "W08.9",
    "description": "Ca√≠da que implica otro mueble, en lugar no especificado"
  },
  {
    "code": "W09.0",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en vivienda"
  },
  {
    "code": "W09.1",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en instituci√≥n residencial"
  },
  {
    "code": "W09.2",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W09.3",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en √°reas de deporte y atletismo"
  },
  {
    "code": "W09.4",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en calles y carreteras"
  },
  {
    "code": "W09.5",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en comercio y √°rea de servicios"
  },
  {
    "code": "W09.6",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W09.7",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en granja"
  },
  {
    "code": "W09.8",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en otro lugar especificado"
  },
  {
    "code": "W09.9",
    "description": "Ca√≠da que implica equipos para juegos infantiles, en lugar no especificado"
  },
  {
    "code": "W10.0",
    "description": "Ca√≠da en o desde escalera y escalones, en vivienda"
  },
  {
    "code": "W10.1",
    "description": "Ca√≠da en o desde escalera y escalones, en instituci√≥n residencial"
  },
  {
    "code": "W10.2",
    "description": "Ca√≠da en o desde escalera y escalones, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W10.3",
    "description": "Ca√≠da en o desde escalera y escalones, en √°reas de deporte y atletismo"
  },
  {
    "code": "W10.4",
    "description": "Ca√≠da en o desde escalera y escalones, en calles y carreteras"
  },
  {
    "code": "W10.5",
    "description": "Ca√≠da en o desde escalera y escalones, en comercio y √°rea de servicios"
  },
  {
    "code": "W10.6",
    "description": "Ca√≠da en o desde escalera y escalones, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W10.7",
    "description": "Ca√≠da en o desde escalera y escalones, en granja"
  },
  {
    "code": "W10.8",
    "description": "Ca√≠da en o desde escalera y escalones, en otro lugar especificado"
  },
  {
    "code": "W10.9",
    "description": "Ca√≠da en o desde escalera y escalones, en lugar no especificado"
  },
  {
    "code": "W11.0",
    "description": "Ca√≠da en o desde escaleras manuales, en vivienda"
  },
  {
    "code": "W11.1",
    "description": "Ca√≠da en o desde escaleras manuales, en instituci√≥n residencial"
  },
  {
    "code": "W11.2",
    "description": "Ca√≠da en o desde escaleras manuales, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W11.3",
    "description": "Ca√≠da en o desde escaleras manuales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W11.4",
    "description": "Ca√≠da en o desde escaleras manuales, en calles y carreteras"
  },
  {
    "code": "W11.5",
    "description": "Ca√≠da en o desde escaleras manuales, en comercio y √°rea de servicios"
  },
  {
    "code": "W11.6",
    "description": "Ca√≠da en o desde escaleras manuales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W11.7",
    "description": "Ca√≠da en o desde escaleras manuales, en granja"
  },
  {
    "code": "W11.8",
    "description": "Ca√≠da en o desde escaleras manuales, en otro lugar especificado"
  },
  {
    "code": "W11.9",
    "description": "Ca√≠da en o desde escaleras manuales, en lugar no especificado"
  },
  {
    "code": "W12.0",
    "description": "Ca√≠da en o desde andamio, en vivienda"
  },
  {
    "code": "W12.1",
    "description": "Ca√≠da en o desde andamio, en instituci√≥n residencial"
  },
  {
    "code": "W12.2",
    "description": "Ca√≠da en o desde andamio, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W12.3",
    "description": "Ca√≠da en o desde andamio, en √°reas de deporte y atletismo"
  },
  {
    "code": "W12.4",
    "description": "Ca√≠da en o desde andamio, en calles y carreteras"
  },
  {
    "code": "W12.5",
    "description": "Ca√≠da en o desde andamio, en comercio y √°rea de servicios"
  },
  {
    "code": "W12.6",
    "description": "Ca√≠da en o desde andamio, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W12.7",
    "description": "Ca√≠da en o desde andamio, en granja"
  },
  {
    "code": "W12.8",
    "description": "Ca√≠da en o desde andamio, en otro lugar especificado"
  },
  {
    "code": "W12.9",
    "description": "Ca√≠da en o desde andamio, en lugar no especificado"
  },
  {
    "code": "W13.0",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en vivienda"
  },
  {
    "code": "W13.1",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "W13.2",
    "description": ""
  },
  {
    "code": "W13.3",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "W13.4",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en calles y carreteras"
  },
  {
    "code": "W13.5",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "W13.6",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W13.7",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en granja"
  },
  {
    "code": "W13.8",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en otro lugar especificado"
  },
  {
    "code": "W13.9",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n, en lugar no especificado"
  },
  {
    "code": "W14.0",
    "description": "Ca√≠da desde un √°rbol, en vivienda"
  },
  {
    "code": "W14.1",
    "description": "Ca√≠da desde un √°rbol, en instituci√≥n residencial"
  },
  {
    "code": "W14.2",
    "description": "Ca√≠da desde un √°rbol, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W14.3",
    "description": "Ca√≠da desde un √°rbol, en √°reas de deporte y atletismo"
  },
  {
    "code": "W14.4",
    "description": "Ca√≠da desde un √°rbol, en calles y carreteras"
  },
  {
    "code": "W14.5",
    "description": "Ca√≠da desde un √°rbol, en comercio y √°rea de servicios"
  },
  {
    "code": "W14.6",
    "description": "Ca√≠da desde un √°rbol, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W14.7",
    "description": "Ca√≠da desde un √°rbol, en granja"
  },
  {
    "code": "W14.8",
    "description": "Ca√≠da desde un √°rbol, en otro lugar especificado"
  },
  {
    "code": "W14.9",
    "description": "Ca√≠da desde un √°rbol, en lugar no especificado"
  },
  {
    "code": "W15.0",
    "description": "Ca√≠da desde pe√±asco, en vivienda"
  },
  {
    "code": "W15.1",
    "description": "Ca√≠da desde pe√±asco, en instituci√≥n residencial"
  },
  {
    "code": "W15.2",
    "description": "Ca√≠da desde pe√±asco, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W15.3",
    "description": "Ca√≠da desde pe√±asco, en √°reas de deporte y atletismo"
  },
  {
    "code": "W15.4",
    "description": "Ca√≠da desde pe√±asco, en calles y carreteras"
  },
  {
    "code": "W15.5",
    "description": "Ca√≠da desde pe√±asco, en comercio y √°rea de servicios"
  },
  {
    "code": "W15.6",
    "description": "Ca√≠da desde pe√±asco, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W15.7",
    "description": "Ca√≠da desde pe√±asco, en granja"
  },
  {
    "code": "W15.8",
    "description": "Ca√≠da desde pe√±asco, en otro lugar especificado"
  },
  {
    "code": "W15.9",
    "description": "Ca√≠da desde pe√±asco, en lugar no especificado"
  },
  {
    "code": "W16.0",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en vivienda"
  },
  {
    "code": "W16.1",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en instituci√≥n residencial"
  },
  {
    "code": "W16.2",
    "description": ""
  },
  {
    "code": "W16.3",
    "description": ""
  },
  {
    "code": "W16.4",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en calles y carreteras"
  },
  {
    "code": "W16.5",
    "description": ""
  },
  {
    "code": "W16.6",
    "description": ""
  },
  {
    "code": "W16.7",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en granja"
  },
  {
    "code": "W16.8",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en otro lugar especificado"
  },
  {
    "code": "W16.9",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento, en lugar no especificado"
  },
  {
    "code": "W17.0",
    "description": "Otras ca√≠das de un nivel a otro, en vivienda"
  },
  {
    "code": "W17.1",
    "description": "Otras ca√≠das de un nivel a otro, en instituci√≥n residencial"
  },
  {
    "code": "W17.2",
    "description": "Otras ca√≠das de un nivel a otro, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W17.3",
    "description": "Otras ca√≠das de un nivel a otro, en √°reas de deporte y atletismo"
  },
  {
    "code": "W17.4",
    "description": "Otras ca√≠das de un nivel a otro, en calles y carreteras"
  },
  {
    "code": "W17.5",
    "description": "Otras ca√≠das de un nivel a otro, en comercio y √°rea de servicios"
  },
  {
    "code": "W17.6",
    "description": "Otras ca√≠das de un nivel a otro, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W17.7",
    "description": "Otras ca√≠das de un nivel a otro, en granja"
  },
  {
    "code": "W17.8",
    "description": "Otras ca√≠das de un nivel a otro, en otro lugar especificado"
  },
  {
    "code": "W17.9",
    "description": "Otras ca√≠das de un nivel a otro, en lugar no especificado"
  },
  {
    "code": "W18.0",
    "description": "Otras ca√≠das en el mismo nivel, en vivienda"
  },
  {
    "code": "W18.1",
    "description": "Otras ca√≠das en el mismo nivel, en instituci√≥n residencial"
  },
  {
    "code": "W18.2",
    "description": "Otras ca√≠das en el mismo nivel, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W18.3",
    "description": "Otras ca√≠das en el mismo nivel, en √°reas de deporte y atletismo"
  },
  {
    "code": "W18.4",
    "description": "Otras ca√≠das en el mismo nivel, en calles y carreteras"
  },
  {
    "code": "W18.5",
    "description": "Otras ca√≠das en el mismo nivel, en comercio y √°rea de servicios"
  },
  {
    "code": "W18.6",
    "description": "Otras ca√≠das en el mismo nivel, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W18.7",
    "description": "Otras ca√≠das en el mismo nivel, en granja"
  },
  {
    "code": "W18.8",
    "description": "Otras ca√≠das en el mismo nivel, en otro lugar especificado"
  },
  {
    "code": "W18.9",
    "description": "Otras ca√≠das en el mismo nivel, en lugar no especificado"
  },
  {
    "code": "W19.0",
    "description": "Ca√≠da no especificada, en vivienda"
  },
  {
    "code": "W19.1",
    "description": "Ca√≠da no especificada, en instituci√≥n residencial"
  },
  {
    "code": "W19.2",
    "description": "Ca√≠da no especificada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W19.3",
    "description": "Ca√≠da no especificada, en √°reas de deporte y atletismo"
  },
  {
    "code": "W19.4",
    "description": "Ca√≠da no especificada, en calles y carreteras"
  },
  {
    "code": "W19.5",
    "description": "Ca√≠da no especificada, en comercio y √°rea de servicios"
  },
  {
    "code": "W19.6",
    "description": "Ca√≠da no especificada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W19.7",
    "description": "Ca√≠da no especificada, en granja"
  },
  {
    "code": "W19.8",
    "description": "Ca√≠da no especificada, en otro lugar especificado"
  },
  {
    "code": "W19.9",
    "description": "Ca√≠da no especificada, en lugar no especificado"
  },
  {
    "code": "W20.0",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en vivienda"
  },
  {
    "code": "W20.1",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en instituci√≥n residencial"
  },
  {
    "code": "W20.2",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W20.3",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en √°reas de deporte y atletismo"
  },
  {
    "code": "W20.4",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en calles y carreteras"
  },
  {
    "code": "W20.5",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en comercio y √°rea de servicios"
  },
  {
    "code": "W20.6",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W20.7",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en granja"
  },
  {
    "code": "W20.8",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en otro lugar especificado"
  },
  {
    "code": "W20.9",
    "description": "Golpe por objeto arrojado, proyectado o que cae, en lugar no especificado"
  },
  {
    "code": "W21.0",
    "description": "Golpe contra o golpeado por equipo para deportes, en  vivienda"
  },
  {
    "code": "W21.1",
    "description": "Golpe contra o golpeado por equipo para deportes, en instituci√≥n residencial"
  },
  {
    "code": "W21.2",
    "description": "Golpe contra o golpeado por equipo para deportes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W21.3",
    "description": "Golpe contra o golpeado por equipo para deportes, en √°reas de deporte y atletismo"
  },
  {
    "code": "W21.4",
    "description": "Golpe contra o golpeado por equipo para deportes, en calles y carreteras"
  },
  {
    "code": "W21.5",
    "description": "Golpe contra o golpeado por equipo para deportes, en comercio y √°rea de servicios"
  },
  {
    "code": "W21.6",
    "description": "Golpe contra o golpeado por equipo para deportes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W21.7",
    "description": "Golpe contra o golpeado por equipo para deportes, en granja"
  },
  {
    "code": "W21.8",
    "description": "Golpe contra o golpeado por equipo para deportes, en otro lugar especificado"
  },
  {
    "code": "W21.9",
    "description": "Golpe contra o golpeado por equipo para deportes, en lugar no especificado"
  },
  {
    "code": "W22.0",
    "description": "Golpe contra o golpeado por otros objetos, en vivienda"
  },
  {
    "code": "W22.1",
    "description": "Golpe contra o golpeado por otros objetos, en instituci√≥n residencial"
  },
  {
    "code": "W22.2",
    "description": "Golpe contra o golpeado por otros objetos, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W22.3",
    "description": "Golpe contra o golpeado por otros objetos, en √°reas de deporte y atletismo"
  },
  {
    "code": "W22.4",
    "description": "Golpe contra o golpeado por otros objetos, en calles y carreteras"
  },
  {
    "code": "W22.5",
    "description": "Golpe contra o golpeado por otros objetos, en comercio y √°rea de servicios"
  },
  {
    "code": "W22.6",
    "description": "Golpe contra o golpeado por otros objetos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W22.7",
    "description": "Golpe contra o golpeado por otros objetos, en granja"
  },
  {
    "code": "W22.8",
    "description": "Golpe contra o golpeado por otros objetos, en otro lugar especificado"
  },
  {
    "code": "W22.9",
    "description": "Golpe contra o golpeado por otros objetos, en lugar no especificado"
  },
  {
    "code": "W23.0",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en vivienda"
  },
  {
    "code": "W23.1",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en instituci√≥n residencial"
  },
  {
    "code": "W23.2",
    "description": ""
  },
  {
    "code": "W23.3",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en √°reas de deporte y atletismo"
  },
  {
    "code": "W23.4",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en calles y carreteras"
  },
  {
    "code": "W23.5",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en comercio y √°rea de servicios"
  },
  {
    "code": "W23.6",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W23.7",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en granja"
  },
  {
    "code": "W23.8",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en otro lugar especificado"
  },
  {
    "code": "W23.9",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos, en lugar no especificado"
  },
  {
    "code": "W24.0",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en vivienda"
  },
  {
    "code": "W24.1",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en instituci√≥n residencial"
  },
  {
    "code": "W24.2",
    "description": ""
  },
  {
    "code": "W24.3",
    "description": ""
  },
  {
    "code": "W24.4",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en calles y carreteras"
  },
  {
    "code": "W24.5",
    "description": ""
  },
  {
    "code": "W24.6",
    "description": ""
  },
  {
    "code": "W24.7",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en granja"
  },
  {
    "code": "W24.8",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en otro lugar especificado"
  },
  {
    "code": "W24.9",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte, en lugar no especificado"
  },
  {
    "code": "W25.0",
    "description": "Contacto traum√°tico con vidrio cortante, en vivienda"
  },
  {
    "code": "W25.1",
    "description": "Contacto traum√°tico con vidrio cortante, en instituci√≥n residencial"
  },
  {
    "code": "W25.2",
    "description": "Contacto traum√°tico con vidrio cortante, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W25.3",
    "description": "Contacto traum√°tico con vidrio cortante, en √°reas de deporte y atletismo"
  },
  {
    "code": "W25.4",
    "description": "Contacto traum√°tico con vidrio cortante, en calles y carreteras"
  },
  {
    "code": "W25.5",
    "description": "Contacto traum√°tico con vidrio cortante, en comercio y √°rea de servicios"
  },
  {
    "code": "W25.6",
    "description": "Contacto traum√°tico con vidrio cortante, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W25.7",
    "description": "Contacto traum√°tico con vidrio cortante, en granja"
  },
  {
    "code": "W25.8",
    "description": "Contacto traum√°tico con vidrio cortante, en otro lugar especificado"
  },
  {
    "code": "W25.9",
    "description": "Contacto traum√°tico con vidrio cortante, en lugar no especificado"
  },
  {
    "code": "W26.0",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en  vivienda"
  },
  {
    "code": "W26.1",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en instituci√≥n residencial"
  },
  {
    "code": "W26.2",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W26.3",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en √°reas de deporte y atletismo"
  },
  {
    "code": "W26.4",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en calles y carreteras"
  },
  {
    "code": "W26.5",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en comercio y √°rea de servicios"
  },
  {
    "code": "W26.6",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W26.7",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en granja"
  },
  {
    "code": "W26.8",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en otro lugar especificado"
  },
  {
    "code": "W26.9",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al, en lugar no especificado"
  },
  {
    "code": "W27.0",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en vivienda"
  },
  {
    "code": "W27.1",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en instituci√≥n residencial"
  },
  {
    "code": "W27.2",
    "description": ""
  },
  {
    "code": "W27.3",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en √°reas de deporte y atletismo"
  },
  {
    "code": "W27.4",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en calles y carreteras"
  },
  {
    "code": "W27.5",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en comercio y √°rea de servicios"
  },
  {
    "code": "W27.6",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W27.7",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en granja"
  },
  {
    "code": "W27.8",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en otro lugar especificado"
  },
  {
    "code": "W27.9",
    "description": "Contacto traum√°tico con herramientas manuales sin motor, en lugar no especificado"
  },
  {
    "code": "W28.0",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en vivienda"
  },
  {
    "code": "W28.1",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en instituci√≥n residencial"
  },
  {
    "code": "W28.2",
    "description": ""
  },
  {
    "code": "W28.3",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en √°reas de deporte y atletismo"
  },
  {
    "code": "W28.4",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en calles y carreteras"
  },
  {
    "code": "W28.5",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en comercio y √°rea de servicios"
  },
  {
    "code": "W28.6",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W28.7",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en granja"
  },
  {
    "code": "W28.8",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en otro lugar especificado"
  },
  {
    "code": "W28.9",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor, en lugar no especificado"
  },
  {
    "code": "W29.0",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en vivienda"
  },
  {
    "code": "W29.1",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en instituci√≥n residencial"
  },
  {
    "code": "W29.2",
    "description": ""
  },
  {
    "code": "W29.3",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en √°reas de deporte y atletismo"
  },
  {
    "code": "W29.4",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en calles y carreteras"
  },
  {
    "code": "W29.5",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en comercio y √°rea de servicios"
  },
  {
    "code": "W29.6",
    "description": ""
  },
  {
    "code": "W29.7",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en granja"
  },
  {
    "code": "W29.8",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en otro lugar especificado"
  },
  {
    "code": "W29.9",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor, en lugar no especificado"
  },
  {
    "code": "W30.0",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en vivienda"
  },
  {
    "code": "W30.1",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en instituci√≥n residencial"
  },
  {
    "code": "W30.2",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W30.3",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en √°reas de deporte y atletismo"
  },
  {
    "code": "W30.4",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en calles y carreteras"
  },
  {
    "code": "W30.5",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en comercio y √°rea de servicios"
  },
  {
    "code": "W30.6",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W30.7",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en granja"
  },
  {
    "code": "W30.8",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en otro lugar especificado"
  },
  {
    "code": "W30.9",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola, en lugar no especificado"
  },
  {
    "code": "W31.0",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en vivienda"
  },
  {
    "code": "W31.1",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "W31.2",
    "description": ""
  },
  {
    "code": "W31.3",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W31.4",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "W31.5",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "W31.6",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W31.7",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en granja"
  },
  {
    "code": "W31.8",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "W31.9",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "W32.0",
    "description": "Disparo de arma corta, en vivienda"
  },
  {
    "code": "W32.1",
    "description": "Disparo de arma corta, en instituci√≥n residencial"
  },
  {
    "code": "W32.2",
    "description": "Disparo de arma corta, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W32.3",
    "description": "Disparo de arma corta, en √°reas de deporte y atletismo"
  },
  {
    "code": "W32.4",
    "description": "Disparo de arma corta, en calles y carreteras"
  },
  {
    "code": "W32.5",
    "description": "Disparo de arma corta, en comercio y √°rea de servicios"
  },
  {
    "code": "W32.6",
    "description": "Disparo de arma corta, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W32.7",
    "description": "Disparo de arma corta, en granja"
  },
  {
    "code": "W32.8",
    "description": "Disparo de arma corta, en otro lugar especificado"
  },
  {
    "code": "W32.9",
    "description": "Disparo de arma corta, en lugar no especificado"
  },
  {
    "code": "W33.0",
    "description": "Disparo de rifle, escopeta y arma larga, en vivienda"
  },
  {
    "code": "W33.1",
    "description": "Disparo de rifle, escopeta y arma larga, en instituci√≥n residencial"
  },
  {
    "code": "W33.2",
    "description": "Disparo de rifle, escopeta y arma larga, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W33.3",
    "description": "Disparo de rifle, escopeta y arma larga, en √°reas de deporte y atletismo"
  },
  {
    "code": "W33.4",
    "description": "Disparo de rifle, escopeta y arma larga, en calles y carreteras"
  },
  {
    "code": "W33.5",
    "description": "Disparo de rifle, escopeta y arma larga, en comercio y √°rea de servicios"
  },
  {
    "code": "W33.6",
    "description": "Disparo de rifle, escopeta y arma larga, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W33.7",
    "description": "Disparo de rifle, escopeta y arma larga, en granja"
  },
  {
    "code": "W33.8",
    "description": "Disparo de rifle, escopeta y arma larga, en otro lugar especificado"
  },
  {
    "code": "W33.9",
    "description": "Disparo de rifle, escopeta y arma larga, en lugar no especificado"
  },
  {
    "code": "W34.0",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en vivienda"
  },
  {
    "code": "W34.1",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "W34.2",
    "description": ""
  },
  {
    "code": "W34.3",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W34.4",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "W34.5",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "W34.6",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W34.7",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en granja"
  },
  {
    "code": "W34.8",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "W34.9",
    "description": "Disparo de otras armas de fuego, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "W35.0",
    "description": "Explosi√≥n y rotura de caldera, en vivienda"
  },
  {
    "code": "W35.1",
    "description": "Explosi√≥n y rotura de caldera, en instituci√≥n residencial"
  },
  {
    "code": "W35.2",
    "description": "Explosi√≥n y rotura de caldera, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W35.3",
    "description": "Explosi√≥n y rotura de caldera, en √°reas de deporte y atletismo"
  },
  {
    "code": "W35.4",
    "description": "Explosi√≥n y rotura de caldera, en calles y carreteras"
  },
  {
    "code": "W35.5",
    "description": "Explosi√≥n y rotura de caldera, en comercio y √°rea de servicios"
  },
  {
    "code": "W35.6",
    "description": "Explosi√≥n y rotura de caldera, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W35.7",
    "description": "Explosi√≥n y rotura de caldera, en granja"
  },
  {
    "code": "W35.8",
    "description": "Explosi√≥n y rotura de caldera, en otro lugar especificado"
  },
  {
    "code": "W35.9",
    "description": "Explosi√≥n y rotura de caldera, en lugar no especificado"
  },
  {
    "code": "W36.0",
    "description": "Explosi√≥n y rotura de cilindro con gas, en vivienda"
  },
  {
    "code": "W36.1",
    "description": "Explosi√≥n y rotura de cilindro con gas, en instituci√≥n residencial"
  },
  {
    "code": "W36.2",
    "description": "Explosi√≥n y rotura de cilindro con gas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W36.3",
    "description": "Explosi√≥n y rotura de cilindro con gas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W36.4",
    "description": "Explosi√≥n y rotura de cilindro con gas, en calles y carreteras"
  },
  {
    "code": "W36.5",
    "description": "Explosi√≥n y rotura de cilindro con gas, en comercio y √°rea de servicios"
  },
  {
    "code": "W36.6",
    "description": "Explosi√≥n y rotura de cilindro con gas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W36.7",
    "description": "Explosi√≥n y rotura de cilindro con gas, en granja"
  },
  {
    "code": "W36.8",
    "description": "Explosi√≥n y rotura de cilindro con gas, en otro lugar especificado"
  },
  {
    "code": "W36.9",
    "description": "Explosi√≥n y rotura de cilindro con gas, en lugar no especificado"
  },
  {
    "code": "W37.0",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en vivienda"
  },
  {
    "code": "W37.1",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en instituci√≥n residencial"
  },
  {
    "code": "W37.2",
    "description": ""
  },
  {
    "code": "W37.3",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en √°reas de deporte y atletismo"
  },
  {
    "code": "W37.4",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en calles y carreteras"
  },
  {
    "code": "W37.5",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en comercio y √°rea de servicios"
  },
  {
    "code": "W37.6",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W37.7",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en granja"
  },
  {
    "code": "W37.8",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en otro lugar especificado"
  },
  {
    "code": "W37.9",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada, en lugar no especificado"
  },
  {
    "code": "W38.0",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en vivienda"
  },
  {
    "code": "W38.1",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en instituci√≥n residencial"
  },
  {
    "code": "W38.2",
    "description": ""
  },
  {
    "code": "W38.3",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "W38.4",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en calles y carreteras"
  },
  {
    "code": "W38.5",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "W38.6",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W38.7",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en granja"
  },
  {
    "code": "W38.8",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en otro lugar especificado"
  },
  {
    "code": "W38.9",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados, en lugar no especificado"
  },
  {
    "code": "W39.0",
    "description": "Explosi√≥n de fuegos artificiales, en vivienda"
  },
  {
    "code": "W39.1",
    "description": "Explosi√≥n de fuegos artificiales, en instituci√≥n residencial"
  },
  {
    "code": "W39.2",
    "description": "Explosi√≥n de fuegos artificiales, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W39.3",
    "description": "Explosi√≥n de fuegos artificiales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W39.4",
    "description": "Explosi√≥n de fuegos artificiales, en calles y carreteras"
  },
  {
    "code": "W39.5",
    "description": "Explosi√≥n de fuegos artificiales, en comercio y √°rea de servicios"
  },
  {
    "code": "W39.6",
    "description": "Explosi√≥n de fuegos artificiales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W39.7",
    "description": "Explosi√≥n de fuegos artificiales, en granja"
  },
  {
    "code": "W39.8",
    "description": "Explosi√≥n de fuegos artificiales, en otro lugar especificado"
  },
  {
    "code": "W39.9",
    "description": "Explosi√≥n de fuegos artificiales, en lugar no especificado"
  },
  {
    "code": "W40.0",
    "description": "Explosi√≥n de otros materiales, en vivienda"
  },
  {
    "code": "W40.1",
    "description": "Explosi√≥n de otros materiales, en instituci√≥n residencial"
  },
  {
    "code": "W40.2",
    "description": "Explosi√≥n de otros materiales, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W40.3",
    "description": "Explosi√≥n de otros materiales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W40.4",
    "description": "Explosi√≥n de otros materiales, en calles y carreteras"
  },
  {
    "code": "W40.5",
    "description": "Explosi√≥n de otros materiales, en comercio y √°rea de servicios"
  },
  {
    "code": "W40.6",
    "description": "Explosi√≥n de otros materiales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W40.7",
    "description": "Explosi√≥n de otros materiales, en granja"
  },
  {
    "code": "W40.8",
    "description": "Explosi√≥n de otros materiales, en otro lugar especificado"
  },
  {
    "code": "W40.9",
    "description": "Explosi√≥n de otros materiales, en lugar no especificado"
  },
  {
    "code": "W41.0",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en vivienda"
  },
  {
    "code": "W41.1",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en instituci√≥n residencial"
  },
  {
    "code": "W41.2",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W41.3",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "W41.4",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en calles y carreteras"
  },
  {
    "code": "W41.5",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "W41.6",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W41.7",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en granja"
  },
  {
    "code": "W41.8",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en otro lugar especificado"
  },
  {
    "code": "W41.9",
    "description": "Exposici√≥n a chorro de alta presi√≥n, en lugar no especificado"
  },
  {
    "code": "W42.0",
    "description": "Exposici√≥n al ruido, en vivienda"
  },
  {
    "code": "W42.1",
    "description": "Exposici√≥n al ruido, en instituci√≥n residencial"
  },
  {
    "code": "W42.2",
    "description": "Exposici√≥n al ruido, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W42.3",
    "description": "Exposici√≥n al ruido, en √°reas de deporte y atletismo"
  },
  {
    "code": "W42.4",
    "description": "Exposici√≥n al ruido, en calles y carreteras"
  },
  {
    "code": "W42.5",
    "description": "Exposici√≥n al ruido, en comercio y √°rea de servicios"
  },
  {
    "code": "W42.6",
    "description": "Exposici√≥n al ruido, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W42.7",
    "description": "Exposici√≥n al ruido, en granja"
  },
  {
    "code": "W42.8",
    "description": "Exposici√≥n al ruido, en otro lugar especificado"
  },
  {
    "code": "W42.9",
    "description": "Exposici√≥n al ruido, en lugar no especificado"
  },
  {
    "code": "W43.0",
    "description": "Exposici√≥n a vibraciones, en vivienda"
  },
  {
    "code": "W43.1",
    "description": "Exposici√≥n a vibraciones, en instituci√≥n residencial"
  },
  {
    "code": "W43.2",
    "description": "Exposici√≥n a vibraciones, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W43.3",
    "description": "Exposici√≥n a vibraciones, en √°reas de deporte y atletismo"
  },
  {
    "code": "W43.4",
    "description": "Exposici√≥n a vibraciones, en calles y carreteras"
  },
  {
    "code": "W43.5",
    "description": "Exposici√≥n a vibraciones, en comercio y √°rea de servicios"
  },
  {
    "code": "W43.6",
    "description": "Exposici√≥n a vibraciones, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W43.7",
    "description": "Exposici√≥n a vibraciones, en granja"
  },
  {
    "code": "W43.8",
    "description": "Exposici√≥n a vibraciones, en otro lugar especificado"
  },
  {
    "code": "W43.9",
    "description": "Exposici√≥n a vibraciones, en lugar no especificado"
  },
  {
    "code": "W44.0",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en vivienda"
  },
  {
    "code": "W44.1",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en instituci√≥n residencial"
  },
  {
    "code": "W44.2",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W44.3",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en √°reas de deporte y atletismo"
  },
  {
    "code": "W44.4",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en calles y carreteras"
  },
  {
    "code": "W44.5",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en comercio y √°rea de servicios"
  },
  {
    "code": "W44.6",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W44.7",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en granja"
  },
  {
    "code": "W44.8",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en otro lugar especificado"
  },
  {
    "code": "W44.9",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural, en lugar no especificado"
  },
  {
    "code": "W45.0",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en vivienda"
  },
  {
    "code": "W45.1",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en instituci√≥n residencial"
  },
  {
    "code": "W45.2",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W45.3",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en √°reas de deporte y atletismo"
  },
  {
    "code": "W45.4",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en calles y carreteras"
  },
  {
    "code": "W45.5",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en comercio y √°rea de servicios"
  },
  {
    "code": "W45.6",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W45.7",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en granja"
  },
  {
    "code": "W45.8",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en otro lugar especificado"
  },
  {
    "code": "W45.9",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel, en lugar no especificado"
  },
  {
    "code": "W49.0",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en vivienda"
  },
  {
    "code": "W49.1",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "W49.2",
    "description": ""
  },
  {
    "code": "W49.3",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W49.4",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "W49.5",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "W49.6",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W49.7",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en granja"
  },
  {
    "code": "W49.8",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "W49.9",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "W50.0",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en vivienda"
  },
  {
    "code": "W50.1",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en instituci√≥n residencial"
  },
  {
    "code": "W50.2",
    "description": ""
  },
  {
    "code": "W50.3",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en √°reas de deporte y atletismo"
  },
  {
    "code": "W50.4",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en calles y carreteras"
  },
  {
    "code": "W50.5",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en comercio y √°rea de servicios"
  },
  {
    "code": "W50.6",
    "description": ""
  },
  {
    "code": "W50.7",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en granja"
  },
  {
    "code": "W50.8",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en otro lugar especificado"
  },
  {
    "code": "W50.9",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona, en lugar no especificado"
  },
  {
    "code": "W51.0",
    "description": "Choque o empell√≥n contra otra persona, en vivienda"
  },
  {
    "code": "W51.1",
    "description": "Choque o empell√≥n contra otra persona, en instituci√≥n residencial"
  },
  {
    "code": "W51.2",
    "description": "Choque o empell√≥n contra otra persona, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W51.3",
    "description": "Choque o empell√≥n contra otra persona, en √°reas de deporte y atletismo"
  },
  {
    "code": "W51.4",
    "description": "Choque o empell√≥n contra otra persona, en calles y carreteras"
  },
  {
    "code": "W51.5",
    "description": "Choque o empell√≥n contra otra persona, en comercio y √°rea de servicios"
  },
  {
    "code": "W51.6",
    "description": "Choque o empell√≥n contra otra persona, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W51.7",
    "description": "Choque o empell√≥n contra otra persona, en granja"
  },
  {
    "code": "W51.8",
    "description": "Choque o empell√≥n contra otra persona, en otro lugar especificado"
  },
  {
    "code": "W51.9",
    "description": "Choque o empell√≥n contra otra persona, en lugar no especificado"
  },
  {
    "code": "W52.0",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en vivienda"
  },
  {
    "code": "W52.1",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en instituci√≥n residencial"
  },
  {
    "code": "W52.2",
    "description": ""
  },
  {
    "code": "W52.3",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en √°reas de deporte y atletismo"
  },
  {
    "code": "W52.4",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en calles y carreteras"
  },
  {
    "code": "W52.5",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en comercio y √°rea de servicios"
  },
  {
    "code": "W52.6",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W52.7",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en granja"
  },
  {
    "code": "W52.8",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en otro lugar especificado"
  },
  {
    "code": "W52.9",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana, en lugar no especificado"
  },
  {
    "code": "W53.0",
    "description": "Mordedura de rata, en vivienda"
  },
  {
    "code": "W53.1",
    "description": "Mordedura de rata, en instituci√≥n residencial"
  },
  {
    "code": "W53.2",
    "description": "Mordedura de rata, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W53.3",
    "description": "Mordedura de rata, en √°reas de deporte y atletismo"
  },
  {
    "code": "W53.4",
    "description": "Mordedura de rata, en calles y carreteras"
  },
  {
    "code": "W53.5",
    "description": "Mordedura de rata, en comercio y √°rea de servicios"
  },
  {
    "code": "W53.6",
    "description": "Mordedura de rata, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W53.7",
    "description": "Mordedura de rata, en granja"
  },
  {
    "code": "W53.8",
    "description": "Mordedura de rata, en otro lugar especificado"
  },
  {
    "code": "W53.9",
    "description": "Mordedura de rata, en lugar no especificado"
  },
  {
    "code": "W54.0",
    "description": "Mordedura o ataque de perro, en vivienda"
  },
  {
    "code": "W54.1",
    "description": "Mordedura o ataque de perro, en instituci√≥n residencial"
  },
  {
    "code": "W54.2",
    "description": "Mordedura o ataque de perro, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W54.3",
    "description": "Mordedura o ataque de perro, en √°reas de deporte y atletismo"
  },
  {
    "code": "W54.4",
    "description": "Mordedura o ataque de perro, en calles y carreteras"
  },
  {
    "code": "W54.5",
    "description": "Mordedura o ataque de perro, en comercio y √°rea de servicios"
  },
  {
    "code": "W54.6",
    "description": "Mordedura o ataque de perro, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W54.7",
    "description": "Mordedura o ataque de perro, en granja"
  },
  {
    "code": "W54.8",
    "description": "Mordedura o ataque de perro, en otro lugar especificado"
  },
  {
    "code": "W54.9",
    "description": "Mordedura o ataque de perro, en lugar no especificado"
  },
  {
    "code": "W55.0",
    "description": "Mordedura o ataque de otros mam√≠feros, en vivienda"
  },
  {
    "code": "W55.1",
    "description": "Mordedura o ataque de otros mam√≠feros, en instituci√≥n residencial"
  },
  {
    "code": "W55.2",
    "description": "Mordedura o ataque de otros mam√≠feros, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W55.3",
    "description": "Mordedura o ataque de otros mam√≠feros, en √°reas de deporte y atletismo"
  },
  {
    "code": "W55.4",
    "description": "Mordedura o ataque de otros mam√≠feros, en calles y carreteras"
  },
  {
    "code": "W55.5",
    "description": "Mordedura o ataque de otros mam√≠feros, en comercio y √°rea de servicios"
  },
  {
    "code": "W55.6",
    "description": "Mordedura o ataque de otros mam√≠feros, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W55.7",
    "description": "Mordedura o ataque de otros mam√≠feros, en granja"
  },
  {
    "code": "W55.8",
    "description": "Mordedura o ataque de otros mam√≠feros, en otro lugar especificado"
  },
  {
    "code": "W55.9",
    "description": "Mordedura o ataque de otros mam√≠feros, en lugar no especificado"
  },
  {
    "code": "W56.0",
    "description": "Contacto traum√°tico con animales marinos, en vivienda"
  },
  {
    "code": "W56.1",
    "description": "Contacto traum√°tico con animales marinos, en instituci√≥n residencial"
  },
  {
    "code": "W56.2",
    "description": "Contacto traum√°tico con animales marinos, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W56.3",
    "description": "Contacto traum√°tico con animales marinos, en √°reas de deporte y atletismo"
  },
  {
    "code": "W56.4",
    "description": "Contacto traum√°tico con animales marinos, en calles y carreteras"
  },
  {
    "code": "W56.5",
    "description": "Contacto traum√°tico con animales marinos, en comercio y √°rea de servicios"
  },
  {
    "code": "W56.6",
    "description": "Contacto traum√°tico con animales marinos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W56.7",
    "description": "Contacto traum√°tico con animales marinos, en granja"
  },
  {
    "code": "W56.8",
    "description": "Contacto traum√°tico con animales marinos, en otro lugar especificado"
  },
  {
    "code": "W56.9",
    "description": "Contacto traum√°tico con animales marinos, en lugar no especificado"
  },
  {
    "code": "W57.0",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en vivienda"
  },
  {
    "code": "W57.1",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en instituci√≥n residencial"
  },
  {
    "code": "W57.2",
    "description": ""
  },
  {
    "code": "W57.3",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en √°reas de deporte y atletismo"
  },
  {
    "code": "W57.4",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en calles y carreteras"
  },
  {
    "code": "W57.5",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en comercio y √°rea de servicios"
  },
  {
    "code": "W57.6",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W57.7",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en granja"
  },
  {
    "code": "W57.8",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en otro lugar especificado"
  },
  {
    "code": "W57.9",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos, en lugar no especificado"
  },
  {
    "code": "W58.0",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en vivienda"
  },
  {
    "code": "W58.1",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en instituci√≥n residencial"
  },
  {
    "code": "W58.2",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W58.3",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en √°reas de deporte y atletismo"
  },
  {
    "code": "W58.4",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en calles y carreteras"
  },
  {
    "code": "W58.5",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en comercio y √°rea de servicios"
  },
  {
    "code": "W58.6",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W58.7",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en granja"
  },
  {
    "code": "W58.8",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en otro lugar especificado"
  },
  {
    "code": "W58.9",
    "description": "Mordedura o ataque de cocodrilo o caim√°n, en lugar no especificado"
  },
  {
    "code": "W59.0",
    "description": "Mordedura o aplastamiento por otros reptiles, en vivienda"
  },
  {
    "code": "W59.1",
    "description": "Mordedura o aplastamiento por otros reptiles, en instituci√≥n residencial"
  },
  {
    "code": "W59.2",
    "description": "Mordedura o aplastamiento por otros reptiles, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W59.3",
    "description": "Mordedura o aplastamiento por otros reptiles, en √°reas de deporte y atletismo"
  },
  {
    "code": "W59.4",
    "description": "Mordedura o aplastamiento por otros reptiles, en calles y carreteras"
  },
  {
    "code": "W59.5",
    "description": "Mordedura o aplastamiento por otros reptiles, en comercio y √°rea de servicios"
  },
  {
    "code": "W59.6",
    "description": "Mordedura o aplastamiento por otros reptiles, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W59.7",
    "description": "Mordedura o aplastamiento por otros reptiles, en granja"
  },
  {
    "code": "W59.8",
    "description": "Mordedura o aplastamiento por otros reptiles, en otro lugar especificado"
  },
  {
    "code": "W59.9",
    "description": "Mordedura o aplastamiento por otros reptiles, en lugar no especificado"
  },
  {
    "code": "W60.0",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en vivienda"
  },
  {
    "code": "W60.1",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en instituci√≥n residencial"
  },
  {
    "code": "W60.2",
    "description": ""
  },
  {
    "code": "W60.3",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W60.4",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en calles y carreteras"
  },
  {
    "code": "W60.5",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en comercio y √°rea de servicios"
  },
  {
    "code": "W60.6",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W60.7",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en granja"
  },
  {
    "code": "W60.8",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en otro lugar especificado"
  },
  {
    "code": "W60.9",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas, en lugar no especificado"
  },
  {
    "code": "W64.0",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en vivienda"
  },
  {
    "code": "W64.1",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "W64.2",
    "description": ""
  },
  {
    "code": "W64.3",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W64.4",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "W64.5",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "W64.6",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W64.7",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en granja"
  },
  {
    "code": "W64.8",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "W64.9",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "W65.0",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en vivienda"
  },
  {
    "code": "W65.1",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en instituci√≥n residencial"
  },
  {
    "code": "W65.2",
    "description": ""
  },
  {
    "code": "W65.3",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en √°reas de deporte y atletismo"
  },
  {
    "code": "W65.4",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en calles y carreteras"
  },
  {
    "code": "W65.5",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en comercio y √°rea de servicios"
  },
  {
    "code": "W65.6",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W65.7",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en granja"
  },
  {
    "code": "W65.8",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en otro lugar especificado"
  },
  {
    "code": "W65.9",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era, en lugar no especificado"
  },
  {
    "code": "W66.0",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en vivienda"
  },
  {
    "code": "W66.1",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en instituci√≥n residencial"
  },
  {
    "code": "W66.2",
    "description": ""
  },
  {
    "code": "W66.3",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en √°reas de deporte y atletismo"
  },
  {
    "code": "W66.4",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en calles y carreteras"
  },
  {
    "code": "W66.5",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en comercio y √°rea de servicios"
  },
  {
    "code": "W66.6",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W66.7",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en granja"
  },
  {
    "code": "W66.8",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en otro lugar especificado"
  },
  {
    "code": "W66.9",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era, en lugar no especificado"
  },
  {
    "code": "W67.0",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en  vivienda"
  },
  {
    "code": "W67.1",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en instituci√≥n residencial"
  },
  {
    "code": "W67.2",
    "description": ""
  },
  {
    "code": "W67.3",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en √°reas de deporte y atletismo"
  },
  {
    "code": "W67.4",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en calles y carreteras"
  },
  {
    "code": "W67.5",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en comercio y √°rea de servicios"
  },
  {
    "code": "W67.6",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W67.7",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en granja"
  },
  {
    "code": "W67.8",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en otro lugar especificado"
  },
  {
    "code": "W67.9",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina, en lugar no especificado"
  },
  {
    "code": "W68.0",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en vivienda"
  },
  {
    "code": "W68.1",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en instituci√≥n residencial"
  },
  {
    "code": "W68.2",
    "description": ""
  },
  {
    "code": "W68.3",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en √°reas de deporte y atletismo"
  },
  {
    "code": "W68.4",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en calles y carreteras"
  },
  {
    "code": "W68.5",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en comercio y √°rea de servicios"
  },
  {
    "code": "W68.6",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W68.7",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en granja"
  },
  {
    "code": "W68.8",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en otro lugar especificado"
  },
  {
    "code": "W68.9",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina, en lugar no especificado"
  },
  {
    "code": "W69.0",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en vivienda"
  },
  {
    "code": "W69.1",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en instituci√≥n residencial"
  },
  {
    "code": "W69.2",
    "description": ""
  },
  {
    "code": "W69.3",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W69.4",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en calles y carreteras"
  },
  {
    "code": "W69.5",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en comercio y √°rea de servicios"
  },
  {
    "code": "W69.6",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W69.7",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en granja"
  },
  {
    "code": "W69.8",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en otro lugar especificado"
  },
  {
    "code": "W69.9",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales, en lugar no especificado"
  },
  {
    "code": "W70.0",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en vivienda"
  },
  {
    "code": "W70.1",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en instituci√≥n residencial"
  },
  {
    "code": "W70.2",
    "description": ""
  },
  {
    "code": "W70.3",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W70.4",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en calles y carreteras"
  },
  {
    "code": "W70.5",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en comercio y √°rea de servicios"
  },
  {
    "code": "W70.6",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W70.7",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en granja"
  },
  {
    "code": "W70.8",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en otro lugar especificado"
  },
  {
    "code": "W70.9",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales, en lugar no especificado"
  },
  {
    "code": "W73.0",
    "description": "Otros ahogamientos y sumersiones especificados, en vivienda"
  },
  {
    "code": "W73.1",
    "description": "Otros ahogamientos y sumersiones especificados, en instituci√≥n residencial"
  },
  {
    "code": "W73.2",
    "description": "Otros ahogamientos y sumersiones especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W73.3",
    "description": "Otros ahogamientos y sumersiones especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "W73.4",
    "description": "Otros ahogamientos y sumersiones especificados, en calles y carreteras"
  },
  {
    "code": "W73.5",
    "description": "Otros ahogamientos y sumersiones especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "W73.6",
    "description": "Otros ahogamientos y sumersiones especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W73.7",
    "description": "Otros ahogamientos y sumersiones especificados, en granja"
  },
  {
    "code": "W73.8",
    "description": "Otros ahogamientos y sumersiones especificados, en otro lugar especificado"
  },
  {
    "code": "W73.9",
    "description": "Otros ahogamientos y sumersiones especificados, en lugar no especificado"
  },
  {
    "code": "W74.0",
    "description": "Ahogamiento y sumersi√≥n no especificados, en vivienda"
  },
  {
    "code": "W74.1",
    "description": "Ahogamiento y sumersi√≥n no especificados, en instituci√≥n residencial"
  },
  {
    "code": "W74.2",
    "description": "Ahogamiento y sumersi√≥n no especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W74.3",
    "description": "Ahogamiento y sumersi√≥n no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "W74.4",
    "description": "Ahogamiento y sumersi√≥n no especificados, en calles y carreteras"
  },
  {
    "code": "W74.5",
    "description": "Ahogamiento y sumersi√≥n no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "W74.6",
    "description": "Ahogamiento y sumersi√≥n no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W74.7",
    "description": "Ahogamiento y sumersi√≥n no especificados, en granja"
  },
  {
    "code": "W74.8",
    "description": "Ahogamiento y sumersi√≥n no especificados, en otro lugar especificado"
  },
  {
    "code": "W74.9",
    "description": "Ahogamiento y sumersi√≥n no especificados, en lugar no especificado"
  },
  {
    "code": "W75.0",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en vivienda"
  },
  {
    "code": "W75.1",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en instituci√≥n residencial"
  },
  {
    "code": "W75.2",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W75.3",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en √°reas de deporte y atletismo"
  },
  {
    "code": "W75.4",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en calles y carreteras"
  },
  {
    "code": "W75.5",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en comercio y √°rea de servicios"
  },
  {
    "code": "W75.6",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W75.7",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en granja"
  },
  {
    "code": "W75.8",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en otro lugar especificado"
  },
  {
    "code": "W75.9",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama, en lugar no especificado"
  },
  {
    "code": "W76.0",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en vivienda"
  },
  {
    "code": "W76.1",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en instituci√≥n residencial"
  },
  {
    "code": "W76.2",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W76.3",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en √°reas de deporte y atletismo"
  },
  {
    "code": "W76.4",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en calles y carreteras"
  },
  {
    "code": "W76.5",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en comercio y √°rea de servicios"
  },
  {
    "code": "W76.6",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W76.7",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en granja"
  },
  {
    "code": "W76.8",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en otro lugar especificado"
  },
  {
    "code": "W76.9",
    "description": "Otros estrangulamientos y ahorcamientos accidentales, en lugar no especificado"
  },
  {
    "code": "W77.0",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en vivienda"
  },
  {
    "code": "W77.1",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en instituci√≥n residencial"
  },
  {
    "code": "W77.2",
    "description": ""
  },
  {
    "code": "W77.3",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en √°reas de deporte y atletismo"
  },
  {
    "code": "W77.4",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en calles y carreteras"
  },
  {
    "code": "W77.5",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en comercio y √°rea de servicios"
  },
  {
    "code": "W77.6",
    "description": ""
  },
  {
    "code": "W77.7",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en granja"
  },
  {
    "code": "W77.8",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en otro lugar especificado"
  },
  {
    "code": "W77.9",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias, en lugar no especificado"
  },
  {
    "code": "W78.0",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en vivienda"
  },
  {
    "code": "W78.1",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en instituci√≥n residencial"
  },
  {
    "code": "W78.2",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W78.3",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en √°reas de deporte y atletismo"
  },
  {
    "code": "W78.4",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en calles y carreteras"
  },
  {
    "code": "W78.5",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en comercio y √°rea de servicios"
  },
  {
    "code": "W78.6",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W78.7",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en granja"
  },
  {
    "code": "W78.8",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en otro lugar especificado"
  },
  {
    "code": "W78.9",
    "description": "Inhalaci√≥n de contenidos g√°stricos, en lugar no especificado"
  },
  {
    "code": "W79.0",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en vivienda"
  },
  {
    "code": "W79.1",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en instituci√≥n residencial"
  },
  {
    "code": "W79.2",
    "description": ""
  },
  {
    "code": "W79.3",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en √°reas de deporte y atletismo"
  },
  {
    "code": "W79.4",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en calles y carreteras"
  },
  {
    "code": "W79.5",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en comercio y √°rea de servicios"
  },
  {
    "code": "W79.6",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W79.7",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en granja"
  },
  {
    "code": "W79.8",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en otro lugar especificado"
  },
  {
    "code": "W79.9",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias, en lugar no especificado"
  },
  {
    "code": "W80.0",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en vivienda"
  },
  {
    "code": "W80.1",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en instituci√≥n residencial"
  },
  {
    "code": "W80.2",
    "description": ""
  },
  {
    "code": "W80.3",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en √°reas de deporte y atletismo"
  },
  {
    "code": "W80.4",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en calles y carreteras"
  },
  {
    "code": "W80.5",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en comercio y √°rea de servicios"
  },
  {
    "code": "W80.6",
    "description": ""
  },
  {
    "code": "W80.7",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en granja"
  },
  {
    "code": "W80.8",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en otro lugar especificado"
  },
  {
    "code": "W80.9",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias, en lugar no especificado"
  },
  {
    "code": "W81.0",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en vivienda"
  },
  {
    "code": "W81.1",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en instituci√≥n residencial"
  },
  {
    "code": "W81.2",
    "description": ""
  },
  {
    "code": "W81.3",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en √°reas de deporte y atletismo"
  },
  {
    "code": "W81.4",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en calles y carreteras"
  },
  {
    "code": "W81.5",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en comercio y √°rea de servicios"
  },
  {
    "code": "W81.6",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W81.7",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en granja"
  },
  {
    "code": "W81.8",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en otro lugar especificado"
  },
  {
    "code": "W81.9",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno, en lugar no especificado"
  },
  {
    "code": "W83.0",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en vivienda"
  },
  {
    "code": "W83.1",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "W83.2",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W83.3",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "W83.4",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en calles y carreteras"
  },
  {
    "code": "W83.5",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "W83.6",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W83.7",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en granja"
  },
  {
    "code": "W83.8",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en otro lugar especificado"
  },
  {
    "code": "W83.9",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n, en lugar no especificado"
  },
  {
    "code": "W84.0",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en vivienda"
  },
  {
    "code": "W84.1",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "W84.2",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W84.3",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "W84.4",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en calles y carreteras"
  },
  {
    "code": "W84.5",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "W84.6",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W84.7",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en granja"
  },
  {
    "code": "W84.8",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en otro lugar especificado"
  },
  {
    "code": "W84.9",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n, en lugar no especificado"
  },
  {
    "code": "W85.0",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en vivienda"
  },
  {
    "code": "W85.1",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en instituci√≥n residencial"
  },
  {
    "code": "W85.2",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W85.3",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en √°reas de deporte y atletismo"
  },
  {
    "code": "W85.4",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en calles y carreteras"
  },
  {
    "code": "W85.5",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en comercio y √°rea de servicios"
  },
  {
    "code": "W85.6",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W85.7",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en granja"
  },
  {
    "code": "W85.8",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en otro lugar especificado"
  },
  {
    "code": "W85.9",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica, en lugar no especificado"
  },
  {
    "code": "W86.0",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en vivienda"
  },
  {
    "code": "W86.1",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en instituci√≥n residencial"
  },
  {
    "code": "W86.2",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W86.3",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "W86.4",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en calles y carreteras"
  },
  {
    "code": "W86.5",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "W86.6",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W86.7",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en granja"
  },
  {
    "code": "W86.8",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en otro lugar especificado"
  },
  {
    "code": "W86.9",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas, en lugar no especificado"
  },
  {
    "code": "W87.0",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en vivienda"
  },
  {
    "code": "W87.1",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en instituci√≥n residencial"
  },
  {
    "code": "W87.2",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W87.3",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en √°reas de deporte y atletismo"
  },
  {
    "code": "W87.4",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en calles y carreteras"
  },
  {
    "code": "W87.5",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en comercio y √°rea de servicios"
  },
  {
    "code": "W87.6",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W87.7",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en granja"
  },
  {
    "code": "W87.8",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en otro lugar especificado"
  },
  {
    "code": "W87.9",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada, en lugar no especificado"
  },
  {
    "code": "W88.0",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en vivienda"
  },
  {
    "code": "W88.1",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en instituci√≥n residencial"
  },
  {
    "code": "W88.2",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W88.3",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en √°reas de deporte y atletismo"
  },
  {
    "code": "W88.4",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en calles y carreteras"
  },
  {
    "code": "W88.5",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en comercio y √°rea de servicios"
  },
  {
    "code": "W88.6",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W88.7",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en granja"
  },
  {
    "code": "W88.8",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en otro lugar especificado"
  },
  {
    "code": "W88.9",
    "description": "Exposici√≥n a radiaci√≥n ionizante, en lugar no especificado"
  },
  {
    "code": "W89.0",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en vivienda"
  },
  {
    "code": "W89.1",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en instituci√≥n residencial"
  },
  {
    "code": "W89.2",
    "description": ""
  },
  {
    "code": "W89.3",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en √°reas de deporte y atletismo"
  },
  {
    "code": "W89.4",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en calles y carreteras"
  },
  {
    "code": "W89.5",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en comercio y √°rea de servicios"
  },
  {
    "code": "W89.6",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W89.7",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en granja"
  },
  {
    "code": "W89.8",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en otro lugar especificado"
  },
  {
    "code": "W89.9",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial, en lugar no especificado"
  },
  {
    "code": "W90.0",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en vivienda"
  },
  {
    "code": "W90.1",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en instituci√≥n residencial"
  },
  {
    "code": "W90.2",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W90.3",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en √°reas de deporte y atletismo"
  },
  {
    "code": "W90.4",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en calles y carreteras"
  },
  {
    "code": "W90.5",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en comercio y √°rea de servicios"
  },
  {
    "code": "W90.6",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W90.7",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en granja"
  },
  {
    "code": "W90.8",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en otro lugar especificado"
  },
  {
    "code": "W90.9",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante, en lugar no especificado"
  },
  {
    "code": "W91.0",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en vivienda"
  },
  {
    "code": "W91.1",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en instituci√≥n residencial"
  },
  {
    "code": "W91.2",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W91.3",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en √°reas de deporte y atletismo"
  },
  {
    "code": "W91.4",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en calles y carreteras"
  },
  {
    "code": "W91.5",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en comercio y √°rea de servicios"
  },
  {
    "code": "W91.6",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W91.7",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en granja"
  },
  {
    "code": "W91.8",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en otro lugar especificado"
  },
  {
    "code": "W91.9",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado, en lugar no especificado"
  },
  {
    "code": "W92.0",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en vivienda"
  },
  {
    "code": "W92.1",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en instituci√≥n residencial"
  },
  {
    "code": "W92.2",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W92.3",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en √°reas de deporte y atletismo"
  },
  {
    "code": "W92.4",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en calles y carreteras"
  },
  {
    "code": "W92.5",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en comercio y √°rea de servicios"
  },
  {
    "code": "W92.6",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W92.7",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en granja"
  },
  {
    "code": "W92.8",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en otro lugar especificado"
  },
  {
    "code": "W92.9",
    "description": "Exposici√≥n a calor excesivo de origen artificial, en lugar no especificado"
  },
  {
    "code": "W93.0",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en vivienda"
  },
  {
    "code": "W93.1",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en instituci√≥n residencial"
  },
  {
    "code": "W93.2",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "W93.3",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en √°reas de deporte y atletismo"
  },
  {
    "code": "W93.4",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en calles y carreteras"
  },
  {
    "code": "W93.5",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en comercio y √°rea de servicios"
  },
  {
    "code": "W93.6",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W93.7",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en granja"
  },
  {
    "code": "W93.8",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en otro lugar especificado"
  },
  {
    "code": "W93.9",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial, en lugar no especificado"
  },
  {
    "code": "W94.0",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en vivienda"
  },
  {
    "code": "W94.1",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en instituci√≥n residencial"
  },
  {
    "code": "W94.2",
    "description": ""
  },
  {
    "code": "W94.3",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en √°reas de deporte y atletismo"
  },
  {
    "code": "W94.4",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en calles y carreteras"
  },
  {
    "code": "W94.5",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en comercio y √°rea de servicios"
  },
  {
    "code": "W94.6",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "W94.7",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en granja"
  },
  {
    "code": "W94.8",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en otro lugar especificado"
  },
  {
    "code": "W94.9",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire, en lugar no especificado"
  },
  {
    "code": "W99.0",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en vivienda"
  },
  {
    "code": "W99.1",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en instituci√≥n residencial"
  },
  {
    "code": "W99.2",
    "description": ""
  },
  {
    "code": "W99.3",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en √°reas de deporte y atletismo"
  },
  {
    "code": "W99.4",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en calles y carreteras"
  },
  {
    "code": "W99.5",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en comercio y √°rea de servicios"
  },
  {
    "code": "W99.6",
    "description": ""
  },
  {
    "code": "W99.7",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en granja"
  },
  {
    "code": "W99.8",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en otro lugar especificado"
  },
  {
    "code": "W99.9",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial, en lugar no especificado"
  },
  {
    "code": "X00.0",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en vivienda"
  },
  {
    "code": "X00.1",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X00.2",
    "description": ""
  },
  {
    "code": "X00.3",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X00.4",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en calles y carreteras"
  },
  {
    "code": "X00.5",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X00.6",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X00.7",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en granja"
  },
  {
    "code": "X00.8",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en otro lugar especificado"
  },
  {
    "code": "X00.9",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n, en lugar no especificado"
  },
  {
    "code": "X01.0",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en vivienda"
  },
  {
    "code": "X01.1",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X01.2",
    "description": ""
  },
  {
    "code": "X01.3",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X01.4",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en calles y carreteras"
  },
  {
    "code": "X01.5",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X01.6",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X01.7",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en granja"
  },
  {
    "code": "X01.8",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en otro lugar especificado"
  },
  {
    "code": "X01.9",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n, en lugar no especificado"
  },
  {
    "code": "X02.0",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en vivienda"
  },
  {
    "code": "X02.1",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X02.2",
    "description": ""
  },
  {
    "code": "X02.3",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X02.4",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en calles y carreteras"
  },
  {
    "code": "X02.5",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X02.6",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X02.7",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en granja"
  },
  {
    "code": "X02.8",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en otro lugar especificado"
  },
  {
    "code": "X02.9",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n, en lugar no especificado"
  },
  {
    "code": "X03.0",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en vivienda"
  },
  {
    "code": "X03.1",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X03.2",
    "description": ""
  },
  {
    "code": "X03.3",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X03.4",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en calles y carreteras"
  },
  {
    "code": "X03.5",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X03.6",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X03.7",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en granja"
  },
  {
    "code": "X03.8",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en otro lugar especificado"
  },
  {
    "code": "X03.9",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n, en lugar no especificado"
  },
  {
    "code": "X04.0",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en vivienda"
  },
  {
    "code": "X04.1",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en instituci√≥n residencial"
  },
  {
    "code": "X04.2",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X04.3",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en √°reas de deporte y atletismo"
  },
  {
    "code": "X04.4",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en calles y carreteras"
  },
  {
    "code": "X04.5",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en comercio y √°rea de servicios"
  },
  {
    "code": "X04.6",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X04.7",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en granja"
  },
  {
    "code": "X04.8",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en otro lugar especificado"
  },
  {
    "code": "X04.9",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable, en lugar no especificado"
  },
  {
    "code": "X05.0",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en vivienda"
  },
  {
    "code": "X05.1",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en instituci√≥n residencial"
  },
  {
    "code": "X05.2",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X05.3",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en √°reas de deporte y atletismo"
  },
  {
    "code": "X05.4",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en calles y carreteras"
  },
  {
    "code": "X05.5",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en comercio y √°rea de servicios"
  },
  {
    "code": "X05.6",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X05.7",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en granja"
  },
  {
    "code": "X05.8",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en otro lugar especificado"
  },
  {
    "code": "X05.9",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir, en lugar no especificado"
  },
  {
    "code": "X06.0",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en vivienda"
  },
  {
    "code": "X06.1",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en instituci√≥n residencial"
  },
  {
    "code": "X06.2",
    "description": ""
  },
  {
    "code": "X06.3",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en √°reas de deporte y atletismo"
  },
  {
    "code": "X06.4",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en calles y carreteras"
  },
  {
    "code": "X06.5",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en comercio y √°rea de servicios"
  },
  {
    "code": "X06.6",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X06.7",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en granja"
  },
  {
    "code": "X06.8",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en otro lugar especificado"
  },
  {
    "code": "X06.9",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios, en lugar no especificado"
  },
  {
    "code": "X08.0",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en vivienda"
  },
  {
    "code": "X08.1",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en instituci√≥n residencial"
  },
  {
    "code": "X08.2",
    "description": ""
  },
  {
    "code": "X08.3",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X08.4",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en calles y carreteras"
  },
  {
    "code": "X08.5",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X08.6",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X08.7",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en granja"
  },
  {
    "code": "X08.8",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en otro lugar especificado"
  },
  {
    "code": "X08.9",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados, en lugar no especificado"
  },
  {
    "code": "X09.0",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en vivienda"
  },
  {
    "code": "X09.1",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en instituci√≥n residencial"
  },
  {
    "code": "X09.2",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X09.3",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X09.4",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en calles y carreteras"
  },
  {
    "code": "X09.5",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X09.6",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X09.7",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en granja"
  },
  {
    "code": "X09.8",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en otro lugar especificado"
  },
  {
    "code": "X09.9",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados, en lugar no especificado"
  },
  {
    "code": "X10.0",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en vivienda"
  },
  {
    "code": "X10.1",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en instituci√≥n residencial"
  },
  {
    "code": "X10.2",
    "description": ""
  },
  {
    "code": "X10.3",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X10.4",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en calles y carreteras"
  },
  {
    "code": "X10.5",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X10.6",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X10.7",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en granja"
  },
  {
    "code": "X10.8",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en otro lugar especificado"
  },
  {
    "code": "X10.9",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes, en lugar no especificado"
  },
  {
    "code": "X11.0",
    "description": "Contacto con agua caliente corriente, en vivienda"
  },
  {
    "code": "X11.1",
    "description": "Contacto con agua caliente corriente, en instituci√≥n residencial"
  },
  {
    "code": "X11.2",
    "description": "Contacto con agua caliente corriente, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X11.3",
    "description": "Contacto con agua caliente corriente, en √°reas de deporte y atletismo"
  },
  {
    "code": "X11.4",
    "description": "Contacto con agua caliente corriente, en calles y carreteras"
  },
  {
    "code": "X11.5",
    "description": "Contacto con agua caliente corriente, en comercio y √°rea de servicios"
  },
  {
    "code": "X11.6",
    "description": "Contacto con agua caliente corriente, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X11.7",
    "description": "Contacto con agua caliente corriente, en granja"
  },
  {
    "code": "X11.8",
    "description": "Contacto con agua caliente corriente, en otro lugar especificado"
  },
  {
    "code": "X11.9",
    "description": "Contacto con agua caliente corriente, en lugar no especificado"
  },
  {
    "code": "X12.0",
    "description": "Contacto con otros l√≠quidos calientes, en vivienda"
  },
  {
    "code": "X12.1",
    "description": "Contacto con otros l√≠quidos calientes, en instituci√≥n residencial"
  },
  {
    "code": "X12.2",
    "description": "Contacto con otros l√≠quidos calientes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X12.3",
    "description": "Contacto con otros l√≠quidos calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X12.4",
    "description": "Contacto con otros l√≠quidos calientes, en calles y carreteras"
  },
  {
    "code": "X12.5",
    "description": "Contacto con otros l√≠quidos calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X12.6",
    "description": "Contacto con otros l√≠quidos calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X12.7",
    "description": "Contacto con otros l√≠quidos calientes, en granja"
  },
  {
    "code": "X12.8",
    "description": "Contacto con otros l√≠quidos calientes, en otro lugar especificado"
  },
  {
    "code": "X12.9",
    "description": "Contacto con otros l√≠quidos calientes, en lugar no especificado"
  },
  {
    "code": "X13.0",
    "description": "Contacto con vapor de agua y otros vapores calientes, en vivienda"
  },
  {
    "code": "X13.1",
    "description": "Contacto con vapor de agua y otros vapores calientes, en instituci√≥n residencial"
  },
  {
    "code": "X13.2",
    "description": "Contacto con vapor de agua y otros vapores calientes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X13.3",
    "description": "Contacto con vapor de agua y otros vapores calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X13.4",
    "description": "Contacto con vapor de agua y otros vapores calientes, en calles y carreteras"
  },
  {
    "code": "X13.5",
    "description": "Contacto con vapor de agua y otros vapores calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X13.6",
    "description": "Contacto con vapor de agua y otros vapores calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X13.7",
    "description": "Contacto con vapor de agua y otros vapores calientes, en granja"
  },
  {
    "code": "X13.8",
    "description": "Contacto con vapor de agua y otros vapores calientes, en otro lugar especificado"
  },
  {
    "code": "X13.9",
    "description": "Contacto con vapor de agua y otros vapores calientes, en lugar no especificado"
  },
  {
    "code": "X14.0",
    "description": "Contacto con aire y gases calientes, en vivienda"
  },
  {
    "code": "X14.1",
    "description": "Contacto con aire y gases calientes, en instituci√≥n residencial"
  },
  {
    "code": "X14.2",
    "description": "Contacto con aire y gases calientes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X14.3",
    "description": "Contacto con aire y gases calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X14.4",
    "description": "Contacto con aire y gases calientes, en calles y carreteras"
  },
  {
    "code": "X14.5",
    "description": "Contacto con aire y gases calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X14.6",
    "description": "Contacto con aire y gases calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X14.7",
    "description": "Contacto con aire y gases calientes, en granja"
  },
  {
    "code": "X14.8",
    "description": "Contacto con aire y gases calientes, en otro lugar especificado"
  },
  {
    "code": "X14.9",
    "description": "Contacto con aire y gases calientes, en lugar no especificado"
  },
  {
    "code": "X15.0",
    "description": "Contacto con utensilios dom√©sticos calientes, en vivienda"
  },
  {
    "code": "X15.1",
    "description": "Contacto con utensilios dom√©sticos calientes, en instituci√≥n residencial"
  },
  {
    "code": "X15.2",
    "description": "Contacto con utensilios dom√©sticos calientes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X15.3",
    "description": "Contacto con utensilios dom√©sticos calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X15.4",
    "description": "Contacto con utensilios dom√©sticos calientes, en calles y carreteras"
  },
  {
    "code": "X15.5",
    "description": "Contacto con utensilios dom√©sticos calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X15.6",
    "description": "Contacto con utensilios dom√©sticos calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X15.7",
    "description": "Contacto con utensilios dom√©sticos calientes, en granja"
  },
  {
    "code": "X15.8",
    "description": "Contacto con utensilios dom√©sticos calientes, en otro lugar especificado"
  },
  {
    "code": "X15.9",
    "description": "Contacto con utensilios dom√©sticos calientes, en lugar no especificado"
  },
  {
    "code": "X16.0",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en vivienda"
  },
  {
    "code": "X16.1",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en instituci√≥n residencial"
  },
  {
    "code": "X16.2",
    "description": ""
  },
  {
    "code": "X16.3",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X16.4",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en calles y carreteras"
  },
  {
    "code": "X16.5",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X16.6",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X16.7",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en granja"
  },
  {
    "code": "X16.8",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en otro lugar especificado"
  },
  {
    "code": "X16.9",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes, en lugar no especificado"
  },
  {
    "code": "X17.0",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en vivienda"
  },
  {
    "code": "X17.1",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en instituci√≥n residencial"
  },
  {
    "code": "X17.2",
    "description": ""
  },
  {
    "code": "X17.3",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X17.4",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en calles y carreteras"
  },
  {
    "code": "X17.5",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X17.6",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X17.7",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en granja"
  },
  {
    "code": "X17.8",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en otro lugar especificado"
  },
  {
    "code": "X17.9",
    "description": "Contacto con m√°quinas, motores y herramientas calientes, en lugar no especificado"
  },
  {
    "code": "X18.0",
    "description": "Contacto con otros metales calientes, en vivienda"
  },
  {
    "code": "X18.1",
    "description": "Contacto con otros metales calientes, en instituci√≥n residencial"
  },
  {
    "code": "X18.2",
    "description": "Contacto con otros metales calientes, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X18.3",
    "description": "Contacto con otros metales calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X18.4",
    "description": "Contacto con otros metales calientes, en calles y carreteras"
  },
  {
    "code": "X18.5",
    "description": "Contacto con otros metales calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X18.6",
    "description": "Contacto con otros metales calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X18.7",
    "description": "Contacto con otros metales calientes, en granja"
  },
  {
    "code": "X18.8",
    "description": "Contacto con otros metales calientes, en otro lugar especificado"
  },
  {
    "code": "X18.9",
    "description": "Contacto con otros metales calientes, en lugar no especificado"
  },
  {
    "code": "X19.0",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en vivienda"
  },
  {
    "code": "X19.1",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X19.2",
    "description": ""
  },
  {
    "code": "X19.3",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X19.4",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "X19.5",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X19.6",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X19.7",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en granja"
  },
  {
    "code": "X19.8",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "X19.9",
    "description": "Contacto con otras sustancias calientes, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "X20.0",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en vivienda"
  },
  {
    "code": "X20.1",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en instituci√≥n residencial"
  },
  {
    "code": "X20.2",
    "description": ""
  },
  {
    "code": "X20.3",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en √°reas de deporte y atletismo"
  },
  {
    "code": "X20.4",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en calles y carreteras"
  },
  {
    "code": "X20.5",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en comercio y √°rea de servicios"
  },
  {
    "code": "X20.6",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X20.7",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en granja"
  },
  {
    "code": "X20.8",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en otro lugar especificado"
  },
  {
    "code": "X20.9",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos, en lugar no especificado"
  },
  {
    "code": "X21.0",
    "description": "Contacto traum√°tico con ara√±as venenosas, en vivienda"
  },
  {
    "code": "X21.1",
    "description": "Contacto traum√°tico con ara√±as venenosas, en instituci√≥n residencial"
  },
  {
    "code": "X21.2",
    "description": "Contacto traum√°tico con ara√±as venenosas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X21.3",
    "description": "Contacto traum√°tico con ara√±as venenosas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X21.4",
    "description": "Contacto traum√°tico con ara√±as venenosas, en calles y carreteras"
  },
  {
    "code": "X21.5",
    "description": "Contacto traum√°tico con ara√±as venenosas, en comercio y √°rea de servicios"
  },
  {
    "code": "X21.6",
    "description": "Contacto traum√°tico con ara√±as venenosas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X21.7",
    "description": "Contacto traum√°tico con ara√±as venenosas, en granja"
  },
  {
    "code": "X21.8",
    "description": "Contacto traum√°tico con ara√±as venenosas, en otro lugar especificado"
  },
  {
    "code": "X21.9",
    "description": "Contacto traum√°tico con ara√±as venenosas, en lugar no especificado"
  },
  {
    "code": "X22.0",
    "description": "Contacto traum√°tico con escorpi√≥n, en vivienda"
  },
  {
    "code": "X22.1",
    "description": "Contacto traum√°tico con escorpi√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X22.2",
    "description": "Contacto traum√°tico con escorpi√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X22.3",
    "description": "Contacto traum√°tico con escorpi√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X22.4",
    "description": "Contacto traum√°tico con escorpi√≥n, en calles y carreteras"
  },
  {
    "code": "X22.5",
    "description": "Contacto traum√°tico con escorpi√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X22.6",
    "description": "Contacto traum√°tico con escorpi√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X22.7",
    "description": "Contacto traum√°tico con escorpi√≥n, en granja"
  },
  {
    "code": "X22.8",
    "description": "Contacto traum√°tico con escorpi√≥n, en otro lugar especificado"
  },
  {
    "code": "X22.9",
    "description": "Contacto traum√°tico con escorpi√≥n, en lugar no especificado"
  },
  {
    "code": "X23.0",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en vivienda"
  },
  {
    "code": "X23.1",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en instituci√≥n residencial"
  },
  {
    "code": "X23.2",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X23.3",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X23.4",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en calles y carreteras"
  },
  {
    "code": "X23.5",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en comercio y √°rea de servicios"
  },
  {
    "code": "X23.6",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X23.7",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en granja"
  },
  {
    "code": "X23.8",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en otro lugar especificado"
  },
  {
    "code": "X23.9",
    "description": "Contacto traum√°tico con avispones, avispas y abejas, en lugar no especificado"
  },
  {
    "code": "X24.0",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en vivienda"
  },
  {
    "code": "X24.1",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en instituci√≥n residencial"
  },
  {
    "code": "X24.2",
    "description": ""
  },
  {
    "code": "X24.3",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en √°reas de deporte y atletismo"
  },
  {
    "code": "X24.4",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en calles y carreteras"
  },
  {
    "code": "X24.5",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en comercio y √°rea de servicios"
  },
  {
    "code": "X24.6",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X24.7",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en granja"
  },
  {
    "code": "X24.8",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en otro lugar especificado"
  },
  {
    "code": "X24.9",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales), en lugar no especificado"
  },
  {
    "code": "X25.0",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en vivienda"
  },
  {
    "code": "X25.1",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en instituci√≥n residencial"
  },
  {
    "code": "X25.2",
    "description": ""
  },
  {
    "code": "X25.3",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X25.4",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en calles y carreteras"
  },
  {
    "code": "X25.5",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X25.6",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X25.7",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en granja"
  },
  {
    "code": "X25.8",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en otro lugar especificado"
  },
  {
    "code": "X25.9",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados, en lugar no especificado"
  },
  {
    "code": "X26.0",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en vivienda"
  },
  {
    "code": "X26.1",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en instituci√≥n residencial"
  },
  {
    "code": "X26.2",
    "description": ""
  },
  {
    "code": "X26.3",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en √°reas de deporte y atletismo"
  },
  {
    "code": "X26.4",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en calles y carreteras"
  },
  {
    "code": "X26.5",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en comercio y √°rea de servicios"
  },
  {
    "code": "X26.6",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X26.7",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en granja"
  },
  {
    "code": "X26.8",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en otro lugar especificado"
  },
  {
    "code": "X26.9",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos, en lugar no especificado"
  },
  {
    "code": "X27.0",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en vivienda"
  },
  {
    "code": "X27.1",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en instituci√≥n residencial"
  },
  {
    "code": "X27.2",
    "description": ""
  },
  {
    "code": "X27.3",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X27.4",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en calles y carreteras"
  },
  {
    "code": "X27.5",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X27.6",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X27.7",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en granja"
  },
  {
    "code": "X27.8",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en otro lugar especificado"
  },
  {
    "code": "X27.9",
    "description": "Contacto traum√°tico con otros animales venenosos especificados, en lugar no especificado"
  },
  {
    "code": "X28.0",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en vivienda"
  },
  {
    "code": "X28.1",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X28.2",
    "description": ""
  },
  {
    "code": "X28.3",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X28.4",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en calles y carreteras"
  },
  {
    "code": "X28.5",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X28.6",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X28.7",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en granja"
  },
  {
    "code": "X28.8",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en otro lugar especificado"
  },
  {
    "code": "X28.9",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas, en lugar no especificado"
  },
  {
    "code": "X29.0",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en vivienda"
  },
  {
    "code": "X29.1",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en instituci√≥n residencial"
  },
  {
    "code": "X29.2",
    "description": ""
  },
  {
    "code": "X29.3",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X29.4",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en calles y carreteras"
  },
  {
    "code": "X29.5",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X29.6",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X29.7",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en granja"
  },
  {
    "code": "X29.8",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en otro lugar especificado"
  },
  {
    "code": "X29.9",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados, en lugar no especificado"
  },
  {
    "code": "X30.0",
    "description": "Exposici√≥n al calor natural excesivo, en vivienda"
  },
  {
    "code": "X30.1",
    "description": "Exposici√≥n al calor natural excesivo, en instituci√≥n residencial"
  },
  {
    "code": "X30.2",
    "description": "Exposici√≥n al calor natural excesivo, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X30.3",
    "description": "Exposici√≥n al calor natural excesivo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X30.4",
    "description": "Exposici√≥n al calor natural excesivo, en calles y carreteras"
  },
  {
    "code": "X30.5",
    "description": "Exposici√≥n al calor natural excesivo, en comercio y √°rea de servicios"
  },
  {
    "code": "X30.6",
    "description": "Exposici√≥n al calor natural excesivo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X30.7",
    "description": "Exposici√≥n al calor natural excesivo, en granja"
  },
  {
    "code": "X30.8",
    "description": "Exposici√≥n al calor natural excesivo, en otro lugar especificado"
  },
  {
    "code": "X30.9",
    "description": "Exposici√≥n al calor natural excesivo, en lugar no especificado"
  },
  {
    "code": "X31.0",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en vivienda"
  },
  {
    "code": "X31.1",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en instituci√≥n residencial"
  },
  {
    "code": "X31.2",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X31.3",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X31.4",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en calles y carreteras"
  },
  {
    "code": "X31.5",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en comercio y √°rea de servicios"
  },
  {
    "code": "X31.6",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X31.7",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en granja"
  },
  {
    "code": "X31.8",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en otro lugar especificado"
  },
  {
    "code": "X31.9",
    "description": "Exposici√≥n al fr√≠o natural excesivo, en lugar no especificado"
  },
  {
    "code": "X32.0",
    "description": "Exposici√≥n a rayos solares, en vivienda"
  },
  {
    "code": "X32.1",
    "description": "Exposici√≥n a rayos solares, en instituci√≥n residencial"
  },
  {
    "code": "X32.2",
    "description": "Exposici√≥n a rayos solares, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X32.3",
    "description": "Exposici√≥n a rayos solares, en √°reas de deporte y atletismo"
  },
  {
    "code": "X32.4",
    "description": "Exposici√≥n a rayos solares, en calles y carreteras"
  },
  {
    "code": "X32.5",
    "description": "Exposici√≥n a rayos solares, en comercio y √°rea de servicios"
  },
  {
    "code": "X32.6",
    "description": "Exposici√≥n a rayos solares, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X32.7",
    "description": "Exposici√≥n a rayos solares, en granja"
  },
  {
    "code": "X32.8",
    "description": "Exposici√≥n a rayos solares, en otro lugar especificado"
  },
  {
    "code": "X32.9",
    "description": "Exposici√≥n a rayos solares, en lugar no especificado"
  },
  {
    "code": "X33.0",
    "description": "V√≠ctima de rayo, en vivienda"
  },
  {
    "code": "X33.1",
    "description": "V√≠ctima de rayo, en instituci√≥n residencial"
  },
  {
    "code": "X33.2",
    "description": "V√≠ctima de rayo, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X33.3",
    "description": "V√≠ctima de rayo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X33.4",
    "description": "V√≠ctima de rayo, en calles y carreteras"
  },
  {
    "code": "X33.5",
    "description": "V√≠ctima de rayo, en comercio y √°rea de servicios"
  },
  {
    "code": "X33.6",
    "description": "V√≠ctima de rayo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X33.7",
    "description": "V√≠ctima de rayo, en granja"
  },
  {
    "code": "X33.8",
    "description": "V√≠ctima de rayo, en otro lugar especificado"
  },
  {
    "code": "X33.9",
    "description": "V√≠ctima de rayo, en lugar no especificado"
  },
  {
    "code": "X34.0",
    "description": "V√≠ctima de terremoto, en vivienda"
  },
  {
    "code": "X34.1",
    "description": "V√≠ctima de terremoto, en instituci√≥n residencial"
  },
  {
    "code": "X34.2",
    "description": "V√≠ctima de terremoto, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X34.3",
    "description": "V√≠ctima de terremoto, en √°reas de deporte y atletismo"
  },
  {
    "code": "X34.4",
    "description": "V√≠ctima de terremoto, en calles y carreteras"
  },
  {
    "code": "X34.5",
    "description": "V√≠ctima de terremoto, en comercio y √°rea de servicios"
  },
  {
    "code": "X34.6",
    "description": "V√≠ctima de terremoto, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X34.7",
    "description": "V√≠ctima de terremoto, en granja"
  },
  {
    "code": "X34.8",
    "description": "V√≠ctima de terremoto, en otro lugar especificado"
  },
  {
    "code": "X34.9",
    "description": "V√≠ctima de terremoto, en lugar no especificado"
  },
  {
    "code": "X35.0",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en vivienda"
  },
  {
    "code": "X35.1",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en instituci√≥n residencial"
  },
  {
    "code": "X35.2",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X35.3",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en √°reas de deporte y atletismo"
  },
  {
    "code": "X35.4",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en calles y carreteras"
  },
  {
    "code": "X35.5",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en comercio y √°rea de servicios"
  },
  {
    "code": "X35.6",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X35.7",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en granja"
  },
  {
    "code": "X35.8",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en otro lugar especificado"
  },
  {
    "code": "X35.9",
    "description": "V√≠ctima de erupci√≥n volc√°nica, en lugar no especificado"
  },
  {
    "code": "X36.0",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en vivienda"
  },
  {
    "code": "X36.1",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en instituci√≥n residencial"
  },
  {
    "code": "X36.2",
    "description": ""
  },
  {
    "code": "X36.3",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en √°reas de deporte y atletismo"
  },
  {
    "code": "X36.4",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en calles y carreteras"
  },
  {
    "code": "X36.5",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en comercio y √°rea de servicios"
  },
  {
    "code": "X36.6",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X36.7",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en granja"
  },
  {
    "code": "X36.8",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en otro lugar especificado"
  },
  {
    "code": "X36.9",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra, en lugar no especificado"
  },
  {
    "code": "X37.0",
    "description": "V√≠ctima de tormenta catacl√≠smica, en vivienda"
  },
  {
    "code": "X37.1",
    "description": "V√≠ctima de tormenta catacl√≠smica, en instituci√≥n residencial"
  },
  {
    "code": "X37.2",
    "description": "V√≠ctima de tormenta catacl√≠smica, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X37.3",
    "description": "V√≠ctima de tormenta catacl√≠smica, en √°reas de deporte y atletismo"
  },
  {
    "code": "X37.4",
    "description": "V√≠ctima de tormenta catacl√≠smica, en calles y carreteras"
  },
  {
    "code": "X37.5",
    "description": "V√≠ctima de tormenta catacl√≠smica, en comercio y √°rea de servicios"
  },
  {
    "code": "X37.6",
    "description": "V√≠ctima de tormenta catacl√≠smica, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X37.7",
    "description": "V√≠ctima de tormenta catacl√≠smica, en granja"
  },
  {
    "code": "X37.8",
    "description": "V√≠ctima de tormenta catacl√≠smica, en otro lugar especificado"
  },
  {
    "code": "X37.9",
    "description": "V√≠ctima de tormenta catacl√≠smica, en lugar no especificado"
  },
  {
    "code": "X38.0",
    "description": "V√≠ctima de inundaci√≥n, en vivienda"
  },
  {
    "code": "X38.1",
    "description": "V√≠ctima de inundaci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X38.2",
    "description": "V√≠ctima de inundaci√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X38.3",
    "description": "V√≠ctima de inundaci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X38.4",
    "description": "V√≠ctima de inundaci√≥n, en calles y carreteras"
  },
  {
    "code": "X38.5",
    "description": "V√≠ctima de inundaci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X38.6",
    "description": "V√≠ctima de inundaci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X38.7",
    "description": "V√≠ctima de inundaci√≥n, en granja"
  },
  {
    "code": "X38.8",
    "description": "V√≠ctima de inundaci√≥n, en otro lugar especificado"
  },
  {
    "code": "X38.9",
    "description": "V√≠ctima de inundaci√≥n, en lugar no especificado"
  },
  {
    "code": "X39.0",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en vivienda"
  },
  {
    "code": "X39.1",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X39.2",
    "description": ""
  },
  {
    "code": "X39.3",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X39.4",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "X39.5",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X39.6",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X39.7",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en granja"
  },
  {
    "code": "X39.8",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "X39.9",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "X40.0",
    "description": "Envenenamiento accidental por, y exposici√≥n a analg√©sicos no narc√≥ticos, antipir√©ticos y antirreum√°ticos, en vivienda"
  },
  {
    "code": "X40.1",
    "description": ""
  },
  {
    "code": "X40.2",
    "description": ""
  },
  {
    "code": "X40.3",
    "description": ""
  },
  {
    "code": "X40.4",
    "description": ""
  },
  {
    "code": "X40.5",
    "description": ""
  },
  {
    "code": "X40.6",
    "description": ""
  },
  {
    "code": "X40.7",
    "description": "Envenenamiento accidental por, y exposici√≥n a analg√©sicos no narc√≥ticos, antipir√©ticos y antirreum√°ticos, en granja"
  },
  {
    "code": "X40.8",
    "description": ""
  },
  {
    "code": "X40.9",
    "description": ""
  },
  {
    "code": "X41.0",
    "description": ""
  },
  {
    "code": "X41.1",
    "description": ""
  },
  {
    "code": "X41.2",
    "description": ""
  },
  {
    "code": "X41.3",
    "description": ""
  },
  {
    "code": "X41.4",
    "description": ""
  },
  {
    "code": "X41.5",
    "description": ""
  },
  {
    "code": "X41.6",
    "description": ""
  },
  {
    "code": "X41.7",
    "description": ""
  },
  {
    "code": "X41.8",
    "description": ""
  },
  {
    "code": "X41.9",
    "description": ""
  },
  {
    "code": "X42.0",
    "description": ""
  },
  {
    "code": "X42.1",
    "description": ""
  },
  {
    "code": "X42.2",
    "description": ""
  },
  {
    "code": "X42.3",
    "description": ""
  },
  {
    "code": "X42.4",
    "description": ""
  },
  {
    "code": "X42.5",
    "description": ""
  },
  {
    "code": "X42.6",
    "description": ""
  },
  {
    "code": "X42.7",
    "description": ""
  },
  {
    "code": "X42.8",
    "description": ""
  },
  {
    "code": "X42.9",
    "description": ""
  },
  {
    "code": "X43.0",
    "description": ""
  },
  {
    "code": "X43.1",
    "description": ""
  },
  {
    "code": "X43.2",
    "description": ""
  },
  {
    "code": "X43.3",
    "description": ""
  },
  {
    "code": "X43.4",
    "description": ""
  },
  {
    "code": "X43.5",
    "description": ""
  },
  {
    "code": "X43.6",
    "description": ""
  },
  {
    "code": "X43.7",
    "description": "Envenenamiento accidental por, y exposici√≥n a otras drogas que act√∫an sobre el sistema nervioso aut√≥nomo, en granja"
  },
  {
    "code": "X43.8",
    "description": ""
  },
  {
    "code": "X43.9",
    "description": ""
  },
  {
    "code": "X44.0",
    "description": ""
  },
  {
    "code": "X44.1",
    "description": ""
  },
  {
    "code": "X44.2",
    "description": ""
  },
  {
    "code": "X44.3",
    "description": ""
  },
  {
    "code": "X44.4",
    "description": ""
  },
  {
    "code": "X44.5",
    "description": ""
  },
  {
    "code": "X44.6",
    "description": ""
  },
  {
    "code": "X44.7",
    "description": ""
  },
  {
    "code": "X44.8",
    "description": ""
  },
  {
    "code": "X44.9",
    "description": ""
  },
  {
    "code": "X45.0",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en vivienda"
  },
  {
    "code": "X45.1",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en instituci√≥n residencial"
  },
  {
    "code": "X45.2",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X45.3",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en √°reas de deporte y atletismo"
  },
  {
    "code": "X45.4",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en calles y carreteras"
  },
  {
    "code": "X45.5",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en comercio y √°rea de servicios"
  },
  {
    "code": "X45.6",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X45.7",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en granja"
  },
  {
    "code": "X45.8",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en otro lugar especificado"
  },
  {
    "code": "X45.9",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol, en lugar no especificado"
  },
  {
    "code": "X46.0",
    "description": ""
  },
  {
    "code": "X46.1",
    "description": ""
  },
  {
    "code": "X46.2",
    "description": ""
  },
  {
    "code": "X46.3",
    "description": ""
  },
  {
    "code": "X46.4",
    "description": ""
  },
  {
    "code": "X46.5",
    "description": ""
  },
  {
    "code": "X46.6",
    "description": ""
  },
  {
    "code": "X46.7",
    "description": ""
  },
  {
    "code": "X46.8",
    "description": ""
  },
  {
    "code": "X46.9",
    "description": ""
  },
  {
    "code": "X47.0",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en vivienda"
  },
  {
    "code": "X47.1",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en instituci√≥n residencial"
  },
  {
    "code": "X47.2",
    "description": ""
  },
  {
    "code": "X47.3",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en √°reas de deporte y atletismo"
  },
  {
    "code": "X47.4",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en calles y carreteras"
  },
  {
    "code": "X47.5",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en comercio y √°rea de servicios"
  },
  {
    "code": "X47.6",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X47.7",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en granja"
  },
  {
    "code": "X47.8",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en otro lugar especificado"
  },
  {
    "code": "X47.9",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores, en lugar no especificado"
  },
  {
    "code": "X48.0",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en vivienda"
  },
  {
    "code": "X48.1",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en instituci√≥n residencial"
  },
  {
    "code": "X48.2",
    "description": ""
  },
  {
    "code": "X48.3",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X48.4",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en calles y carreteras"
  },
  {
    "code": "X48.5",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en comercio y √°rea de servicios"
  },
  {
    "code": "X48.6",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X48.7",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en granja"
  },
  {
    "code": "X48.8",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en otro lugar especificado"
  },
  {
    "code": "X48.9",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas, en lugar no especificado"
  },
  {
    "code": "X49.0",
    "description": ""
  },
  {
    "code": "X49.1",
    "description": ""
  },
  {
    "code": "X49.2",
    "description": ""
  },
  {
    "code": "X49.3",
    "description": ""
  },
  {
    "code": "X49.4",
    "description": ""
  },
  {
    "code": "X49.5",
    "description": ""
  },
  {
    "code": "X49.6",
    "description": ""
  },
  {
    "code": "X49.7",
    "description": ""
  },
  {
    "code": "X49.8",
    "description": ""
  },
  {
    "code": "X49.9",
    "description": ""
  },
  {
    "code": "X50.0",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en vivienda"
  },
  {
    "code": "X50.1",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en instituci√≥n residencial"
  },
  {
    "code": "X50.2",
    "description": ""
  },
  {
    "code": "X50.3",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en √°reas de deporte y atletismo"
  },
  {
    "code": "X50.4",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en calles y carreteras"
  },
  {
    "code": "X50.5",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en comercio y √°rea de servicios"
  },
  {
    "code": "X50.6",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X50.7",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en granja"
  },
  {
    "code": "X50.8",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en otro lugar especificado"
  },
  {
    "code": "X50.9",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos, en lugar no especificado"
  },
  {
    "code": "X51.0",
    "description": "Viajes y desplazamientos, en vivienda"
  },
  {
    "code": "X51.1",
    "description": "Viajes y desplazamientos, en instituci√≥n residencial"
  },
  {
    "code": "X51.2",
    "description": "Viajes y desplazamientos, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X51.3",
    "description": "Viajes y desplazamientos, en √°reas de deporte y atletismo"
  },
  {
    "code": "X51.4",
    "description": "Viajes y desplazamientos, en calles y carreteras"
  },
  {
    "code": "X51.5",
    "description": "Viajes y desplazamientos, en comercio y √°rea de servicios"
  },
  {
    "code": "X51.6",
    "description": "Viajes y desplazamientos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X51.7",
    "description": "Viajes y desplazamientos, en granja"
  },
  {
    "code": "X51.8",
    "description": "Viajes y desplazamientos, en otro lugar especificado"
  },
  {
    "code": "X51.9",
    "description": "Viajes y desplazamientos, en lugar no especificado"
  },
  {
    "code": "X52.0",
    "description": "Permanencia prolongada en ambiente sin gravedad, en vivienda"
  },
  {
    "code": "X52.1",
    "description": "Permanencia prolongada en ambiente sin gravedad, en instituci√≥n residencial"
  },
  {
    "code": "X52.2",
    "description": "Permanencia prolongada en ambiente sin gravedad, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X52.3",
    "description": "Permanencia prolongada en ambiente sin gravedad, en √°reas de deporte y atletismo"
  },
  {
    "code": "X52.4",
    "description": "Permanencia prolongada en ambiente sin gravedad, en calles y carreteras"
  },
  {
    "code": "X52.5",
    "description": "Permanencia prolongada en ambiente sin gravedad, en comercio y √°rea de servicios"
  },
  {
    "code": "X52.6",
    "description": "Permanencia prolongada en ambiente sin gravedad, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X52.7",
    "description": "Permanencia prolongada en ambiente sin gravedad, en granja"
  },
  {
    "code": "X52.8",
    "description": "Permanencia prolongada en ambiente sin gravedad, en otro lugar especificado"
  },
  {
    "code": "X52.9",
    "description": "Permanencia prolongada en ambiente sin gravedad, en lugar no especificado"
  },
  {
    "code": "X53.0",
    "description": "Privaci√≥n de alimentos, en vivienda"
  },
  {
    "code": "X53.1",
    "description": "Privaci√≥n de alimentos, en instituci√≥n residencial"
  },
  {
    "code": "X53.2",
    "description": "Privaci√≥n de alimentos, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X53.3",
    "description": "Privaci√≥n de alimentos, en √°reas de deporte y atletismo"
  },
  {
    "code": "X53.4",
    "description": "Privaci√≥n de alimentos, en calles y carreteras"
  },
  {
    "code": "X53.5",
    "description": "Privaci√≥n de alimentos, en comercio y √°rea de servicios"
  },
  {
    "code": "X53.6",
    "description": "Privaci√≥n de alimentos, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X53.7",
    "description": "Privaci√≥n de alimentos, en granja"
  },
  {
    "code": "X53.8",
    "description": "Privaci√≥n de alimentos, en lugar no especificado, en otro lugar especificado"
  },
  {
    "code": "X53.9",
    "description": "Privaci√≥n de alimentos, en lugar no especificado"
  },
  {
    "code": "X54.0",
    "description": "Privaci√≥n de agua, en vivienda"
  },
  {
    "code": "X54.1",
    "description": "Privaci√≥n de agua, en instituci√≥n residencial"
  },
  {
    "code": "X54.2",
    "description": "Privaci√≥n de agua, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X54.3",
    "description": "Privaci√≥n de agua, en √°reas de deporte y atletismo"
  },
  {
    "code": "X54.4",
    "description": "Privaci√≥n de agua, en calles y carreteras"
  },
  {
    "code": "X54.5",
    "description": "Privaci√≥n de agua, en comercio y √°rea de servicios"
  },
  {
    "code": "X54.6",
    "description": "Privaci√≥n de agua, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X54.7",
    "description": "Privaci√≥n de agua, en granja"
  },
  {
    "code": "X54.8",
    "description": "Privaci√≥n de agua, en otro lugar especificado"
  },
  {
    "code": "X54.9",
    "description": "Privaci√≥n de agua, en lugar no especificado"
  },
  {
    "code": "X57.0",
    "description": "Privaci√≥n no especificada, en vivienda"
  },
  {
    "code": "X57.1",
    "description": "Privaci√≥n no especificada, en instituci√≥n residencial"
  },
  {
    "code": "X57.2",
    "description": "Privaci√≥n no especificada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X57.3",
    "description": "Privaci√≥n no especificada, en √°reas de deporte y atletismo"
  },
  {
    "code": "X57.4",
    "description": "Privaci√≥n no especificada, en calles y carreteras"
  },
  {
    "code": "X57.5",
    "description": "Privaci√≥n no especificada, en comercio y √°rea de servicios"
  },
  {
    "code": "X57.6",
    "description": "Privaci√≥n no especificada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X57.7",
    "description": "Privaci√≥n no especificada, en granja"
  },
  {
    "code": "X57.8",
    "description": "Privaci√≥n no especificada, en otro lugar especificado"
  },
  {
    "code": "X57.9",
    "description": "Privaci√≥n no especificada, en lugar no especificado"
  },
  {
    "code": "X58.0",
    "description": "Exposici√≥n a otros factores especificados, en vivienda"
  },
  {
    "code": "X58.1",
    "description": "Exposici√≥n a otros factores especificados, en instituci√≥n residencial"
  },
  {
    "code": "X58.2",
    "description": "Exposici√≥n a otros factores especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X58.3",
    "description": "Exposici√≥n a otros factores especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X58.4",
    "description": "Exposici√≥n a otros factores especificados, en calles y carreteras"
  },
  {
    "code": "X58.5",
    "description": "Exposici√≥n a otros factores especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X58.6",
    "description": "Exposici√≥n a otros factores especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X58.7",
    "description": "Exposici√≥n a otros factores especificados, en granja"
  },
  {
    "code": "X58.8",
    "description": "Exposici√≥n a otros factores especificados, en otro lugar especificado"
  },
  {
    "code": "X58.9",
    "description": "Exposici√≥n a otros factores especificados, en lugar no especificado"
  },
  {
    "code": "X59.0",
    "description": "Exposici√≥n a factores no especificados, en vivienda"
  },
  {
    "code": "X59.1",
    "description": "Exposici√≥n a factores no especificados, en instituci√≥n residencial"
  },
  {
    "code": "X59.2",
    "description": "Exposici√≥n a factores no especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X59.3",
    "description": "Exposici√≥n a factores no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X59.4",
    "description": "Exposici√≥n a factores no especificados, en calles y carreteras"
  },
  {
    "code": "X59.5",
    "description": "Exposici√≥n a factores no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X59.6",
    "description": "Exposici√≥n a factores no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X59.7",
    "description": "Exposici√≥n a factores no especificados, en granja"
  },
  {
    "code": "X59.8",
    "description": "Exposici√≥n a factores no especificados, en otro lugar especificado"
  },
  {
    "code": "X59.9",
    "description": "Exposici√≥n a factores no especificados, en lugar no especificado"
  },
  {
    "code": "X60.0",
    "description": ""
  },
  {
    "code": "X60.1",
    "description": ""
  },
  {
    "code": "X60.2",
    "description": ""
  },
  {
    "code": "X60.3",
    "description": ""
  },
  {
    "code": "X60.4",
    "description": ""
  },
  {
    "code": "X60.5",
    "description": ""
  },
  {
    "code": "X60.6",
    "description": ""
  },
  {
    "code": "X60.7",
    "description": ""
  },
  {
    "code": "X60.8",
    "description": ""
  },
  {
    "code": "X60.9",
    "description": ""
  },
  {
    "code": "X61.0",
    "description": ""
  },
  {
    "code": "X61.1",
    "description": ""
  },
  {
    "code": "X61.2",
    "description": ""
  },
  {
    "code": "X61.3",
    "description": ""
  },
  {
    "code": "X61.4",
    "description": ""
  },
  {
    "code": "X61.5",
    "description": ""
  },
  {
    "code": "X61.6",
    "description": ""
  },
  {
    "code": "X61.7",
    "description": ""
  },
  {
    "code": "X61.8",
    "description": ""
  },
  {
    "code": "X61.9",
    "description": ""
  },
  {
    "code": "X62.0",
    "description": ""
  },
  {
    "code": "X62.1",
    "description": ""
  },
  {
    "code": "X62.2",
    "description": ""
  },
  {
    "code": "X62.3",
    "description": ""
  },
  {
    "code": "X62.4",
    "description": ""
  },
  {
    "code": "X62.5",
    "description": ""
  },
  {
    "code": "X62.6",
    "description": ""
  },
  {
    "code": "X62.7",
    "description": ""
  },
  {
    "code": "X62.8",
    "description": ""
  },
  {
    "code": "X62.9",
    "description": ""
  },
  {
    "code": "X63.0",
    "description": ""
  },
  {
    "code": "X63.1",
    "description": ""
  },
  {
    "code": "X63.2",
    "description": ""
  },
  {
    "code": "X63.3",
    "description": ""
  },
  {
    "code": "X63.4",
    "description": ""
  },
  {
    "code": "X63.5",
    "description": ""
  },
  {
    "code": "X63.6",
    "description": ""
  },
  {
    "code": "X63.7",
    "description": ""
  },
  {
    "code": "X63.8",
    "description": ""
  },
  {
    "code": "X63.9",
    "description": ""
  },
  {
    "code": "X64.0",
    "description": ""
  },
  {
    "code": "X64.1",
    "description": ""
  },
  {
    "code": "X64.2",
    "description": ""
  },
  {
    "code": "X64.3",
    "description": ""
  },
  {
    "code": "X64.4",
    "description": ""
  },
  {
    "code": "X64.5",
    "description": ""
  },
  {
    "code": "X64.6",
    "description": ""
  },
  {
    "code": "X64.7",
    "description": ""
  },
  {
    "code": "X64.8",
    "description": ""
  },
  {
    "code": "X64.9",
    "description": ""
  },
  {
    "code": "X65.0",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en vivienda"
  },
  {
    "code": "X65.1",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en instituci√≥n residencial"
  },
  {
    "code": "X65.2",
    "description": ""
  },
  {
    "code": "X65.3",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en √°reas de deporte y atletismo"
  },
  {
    "code": "X65.4",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en calles y carreteras"
  },
  {
    "code": "X65.5",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en comercio y √°rea de servicios"
  },
  {
    "code": "X65.6",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X65.7",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en granja"
  },
  {
    "code": "X65.8",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en otro lugar especificado"
  },
  {
    "code": "X65.9",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol, en lugar no especificado"
  },
  {
    "code": "X66.0",
    "description": ""
  },
  {
    "code": "X66.1",
    "description": ""
  },
  {
    "code": "X66.2",
    "description": ""
  },
  {
    "code": "X66.3",
    "description": ""
  },
  {
    "code": "X66.4",
    "description": ""
  },
  {
    "code": "X66.5",
    "description": ""
  },
  {
    "code": "X66.6",
    "description": ""
  },
  {
    "code": "X66.7",
    "description": ""
  },
  {
    "code": "X66.8",
    "description": ""
  },
  {
    "code": "X66.9",
    "description": ""
  },
  {
    "code": "X67.0",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en vivienda"
  },
  {
    "code": "X67.1",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en instituci√≥n residencial"
  },
  {
    "code": "X67.2",
    "description": ""
  },
  {
    "code": "X67.3",
    "description": ""
  },
  {
    "code": "X67.4",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en calles y carreteras"
  },
  {
    "code": "X67.5",
    "description": ""
  },
  {
    "code": "X67.6",
    "description": ""
  },
  {
    "code": "X67.7",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en granja"
  },
  {
    "code": "X67.8",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en otro lugar especificado"
  },
  {
    "code": "X67.9",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores, en lugar no especificado"
  },
  {
    "code": "X68.0",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en vivienda"
  },
  {
    "code": "X68.1",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en instituci√≥n residencial"
  },
  {
    "code": "X68.2",
    "description": ""
  },
  {
    "code": "X68.3",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X68.4",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en calles y carreteras"
  },
  {
    "code": "X68.5",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en comercio y √°rea de servicios"
  },
  {
    "code": "X68.6",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X68.7",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en granja"
  },
  {
    "code": "X68.8",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en otro lugar especificado"
  },
  {
    "code": "X68.9",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas, en lugar no especificado"
  },
  {
    "code": "X69.0",
    "description": ""
  },
  {
    "code": "X69.1",
    "description": ""
  },
  {
    "code": "X69.2",
    "description": ""
  },
  {
    "code": "X69.3",
    "description": ""
  },
  {
    "code": "X69.4",
    "description": ""
  },
  {
    "code": "X69.5",
    "description": ""
  },
  {
    "code": "X69.6",
    "description": ""
  },
  {
    "code": "X69.7",
    "description": ""
  },
  {
    "code": "X69.8",
    "description": ""
  },
  {
    "code": "X69.9",
    "description": ""
  },
  {
    "code": "X70.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en vivienda"
  },
  {
    "code": "X70.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X70.2",
    "description": ""
  },
  {
    "code": "X70.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X70.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en calles y carreteras"
  },
  {
    "code": "X70.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X70.6",
    "description": ""
  },
  {
    "code": "X70.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en granja"
  },
  {
    "code": "X70.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en otro lugar especificado"
  },
  {
    "code": "X70.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n, en lugar no especificado"
  },
  {
    "code": "X71.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en vivienda"
  },
  {
    "code": "X71.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X71.2",
    "description": ""
  },
  {
    "code": "X71.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X71.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en calles y carreteras"
  },
  {
    "code": "X71.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X71.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X71.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en granja"
  },
  {
    "code": "X71.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en otro lugar especificado"
  },
  {
    "code": "X71.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n, en lugar no especificado"
  },
  {
    "code": "X72.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en vivienda"
  },
  {
    "code": "X72.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en instituci√≥n residencial"
  },
  {
    "code": "X72.2",
    "description": ""
  },
  {
    "code": "X72.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en √°reas de deporte y atletismo"
  },
  {
    "code": "X72.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en calles y carreteras"
  },
  {
    "code": "X72.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en comercio y √°rea de servicios"
  },
  {
    "code": "X72.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X72.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en granja"
  },
  {
    "code": "X72.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en otro lugar especificado"
  },
  {
    "code": "X72.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta, en lugar no especificado"
  },
  {
    "code": "X73.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en vivienda"
  },
  {
    "code": "X73.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en instituci√≥n residencial"
  },
  {
    "code": "X73.2",
    "description": ""
  },
  {
    "code": "X73.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en √°reas de deporte y atletismo"
  },
  {
    "code": "X73.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en calles y carreteras"
  },
  {
    "code": "X73.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en comercio y √°rea de servicios"
  },
  {
    "code": "X73.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X73.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en granja"
  },
  {
    "code": "X73.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en otro lugar especificado"
  },
  {
    "code": "X73.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga, en lugar no especificado"
  },
  {
    "code": "X74.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de otras armas de fuego, y las no especificadas, en vivienda"
  },
  {
    "code": "X74.1",
    "description": ""
  },
  {
    "code": "X74.2",
    "description": ""
  },
  {
    "code": "X74.3",
    "description": ""
  },
  {
    "code": "X74.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de otras armas de fuego, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "X74.5",
    "description": ""
  },
  {
    "code": "X74.6",
    "description": ""
  },
  {
    "code": "X74.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de otras armas de fuego, y las no especificadas, en granja"
  },
  {
    "code": "X74.8",
    "description": ""
  },
  {
    "code": "X74.9",
    "description": ""
  },
  {
    "code": "X75.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en vivienda"
  },
  {
    "code": "X75.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en instituci√≥n residencial"
  },
  {
    "code": "X75.2",
    "description": ""
  },
  {
    "code": "X75.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X75.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en calles y carreteras"
  },
  {
    "code": "X75.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en comercio y √°rea de servicios"
  },
  {
    "code": "X75.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X75.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en granja"
  },
  {
    "code": "X75.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en otro lugar especificado"
  },
  {
    "code": "X75.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo, en lugar no especificado"
  },
  {
    "code": "X76.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en vivienda"
  },
  {
    "code": "X76.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en instituci√≥n residencial"
  },
  {
    "code": "X76.2",
    "description": ""
  },
  {
    "code": "X76.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X76.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en calles y carreteras"
  },
  {
    "code": "X76.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en comercio y √°rea de servicios"
  },
  {
    "code": "X76.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X76.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en granja"
  },
  {
    "code": "X76.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en otro lugar especificado"
  },
  {
    "code": "X76.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas, en lugar no especificado"
  },
  {
    "code": "X77.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en vivienda"
  },
  {
    "code": "X77.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en instituci√≥n residencial"
  },
  {
    "code": "X77.2",
    "description": ""
  },
  {
    "code": "X77.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X77.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en calles y carreteras"
  },
  {
    "code": "X77.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X77.6",
    "description": ""
  },
  {
    "code": "X77.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en granja"
  },
  {
    "code": "X77.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en otro lugar especificado"
  },
  {
    "code": "X77.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes, en lugar no especificado"
  },
  {
    "code": "X78.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en vivienda"
  },
  {
    "code": "X78.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en instituci√≥n residencial"
  },
  {
    "code": "X78.2",
    "description": ""
  },
  {
    "code": "X78.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en √°reas de deporte y atletismo"
  },
  {
    "code": "X78.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en calles y carreteras"
  },
  {
    "code": "X78.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en comercio y √°rea de servicios"
  },
  {
    "code": "X78.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X78.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en granja"
  },
  {
    "code": "X78.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en otro lugar especificado"
  },
  {
    "code": "X78.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante, en lugar no especificado"
  },
  {
    "code": "X79.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en vivienda"
  },
  {
    "code": "X79.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en instituci√≥n residencial"
  },
  {
    "code": "X79.2",
    "description": ""
  },
  {
    "code": "X79.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X79.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en calles y carreteras"
  },
  {
    "code": "X79.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en comercio y √°rea de servicios"
  },
  {
    "code": "X79.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X79.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en granja"
  },
  {
    "code": "X79.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en otro lugar especificado"
  },
  {
    "code": "X79.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo, en lugar no especificado"
  },
  {
    "code": "X80.0",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en vivienda"
  },
  {
    "code": "X80.1",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en instituci√≥n residencial"
  },
  {
    "code": "X80.2",
    "description": ""
  },
  {
    "code": "X80.3",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en √°reas de deporte y atletismo"
  },
  {
    "code": "X80.4",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en calles y carreteras"
  },
  {
    "code": "X80.5",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en comercio y √°rea de servicios"
  },
  {
    "code": "X80.6",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X80.7",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en granja"
  },
  {
    "code": "X80.8",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en otro lugar especificado"
  },
  {
    "code": "X80.9",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado, en lugar no especificado"
  },
  {
    "code": "X81.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por arrojarse o colocarse delante de objeto en movimiento, en vivienda"
  },
  {
    "code": "X81.1",
    "description": ""
  },
  {
    "code": "X81.2",
    "description": ""
  },
  {
    "code": "X81.3",
    "description": ""
  },
  {
    "code": "X81.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por arrojarse o colocarse delante de objeto en movimiento, en calles y carreteras"
  },
  {
    "code": "X81.5",
    "description": ""
  },
  {
    "code": "X81.6",
    "description": ""
  },
  {
    "code": "X81.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por arrojarse o colocarse delante de objeto en movimiento, en granja"
  },
  {
    "code": "X81.8",
    "description": ""
  },
  {
    "code": "X81.9",
    "description": ""
  },
  {
    "code": "X82.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en vivienda"
  },
  {
    "code": "X82.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en instituci√≥n residencial"
  },
  {
    "code": "X82.2",
    "description": ""
  },
  {
    "code": "X82.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en √°reas de deporte y atletismo"
  },
  {
    "code": "X82.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en calles y carreteras"
  },
  {
    "code": "X82.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en comercio y √°rea de servicios"
  },
  {
    "code": "X82.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X82.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en granja"
  },
  {
    "code": "X82.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en otro lugar especificado"
  },
  {
    "code": "X82.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor, en lugar no especificado"
  },
  {
    "code": "X83.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en vivienda"
  },
  {
    "code": "X83.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en instituci√≥n residencial"
  },
  {
    "code": "X83.2",
    "description": ""
  },
  {
    "code": "X83.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X83.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en calles y carreteras"
  },
  {
    "code": "X83.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X83.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X83.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en granja"
  },
  {
    "code": "X83.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en otro lugar especificado"
  },
  {
    "code": "X83.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados, en lugar no especificado"
  },
  {
    "code": "X84.0",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en vivienda"
  },
  {
    "code": "X84.1",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en instituci√≥n residencial"
  },
  {
    "code": "X84.2",
    "description": ""
  },
  {
    "code": "X84.3",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "X84.4",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en calles y carreteras"
  },
  {
    "code": "X84.5",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "X84.6",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X84.7",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en granja"
  },
  {
    "code": "X84.8",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en otro lugar especificado"
  },
  {
    "code": "X84.9",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados, en lugar no especificado"
  },
  {
    "code": "X85.0",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en vivienda"
  },
  {
    "code": "X85.1",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en instituci√≥n residencial"
  },
  {
    "code": "X85.2",
    "description": ""
  },
  {
    "code": "X85.3",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X85.4",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en calles y carreteras"
  },
  {
    "code": "X85.5",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en comercio y √°rea de servicios"
  },
  {
    "code": "X85.6",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X85.7",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en granja"
  },
  {
    "code": "X85.8",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en otro lugar especificado"
  },
  {
    "code": "X85.9",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas, en lugar no especificado"
  },
  {
    "code": "X86.0",
    "description": "Agresi√≥n con sustancia corrosiva, en vivienda"
  },
  {
    "code": "X86.1",
    "description": "Agresi√≥n con sustancia corrosiva, en instituci√≥n residencial"
  },
  {
    "code": "X86.2",
    "description": "Agresi√≥n con sustancia corrosiva, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X86.3",
    "description": "Agresi√≥n con sustancia corrosiva, en √°reas de deporte y atletismo"
  },
  {
    "code": "X86.4",
    "description": "Agresi√≥n con sustancia corrosiva, en calles y carreteras"
  },
  {
    "code": "X86.5",
    "description": "Agresi√≥n con sustancia corrosiva, en comercio y √°rea de servicios"
  },
  {
    "code": "X86.6",
    "description": "Agresi√≥n con sustancia corrosiva, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X86.7",
    "description": "Agresi√≥n con sustancia corrosiva, en granja"
  },
  {
    "code": "X86.8",
    "description": "Agresi√≥n con sustancia corrosiva, en otro lugar especificado"
  },
  {
    "code": "X86.9",
    "description": "Agresi√≥n con sustancia corrosiva, en lugar no especificado"
  },
  {
    "code": "X87.0",
    "description": "Agresi√≥n con plaguicidas, en vivienda"
  },
  {
    "code": "X87.1",
    "description": "Agresi√≥n con plaguicidas, en instituci√≥n residencial"
  },
  {
    "code": "X87.2",
    "description": "Agresi√≥n con plaguicidas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X87.3",
    "description": "Agresi√≥n con plaguicidas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X87.4",
    "description": "Agresi√≥n con plaguicidas, en calles y carreteras"
  },
  {
    "code": "X87.5",
    "description": "Agresi√≥n con plaguicidas, en comercio y √°rea de servicios"
  },
  {
    "code": "X87.6",
    "description": "Agresi√≥n con plaguicidas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X87.7",
    "description": "Agresi√≥n con plaguicidas, en granja"
  },
  {
    "code": "X87.8",
    "description": "Agresi√≥n con plaguicidas, en otro lugar especificado"
  },
  {
    "code": "X87.9",
    "description": "Agresi√≥n con plaguicidas, en lugar no especificado"
  },
  {
    "code": "X88.0",
    "description": "Agresi√≥n con gases y vapores, en vivienda"
  },
  {
    "code": "X88.1",
    "description": "Agresi√≥n con gases y vapores, en instituci√≥n residencial"
  },
  {
    "code": "X88.2",
    "description": "Agresi√≥n con gases y vapores, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X88.3",
    "description": "Agresi√≥n con gases y vapores, en √°reas de deporte y atletismo"
  },
  {
    "code": "X88.4",
    "description": "Agresi√≥n con gases y vapores, en calles y carreteras"
  },
  {
    "code": "X88.5",
    "description": "Agresi√≥n con gases y vapores, en comercio y √°rea de servicios"
  },
  {
    "code": "X88.6",
    "description": "Agresi√≥n con gases y vapores, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X88.7",
    "description": "Agresi√≥n con gases y vapores, en granja"
  },
  {
    "code": "X88.8",
    "description": "Agresi√≥n con gases y vapores, en otro lugar especificado"
  },
  {
    "code": "X88.9",
    "description": "Agresi√≥n con gases y vapores, en lugar no especificado"
  },
  {
    "code": "X89.0",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en vivienda"
  },
  {
    "code": "X89.1",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X89.2",
    "description": ""
  },
  {
    "code": "X89.3",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X89.4",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en calles y carreteras"
  },
  {
    "code": "X89.5",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X89.6",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X89.7",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en granja"
  },
  {
    "code": "X89.8",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en otro lugar especificado"
  },
  {
    "code": "X89.9",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas, en lugar no especificado"
  },
  {
    "code": "X90.0",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en vivienda"
  },
  {
    "code": "X90.1",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X90.2",
    "description": ""
  },
  {
    "code": "X90.3",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X90.4",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en calles y carreteras"
  },
  {
    "code": "X90.5",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X90.6",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X90.7",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en granja"
  },
  {
    "code": "X90.8",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en otro lugar especificado"
  },
  {
    "code": "X90.9",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas, en lugar no especificado"
  },
  {
    "code": "X91.0",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en vivienda"
  },
  {
    "code": "X91.1",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X91.2",
    "description": ""
  },
  {
    "code": "X91.3",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X91.4",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en calles y carreteras"
  },
  {
    "code": "X91.5",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X91.6",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X91.7",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en granja"
  },
  {
    "code": "X91.8",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en otro lugar especificado"
  },
  {
    "code": "X91.9",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n, en lugar no especificado"
  },
  {
    "code": "X92.0",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en vivienda"
  },
  {
    "code": "X92.1",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en instituci√≥n residencial"
  },
  {
    "code": "X92.2",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X92.3",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en √°reas de deporte y atletismo"
  },
  {
    "code": "X92.4",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en calles y carreteras"
  },
  {
    "code": "X92.5",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en comercio y √°rea de servicios"
  },
  {
    "code": "X92.6",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X92.7",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en granja"
  },
  {
    "code": "X92.8",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en otro lugar especificado"
  },
  {
    "code": "X92.9",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n, en lugar no especificado"
  },
  {
    "code": "X93.0",
    "description": "Agresi√≥n con disparo de arma corta, en vivienda"
  },
  {
    "code": "X93.1",
    "description": "Agresi√≥n con disparo de arma corta, en instituci√≥n residencial"
  },
  {
    "code": "X93.2",
    "description": "Agresi√≥n con disparo de arma corta, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X93.3",
    "description": "Agresi√≥n con disparo de arma corta, en √°reas de deporte y atletismo"
  },
  {
    "code": "X93.4",
    "description": "Agresi√≥n con disparo de arma corta, en calles y carreteras"
  },
  {
    "code": "X93.5",
    "description": "Agresi√≥n con disparo de arma corta, en comercio y √°rea de servicios"
  },
  {
    "code": "X93.6",
    "description": "Agresi√≥n con disparo de arma corta, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X93.7",
    "description": "Agresi√≥n con disparo de arma corta, en granja"
  },
  {
    "code": "X93.8",
    "description": "Agresi√≥n con disparo de arma corta, en otro lugar especificado"
  },
  {
    "code": "X93.9",
    "description": "Agresi√≥n con disparo de arma corta, en lugar no especificado"
  },
  {
    "code": "X94.0",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en vivienda"
  },
  {
    "code": "X94.1",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en instituci√≥n residencial"
  },
  {
    "code": "X94.2",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X94.3",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en √°reas de deporte y atletismo"
  },
  {
    "code": "X94.4",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en calles y carreteras"
  },
  {
    "code": "X94.5",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en comercio y √°rea de servicios"
  },
  {
    "code": "X94.6",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X94.7",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en granja"
  },
  {
    "code": "X94.8",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en otro lugar especificado"
  },
  {
    "code": "X94.9",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga, en lugar no especificado"
  },
  {
    "code": "X95.0",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en vivienda"
  },
  {
    "code": "X95.1",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en instituci√≥n residencial"
  },
  {
    "code": "X95.2",
    "description": ""
  },
  {
    "code": "X95.3",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X95.4",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en calles y carreteras"
  },
  {
    "code": "X95.5",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en comercio y √°rea de servicios"
  },
  {
    "code": "X95.6",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X95.7",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en granja"
  },
  {
    "code": "X95.8",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en otro lugar especificado"
  },
  {
    "code": "X95.9",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas, en lugar no especificado"
  },
  {
    "code": "X96.0",
    "description": "Agresi√≥n con material explosivo, en vivienda"
  },
  {
    "code": "X96.1",
    "description": "Agresi√≥n con material explosivo, en instituci√≥n residencial"
  },
  {
    "code": "X96.2",
    "description": "Agresi√≥n con material explosivo, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X96.3",
    "description": "Agresi√≥n con material explosivo, en √°reas de deporte y atletismo"
  },
  {
    "code": "X96.4",
    "description": "Agresi√≥n con material explosivo, en calles y carreteras"
  },
  {
    "code": "X96.5",
    "description": "Agresi√≥n con material explosivo, en comercio y √°rea de servicios"
  },
  {
    "code": "X96.6",
    "description": "Agresi√≥n con material explosivo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X96.7",
    "description": "Agresi√≥n con material explosivo, en granja"
  },
  {
    "code": "X96.8",
    "description": "Agresi√≥n con material explosivo, en otro lugar especificado"
  },
  {
    "code": "X96.9",
    "description": "Agresi√≥n con material explosivo, en lugar no especificado"
  },
  {
    "code": "X97.0",
    "description": "Agresi√≥n con humo, fuego y llamas, en vivienda"
  },
  {
    "code": "X97.1",
    "description": "Agresi√≥n con humo, fuego y llamas, en instituci√≥n residencial"
  },
  {
    "code": "X97.2",
    "description": "Agresi√≥n con humo, fuego y llamas, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X97.3",
    "description": "Agresi√≥n con humo, fuego y llamas, en √°reas de deporte y atletismo"
  },
  {
    "code": "X97.4",
    "description": "Agresi√≥n con humo, fuego y llamas, en calles y carreteras"
  },
  {
    "code": "X97.5",
    "description": "Agresi√≥n con humo, fuego y llamas, en comercio y √°rea de servicios"
  },
  {
    "code": "X97.6",
    "description": "Agresi√≥n con humo, fuego y llamas, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X97.7",
    "description": "Agresi√≥n con humo, fuego y llamas, en granja"
  },
  {
    "code": "X97.8",
    "description": "Agresi√≥n con humo, fuego y llamas, en otro lugar especificado"
  },
  {
    "code": "X97.9",
    "description": "Agresi√≥n con humo, fuego y llamas, en lugar no especificado"
  },
  {
    "code": "X98.0",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en vivienda"
  },
  {
    "code": "X98.1",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en instituci√≥n residencial"
  },
  {
    "code": "X98.2",
    "description": ""
  },
  {
    "code": "X98.3",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en √°reas de deporte y atletismo"
  },
  {
    "code": "X98.4",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en calles y carreteras"
  },
  {
    "code": "X98.5",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en comercio y √°rea de servicios"
  },
  {
    "code": "X98.6",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X98.7",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en granja"
  },
  {
    "code": "X98.8",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en otro lugar especificado"
  },
  {
    "code": "X98.9",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes, en lugar no especificado"
  },
  {
    "code": "X99.0",
    "description": "Agresi√≥n con objeto cortante, en vivienda"
  },
  {
    "code": "X99.1",
    "description": "Agresi√≥n con objeto cortante, en instituci√≥n residencial"
  },
  {
    "code": "X99.2",
    "description": "Agresi√≥n con objeto cortante, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "X99.3",
    "description": "Agresi√≥n con objeto cortante, en √°reas de deporte y atletismo"
  },
  {
    "code": "X99.4",
    "description": "Agresi√≥n con objeto cortante, en calles y carreteras"
  },
  {
    "code": "X99.5",
    "description": "Agresi√≥n con objeto cortante, en comercio y √°rea de servicios"
  },
  {
    "code": "X99.6",
    "description": "Agresi√≥n con objeto cortante, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "X99.7",
    "description": "Agresi√≥n con objeto cortante, en granja"
  },
  {
    "code": "X99.8",
    "description": "Agresi√≥n con objeto cortante, en otro lugar especificado"
  },
  {
    "code": "X99.9",
    "description": "Agresi√≥n con objeto cortante, en lugar no especificado"
  },
  {
    "code": "Y00.0",
    "description": "Agresi√≥n con objeto romo o sin filo, en vivienda"
  },
  {
    "code": "Y00.1",
    "description": "Agresi√≥n con objeto romo o sin filo, en instituci√≥n residencial"
  },
  {
    "code": "Y00.2",
    "description": "Agresi√≥n con objeto romo o sin filo, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y00.3",
    "description": "Agresi√≥n con objeto romo o sin filo, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y00.4",
    "description": "Agresi√≥n con objeto romo o sin filo, en calles y carreteras"
  },
  {
    "code": "Y00.5",
    "description": "Agresi√≥n con objeto romo o sin filo, en comercio y √°rea de servicios"
  },
  {
    "code": "Y00.6",
    "description": "Agresi√≥n con objeto romo o sin filo, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y00.7",
    "description": "Agresi√≥n con objeto romo o sin filo, en granja"
  },
  {
    "code": "Y00.8",
    "description": "Agresi√≥n con objeto romo o sin filo, en otro lugar especificado"
  },
  {
    "code": "Y00.9",
    "description": "Agresi√≥n con objeto romo o sin filo, en lugar no especificado"
  },
  {
    "code": "Y01.0",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en vivienda"
  },
  {
    "code": "Y01.1",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en instituci√≥n residencial"
  },
  {
    "code": "Y01.2",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y01.3",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y01.4",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en calles y carreteras"
  },
  {
    "code": "Y01.5",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en comercio y √°rea de servicios"
  },
  {
    "code": "Y01.6",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y01.7",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en granja"
  },
  {
    "code": "Y01.8",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en otro lugar especificado"
  },
  {
    "code": "Y01.9",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado, en lugar no especificado"
  },
  {
    "code": "Y02.0",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en vivienda"
  },
  {
    "code": "Y02.1",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en instituci√≥n residencial"
  },
  {
    "code": "Y02.2",
    "description": ""
  },
  {
    "code": "Y02.3",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y02.4",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en calles y carreteras"
  },
  {
    "code": "Y02.5",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en comercio y √°rea de servicios"
  },
  {
    "code": "Y02.6",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y02.7",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en granja"
  },
  {
    "code": "Y02.8",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en otro lugar especificado"
  },
  {
    "code": "Y02.9",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento, en lugar no especificado"
  },
  {
    "code": "Y03.0",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en vivienda"
  },
  {
    "code": "Y03.1",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en instituci√≥n residencial"
  },
  {
    "code": "Y03.2",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y03.3",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y03.4",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en calles y carreteras"
  },
  {
    "code": "Y03.5",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en comercio y √°rea de servicios"
  },
  {
    "code": "Y03.6",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y03.7",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en granja"
  },
  {
    "code": "Y03.8",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en otro lugar especificado"
  },
  {
    "code": "Y03.9",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor, en lugar no especificado"
  },
  {
    "code": "Y04.0",
    "description": "Agresi√≥n con fuerza corporal, en vivienda"
  },
  {
    "code": "Y04.1",
    "description": "Agresi√≥n con fuerza corporal, en instituci√≥n residencial"
  },
  {
    "code": "Y04.2",
    "description": "Agresi√≥n con fuerza corporal, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y04.3",
    "description": "Agresi√≥n con fuerza corporal, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y04.4",
    "description": "Agresi√≥n con fuerza corporal, en calles y carreteras"
  },
  {
    "code": "Y04.5",
    "description": "Agresi√≥n con fuerza corporal, en comercio y √°rea de servicios"
  },
  {
    "code": "Y04.6",
    "description": "Agresi√≥n con fuerza corporal, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y04.7",
    "description": "Agresi√≥n con fuerza corporal, en granja"
  },
  {
    "code": "Y04.8",
    "description": "Agresi√≥n con fuerza corporal, en otro lugar especificado"
  },
  {
    "code": "Y04.9",
    "description": "Agresi√≥n con fuerza corporal, en lugar no especificado"
  },
  {
    "code": "Y05.0",
    "description": "Agresi√≥n sexual con fuerza corporal, en vivienda"
  },
  {
    "code": "Y05.1",
    "description": "Agresi√≥n sexual con fuerza corporal, en instituci√≥n residencial"
  },
  {
    "code": "Y05.2",
    "description": "Agresi√≥n sexual con fuerza corporal, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y05.3",
    "description": "Agresi√≥n sexual con fuerza corporal, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y05.4",
    "description": "Agresi√≥n sexual con fuerza corporal, en calles y carreteras"
  },
  {
    "code": "Y05.5",
    "description": "Agresi√≥n sexual con fuerza corporal, en comercio y √°rea de servicios"
  },
  {
    "code": "Y05.6",
    "description": "Agresi√≥n sexual con fuerza corporal, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y05.7",
    "description": "Agresi√≥n sexual con fuerza corporal, en granja"
  },
  {
    "code": "Y05.8",
    "description": "Agresi√≥n sexual con fuerza corporal, en otro lugar especificado"
  },
  {
    "code": "Y05.9",
    "description": "Agresi√≥n sexual con fuerza corporal, en lugar no especificado"
  },
  {
    "code": "Y06.0",
    "description": "Por esposo o pareja"
  },
  {
    "code": "Y06.1",
    "description": "Por padre o madre"
  },
  {
    "code": "Y06.2",
    "description": "Por conocido o amigo"
  },
  {
    "code": "Y06.8",
    "description": "Por otra persona especificada"
  },
  {
    "code": "Y06.9",
    "description": "Por persona no especificada"
  },
  {
    "code": "Y07.0",
    "description": "Por esposo o pareja"
  },
  {
    "code": "Y07.1",
    "description": "Por padre o madre"
  },
  {
    "code": "Y07.2",
    "description": "Por conocido o amigo"
  },
  {
    "code": "Y07.3",
    "description": "Por autoridades oficiales"
  },
  {
    "code": "Y07.8",
    "description": "Por otra persona especificada"
  },
  {
    "code": "Y07.9",
    "description": "Por persona no especificada"
  },
  {
    "code": "Y08.0",
    "description": "Agresi√≥n por otros medios especificados, en vivienda"
  },
  {
    "code": "Y08.1",
    "description": "Agresi√≥n por otros medios especificados, en instituci√≥n residencial"
  },
  {
    "code": "Y08.2",
    "description": "Agresi√≥n por otros medios especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y08.3",
    "description": "Agresi√≥n por otros medios especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y08.4",
    "description": "Agresi√≥n por otros medios especificados, en calles y carreteras"
  },
  {
    "code": "Y08.5",
    "description": "Agresi√≥n por otros medios especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "Y08.6",
    "description": "Agresi√≥n por otros medios especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y08.7",
    "description": "Agresi√≥n por otros medios especificados, en granja"
  },
  {
    "code": "Y08.8",
    "description": "Agresi√≥n por otros medios especificados, en otro lugar especificado"
  },
  {
    "code": "Y08.9",
    "description": "Agresi√≥n por otros medios especificados, en lugar no especificado"
  },
  {
    "code": "Y09.0",
    "description": "Agresi√≥n por medios no especificados, en vivienda"
  },
  {
    "code": "Y09.1",
    "description": "Agresi√≥n por medios no especificados, en instituci√≥n residencial"
  },
  {
    "code": "Y09.2",
    "description": "Agresi√≥n por medios no especificados, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y09.3",
    "description": "Agresi√≥n por medios no especificados, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y09.4",
    "description": "Agresi√≥n por medios no especificados, en calles y carreteras"
  },
  {
    "code": "Y09.5",
    "description": "Agresi√≥n por medios no especificados, en comercio y √°rea de servicios"
  },
  {
    "code": "Y09.6",
    "description": "Agresi√≥n por medios no especificados, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y09.7",
    "description": "Agresi√≥n por medios no especificados, en granja"
  },
  {
    "code": "Y09.8",
    "description": "Agresi√≥n por medios no especificados, en otro lugar especificado"
  },
  {
    "code": "Y09.9",
    "description": "Agresi√≥n por medios no especificados, en lugar no especificado"
  },
  {
    "code": "Y10.0",
    "description": ""
  },
  {
    "code": "Y10.1",
    "description": ""
  },
  {
    "code": "Y10.2",
    "description": ""
  },
  {
    "code": "Y10.3",
    "description": ""
  },
  {
    "code": "Y10.4",
    "description": ""
  },
  {
    "code": "Y10.5",
    "description": ""
  },
  {
    "code": "Y10.6",
    "description": ""
  },
  {
    "code": "Y10.7",
    "description": ""
  },
  {
    "code": "Y10.8",
    "description": ""
  },
  {
    "code": "Y10.9",
    "description": ""
  },
  {
    "code": "Y11.0",
    "description": ""
  },
  {
    "code": "Y11.1",
    "description": ""
  },
  {
    "code": "Y11.2",
    "description": ""
  },
  {
    "code": "Y11.3",
    "description": ""
  },
  {
    "code": "Y11.4",
    "description": ""
  },
  {
    "code": "Y11.5",
    "description": ""
  },
  {
    "code": "Y11.6",
    "description": ""
  },
  {
    "code": "Y11.7",
    "description": ""
  },
  {
    "code": "Y11.8",
    "description": ""
  },
  {
    "code": "Y11.9",
    "description": ""
  },
  {
    "code": "Y12.0",
    "description": ""
  },
  {
    "code": "Y12.1",
    "description": ""
  },
  {
    "code": "Y12.2",
    "description": ""
  },
  {
    "code": "Y12.3",
    "description": ""
  },
  {
    "code": "Y12.4",
    "description": ""
  },
  {
    "code": "Y12.5",
    "description": ""
  },
  {
    "code": "Y12.6",
    "description": ""
  },
  {
    "code": "Y12.7",
    "description": ""
  },
  {
    "code": "Y12.8",
    "description": ""
  },
  {
    "code": "Y12.9",
    "description": ""
  },
  {
    "code": "Y13.0",
    "description": ""
  },
  {
    "code": "Y13.1",
    "description": ""
  },
  {
    "code": "Y13.2",
    "description": ""
  },
  {
    "code": "Y13.3",
    "description": ""
  },
  {
    "code": "Y13.4",
    "description": ""
  },
  {
    "code": "Y13.5",
    "description": ""
  },
  {
    "code": "Y13.6",
    "description": ""
  },
  {
    "code": "Y13.7",
    "description": ""
  },
  {
    "code": "Y13.8",
    "description": ""
  },
  {
    "code": "Y13.9",
    "description": ""
  },
  {
    "code": "Y14.0",
    "description": ""
  },
  {
    "code": "Y14.1",
    "description": ""
  },
  {
    "code": "Y14.2",
    "description": ""
  },
  {
    "code": "Y14.3",
    "description": ""
  },
  {
    "code": "Y14.4",
    "description": ""
  },
  {
    "code": "Y14.5",
    "description": ""
  },
  {
    "code": "Y14.6",
    "description": ""
  },
  {
    "code": "Y14.7",
    "description": ""
  },
  {
    "code": "Y14.8",
    "description": ""
  },
  {
    "code": "Y14.9",
    "description": ""
  },
  {
    "code": "Y15.0",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y15.1",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y15.2",
    "description": ""
  },
  {
    "code": "Y15.3",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y15.4",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y15.5",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y15.6",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y15.7",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y15.8",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y15.9",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y16.0",
    "description": ""
  },
  {
    "code": "Y16.1",
    "description": ""
  },
  {
    "code": "Y16.2",
    "description": ""
  },
  {
    "code": "Y16.3",
    "description": ""
  },
  {
    "code": "Y16.4",
    "description": ""
  },
  {
    "code": "Y16.5",
    "description": ""
  },
  {
    "code": "Y16.6",
    "description": ""
  },
  {
    "code": "Y16.7",
    "description": ""
  },
  {
    "code": "Y16.8",
    "description": ""
  },
  {
    "code": "Y16.9",
    "description": ""
  },
  {
    "code": "Y17.0",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y17.1",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y17.2",
    "description": ""
  },
  {
    "code": "Y17.3",
    "description": ""
  },
  {
    "code": "Y17.4",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y17.5",
    "description": ""
  },
  {
    "code": "Y17.6",
    "description": ""
  },
  {
    "code": "Y17.7",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y17.8",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y17.9",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y18.0",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y18.1",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y18.2",
    "description": ""
  },
  {
    "code": "Y18.3",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y18.4",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y18.5",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y18.6",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y18.7",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y18.8",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y18.9",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y19.0",
    "description": ""
  },
  {
    "code": "Y19.1",
    "description": ""
  },
  {
    "code": "Y19.2",
    "description": ""
  },
  {
    "code": "Y19.3",
    "description": ""
  },
  {
    "code": "Y19.4",
    "description": ""
  },
  {
    "code": "Y19.5",
    "description": ""
  },
  {
    "code": "Y19.6",
    "description": ""
  },
  {
    "code": "Y19.7",
    "description": ""
  },
  {
    "code": "Y19.8",
    "description": ""
  },
  {
    "code": "Y19.9",
    "description": ""
  },
  {
    "code": "Y20.0",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y20.1",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y20.2",
    "description": ""
  },
  {
    "code": "Y20.3",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y20.4",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y20.5",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y20.6",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y20.7",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y20.8",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y20.9",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y21.0",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y21.1",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y21.2",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y21.3",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y21.4",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y21.5",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y21.6",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y21.7",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y21.8",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y21.9",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y22.0",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y22.1",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y22.2",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y22.3",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y22.4",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y22.5",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y22.6",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y22.7",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y22.8",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y22.9",
    "description": "Disparo de arma corta, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y23.0",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y23.1",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y23.2",
    "description": ""
  },
  {
    "code": "Y23.3",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y23.4",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y23.5",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y23.6",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y23.7",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y23.8",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y23.9",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y24.0",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y24.1",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y24.2",
    "description": ""
  },
  {
    "code": "Y24.3",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y24.4",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y24.5",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y24.6",
    "description": ""
  },
  {
    "code": "Y24.7",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y24.8",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y24.9",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y25.0",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y25.1",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y25.2",
    "description": ""
  },
  {
    "code": "Y25.3",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y25.4",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y25.5",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y25.6",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y25.7",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y25.8",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y25.9",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y26.0",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y26.1",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y26.2",
    "description": ""
  },
  {
    "code": "Y26.3",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y26.4",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y26.5",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y26.6",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y26.7",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y26.8",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y26.9",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y27.0",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y27.1",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y27.2",
    "description": ""
  },
  {
    "code": "Y27.3",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y27.4",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y27.5",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y27.6",
    "description": ""
  },
  {
    "code": "Y27.7",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y27.8",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y27.9",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y28.0",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y28.1",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y28.2",
    "description": ""
  },
  {
    "code": "Y28.3",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y28.4",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y28.5",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y28.6",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y28.7",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y28.8",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y28.9",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y29.0",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y29.1",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y29.2",
    "description": ""
  },
  {
    "code": "Y29.3",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y29.4",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y29.5",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y29.6",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y29.7",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y29.8",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y29.9",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y30.0",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y30.1",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y30.2",
    "description": ""
  },
  {
    "code": "Y30.3",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y30.4",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y30.5",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y30.6",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y30.7",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y30.8",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y30.9",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y31.0",
    "description": "Ca√≠da, permanencia o carrera delante o hacia objeto en movimiento, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y31.1",
    "description": ""
  },
  {
    "code": "Y31.2",
    "description": ""
  },
  {
    "code": "Y31.3",
    "description": ""
  },
  {
    "code": "Y31.4",
    "description": "Ca√≠da, permanencia o carrera delante o hacia objeto en movimiento, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y31.5",
    "description": ""
  },
  {
    "code": "Y31.6",
    "description": ""
  },
  {
    "code": "Y31.7",
    "description": "Ca√≠da, permanencia o carrera delante o hacia objeto en movimiento, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y31.8",
    "description": ""
  },
  {
    "code": "Y31.9",
    "description": ""
  },
  {
    "code": "Y32.0",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y32.1",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y32.2",
    "description": ""
  },
  {
    "code": "Y32.3",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y32.4",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y32.5",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y32.6",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y32.7",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y32.8",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y32.9",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y33.0",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y33.1",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y33.2",
    "description": ""
  },
  {
    "code": "Y33.3",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y33.4",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y33.5",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y33.6",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y33.7",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y33.8",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y33.9",
    "description": "Otros eventos especificados, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y34.0",
    "description": "Evento no especificado, de intenci√≥n no determinada, en vivienda"
  },
  {
    "code": "Y34.1",
    "description": "Evento no especificado, de intenci√≥n no determinada, en instituci√≥n residencial"
  },
  {
    "code": "Y34.2",
    "description": "Evento no especificado, de intenci√≥n no determinada, en escuelas, otras instituciones y √°reas administrativas p√∫blicas"
  },
  {
    "code": "Y34.3",
    "description": "Evento no especificado, de intenci√≥n no determinada, en √°reas de deporte y atletismo"
  },
  {
    "code": "Y34.4",
    "description": "Evento no especificado, de intenci√≥n no determinada, en calles y carreteras"
  },
  {
    "code": "Y34.5",
    "description": "Evento no especificado, de intenci√≥n no determinada, en comercio y √°rea de servicios"
  },
  {
    "code": "Y34.6",
    "description": "Evento no especificado, de intenci√≥n no determinada, en √°rea industrial y de la construcci√≥n"
  },
  {
    "code": "Y34.7",
    "description": "Evento no especificado, de intenci√≥n no determinada, en granja"
  },
  {
    "code": "Y34.8",
    "description": "Evento no especificado, de intenci√≥n no determinada, en otro lugar especificado"
  },
  {
    "code": "Y34.9",
    "description": "Evento no especificado, de intenci√≥n no determinada, en lugar no especificado"
  },
  {
    "code": "Y35.0",
    "description": "Intervenci√≥n legal con disparo de arma de fuego"
  },
  {
    "code": "Y35.1",
    "description": "Intervenci√≥n legal con explosivos"
  },
  {
    "code": "Y35.2",
    "description": "Intervenci√≥n legal con gas"
  },
  {
    "code": "Y35.3",
    "description": "Intervenci√≥n legal con objetos romos o sin filo"
  },
  {
    "code": "Y35.4",
    "description": "Intervenci√≥n legal con objetos cortantes"
  },
  {
    "code": "Y35.5",
    "description": "Ejecuci√≥n legal"
  },
  {
    "code": "Y35.6",
    "description": "Intervenci√≥n legal con otros medios especificados"
  },
  {
    "code": "Y35.7",
    "description": "Intervenci√≥n legal, medios no especificados"
  },
  {
    "code": "Y36.0",
    "description": "Operaciones de guerra con explosi√≥n de armamento naval"
  },
  {
    "code": "Y36.1",
    "description": "Operaciones de guerra con destrucci√≥n de aeronave"
  },
  {
    "code": "Y36.2",
    "description": "Operaciones de guerra con otras explosiones y esquirlas"
  },
  {
    "code": "Y36.3",
    "description": "Operaciones de guerra con fuego y sustancias incendiarias y calientes"
  },
  {
    "code": "Y36.4",
    "description": "Operaciones de guerra con disparo de arma de fuego y otras formas de guerra convencional"
  },
  {
    "code": "Y36.5",
    "description": "Operaciones de guerra con armas nucleares"
  },
  {
    "code": "Y36.6",
    "description": "Operaciones de guerra con armas biol√≥gicas"
  },
  {
    "code": "Y36.7",
    "description": "Operaciones de guerra con armas qu√≠micas y otras formas de guerra no convencional"
  },
  {
    "code": "Y36.8",
    "description": "Operaciones de guerra que ocurren despu√©s del cese de hostilidades"
  },
  {
    "code": "Y36.9",
    "description": "Operaci√≥n de guerra no especificada"
  },
  {
    "code": "Y40.0",
    "description": "Efectos adversos de penicilinas"
  },
  {
    "code": "Y40.1",
    "description": "Efectos adversos de cefalosporinas y otros antibi√≥ticos beta-lact√°micos"
  },
  {
    "code": "Y40.2",
    "description": "Efectos adversos del grupo de cloramfenicol"
  },
  {
    "code": "Y40.3",
    "description": "Efectos adversos de los macr√≥lidos"
  },
  {
    "code": "Y40.4",
    "description": "Efectos adversos de tetraciclinas"
  },
  {
    "code": "Y40.5",
    "description": "Efectos adversos de aminogluc√≥sidos"
  },
  {
    "code": "Y40.6",
    "description": "Efectos adversos de rifamicinas"
  },
  {
    "code": "Y40.7",
    "description": "Efectos adversos de antibi√≥ticos antimic√≥ticos usados sist√©micamente"
  },
  {
    "code": "Y40.8",
    "description": "Efectos adversos de otros antibi√≥ticos sist√©micos"
  },
  {
    "code": "Y40.9",
    "description": "Efectos adversos de antibi√≥tico sist√©mico no especificado"
  },
  {
    "code": "Y41.0",
    "description": "Efectos adversos de sulfonamidas"
  },
  {
    "code": "Y41.1",
    "description": "Efectos adversos de drogas antimicobacterianas"
  },
  {
    "code": "Y41.2",
    "description": "Efectos adversos de drogas antipal√∫dicas y agentes que act√∫an sobre otros protozoarios de la sangre"
  },
  {
    "code": "Y41.3",
    "description": "Efectos adversos de otras drogas antiprotozoarias"
  },
  {
    "code": "Y41.4",
    "description": "Efectos adversos de antihelm√≠nticos"
  },
  {
    "code": "Y41.5",
    "description": "Efectos adversos de drogas antivirales"
  },
  {
    "code": "Y41.8",
    "description": "Efectos adversos de otros antiinfecciosos y antiparasitarios sist√©micos especificados"
  },
  {
    "code": "Y41.9",
    "description": "Efectos adversos de antiinfecciosos y antiparasitarios sist√©micos no especificados"
  },
  {
    "code": "Y42.0",
    "description": "Efectos adversos de glucocorticoides y an√°logos sint√©ticos"
  },
  {
    "code": "Y42.1",
    "description": "Efectos adversos de hormonas tiroideas y sustitutos"
  },
  {
    "code": "Y42.2",
    "description": "Efectos adversos de drogas antitiroideas"
  },
  {
    "code": "Y42.3",
    "description": "Efectos adversos de drogas hipoglucemiantes orales e insulina [antidiab√©ticas]"
  },
  {
    "code": "Y42.4",
    "description": "Efectos adversos de anticonceptivos orales"
  },
  {
    "code": "Y42.5",
    "description": "Efectos adversos de otros estr√≥genos y progest√°genos"
  },
  {
    "code": "Y42.6",
    "description": "Efectos adversos de antigonadotropinas, antiestr√≥genos y antiandr√≥genos, no clasificados en otra parte"
  },
  {
    "code": "Y42.7",
    "description": "Efectos adversos de andr√≥genos y cong√©neres anab√≥licos"
  },
  {
    "code": "Y42.8",
    "description": "Efectos adversos de otras hormonas y sus sustitutos sint√©ticos, y las no especificadas"
  },
  {
    "code": "Y42.9",
    "description": "Efectos adversos de otras hormonas antagonistas, y las no especificadas"
  },
  {
    "code": "Y43.0",
    "description": "Efectos adversos de antial√©rgicos y antiem√©ticos"
  },
  {
    "code": "Y43.1",
    "description": "Efectos adversos de antimetabolitos antineopl√°sicos"
  },
  {
    "code": "Y43.2",
    "description": "Efectos adversos de productos naturales antineopl√°sicos"
  },
  {
    "code": "Y43.3",
    "description": "Efectos adversos de otras drogas antineopl√°sicas"
  },
  {
    "code": "Y43.4",
    "description": "Efectos adversos de agentes inmunosupresores"
  },
  {
    "code": "Y43.5",
    "description": "Efectos adversos de agentes acidificantes y alcalinizantes"
  },
  {
    "code": "Y43.6",
    "description": "Efectos adversos de enzimas no clasificadas en otra parte"
  },
  {
    "code": "Y43.8",
    "description": "Efectos adversos de otros agentes sist√©micos primarios no clasificados en otra parte"
  },
  {
    "code": "Y43.9",
    "description": "Efectos adversos de agente sist√©mico primario no especificado"
  },
  {
    "code": "Y44.0",
    "description": "Efectos adversos de preparaciones con hierro y otros preparados contra la anemia hipocr√≥mica"
  },
  {
    "code": "Y44.1",
    "description": "Efectos adversos de vitamina B12, √°cido f√≥lico y otros preparados contra la anemia megalobl√°stica"
  },
  {
    "code": "Y44.2",
    "description": "Efectos adversos de anticoagulantes"
  },
  {
    "code": "Y44.3",
    "description": "Efectos adversos de antagonistas de anticoagulantes, vitamina K y otros coagulantes"
  },
  {
    "code": "Y44.4",
    "description": "Efectos adversos de drogas antitromb√≥ticas [inhibidoras de la agregaci√≥n plaquetaria]"
  },
  {
    "code": "Y44.5",
    "description": "Efectos adversos de drogas trombol√≠ticas"
  },
  {
    "code": "Y44.6",
    "description": "Efectos adversos de sangre natural y productos sangu√≠neos"
  },
  {
    "code": "Y44.7",
    "description": "Efectos adversos de los sustitutos del plasma"
  },
  {
    "code": "Y44.9",
    "description": "Efectos adversos de otros agentes que afectan los constituyentes de la sangre, y los no especificados"
  },
  {
    "code": "Y45.0",
    "description": "Efectos adversos de opi√°ceos y analg√©sicos relacionados"
  },
  {
    "code": "Y45.1",
    "description": "Efectos adversos de salicilatos"
  },
  {
    "code": "Y45.2",
    "description": "Efectos adversos de derivados del √°cido propi√≥nico"
  },
  {
    "code": "Y45.3",
    "description": "Efectos adversos de otras drogas antiinflamatorias no esteroides [DAINE]"
  },
  {
    "code": "Y45.4",
    "description": "Efectos adversos de los antirreum√°ticos"
  },
  {
    "code": "Y45.5",
    "description": "Efectos adversos de los derivados del 4-aminofenol"
  },
  {
    "code": "Y45.8",
    "description": "Efectos adversos de otros analg√©sicos y antipir√©ticos"
  },
  {
    "code": "Y45.9",
    "description": "Efectos adversos de drogas analg√©sicas, antipir√©ticas y antiinflamatorias no especificadas"
  },
  {
    "code": "Y46.0",
    "description": "Efectos adversos de succinamidas"
  },
  {
    "code": "Y46.1",
    "description": "Efectos adversos de oxazolidinadionas"
  },
  {
    "code": "Y46.2",
    "description": "Efectos adversos de derivados de la hidanto√≠na"
  },
  {
    "code": "Y46.3",
    "description": "Efectos adversos de desoxibarbit√∫ricos"
  },
  {
    "code": "Y46.4",
    "description": "Efectos adversos de iminoestilbenos"
  },
  {
    "code": "Y46.5",
    "description": "Efectos adversos del √°cido valproico"
  },
  {
    "code": "Y46.6",
    "description": "Efectos adversos de otros antiepil√©pticos, y los no especificados"
  },
  {
    "code": "Y46.7",
    "description": "Efectos adversos de drogas antiparkinsonianas"
  },
  {
    "code": "Y46.8",
    "description": "Efectos adversos de drogas antiesp√°sticas"
  },
  {
    "code": "Y47.0",
    "description": "Efectos adversos de barbit√∫ricos, no clasificados en otra parte"
  },
  {
    "code": "Y47.1",
    "description": "Efectos adversos de benzodiazepinas"
  },
  {
    "code": "Y47.2",
    "description": "Efectos adversos de derivados clorales"
  },
  {
    "code": "Y47.3",
    "description": "Efectos adversos de paraldeh√≠do"
  },
  {
    "code": "Y47.4",
    "description": "Efectos adversos de compuestos del bromo"
  },
  {
    "code": "Y47.5",
    "description": "Efectos adversos de mezclas sedantes e hipn√≥ticas, no clasificadas en otra parte"
  },
  {
    "code": "Y47.8",
    "description": "Efectos adversos de otras drogas sedantes, hipn√≥ticas y ansiol√≠ticas"
  },
  {
    "code": "Y47.9",
    "description": "Efectos adversos de drogas sedantes, hipn√≥ticas y ansiol√≠ticas no especificadas"
  },
  {
    "code": "Y48.0",
    "description": "Efectos adversos de gases anest√©sicos por inhalaci√≥n"
  },
  {
    "code": "Y48.1",
    "description": "Efectos adversos de gases anest√©sicos parenterales"
  },
  {
    "code": "Y48.2",
    "description": "Efectos adversos de otros gases anest√©sicos generales, y los no especificados"
  },
  {
    "code": "Y48.3",
    "description": "Efectos adversos de gases anest√©sicos locales"
  },
  {
    "code": "Y48.4",
    "description": "Efectos adversos de anest√©sicos no especificados"
  },
  {
    "code": "Y48.5",
    "description": "Efectos adversos de gases terap√©uticos"
  },
  {
    "code": "Y49.0",
    "description": "Efectos adversos de antidepresivos tric√≠clicos y tetrac√≠clicos"
  },
  {
    "code": "Y49.1",
    "description": "Efectos adversos de antidepresivos inhibidores de la monoaminooxidasa"
  },
  {
    "code": "Y49.2",
    "description": "Efectos adversos de otros antidepresivos, y los no especificados"
  },
  {
    "code": "Y49.3",
    "description": "Efectos adversos de antipsic√≥ticos y neurol√©pticos fenotiaz√≠nicos"
  },
  {
    "code": "Y49.4",
    "description": "Efectos adversos de neurol√©pticos de la butirofenona y tioxantina"
  },
  {
    "code": "Y49.5",
    "description": "Efectos adversos de otros antipsic√≥ticos y neurol√©pticos"
  },
  {
    "code": "Y49.6",
    "description": "Efectos adversos de psicodisl√©pticos [alucin√≥genos]"
  },
  {
    "code": "Y49.7",
    "description": "Efectos adversos de psicoestimulantes con abuso potencial"
  },
  {
    "code": "Y49.8",
    "description": "Efectos adversos de otras drogas psicotr√≥picas, no clasificadas en otra parte"
  },
  {
    "code": "Y49.9",
    "description": "Efectos adversos de drogas psicotr√≥picas no especificadas"
  },
  {
    "code": "Y50.0",
    "description": "Efectos adversos de anal√©pticos"
  },
  {
    "code": "Y50.1",
    "description": "Efectos adversos de antagonistas de opi√°ceos"
  },
  {
    "code": "Y50.2",
    "description": "Efectos adversos de metilxantinas, no clasificadas en otra parte"
  },
  {
    "code": "Y50.8",
    "description": "Efectos adversos de otros estimulantes del sistema nervioso central"
  },
  {
    "code": "Y50.9",
    "description": "Efectos adversos de estimulante no especificado del sistema nervioso central"
  },
  {
    "code": "Y51.0",
    "description": "Efectos adversos de agentes anticolinesterasa"
  },
  {
    "code": "Y51.1",
    "description": "Efectos adversos de otros parasimpaticomim√©ticos [colin√©rgicos]"
  },
  {
    "code": "Y51.2",
    "description": "Efectos adversos de drogas bloqueadoras ganglionares, no clasificadas en otra parte"
  },
  {
    "code": "Y51.3",
    "description": ""
  },
  {
    "code": "Y51.4",
    "description": "Efectos adversos de agonistas [estimulantes] predominantemente alfa- adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "Y51.5",
    "description": "Efectos adversos de agonistas [estimulantes] predominantemente beta- adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "Y51.6",
    "description": "Efectos adversos de antagonistas [bloqueadores] alfa-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "Y51.7",
    "description": "Efectos adversos de antagonistas [bloqueadores] beta-adren√©rgicos, no clasificados en otra parte"
  },
  {
    "code": "Y51.8",
    "description": "Efectos adversos de agentes bloqueadores neuro-adren√©rgicos que act√∫an centralmente, no clasificados en otra parte"
  },
  {
    "code": "Y51.9",
    "description": "Efectos adversos de otras drogas que afectan primariamente el sistema nerviosos aut√≥nomo, y las no especificadas"
  },
  {
    "code": "Y52.0",
    "description": "Efectos adversos de gluc√≥sidos cardiot√≥nicos y drogas de acci√≥n similar"
  },
  {
    "code": "Y52.1",
    "description": "Efectos adversos de bloqueadores del canal del calcio"
  },
  {
    "code": "Y52.2",
    "description": "Efectos adversos de otras drogas antiarr√≠tmicas, no clasificadas en otra parte"
  },
  {
    "code": "Y52.3",
    "description": "Efectos adversos de vasodilatadores coronarios, no clasificados en otra parte"
  },
  {
    "code": "Y52.4",
    "description": "Efectos adversos de inhibidores de la enzima convertidora de angiotensina"
  },
  {
    "code": "Y52.5",
    "description": "Efectos adversos de otras drogas antihipertensivas, no clasificadas en otra parte"
  },
  {
    "code": "Y52.6",
    "description": "Efectos adversos de drogas antihiperlipid√©micas y antiarterioscler√≥ticas"
  },
  {
    "code": "Y52.7",
    "description": "Efectos adversos de vasodilatadores perif√©ricos"
  },
  {
    "code": "Y52.8",
    "description": "Efectos adversos de drogas antivaricosas, inclusive agentes esclerosantes"
  },
  {
    "code": "Y52.9",
    "description": "Efectos adversos de otros agentes que afectan primariamente el sistema cardiovascular, y los no especificados"
  },
  {
    "code": "Y53.0",
    "description": "Efectos adversos de bloqueadores de los receptores H2 de histamina"
  },
  {
    "code": "Y53.1",
    "description": "Efectos adversos de otras drogas anti√°cidas e inhibidoras de la secreci√≥n g√°strica"
  },
  {
    "code": "Y53.2",
    "description": "Efectos adversos de laxantes estimulantes"
  },
  {
    "code": "Y53.3",
    "description": "Efectos adversos de laxantes salinos y osm√≥ticos"
  },
  {
    "code": "Y53.4",
    "description": "Efectos adversos de otros laxantes"
  },
  {
    "code": "Y53.5",
    "description": "Efectos adversos de digestivos"
  },
  {
    "code": "Y53.6",
    "description": "Efectos adversos de drogas antidiarreicas"
  },
  {
    "code": "Y53.7",
    "description": "Efectos adversos de em√©ticos"
  },
  {
    "code": "Y53.8",
    "description": "Efectos adversos de otros agentes que afectan primariamente el sistema gastrointestinal"
  },
  {
    "code": "Y53.9",
    "description": "Efectos adversos de agentes que afectan el sistema gastrointestinal, no especificados"
  },
  {
    "code": "Y54.0",
    "description": "Efectos adversos de mineralocorticoides"
  },
  {
    "code": "Y54.1",
    "description": "Efectos adversos de los bloqueadores de mineralocorticoides [antagonistas de la aldosterona]"
  },
  {
    "code": "Y54.2",
    "description": "Efectos adversos de los inhibidores de la anhidrasa carb√≥nica"
  },
  {
    "code": "Y54.3",
    "description": "Efectos adversos de los derivados de la benzotiadiazina"
  },
  {
    "code": "Y54.4",
    "description": "Efectos adversos de diur√©ticos de asa [\"high-ceiling\"]"
  },
  {
    "code": "Y54.5",
    "description": "Efectos adversos de otros diur√©ticos"
  },
  {
    "code": "Y54.6",
    "description": "Efectos adversos de agentes electrol√≠ticos, cal√≥ricos y del equilibrio h√≠drico"
  },
  {
    "code": "Y54.7",
    "description": "Efectos adversos de agentes que afectan la calcificaci√≥n"
  },
  {
    "code": "Y54.8",
    "description": "Efectos adversos de agentes que afectan el metabolismo del √°cido √∫rico"
  },
  {
    "code": "Y54.9",
    "description": "Efectos adversos de sales minerales, no clasificadas en otra parte"
  },
  {
    "code": "Y55.0",
    "description": "Efectos adversos de drogas oxit√≥cicas"
  },
  {
    "code": "Y55.1",
    "description": "Efectos adversos de relajantes de los m√∫sculos estriados [agentes bloqueadores neuromusculares]"
  },
  {
    "code": "Y55.2",
    "description": "Efectos adversos de otros agentes que act√∫an primariamente sobre los m√∫sculos, y los no especificados"
  },
  {
    "code": "Y55.3",
    "description": "Efectos adversos de antitus√≠genos"
  },
  {
    "code": "Y55.4",
    "description": "Efectos adversos de expectorantes"
  },
  {
    "code": "Y55.5",
    "description": "Efectos adversos de drogas contra el resfriado com√∫n"
  },
  {
    "code": "Y55.6",
    "description": "Efectos adversos de antiasm√°ticos, no clasificados en otra parte"
  },
  {
    "code": "Y55.7",
    "description": "Efectos adversos de otros agentes que act√∫an primariamente sobre el sistema respiratorio, y los no especificados"
  },
  {
    "code": "Y56.0",
    "description": "Efectos adversos de drogas antimic√≥ticas, antiinfecciosas y antiinflamatorias de uso local, no clasificadas en otra parte"
  },
  {
    "code": "Y56.1",
    "description": "Efectos adversos de antipruriginosos"
  },
  {
    "code": "Y56.2",
    "description": "Efectos adversos de astringentes y detergentes locales"
  },
  {
    "code": "Y56.3",
    "description": "Efectos adversos de emolientes, demulcentes y protectores"
  },
  {
    "code": "Y56.4",
    "description": "Efectos adversos de drogas y preparados queratol√≠ticos, queratopl√°sticos y otros para el tratamiento del cabello"
  },
  {
    "code": "Y56.5",
    "description": "Efectos adversos de drogas y preparados oftalmol√≥gicos"
  },
  {
    "code": "Y56.6",
    "description": "Efectos adversos de drogas y preparados otorrinolaringol√≥gicos"
  },
  {
    "code": "Y56.7",
    "description": "Efectos adversos de drogas dentales, de aplicaci√≥n t√≥pica"
  },
  {
    "code": "Y56.8",
    "description": "Efectos adversos de otros agentes t√≥picos"
  },
  {
    "code": "Y56.9",
    "description": "Efectos adversos de otros agentes t√≥picos no especificados"
  },
  {
    "code": "Y57.0",
    "description": "Efectos adversos de depresores del apetito [anor√©xicos]"
  },
  {
    "code": "Y57.1",
    "description": "Efectos adversos de drogas lipotr√≥picas"
  },
  {
    "code": "Y57.2",
    "description": "Efectos adversos de ant√≠dotos y agentes quelantes, no clasificados en otra parte"
  },
  {
    "code": "Y57.3",
    "description": "Efectos adversos de disuasivos del alcohol"
  },
  {
    "code": "Y57.4",
    "description": "Efectos adversos de excipientes farmac√©uticos"
  },
  {
    "code": "Y57.5",
    "description": "Efectos adversos de medios de contraste para rayos X"
  },
  {
    "code": "Y57.6",
    "description": "Efectos adversos de otros agentes diagn√≥sticos"
  },
  {
    "code": "Y57.7",
    "description": "Efectos adversos de vitaminas, no clasificadas en otra parte"
  },
  {
    "code": "Y57.8",
    "description": "Efectos adversos de otras drogas y medicamentos"
  },
  {
    "code": "Y57.9",
    "description": "Efectos adversos de drogas o medicamentos no especificados"
  },
  {
    "code": "Y58.0",
    "description": "Efectos adversos de la vacuna BCG"
  },
  {
    "code": "Y58.1",
    "description": "Efectos adversos de la vacuna tifoidea y paratifoidea"
  },
  {
    "code": "Y58.2",
    "description": "Efectos adversos de la vacuna contra el c√≥lera"
  },
  {
    "code": "Y58.3",
    "description": "Efectos adversos de la vacuna contra la peste"
  },
  {
    "code": "Y58.4",
    "description": "Efectos adversos de la vacuna contra el t√©tanos"
  },
  {
    "code": "Y58.5",
    "description": "Efectos adversos de la vacuna contra la difteria"
  },
  {
    "code": "Y58.6",
    "description": "Efectos adversos de la vacuna contra la tos ferina, inclusive combinaciones con un componente pertusis"
  },
  {
    "code": "Y58.8",
    "description": "Efectos adversos de vacunas bacterianas mixtas, excepto combinaciones con un componente pertusis"
  },
  {
    "code": "Y58.9",
    "description": "Efectos adversos de otras vacunas bacterianas, y las no especificadas"
  },
  {
    "code": "Y59.0",
    "description": "Efectos adversos de vacunas virales"
  },
  {
    "code": "Y59.1",
    "description": "Efectos adversos de vacunas contra rickettsias"
  },
  {
    "code": "Y59.2",
    "description": "Efectos adversos de vacunas antiprotozoarias"
  },
  {
    "code": "Y59.3",
    "description": "Efectos adversos de la inmunoglobulina"
  },
  {
    "code": "Y59.8",
    "description": "Efectos adversos de otras vacunas y sustancias biol√≥gicas especificadas"
  },
  {
    "code": "Y59.9",
    "description": "Efectos adversos de vacunas o sustancias biol√≥gicas no especificadas"
  },
  {
    "code": "Y60.0",
    "description": "Incidente durante operaci√≥n quir√∫rgica"
  },
  {
    "code": "Y60.1",
    "description": "Incidente durante infusi√≥n o transfusi√≥n"
  },
  {
    "code": "Y60.2",
    "description": "Incidente durante di√°lisis renal u otra perfusi√≥n"
  },
  {
    "code": "Y60.3",
    "description": "Incidente durante inyecci√≥n o inmunizaci√≥n"
  },
  {
    "code": "Y60.4",
    "description": "Incidente durante examen endosc√≥pico"
  },
  {
    "code": "Y60.5",
    "description": "Incidente durante cateterizaci√≥n card√≠aca"
  },
  {
    "code": "Y60.6",
    "description": "Incidente durante aspiraci√≥n, punci√≥n y otra cateterizaci√≥n"
  },
  {
    "code": "Y60.7",
    "description": "Incidente durante administraci√≥n de enema"
  },
  {
    "code": "Y60.8",
    "description": "Incidente durante otras atenciones m√©dicas y quir√∫rgicas"
  },
  {
    "code": "Y60.9",
    "description": "Incidente durante atenci√≥n m√©dica y quir√∫rgica no especificada"
  },
  {
    "code": "Y61.0",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante operaci√≥n quir√∫rgica"
  },
  {
    "code": "Y61.1",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante infusi√≥n o transfusi√≥n"
  },
  {
    "code": "Y61.2",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante di√°lisis renal u otra perfusi√≥n"
  },
  {
    "code": "Y61.3",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante inyecci√≥n o inmunizaci√≥n"
  },
  {
    "code": "Y61.4",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante examen endosc√≥pico"
  },
  {
    "code": "Y61.5",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante cateterizaci√≥n card√≠aca"
  },
  {
    "code": "Y61.6",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante aspiraci√≥n, punci√≥n y otra cateterizaci√≥n"
  },
  {
    "code": "Y61.7",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante remoci√≥n de cat√©ter o taponamiento"
  },
  {
    "code": "Y61.8",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante otras atenciones m√©dicas y quir√∫rgicas"
  },
  {
    "code": "Y61.9",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante atenci√≥n m√©dica y quir√∫rgica no especificada"
  },
  {
    "code": "Y62.0",
    "description": "Fallas en la esterilizaci√≥n durante operaci√≥n quir√∫rgica"
  },
  {
    "code": "Y62.1",
    "description": "Fallas en la esterilizaci√≥n durante infusi√≥n o transfusi√≥n"
  },
  {
    "code": "Y62.2",
    "description": "Fallas en la esterilizaci√≥n durante di√°lisis renal u otra perfusi√≥n"
  },
  {
    "code": "Y62.3",
    "description": "Fallas en la esterilizaci√≥n durante inyecci√≥n o inmunizaci√≥n"
  },
  {
    "code": "Y62.4",
    "description": "Fallas en la esterilizaci√≥n durante examen endosc√≥pico"
  },
  {
    "code": "Y62.5",
    "description": "Fallas en la esterilizaci√≥n durante cateterizaci√≥n card√≠aca"
  },
  {
    "code": "Y62.6",
    "description": "Fallas en la esterilizaci√≥n durante aspiraci√≥n, punci√≥n y otra cateterizaci√≥n"
  },
  {
    "code": "Y62.8",
    "description": "Fallas en la esterilizaci√≥n durante otras atenciones m√©dicas y quir√∫rgicas"
  },
  {
    "code": "Y62.9",
    "description": "Fallas en la esterilizaci√≥n durante atenci√≥n m√©dica y quir√∫rgica no especificada"
  },
  {
    "code": "Y63.0",
    "description": "Excesiva cantidad de sangre u otro l√≠quido administrado durante una infusi√≥n o transfusi√≥n"
  },
  {
    "code": "Y63.1",
    "description": "Diluci√≥n incorrecta de l√≠quido durante una infusi√≥n"
  },
  {
    "code": "Y63.2",
    "description": "Sobredosis de radiaci√≥n administrada durante terapia"
  },
  {
    "code": "Y63.3",
    "description": "Exposici√≥n inadvertida del paciente a radiaci√≥n durante la atenci√≥n m√©dica"
  },
  {
    "code": "Y63.4",
    "description": "Falla en la dosificaci√≥n en electrochoque o en choque insul√≠nico"
  },
  {
    "code": "Y63.5",
    "description": "Falla en el control de la temperatura, en taponamientos y aplicaciones locales"
  },
  {
    "code": "Y63.6",
    "description": "No administraci√≥n de drogas, medicamentos o sustancias biol√≥gicas necesarias"
  },
  {
    "code": "Y63.8",
    "description": "Falla en la dosificaci√≥n durante otras atenciones m√©dicas y quir√∫rgicas"
  },
  {
    "code": "Y63.9",
    "description": "Falla en la dosificaci√≥n durante atenci√≥n m√©dica y quir√∫rgica no especificada"
  },
  {
    "code": "Y64.0",
    "description": "Medicamento o sustancia biol√≥gica contaminado en infusi√≥n o transfusi√≥n"
  },
  {
    "code": "Y64.1",
    "description": "Medicamento o sustancia biol√≥gica contaminado, inyectado o usado para inmunizaci√≥n"
  },
  {
    "code": "Y64.8",
    "description": "Medicamento o sustancia biol√≥gica contaminado, administrado por otros medios"
  },
  {
    "code": "Y64.9",
    "description": "Medicamento o sustancia biol√≥gica contaminado, administrado por medios no especificados"
  },
  {
    "code": "Y65.0",
    "description": "Sangre incompatible usada en transfusi√≥n"
  },
  {
    "code": "Y65.1",
    "description": "L√≠quido err√≥neo usado en infusi√≥n"
  },
  {
    "code": "Y65.2",
    "description": "Falla en la sutura o ligadura durante operaci√≥n quir√∫rgica"
  },
  {
    "code": "Y65.3",
    "description": "Tubo endotraqueal colocado err√≥neamente durante procedimiento anest√©sico"
  },
  {
    "code": "Y65.4",
    "description": "Falla en la introducci√≥n o remoci√≥n de otro tubo o instrumento"
  },
  {
    "code": "Y65.5",
    "description": "Realizaci√≥n de una operaci√≥n inadecuada"
  },
  {
    "code": "Y65.8",
    "description": "Otros incidentes especificados durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y70.0",
    "description": "Dispositivos de anestesiolog√≠a asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y70.1",
    "description": ""
  },
  {
    "code": "Y70.2",
    "description": ""
  },
  {
    "code": "Y70.3",
    "description": ""
  },
  {
    "code": "Y70.8",
    "description": "Dispositivos de anestesiolog√≠a asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y71.0",
    "description": "Dispositivos cardiovasculares asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y71.1",
    "description": ""
  },
  {
    "code": "Y71.2",
    "description": ""
  },
  {
    "code": "Y71.3",
    "description": ""
  },
  {
    "code": "Y71.8",
    "description": "Dispositivos cardiovasculares asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y72.0",
    "description": "Dispositivos otorrinolaringol√≥gicos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y72.1",
    "description": ""
  },
  {
    "code": "Y72.2",
    "description": ""
  },
  {
    "code": "Y72.3",
    "description": ""
  },
  {
    "code": "Y72.8",
    "description": "Dispositivos otorrinolaringol√≥gicos asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y73.0",
    "description": "Dispositivos de gastroenterolog√≠a y urolog√≠a asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y73.1",
    "description": ""
  },
  {
    "code": "Y73.2",
    "description": ""
  },
  {
    "code": "Y73.3",
    "description": ""
  },
  {
    "code": "Y73.8",
    "description": ""
  },
  {
    "code": "Y74.0",
    "description": ""
  },
  {
    "code": "Y74.1",
    "description": ""
  },
  {
    "code": "Y74.2",
    "description": ""
  },
  {
    "code": "Y74.3",
    "description": ""
  },
  {
    "code": "Y74.8",
    "description": ""
  },
  {
    "code": "Y75.0",
    "description": "Dispositivos neurol√≥gicos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y75.1",
    "description": ""
  },
  {
    "code": "Y75.2",
    "description": ""
  },
  {
    "code": "Y75.3",
    "description": ""
  },
  {
    "code": "Y75.8",
    "description": "Dispositivos neurol√≥gicos asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y76.0",
    "description": "Dispositivos ginecol√≥gicos y obst√©tricos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y76.1",
    "description": ""
  },
  {
    "code": "Y76.2",
    "description": ""
  },
  {
    "code": "Y76.3",
    "description": ""
  },
  {
    "code": "Y76.8",
    "description": ""
  },
  {
    "code": "Y77.0",
    "description": "Dispositivos oft√°lmicos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y77.1",
    "description": "Dispositivos oft√°lmicos asociados con incidentes adversos, dispositivos terap√©uticos (no quir√∫rgicos ) y de rehabilitaci√≥n"
  },
  {
    "code": "Y77.2",
    "description": ""
  },
  {
    "code": "Y77.3",
    "description": ""
  },
  {
    "code": "Y77.8",
    "description": "Dispositivos oft√°lmicos asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y78.0",
    "description": "Aparatos radiol√≥gicos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y78.1",
    "description": "Aparatos radiol√≥gicos asociados con incidentes adversos, dispositivos terap√©uticos (no quir√∫rgicos ) y de rehabilitaci√≥n"
  },
  {
    "code": "Y78.2",
    "description": ""
  },
  {
    "code": "Y78.3",
    "description": ""
  },
  {
    "code": "Y78.8",
    "description": "Aparatos radiol√≥gicos asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y79.0",
    "description": "Dispositivos ortop√©dicos asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y79.1",
    "description": ""
  },
  {
    "code": "Y79.2",
    "description": ""
  },
  {
    "code": "Y79.3",
    "description": ""
  },
  {
    "code": "Y79.8",
    "description": "Dispositivos ortop√©dicos asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y80.0",
    "description": "Aparatos de medicina f√≠sica asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y80.1",
    "description": ""
  },
  {
    "code": "Y80.2",
    "description": ""
  },
  {
    "code": "Y80.3",
    "description": ""
  },
  {
    "code": "Y80.8",
    "description": "Aparatos de medicina f√≠sica asociados con incidentes adversos, dispositivos diversos, no clasificados en otra parte"
  },
  {
    "code": "Y81.0",
    "description": "Dispositivos de cirug√≠a general y pl√°stica asociados con incidentes adversos, dispositivos de diagn√≥stico y monitoreo"
  },
  {
    "code": "Y81.1",
    "description": ""
  },
  {
    "code": "Y81.2",
    "description": ""
  },
  {
    "code": "Y81.3",
    "description": ""
  },
  {
    "code": "Y81.8",
    "description": ""
  },
  {
    "code": "Y82.0",
    "description": ""
  },
  {
    "code": "Y82.1",
    "description": ""
  },
  {
    "code": "Y82.2",
    "description": ""
  },
  {
    "code": "Y82.3",
    "description": ""
  },
  {
    "code": "Y82.8",
    "description": ""
  },
  {
    "code": "Y83.0",
    "description": "Operaci√≥n quir√∫rgica con trasplante de un √≥rgano completo"
  },
  {
    "code": "Y83.1",
    "description": "Operaci√≥n quir√∫rgica con implante de un dispositivo artificial interno"
  },
  {
    "code": "Y83.2",
    "description": "Operaci√≥n quir√∫rgica con anastomosis, derivaci√≥n o injerto"
  },
  {
    "code": "Y83.3",
    "description": "Operaci√≥n quir√∫rgica con formaci√≥n de estoma externo"
  },
  {
    "code": "Y83.4",
    "description": "Otra cirug√≠a reconstructiva"
  },
  {
    "code": "Y83.5",
    "description": "Amputaci√≥n de miembro(s)"
  },
  {
    "code": "Y83.6",
    "description": "Remoci√≥n de otro √≥rgano (parcial) (total)"
  },
  {
    "code": "Y83.8",
    "description": "Otros procedimientos quir√∫rgicos"
  },
  {
    "code": "Y83.9",
    "description": "Procedimiento quir√∫rgico no especificado"
  },
  {
    "code": "Y84.0",
    "description": "Cateterizaci√≥n card√≠aca"
  },
  {
    "code": "Y84.1",
    "description": "Di√°lisis renal"
  },
  {
    "code": "Y84.2",
    "description": "Procedimiento radiol√≥gico y radioterapia"
  },
  {
    "code": "Y84.3",
    "description": "Terapia por choque"
  },
  {
    "code": "Y84.4",
    "description": "Aspiraci√≥n de l√≠quidos"
  },
  {
    "code": "Y84.5",
    "description": "Inserci√≥n de sonda g√°strica o duodenal"
  },
  {
    "code": "Y84.6",
    "description": "Cateterizaci√≥n urinaria"
  },
  {
    "code": "Y84.7",
    "description": "Muestra de sangre"
  },
  {
    "code": "Y84.8",
    "description": "Otros procedimientos m√©dicos"
  },
  {
    "code": "Y84.9",
    "description": "Procedimiento m√©dico no especificado"
  },
  {
    "code": "Y85.0",
    "description": "Secuelas de accidente de veh√≠culo de motor"
  },
  {
    "code": "Y85.9",
    "description": "Secuelas de otros accidentes de transporte, y los no especificados"
  },
  {
    "code": "Y87.0",
    "description": "Secuelas de lesiones autoinfligidas"
  },
  {
    "code": "Y87.1",
    "description": "Secuelas de agresiones"
  },
  {
    "code": "Y87.2",
    "description": "Secuelas de eventos de intenci√≥n no determinada"
  },
  {
    "code": "Y88.0",
    "description": "Secuelas de efectos adversos causados por drogas, medicamentos y sustancias biol√≥gicas en su uso terap√©utico"
  },
  {
    "code": "Y88.1",
    "description": "Secuelas de incidentes ocurridos al paciente durante procedimientos m√©dicos y quir√∫rgicos"
  },
  {
    "code": "Y88.2",
    "description": "Secuelas de incidentes adversos asociados con dispositivos m√©dicos en uso diagn√≥stico y terap√©utico"
  },
  {
    "code": "Y88.3",
    "description": ""
  },
  {
    "code": "Y89.0",
    "description": "Secuelas de intervenci√≥n legal"
  },
  {
    "code": "Y89.1",
    "description": "Secuelas de operaciones de guerra"
  },
  {
    "code": "Y89.9",
    "description": "Secuelas de causa externa no especificada"
  },
  {
    "code": "Y90.0",
    "description": "Nivel de alcohol en la sangre menor de 20 mg/100 ml"
  },
  {
    "code": "Y90.1",
    "description": "Nivel de alcohol en la sangre de 20 a 39 mg/100 ml"
  },
  {
    "code": "Y90.2",
    "description": "Nivel de alcohol en la sangre de 40 a 59 mg/100 ml"
  },
  {
    "code": "Y90.3",
    "description": "Nivel de alcohol en la sangre de 60 a 79 mg/100 ml"
  },
  {
    "code": "Y90.4",
    "description": "Nivel de alcohol en la sangre de 80 a 99 mg/100 ml"
  },
  {
    "code": "Y90.5",
    "description": "Nivel de alcohol en la sangre de 100 a 119 mg/100 ml"
  },
  {
    "code": "Y90.6",
    "description": "Nivel de alcohol en la sangre de 120 a 199 mg/100 ml"
  },
  {
    "code": "Y90.7",
    "description": "Nivel de alcohol en la sangre de 200 a 239 mg/100 ml"
  },
  {
    "code": "Y90.8",
    "description": "Nivel de alcohol en la sangre de 240 mg/100 ml o m√°s"
  },
  {
    "code": "Y90.9",
    "description": "Presencia de alcohol en la sangre, nivel no especificado"
  },
  {
    "code": "Y91.0",
    "description": "Intoxicaci√≥n alcoh√≥lica leve"
  },
  {
    "code": "Y91.1",
    "description": "Intoxicaci√≥n alcoh√≥lica moderada"
  },
  {
    "code": "Y91.2",
    "description": "Intoxicaci√≥n alcoh√≥lica severa"
  },
  {
    "code": "Y91.3",
    "description": "Intoxicaci√≥n alcoh√≥lica muy severa"
  },
  {
    "code": "Y91.9",
    "description": "Alcoholismo, nivel de intoxicaci√≥n no especificado"
  },
  {
    "code": "Z00.0",
    "description": "Examen m√©dico general"
  },
  {
    "code": "Z00.1",
    "description": "Control de salud de rutina del ni√±o"
  },
  {
    "code": "Z00.2",
    "description": "Examen durante el per√≠odo de crecimiento r√°pido en la infancia"
  },
  {
    "code": "Z00.3",
    "description": "Examen del estado de desarrollo del adolescente"
  },
  {
    "code": "Z00.4",
    "description": "Examen psiqui√°trico general, no clasificado en otra parte"
  },
  {
    "code": "Z00.5",
    "description": "Examen de donante potencial de √≥rgano o tejido"
  },
  {
    "code": "Z00.6",
    "description": "Examen para comparaci√≥n y control normales en programa de investigaci√≥n cl√≠nica"
  },
  {
    "code": "Z00.8",
    "description": "Otros ex√°menes generales"
  },
  {
    "code": "Z01.0",
    "description": "Examen de ojos y de la visi√≥n"
  },
  {
    "code": "Z01.1",
    "description": "Examen de o√≠dos y de la audici√≥n"
  },
  {
    "code": "Z01.2",
    "description": "Examen odontol√≥gico"
  },
  {
    "code": "Z01.3",
    "description": "Examen de la presi√≥n sangu√≠nea"
  },
  {
    "code": "Z01.4",
    "description": "Examen ginecol√≥gico (general) (de rutina)"
  },
  {
    "code": "Z01.5",
    "description": "Pruebas de sensibilizaci√≥n y diagn√≥stico cut√°neo"
  },
  {
    "code": "Z01.6",
    "description": "Examen radiol√≥gico, no clasificado en otra parte"
  },
  {
    "code": "Z01.7",
    "description": "Examen de laboratorio"
  },
  {
    "code": "Z01.8",
    "description": "Otros ex√°menes especiales especificados"
  },
  {
    "code": "Z01.9",
    "description": "Examen especial no especificado"
  },
  {
    "code": "Z02.0",
    "description": "Examen para admisi√≥n a instituciones educativas"
  },
  {
    "code": "Z02.1",
    "description": "Examen preempleo"
  },
  {
    "code": "Z02.2",
    "description": "Examen para admisi√≥n a instituciones residenciales"
  },
  {
    "code": "Z02.3",
    "description": "Examen para reclutamiento en las fuerzas armadas"
  },
  {
    "code": "Z02.4",
    "description": "Examen para obtenci√≥n de licencia de conducir"
  },
  {
    "code": "Z02.5",
    "description": "Examen para participaci√≥n en competencias deportivas"
  },
  {
    "code": "Z02.6",
    "description": "Examen para fines de seguros"
  },
  {
    "code": "Z02.7",
    "description": "Extensi√≥n de certificado m√©dico"
  },
  {
    "code": "Z02.8",
    "description": "Otros ex√°menes para fines administrativos"
  },
  {
    "code": "Z02.9",
    "description": "Examen para fines administrativos, no especificado"
  },
  {
    "code": "Z03.0",
    "description": "Observaci√≥n por sospecha de tuberculosis"
  },
  {
    "code": "Z03.1",
    "description": "Observaci√≥n por sospecha de tumor maligno"
  },
  {
    "code": "Z03.2",
    "description": "Observaci√≥n por sospecha de trastorno mental y del comportamiento"
  },
  {
    "code": "Z03.3",
    "description": "Observaci√≥n por sospecha de trastorno del sistema nervioso"
  },
  {
    "code": "Z03.4",
    "description": "Observaci√≥n por sospecha de infarto de miocardio"
  },
  {
    "code": "Z03.5",
    "description": "Observaci√≥n por sospecha de otras enfermedades cardiovasculares"
  },
  {
    "code": "Z03.6",
    "description": "Observaci√≥n por sospecha de efectos t√≥xicos de sustancias ingeridas"
  },
  {
    "code": "Z03.8",
    "description": "Observaci√≥n por sospecha de otras enfermedades y afecciones"
  },
  {
    "code": "Z03.9",
    "description": "Observaci√≥n por sospecha de enfermedad o afecci√≥n no especificada"
  },
  {
    "code": "Z04.0",
    "description": "Prueba de alcohol o drogas en la sangre"
  },
  {
    "code": "Z04.1",
    "description": "Examen y observaci√≥n consecutivos a accidente de transporte"
  },
  {
    "code": "Z04.2",
    "description": "Examen y observaci√≥n consecutivos a accidente de trabajo"
  },
  {
    "code": "Z04.3",
    "description": "Examen y observaci√≥n consecutivos a otro accidente"
  },
  {
    "code": "Z04.4",
    "description": "Examen y observaci√≥n consecutivos a denuncia de violaci√≥n y seducci√≥n"
  },
  {
    "code": "Z04.5",
    "description": "Examen y observaci√≥n consecutivos a otra lesi√≥n infligida"
  },
  {
    "code": "Z04.6",
    "description": "Examen psiqui√°trico general, solicitado por una autoridad"
  },
  {
    "code": "Z04.8",
    "description": "Examen y observaci√≥n por otras razones especificadas"
  },
  {
    "code": "Z04.9",
    "description": "Examen y observaci√≥n por razones no especificadas"
  },
  {
    "code": "Z08.0",
    "description": "Examen de seguimiento consecutivo a cirug√≠a por tumor maligno"
  },
  {
    "code": "Z08.1",
    "description": "Examen de seguimiento consecutivo a radioterapia por tumor maligno"
  },
  {
    "code": "Z08.2",
    "description": "Examen de seguimiento consecutivo a quimioterapia por tumor maligno"
  },
  {
    "code": "Z08.7",
    "description": "Examen de seguimiento consecutivo a tratamiento combinado por tumor maligno"
  },
  {
    "code": "Z08.8",
    "description": "Examen de seguimiento consecutivo a otro tratamiento por tumor maligno"
  },
  {
    "code": "Z08.9",
    "description": "Examen de seguimiento consecutivo a tratamiento no especificado por tumor maligno"
  },
  {
    "code": "Z09.0",
    "description": "Examen de seguimiento consecutivo a cirug√≠a por otras afecciones"
  },
  {
    "code": "Z09.1",
    "description": "Examen de seguimiento consecutivo a radioterapia por otras afecciones"
  },
  {
    "code": "Z09.2",
    "description": "Examen de seguimiento consecutivo a quimioterapia por otras afecciones"
  },
  {
    "code": "Z09.3",
    "description": "Examen de seguimiento consecutivo a psicoterapia"
  },
  {
    "code": "Z09.4",
    "description": "Examen de seguimiento consecutivo a tratamiento de fractura"
  },
  {
    "code": "Z09.7",
    "description": "Examen de seguimiento consecutivo a tratamiento combinado por otras afecciones"
  },
  {
    "code": "Z09.8",
    "description": "Examen de seguimiento consecutivo a otro tratamiento por otras afecciones"
  },
  {
    "code": "Z09.9",
    "description": "Examen de seguimiento consecutivo a tratamiento no especificado por otras afecciones"
  },
  {
    "code": "Z10.0",
    "description": "Examen de salud ocupacional"
  },
  {
    "code": "Z10.1",
    "description": "Control general de salud de rutina de residentes de instituciones"
  },
  {
    "code": "Z10.2",
    "description": "Control general de salud de rutina a miembros de las fuerzas armadas"
  },
  {
    "code": "Z10.3",
    "description": "Control general de salud de rutina a integrantes de equipos deportivos"
  },
  {
    "code": "Z10.8",
    "description": "Otros controles generales de salud de rutina de otras subpoblaciones definidas"
  },
  {
    "code": "Z11.0",
    "description": "Examen de pesquisa especial para enfermedades infecciosas intestinales"
  },
  {
    "code": "Z11.1",
    "description": "Examen de pesquisa especial para tuberculosis respiratoria"
  },
  {
    "code": "Z11.2",
    "description": "Examen de pesquisa especial para otras enfermedades bacterianas"
  },
  {
    "code": "Z11.3",
    "description": "Examen de pesquisa especial para infecciones de transmisi√≥n predominantemente sexual"
  },
  {
    "code": "Z11.4",
    "description": "Examen de pesquisa especial para el virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "Z11.5",
    "description": "Examen de pesquisa especial para otras enfermedades virales"
  },
  {
    "code": "Z11.6",
    "description": "Examen de pesquisa especial para otras enfermedades debidas a protozoarios y helmintos"
  },
  {
    "code": "Z11.8",
    "description": "Examen de pesquisa especial para otras enfermedades infecciosas y parasitarias especificadas"
  },
  {
    "code": "Z11.9",
    "description": "Examen de pesquisa especial para enfermedades infecciosas y parasitarias no especificadas"
  },
  {
    "code": "Z12.0",
    "description": "Examen de pesquisa especial para tumor de est√≥mago"
  },
  {
    "code": "Z12.1",
    "description": "Examen de pesquisa especial para tumor del intestino"
  },
  {
    "code": "Z12.2",
    "description": "Examen de pesquisa especial para tumores de √≥rganos respiratorios"
  },
  {
    "code": "Z12.3",
    "description": "Examen de pesquisa especial para tumor de la mama"
  },
  {
    "code": "Z12.4",
    "description": "Examen de pesquisa especial para tumor del cuello uterino"
  },
  {
    "code": "Z12.5",
    "description": "Examen de pesquisa especial para tumor de la pr√≥stata"
  },
  {
    "code": "Z12.6",
    "description": "Examen de pesquisa especial para tumor de la vejiga"
  },
  {
    "code": "Z12.8",
    "description": "Examen de pesquisa especial para tumores de otros sitios"
  },
  {
    "code": "Z12.9",
    "description": "Examen de pesquisa especial para tumor de sitio no especificado"
  },
  {
    "code": "Z13.0",
    "description": ""
  },
  {
    "code": "Z13.1",
    "description": "Examen de pesquisa especial para diabetes mellitus"
  },
  {
    "code": "Z13.2",
    "description": "Examen de pesquisa especial para trastornos de la nutrici√≥n"
  },
  {
    "code": "Z13.3",
    "description": "Examen de pesquisa especial para trastornos mentales y del comportamiento"
  },
  {
    "code": "Z13.4",
    "description": "Examen de pesquisa especial para ciertos trastornos del desarrollo en el ni√±o"
  },
  {
    "code": "Z13.5",
    "description": "Examen de pesquisa especial para trastornos del ojo y del o√≠do"
  },
  {
    "code": "Z13.6",
    "description": "Examen de pesquisa especial para trastornos cardiovasculares"
  },
  {
    "code": "Z13.7",
    "description": "Examen de pesquisa especial para malformaciones cong√©nitas, deformidades y anomal√≠as cromos√≥micas"
  },
  {
    "code": "Z13.8",
    "description": "Examen de pesquisa especial para otras enfermedades y trastornos especificados"
  },
  {
    "code": "Z13.9",
    "description": "Examen de pesquisa especial, no especificado"
  },
  {
    "code": "Z20.0",
    "description": "Contacto con y exposici√≥n a enfermedades infecciosas intestinales"
  },
  {
    "code": "Z20.1",
    "description": "Contacto con y exposici√≥n a tuberculosis"
  },
  {
    "code": "Z20.2",
    "description": "Contacto con y exposici√≥n a enfermedades infecciosas con un modo de transmisi√≥n predominantemente sexual"
  },
  {
    "code": "Z20.3",
    "description": "Contacto con y exposici√≥n a rabia"
  },
  {
    "code": "Z20.4",
    "description": "Contacto con y exposici√≥n a rub√©ola"
  },
  {
    "code": "Z20.5",
    "description": "Contacto con y exposici√≥n a hepatitis viral"
  },
  {
    "code": "Z20.6",
    "description": "Contacto con y exposici√≥n al virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "Z20.7",
    "description": "Contacto con y exposici√≥n a pediculosis, acariasis y otras infestaciones"
  },
  {
    "code": "Z20.8",
    "description": "Contacto con y exposici√≥n a otras enfermedades transmisibles"
  },
  {
    "code": "Z20.9",
    "description": "Contacto con y exposici√≥n a enfermedades transmisibles no especificadas"
  },
  {
    "code": "Z22.0",
    "description": "Portador de fiebre tifoidea"
  },
  {
    "code": "Z22.1",
    "description": "Portador de otras enfermedades infecciosas intestinales"
  },
  {
    "code": "Z22.2",
    "description": "Portador de difteria"
  },
  {
    "code": "Z22.3",
    "description": "Portador de otras enfermedades bacterianas especificadas"
  },
  {
    "code": "Z22.4",
    "description": "Portador de enfermedades infecciosas con un modo de transmisi√≥n predominantemente sexual"
  },
  {
    "code": "Z22.5",
    "description": "Portador de hepatitis viral"
  },
  {
    "code": "Z22.6",
    "description": "Portador de enfermedad infecciosa debida al virus humano T-linfotr√≥pico tipo 1 [VHTL-1]"
  },
  {
    "code": "Z22.8",
    "description": "Portador de otras enfermedades infecciosas"
  },
  {
    "code": "Z22.9",
    "description": "Portador de enfermedad infecciosa no especificada"
  },
  {
    "code": "Z23.0",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra el c√≥lera"
  },
  {
    "code": "Z23.1",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra la tifoidea-paratifoidea [TAB]"
  },
  {
    "code": "Z23.2",
    "description": "Necesidad de inmunizaci√≥n contra la tuberculosis [BCG]"
  },
  {
    "code": "Z23.3",
    "description": "Necesidad de inmunizaci√≥n contra la peste"
  },
  {
    "code": "Z23.4",
    "description": "Necesidad de inmunizaci√≥n contra la tularemia"
  },
  {
    "code": "Z23.5",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra el t√©tanos"
  },
  {
    "code": "Z23.6",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra la difteria"
  },
  {
    "code": "Z23.7",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra la tos ferina"
  },
  {
    "code": "Z23.8",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra otra enfermedad bacteriana"
  },
  {
    "code": "Z24.0",
    "description": "Necesidad de inmunizaci√≥n contra la poliomielitis"
  },
  {
    "code": "Z24.1",
    "description": "Necesidad de inmunizaci√≥n contra la encefalitis viral transmitida por artr√≥podos"
  },
  {
    "code": "Z24.2",
    "description": "Necesidad de inmunizaci√≥n contra la rabia"
  },
  {
    "code": "Z24.3",
    "description": "Necesidad de inmunizaci√≥n contra la fiebre amarilla"
  },
  {
    "code": "Z24.4",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra el sarampi√≥n"
  },
  {
    "code": "Z24.5",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra la rub√©ola"
  },
  {
    "code": "Z24.6",
    "description": "Necesidad de inmunizaci√≥n contra la hepatitis viral"
  },
  {
    "code": "Z25.0",
    "description": "Necesidad de inmunizaci√≥n s√≥lo contra la parotiditis"
  },
  {
    "code": "Z25.1",
    "description": "Necesidad de inmunizaci√≥n contra la influenza [gripe]"
  },
  {
    "code": "Z25.8",
    "description": "Necesidad de inmunizaci√≥n contra otras enfermedades virales √∫nicas especificadas"
  },
  {
    "code": "Z26.0",
    "description": "Necesidad de inmunizaci√≥n contra la leishmaniasis"
  },
  {
    "code": "Z26.8",
    "description": "Necesidad de inmunizaci√≥n contra otras enfermedades infecciosas √∫nicas especificadas"
  },
  {
    "code": "Z26.9",
    "description": "Necesidad de inmunizaci√≥n contra enfermedad infecciosa no especificada"
  },
  {
    "code": "Z27.0",
    "description": "Necesidad de inmunizaci√≥n contra el c√≥lera y la tifoidea-paratifoidea [c√≥lera + TAB]"
  },
  {
    "code": "Z27.1",
    "description": "Necesidad de inmunizaci√≥n contra difteria-pertussis-t√©tanos combinados [DPT]"
  },
  {
    "code": "Z27.2",
    "description": "Necesidad de inmunizaci√≥n contra difteria-pertussis-t√©tanos y tifoidea- paratifoidea [DPT + TAB]"
  },
  {
    "code": "Z27.3",
    "description": "Necesidad de inmunizaci√≥n contra difteria-pertussis-t√©tanos y poliomielitis [DPT + polio]"
  },
  {
    "code": "Z27.4",
    "description": "Necesidad de inmunizaci√≥n contra sarampi√≥n-parotiditis-rub√©ola [SPR] [MMR]"
  },
  {
    "code": "Z27.8",
    "description": "Necesidad de inmunizaci√≥n contra otras combinaciones de enfermedades infecciosas"
  },
  {
    "code": "Z27.9",
    "description": "Necesidad de inmunizaci√≥n contra combinaciones no especificadas de enfermedades infecciosas"
  },
  {
    "code": "Z28.0",
    "description": "Inmunizaci√≥n no realizada por contraindicaci√≥n"
  },
  {
    "code": "Z28.1",
    "description": "Inmunizaci√≥n no realizada por decisi√≥n del paciente, por motivos de creencia o presi√≥n de grupo"
  },
  {
    "code": "Z28.2",
    "description": "Inmunizaci√≥n no realizada por decisi√≥n del paciente, por otras razones y las no especificadas"
  },
  {
    "code": "Z28.8",
    "description": "Inmunizaci√≥n no realizada por otras razones"
  },
  {
    "code": "Z28.9",
    "description": "Inmunizaci√≥n no realizada por raz√≥n no especificada"
  },
  {
    "code": "Z29.0",
    "description": "Aislamiento"
  },
  {
    "code": "Z29.1",
    "description": "Inmunoterapia profil√°ctica"
  },
  {
    "code": "Z29.2",
    "description": "Otra quimioterapia profil√°ctica"
  },
  {
    "code": "Z29.8",
    "description": "Otras medidas profil√°ticas especificadas"
  },
  {
    "code": "Z29.9",
    "description": "Medida profil√°ctica no especificada"
  },
  {
    "code": "Z30.0",
    "description": "Consejo y asesoramiento general sobre la anticoncepci√≥n"
  },
  {
    "code": "Z30.1",
    "description": "Inserci√≥n de dispositivo anticonceptivo (intrauterino)"
  },
  {
    "code": "Z30.2",
    "description": "Esterilizaci√≥n"
  },
  {
    "code": "Z30.3",
    "description": "Extracci√≥n menstrual"
  },
  {
    "code": "Z30.4",
    "description": "Supervisi√≥n del uso de drogas anticonceptivas"
  },
  {
    "code": "Z30.5",
    "description": "Supervisi√≥n del uso de dispositivo anticonceptivo (intrauterino)"
  },
  {
    "code": "Z30.8",
    "description": "Otras atenciones especificadas para la anticoncepci√≥n"
  },
  {
    "code": "Z30.9",
    "description": "Asistencia para la anticoncepci√≥n, no especificada"
  },
  {
    "code": "Z31.0",
    "description": "Tuboplastia o vasoplastia posterior a esterilizaci√≥n"
  },
  {
    "code": "Z31.1",
    "description": "Inseminaci√≥n artificial"
  },
  {
    "code": "Z31.2",
    "description": "Fecundaci√≥n in vitro"
  },
  {
    "code": "Z31.3",
    "description": "Otros m√©todos de atenci√≥n para la fecundaci√≥n"
  },
  {
    "code": "Z31.4",
    "description": "Investigaci√≥n y prueba para la procreaci√≥n"
  },
  {
    "code": "Z31.5",
    "description": "Asesoramiento gen√©tico"
  },
  {
    "code": "Z31.6",
    "description": "Consejo y asesoramiento general sobre la procreaci√≥n"
  },
  {
    "code": "Z31.8",
    "description": "Otra atenci√≥n especificada para la procreaci√≥n"
  },
  {
    "code": "Z31.9",
    "description": "Atenci√≥n no especificada relacionada con la procreaci√≥n"
  },
  {
    "code": "Z32.0",
    "description": "Embarazo (a√∫n) no confirmado"
  },
  {
    "code": "Z32.1",
    "description": "Embarazo confirmado"
  },
  {
    "code": "Z34.0",
    "description": "Supervisi√≥n de primer embarazo normal"
  },
  {
    "code": "Z34.8",
    "description": "Supervisi√≥n de otros embarazos normales"
  },
  {
    "code": "Z34.9",
    "description": "Supervisi√≥n de embarazo normal no especificado"
  },
  {
    "code": "Z35.0",
    "description": "Supervisi√≥n de embarazo con historia de esterilidad"
  },
  {
    "code": "Z35.1",
    "description": "Supervisi√≥n de embarazo con historia de aborto"
  },
  {
    "code": "Z35.2",
    "description": "Supervisi√≥n de embarazo con otro riesgo en la historia obst√©trica o reproductiva"
  },
  {
    "code": "Z35.3",
    "description": "Supervisi√≥n de embarazo con historia de insuficiente atenci√≥n prenatal"
  },
  {
    "code": "Z35.4",
    "description": "Supervisi√≥n de embarazo con gran multiparidad"
  },
  {
    "code": "Z35.5",
    "description": "Supervisi√≥n de primigesta a√±osa"
  },
  {
    "code": "Z35.6",
    "description": "Supervisi√≥n de primigesta muy joven"
  },
  {
    "code": "Z35.7",
    "description": "Supervisi√≥n de embarazo de alto riesgo debido a problemas sociales"
  },
  {
    "code": "Z35.8",
    "description": "Supervisi√≥n de otros embarazos de alto riesgo"
  },
  {
    "code": "Z35.9",
    "description": "Supervisi√≥n de embarazo de alto riesgo, sin otra especificaci√≥n"
  },
  {
    "code": "Z36.0",
    "description": "Pesquisa prenatal para anomal√≠as cromos√≥micas"
  },
  {
    "code": "Z36.1",
    "description": "Pesquisa prenatal para medir niveles elevados de alfafetoprote√≠nas"
  },
  {
    "code": "Z36.2",
    "description": "Otras pesquisas prenatales basadas en amniocentesis"
  },
  {
    "code": "Z36.3",
    "description": "Pesquisa prenatal de malformaciones usando ultrasonido y otros m√©todos f√≠sicos"
  },
  {
    "code": "Z36.4",
    "description": "Pesquisa prenatal del retardo del crecimiento fetal usando ultrasonido y otros m√©todos f√≠sicos"
  },
  {
    "code": "Z36.5",
    "description": "Pesquisa prenatal para isoinmunizaci√≥n"
  },
  {
    "code": "Z36.8",
    "description": "Otras pesquisas prenatales espec√≠ficas"
  },
  {
    "code": "Z36.9",
    "description": "Pesquisa prenatal, sin otra especificaci√≥n"
  },
  {
    "code": "Z37.0",
    "description": "Nacido vivo, √∫nico"
  },
  {
    "code": "Z37.1",
    "description": "Nacido muerto, √∫nico"
  },
  {
    "code": "Z37.2",
    "description": "Gemelos, ambos nacidos vivos"
  },
  {
    "code": "Z37.3",
    "description": "Gemelos, un nacido vivo y un nacido muerto"
  },
  {
    "code": "Z37.4",
    "description": "Gemelos, ambos nacidos muertos"
  },
  {
    "code": "Z37.5",
    "description": "Otros nacimientos m√∫ltiples, todos nacidos vivos"
  },
  {
    "code": "Z37.6",
    "description": "Otros nacimientos m√∫ltiples, algunos nacidos vivos"
  },
  {
    "code": "Z37.7",
    "description": "Otros nacimientos m√∫ltiples, todos nacidos muertos"
  },
  {
    "code": "Z37.9",
    "description": "Producto del parto no especificado"
  },
  {
    "code": "Z38.0",
    "description": "Producto √∫nico, nacido en hospital"
  },
  {
    "code": "Z38.1",
    "description": "Producto √∫nico, nacido fuera de hospital"
  },
  {
    "code": "Z38.2",
    "description": "Producto √∫nico, lugar de nacimiento no especificado"
  },
  {
    "code": "Z38.3",
    "description": "Gemelos, nacidos en hospital"
  },
  {
    "code": "Z38.4",
    "description": "Gemelos, nacidos fuera de hospital"
  },
  {
    "code": "Z38.5",
    "description": "Gemelos, lugar de nacimiento no especificado"
  },
  {
    "code": "Z38.6",
    "description": "Otros nacimientos m√∫ltiples, en hospital"
  },
  {
    "code": "Z38.7",
    "description": "Otros nacimientos m√∫ltiples, fuera del hospital"
  },
  {
    "code": "Z38.8",
    "description": "Otros nacimientos m√∫ltiples, lugar de nacimiento no especificado"
  },
  {
    "code": "Z39.0",
    "description": "Atenci√≥n y examen inmediatamente despu√©s del parto"
  },
  {
    "code": "Z39.1",
    "description": "Atenci√≥n y examen de madre en per√≠odo de lactancia"
  },
  {
    "code": "Z39.2",
    "description": "Seguimiento postparto, de rutina"
  },
  {
    "code": "Z40.0",
    "description": "Cirug√≠a profil√°ctica por factores de riesgo relacionados con tumores malignos"
  },
  {
    "code": "Z40.8",
    "description": "Otra cirug√≠a profil√°ctica"
  },
  {
    "code": "Z40.9",
    "description": "Cirug√≠a profil√°ctica no especificada"
  },
  {
    "code": "Z41.0",
    "description": "Trasplante de pelo"
  },
  {
    "code": "Z41.1",
    "description": "Otras cirug√≠as pl√°sticas por razones est√©ticas"
  },
  {
    "code": "Z41.2",
    "description": "Circuncisi√≥n ritual o de rutina"
  },
  {
    "code": "Z41.3",
    "description": "Perforaci√≥n de la oreja"
  },
  {
    "code": "Z41.8",
    "description": "Otros procedimientos para otros prop√≥sitos que no sean los de mejorar el estado de salud"
  },
  {
    "code": "Z41.9",
    "description": "Procedimiento no especificado para otros prop√≥sitos que no sean los de mejorar el estado de salud"
  },
  {
    "code": "Z42.0",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de la cabeza y del cuello"
  },
  {
    "code": "Z42.1",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de la mama"
  },
  {
    "code": "Z42.2",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de otras partes especificadas del tronco"
  },
  {
    "code": "Z42.3",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de las extremidades superiores"
  },
  {
    "code": "Z42.4",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de las extremidades inferiores"
  },
  {
    "code": "Z42.8",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica de otras partes especificadas del cuerpo"
  },
  {
    "code": "Z42.9",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica no especificada"
  },
  {
    "code": "Z43.0",
    "description": "Atenci√≥n de traqueostom√≠a"
  },
  {
    "code": "Z43.1",
    "description": "Atenci√≥n de gastrostom√≠a"
  },
  {
    "code": "Z43.2",
    "description": "Atenci√≥n de ileostom√≠a"
  },
  {
    "code": "Z43.3",
    "description": "Atenci√≥n de colostom√≠a"
  },
  {
    "code": "Z43.4",
    "description": "Atenci√≥n de otros orificios artificiales de las v√≠as digestivas"
  },
  {
    "code": "Z43.5",
    "description": "Atenci√≥n de cistostom√≠a"
  },
  {
    "code": "Z43.6",
    "description": "Atenci√≥n de otros orificios artificiales de las v√≠as urinarias"
  },
  {
    "code": "Z43.7",
    "description": "Atenci√≥n de vagina artificial"
  },
  {
    "code": "Z43.8",
    "description": "Atenci√≥n de otros orificios artificiales"
  },
  {
    "code": "Z43.9",
    "description": "Atenci√≥n de orificio artificial no especificado"
  },
  {
    "code": "Z44.0",
    "description": "Prueba y ajuste de brazo artificial (completo) (parcial)"
  },
  {
    "code": "Z44.1",
    "description": "Prueba y ajuste de pierna artificial (completa) (parcial)"
  },
  {
    "code": "Z44.2",
    "description": "Prueba y ajuste de ojo artificial"
  },
  {
    "code": "Z44.3",
    "description": "Prueba y ajuste de pr√≥tesis mamaria externa"
  },
  {
    "code": "Z44.8",
    "description": "Prueba y ajuste de otros dispositivos prot√©sicos externos"
  },
  {
    "code": "Z44.9",
    "description": "Prueba y ajuste de dispositivo prot√©sico externo no especificado"
  },
  {
    "code": "Z45.0",
    "description": "Asistencia y ajuste de marcapaso card√≠aco"
  },
  {
    "code": "Z45.1",
    "description": "Asistencia y ajuste de bomba de infusi√≥n"
  },
  {
    "code": "Z45.2",
    "description": "Asistencia y ajuste de dispositivos de acceso vascular"
  },
  {
    "code": "Z45.3",
    "description": "Asistencia y ajuste de dispositivo auditivo implantado"
  },
  {
    "code": "Z45.8",
    "description": "Asistencia y ajuste de otros dispositivos implantados"
  },
  {
    "code": "Z45.9",
    "description": "Asistencia y ajuste de dispositivo implantado no especificado"
  },
  {
    "code": "Z46.0",
    "description": "Prueba y ajuste de anteojos y lentes de contacto"
  },
  {
    "code": "Z46.1",
    "description": "Prueba y ajuste de aud√≠fonos"
  },
  {
    "code": "Z46.2",
    "description": "Prueba y ajuste de otros dispositivos relacionados con el sistema nervioso y los sentidos especiales"
  },
  {
    "code": "Z46.3",
    "description": "Prueba y ajuste de pr√≥tesis dental"
  },
  {
    "code": "Z46.4",
    "description": "Prueba y ajuste de dispositivo ortod√≥ncico"
  },
  {
    "code": "Z46.5",
    "description": "Prueba y ajuste de ileostom√≠a u otro dispositivo intestinal"
  },
  {
    "code": "Z46.6",
    "description": "Prueba y ajuste de dispositivo urinario"
  },
  {
    "code": "Z46.7",
    "description": "Prueba y ajuste de dispositivo ortop√©dico"
  },
  {
    "code": "Z46.8",
    "description": "Prueba y ajuste de otros dispositivos especificados"
  },
  {
    "code": "Z46.9",
    "description": "Prueba y ajuste de dispositivo no especificado"
  },
  {
    "code": "Z47.0",
    "description": "Cuidados posteriores a la extracci√≥n de placa u otro dispositivo de fijaci√≥n interna en fractura"
  },
  {
    "code": "Z47.8",
    "description": "Otros cuidados especificados posteriores a la ortopedia"
  },
  {
    "code": "Z47.9",
    "description": "Cuidado posterior a la ortopedia, no especificado"
  },
  {
    "code": "Z48.0",
    "description": "Atenci√≥n de los ap√≥sitos y suturas"
  },
  {
    "code": "Z48.8",
    "description": "Otros cuidados especificados posteriores a la cirug√≠a"
  },
  {
    "code": "Z48.9",
    "description": "Cuidado posterior a la cirug√≠a, no especificado"
  },
  {
    "code": "Z49.0",
    "description": "Cuidados preparatorios para di√°lisis"
  },
  {
    "code": "Z49.1",
    "description": "Di√°lisis extracorp√≥rea"
  },
  {
    "code": "Z49.2",
    "description": "Otras di√°lisis"
  },
  {
    "code": "Z50.0",
    "description": "Rehabilitaci√≥n card√≠aca"
  },
  {
    "code": "Z50.1",
    "description": "Otras terapias f√≠sicas"
  },
  {
    "code": "Z50.2",
    "description": "Rehabilitaci√≥n del alcoh√≥lico"
  },
  {
    "code": "Z50.3",
    "description": "Rehabilitaci√≥n del drogadicto"
  },
  {
    "code": "Z50.4",
    "description": "Psicoterapia, no clasificada en otra parte"
  },
  {
    "code": "Z50.5",
    "description": "Terapia del lenguaje"
  },
  {
    "code": "Z50.6",
    "description": "Adiestramiento ort√≥ptico"
  },
  {
    "code": "Z50.7",
    "description": "Terapia ocupacional y rehabilitaci√≥n vocacional, no clasificada en otra parte"
  },
  {
    "code": "Z50.8",
    "description": "Atenci√≥n por otros procedimientos de rehabilitaci√≥n"
  },
  {
    "code": "Z50.9",
    "description": "Atenci√≥n por procedimiento de rehabilitaci√≥n, no especificada"
  },
  {
    "code": "Z51.0",
    "description": "Sesi√≥n de radioterapia"
  },
  {
    "code": "Z51.1",
    "description": "Sesi√≥n de quimioterapia por tumor"
  },
  {
    "code": "Z51.2",
    "description": "Otra quimioterapia"
  },
  {
    "code": "Z51.3",
    "description": "Transfusi√≥n de sangre, sin diagn√≥stico informado"
  },
  {
    "code": "Z51.4",
    "description": "Atenci√≥n preparatoria para tratamiento subsecuente, no clasificado en  otra parte"
  },
  {
    "code": "Z51.5",
    "description": "Atenci√≥n paliativa"
  },
  {
    "code": "Z51.6",
    "description": "Desensibilizaci√≥n a al√©rgenos"
  },
  {
    "code": "Z51.8",
    "description": "Otras atenciones m√©dicas especificadas"
  },
  {
    "code": "Z51.9",
    "description": "Atenci√≥n m√©dica, no especificada"
  },
  {
    "code": "Z52.0",
    "description": "Donante de sangre"
  },
  {
    "code": "Z52.1",
    "description": "Donante de piel"
  },
  {
    "code": "Z52.2",
    "description": "Donante de hueso"
  },
  {
    "code": "Z52.3",
    "description": "Donante de m√©dula osea"
  },
  {
    "code": "Z52.4",
    "description": "Donante de ri√±√≥n"
  },
  {
    "code": "Z52.5",
    "description": "Donante de c√≥rnea"
  },
  {
    "code": "Z52.6",
    "description": "Donante de h√≠gado"
  },
  {
    "code": "Z52.7",
    "description": "Donante de coraz√≥n"
  },
  {
    "code": "Z52.8",
    "description": "Donante de otros √≥rganos o tejidos"
  },
  {
    "code": "Z52.9",
    "description": "Donante de √≥rgano o tejido no especificado"
  },
  {
    "code": "Z53.0",
    "description": "Procedimiento no realizado por contraindicaci√≥n"
  },
  {
    "code": "Z53.1",
    "description": "Procedimiento no realizado por decisi√≥n del paciente, por razones de creencia o presi√≥n de grupo"
  },
  {
    "code": "Z53.2",
    "description": "Procedimiento no realizado por decisi√≥n del paciente, por otras razones y las no especificadas"
  },
  {
    "code": "Z53.8",
    "description": "Procedimiento no realizado por otras razones"
  },
  {
    "code": "Z53.9",
    "description": "Procedimiento no realizado por raz√≥n no especificada"
  },
  {
    "code": "Z54.0",
    "description": "Convalecencia consecutiva a cirug√≠a"
  },
  {
    "code": "Z54.1",
    "description": "Convalecencia consecutiva a radioterapia"
  },
  {
    "code": "Z54.2",
    "description": "Convalecencia consecutiva a quimioterapia"
  },
  {
    "code": "Z54.3",
    "description": "Convalecencia consecutiva a psicoterapia"
  },
  {
    "code": "Z54.4",
    "description": "Convalecencia consecutiva a tratamiento de fractura"
  },
  {
    "code": "Z54.7",
    "description": "Convalecencia consecutiva a tratamiento combinado"
  },
  {
    "code": "Z54.8",
    "description": "Convalecencia consecutiva a otros tratamientos"
  },
  {
    "code": "Z54.9",
    "description": "Convalecencia consecutiva a tratamiento no especificado"
  },
  {
    "code": "Z55.0",
    "description": "Problemas relacionados con el analfabetismo o bajo nivel de instrucci√≥n"
  },
  {
    "code": "Z55.1",
    "description": "Problemas relacionados con la educaci√≥n no disponible o inaccesible"
  },
  {
    "code": "Z55.2",
    "description": "Problemas relacionados con la falla en los ex√°menes"
  },
  {
    "code": "Z55.3",
    "description": "Problemas relacionados con el bajo rendimiento escolar"
  },
  {
    "code": "Z55.4",
    "description": "Problemas relacionados con la inadaptaci√≥n educacional y desavenencias con maestros y compa√±eros"
  },
  {
    "code": "Z55.8",
    "description": "Otros problemas relacionados con la educaci√≥n y la alfabetizaci√≥n"
  },
  {
    "code": "Z55.9",
    "description": "Problema no especificado relacionado con la educaci√≥n y la alfabetizaci√≥n"
  },
  {
    "code": "Z56.0",
    "description": "Problemas relacionados con el desempleo, no especificados"
  },
  {
    "code": "Z56.1",
    "description": "Problemas relacionados con el cambio de empleo"
  },
  {
    "code": "Z56.2",
    "description": "Problemas relacionados con amenaza de p√©rdida del empleo"
  },
  {
    "code": "Z56.3",
    "description": "Problemas relacionados con horario estresante de trabajo"
  },
  {
    "code": "Z56.4",
    "description": "Problemas relacionados con desavenencias con el jefe y los compa√±eros de trabajo"
  },
  {
    "code": "Z56.5",
    "description": "Problemas relacionados con el trabajo incompatible"
  },
  {
    "code": "Z56.6",
    "description": "Otros problemas de tensi√≥n f√≠sica o mental relacionadas con el trabajo"
  },
  {
    "code": "Z56.7",
    "description": "Otros problemas y los no especificados relacionados con el empleo"
  },
  {
    "code": "Z57.0",
    "description": "Exposici√≥n ocupacional al ruido"
  },
  {
    "code": "Z57.1",
    "description": "Exposici√≥n ocupacional a la radiaci√≥n"
  },
  {
    "code": "Z57.2",
    "description": "Exposici√≥n ocupacional al polvo"
  },
  {
    "code": "Z57.3",
    "description": "Exposici√≥n ocupacional a otro contaminante del aire"
  },
  {
    "code": "Z57.4",
    "description": "Exposici√≥n ocupacional a agentes t√≥xicos en agricultura"
  },
  {
    "code": "Z57.5",
    "description": "Exposici√≥n ocupacional a agentes t√≥xicos en otras industrias"
  },
  {
    "code": "Z57.6",
    "description": "Exposici√≥n ocupacional a temperatura extrema"
  },
  {
    "code": "Z57.7",
    "description": "Exposici√≥n ocupacional a la vibraci√≥n"
  },
  {
    "code": "Z57.8",
    "description": "Exposici√≥n ocupacional a otros factores de riesgo"
  },
  {
    "code": "Z57.9",
    "description": "Exposici√≥n ocupacional a factor de riesgo no especificado"
  },
  {
    "code": "Z58.0",
    "description": "Exposici√≥n al ruido"
  },
  {
    "code": "Z58.1",
    "description": "Exposici√≥n al aire contaminado"
  },
  {
    "code": "Z58.2",
    "description": "Exposici√≥n al agua contaminada"
  },
  {
    "code": "Z58.3",
    "description": "Exposici√≥n al suelo contaminado"
  },
  {
    "code": "Z58.4",
    "description": "Exposici√≥n a la radiaci√≥n"
  },
  {
    "code": "Z58.5",
    "description": "Exposici√≥n a otras contaminaciones del ambiente f√≠sico"
  },
  {
    "code": "Z58.6",
    "description": "Suministro inadecuado de agua potable"
  },
  {
    "code": "Z58.8",
    "description": "Otros problemas relacionados con el ambiente f√≠sico"
  },
  {
    "code": "Z58.9",
    "description": "Problema no especificado relacionado con el ambiente f√≠sico"
  },
  {
    "code": "Z59.0",
    "description": "Problemas relacionados con la falta de vivienda"
  },
  {
    "code": "Z59.1",
    "description": "Problemas relacionados con vivienda inadecuada"
  },
  {
    "code": "Z59.2",
    "description": "Problemas caseros y con vecinos e inquilinos"
  },
  {
    "code": "Z59.3",
    "description": "Problemas relacionados con persona que reside en una instituci√≥n"
  },
  {
    "code": "Z59.4",
    "description": "Problemas relacionados con la falta de alimentos adecuados"
  },
  {
    "code": "Z59.5",
    "description": "Problemas relacionados con pobreza extrema"
  },
  {
    "code": "Z59.6",
    "description": "Problemas relacionados con bajos ingresos"
  },
  {
    "code": "Z59.7",
    "description": "Problemas relacionados con seguridad social y sostenimiento insuficientes para el bienestar"
  },
  {
    "code": "Z59.8",
    "description": "Otros problemas relacionados con la vivienda y las circunstancias econ√≥micas"
  },
  {
    "code": "Z59.9",
    "description": "Problemas no especificados relacionados con la vivienda y las circunstancias econ√≥micas"
  },
  {
    "code": "Z60.0",
    "description": "Problemas relacionados con el ajuste a las transiciones del ciclo vital"
  },
  {
    "code": "Z60.1",
    "description": "Problemas relacionados con situaci√≥n familiar at√≠pica"
  },
  {
    "code": "Z60.2",
    "description": "Problemas relacionados con persona que vive sola"
  },
  {
    "code": "Z60.3",
    "description": "Problemas relacionados con la adaptaci√≥n cultural"
  },
  {
    "code": "Z60.4",
    "description": "Problemas relacionados con exclusi√≥n y rechazo social"
  },
  {
    "code": "Z60.5",
    "description": "Problemas relacionados con la discriminaci√≥n y persecuci√≥n percibidas"
  },
  {
    "code": "Z60.8",
    "description": "Otros problemas relacionados con el ambiente social"
  },
  {
    "code": "Z60.9",
    "description": "Problema no especificado relacionado con el ambiente social"
  },
  {
    "code": "Z61.0",
    "description": "Problemas relacionados con la p√©rdida de relaci√≥n afectiva en la infancia"
  },
  {
    "code": "Z61.1",
    "description": "Problemas relacionados con el alejamiento del hogar en la infancia"
  },
  {
    "code": "Z61.2",
    "description": "Problemas relacionados con alteraci√≥n en el patr√≥n de la relaci√≥n  familiar en la infancia"
  },
  {
    "code": "Z61.3",
    "description": "Problemas relacionados con eventos que llevaron a la p√©rdida de la autoestima en la infancia"
  },
  {
    "code": "Z61.4",
    "description": "Problemas relacionados con el abuso sexual del ni√±o por persona dentro del grupo de apoyo primario"
  },
  {
    "code": "Z61.5",
    "description": "Problemas relacionados con el abuso sexual del ni√±o por persona ajena al grupo de apoyo primario"
  },
  {
    "code": "Z61.6",
    "description": "Problemas relacionados con abuso f√≠sico del ni√±o"
  },
  {
    "code": "Z61.7",
    "description": "Problemas relacionados con experiencias personales atemorizantes en la infancia"
  },
  {
    "code": "Z61.8",
    "description": "Problemas relacionados con otras experiencias negativas en la infancia"
  },
  {
    "code": "Z61.9",
    "description": "Problemas relacionados con experiencia negativa no especificada en la infancia"
  },
  {
    "code": "Z62.0",
    "description": "Problemas relacionados con la supervisi√≥n o el control inadecuados de los padres"
  },
  {
    "code": "Z62.1",
    "description": "Problemas relacionados con la sobreprotecci√≥n de los padres"
  },
  {
    "code": "Z62.2",
    "description": "Problemas relacionados con la crianza en instituci√≥n"
  },
  {
    "code": "Z62.3",
    "description": "Problemas relacionados con hostilidad y reprobaci√≥n al ni√±o"
  },
  {
    "code": "Z62.4",
    "description": "Problemas relacionados con el abandono emocional del ni√±o"
  },
  {
    "code": "Z62.5",
    "description": "Otros problemas relacionados con negligencia en la crianza del ni√±o"
  },
  {
    "code": "Z62.6",
    "description": "Problemas relacionados con presiones inapropiadas de los padres y otras anormalidades en la calidad de la crianza"
  },
  {
    "code": "Z62.8",
    "description": "Otros problemas especificados y relacionados con la crianza del ni√±o"
  },
  {
    "code": "Z62.9",
    "description": "Problema no especificado relacionado con la crianza del ni√±o"
  },
  {
    "code": "Z63.0",
    "description": "Problemas en la relaci√≥n entre esposos o pareja"
  },
  {
    "code": "Z63.1",
    "description": "Problemas en la relaci√≥n con los padres y los familiares pol√≠ticos"
  },
  {
    "code": "Z63.2",
    "description": "Problemas relacionados con el apoyo familiar inadecuado"
  },
  {
    "code": "Z63.3",
    "description": "Problemas relacionados con la ausencia de un miembro de la familia"
  },
  {
    "code": "Z63.4",
    "description": "Problemas relacionados con la desaparici√≥n o muerte de un miembro de la familia"
  },
  {
    "code": "Z63.5",
    "description": "Problemas relacionados con la ruptura familiar por separaci√≥n o divorcio"
  },
  {
    "code": "Z63.6",
    "description": "Problemas relacionados con familiar dependiente, necesitado de cuidado en la casa"
  },
  {
    "code": "Z63.7",
    "description": "Problemas relacionados con otros hechos estresantes que afectan a la familia y al hogar"
  },
  {
    "code": "Z63.8",
    "description": "Otros problemas especificados relacionados con el grupo primario de apoyo"
  },
  {
    "code": "Z63.9",
    "description": "Problema no especificado relacionado con el grupo primario de apoyo"
  },
  {
    "code": "Z64.0",
    "description": "Problemas relacionados con embarazo no deseado"
  },
  {
    "code": "Z64.1",
    "description": "Problemas relacionados con la multiparidad"
  },
  {
    "code": "Z64.2",
    "description": ""
  },
  {
    "code": "Z64.3",
    "description": ""
  },
  {
    "code": "Z64.4",
    "description": "Problemas relacionados con el desacuerdo con consejeros"
  },
  {
    "code": "Z65.0",
    "description": "Problemas relacionados con culpabilidad en procedimientos civiles o criminales sin prisi√≥n"
  },
  {
    "code": "Z65.1",
    "description": "Problemas relacionados con prisi√≥n y otro encarcelamiento"
  },
  {
    "code": "Z65.2",
    "description": "Problemas relacionados con la liberaci√≥n de la prisi√≥n"
  },
  {
    "code": "Z65.3",
    "description": "Problemas relacionados con otras circunstancias legales"
  },
  {
    "code": "Z65.4",
    "description": "Problemas relacionados con v√≠ctima de crimen o terrorismo"
  },
  {
    "code": "Z65.5",
    "description": "Problemas relacionados con la exposici√≥n a desastre, guerra u otras hostilidades"
  },
  {
    "code": "Z65.8",
    "description": "Otros problemas especificados relacionados con circunstancias psicosociales"
  },
  {
    "code": "Z65.9",
    "description": "Problemas relacionados con circunstancias psicosociales no especificadas"
  },
  {
    "code": "Z70.0",
    "description": "Consulta relacionada con la actitud sexual"
  },
  {
    "code": "Z70.1",
    "description": "Consulta relacionada con la orientaci√≥n y conducta sexual del paciente"
  },
  {
    "code": "Z70.2",
    "description": "Consulta relacionada con la orientaci√≥n y conducta sexual de una tercera persona"
  },
  {
    "code": "Z70.3",
    "description": "Consulta relacionada con preocupaciones combinadas sobre la actitud, la conducta y la orientaci√≥n sexuales"
  },
  {
    "code": "Z70.8",
    "description": "Otras consultas sexuales espec√≠ficas"
  },
  {
    "code": "Z70.9",
    "description": "Consulta sexual, no especificada"
  },
  {
    "code": "Z71.0",
    "description": "Persona que consulta en nombre de otra persona"
  },
  {
    "code": "Z71.1",
    "description": "Persona que teme estar enferma, a quien no se hace diagn√≥stico"
  },
  {
    "code": "Z71.2",
    "description": "Persona que consulta para la explicaci√≥n de hallazgos de investigaci√≥n"
  },
  {
    "code": "Z71.3",
    "description": "Consulta para instrucci√≥n y vigilancia de la dieta"
  },
  {
    "code": "Z71.4",
    "description": "Consulta para asesor√≠a y vigilancia por abuso de alcohol"
  },
  {
    "code": "Z71.5",
    "description": "Consulta para asesor√≠a y vigilancia por abuso de drogas"
  },
  {
    "code": "Z71.6",
    "description": "Consulta para asesor√≠a por abuso de tabaco"
  },
  {
    "code": "Z71.7",
    "description": "Consulta para asesor√≠a sobre el virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "Z71.8",
    "description": "Otras consultas especificadas"
  },
  {
    "code": "Z71.9",
    "description": "Consulta, no especificada"
  },
  {
    "code": "Z72.0",
    "description": "Problemas relacionados con el uso del tabaco"
  },
  {
    "code": "Z72.1",
    "description": "Problemas relacionados con el uso del alcohol"
  },
  {
    "code": "Z72.2",
    "description": "Problemas relacionados con el uso de drogas"
  },
  {
    "code": "Z72.3",
    "description": "Problemas relacionados con la falta de ejercicio f√≠sico"
  },
  {
    "code": "Z72.4",
    "description": "Problemas relacionados con la dieta y h√°bitos alimentarios inapropiados"
  },
  {
    "code": "Z72.5",
    "description": "Problemas relacionados con la conducta sexual de alto riesgo"
  },
  {
    "code": "Z72.6",
    "description": "Problemas relacionados con el juego y las apuestas"
  },
  {
    "code": "Z72.8",
    "description": "Otros problemas relacionados con el estilo de vida"
  },
  {
    "code": "Z72.9",
    "description": "Problema no especificado relacionado con el estilo de vida"
  },
  {
    "code": "Z73.0",
    "description": "Problemas relacionados con la enfermedad consuntiva"
  },
  {
    "code": "Z73.1",
    "description": "Problemas relacionados con la acentuaci√≥n de rasgos de la personalidad"
  },
  {
    "code": "Z73.2",
    "description": "Problemas relacionados con la falta de relajaci√≥n y descanso"
  },
  {
    "code": "Z73.3",
    "description": "Problemas relacionados con el estr√©s, no clasificados en otra parte"
  },
  {
    "code": "Z73.4",
    "description": "Problemas relacionados con habilidades sociales inadecuadas, no clasificados en otra parte"
  },
  {
    "code": "Z73.5",
    "description": "Problemas relacionados con el conflicto del rol social, no clasificados en otra parte"
  },
  {
    "code": "Z73.6",
    "description": "Problemas relacionados con la limitaci√≥n de las actividades debido a discapacidad"
  },
  {
    "code": "Z73.8",
    "description": "Otros problemas relacionados con dificultades con el modo de vida"
  },
  {
    "code": "Z73.9",
    "description": "Problemas no especificados relacionados con dificultades con el modo de vida"
  },
  {
    "code": "Z74.0",
    "description": "Problemas relacionados con movilidad reducida"
  },
  {
    "code": "Z74.1",
    "description": "Problemas relacionados con la necesidad de ayuda para el cuidado personal"
  },
  {
    "code": "Z74.2",
    "description": ""
  },
  {
    "code": "Z74.3",
    "description": "Problemas relacionados con la necesidad de supervisi√≥n continua"
  },
  {
    "code": "Z74.8",
    "description": "Otros problemas relacionados con dependencia del prestador de servicios"
  },
  {
    "code": "Z74.9",
    "description": "Problema no especificado relacionado con dependencia del prestador de servicios"
  },
  {
    "code": "Z75.0",
    "description": "Problemas relacionados con servicio m√©dico no disponible en el domicilio"
  },
  {
    "code": "Z75.1",
    "description": "Problemas relacionados con persona esperando admisi√≥n en una instituci√≥n apropiada en otro lugar"
  },
  {
    "code": "Z75.2",
    "description": "Problemas relacionados con persona en otro per√≠odo de espera para investigaci√≥n y tratamiento"
  },
  {
    "code": "Z75.3",
    "description": "Problemas relacionados con atenci√≥n de salud no disponible o inaccesible"
  },
  {
    "code": "Z75.4",
    "description": "Problemas relacionados con otros servicios asistenciales no disponibles o inaccesibles"
  },
  {
    "code": "Z75.5",
    "description": "Problemas relacionados con la atenci√≥n durante vacaciones de la familia"
  },
  {
    "code": "Z75.8",
    "description": "Otros problemas relacionados con servicios m√©dicos y de salud"
  },
  {
    "code": "Z75.9",
    "description": "Problema no especificado relacionado con servicios m√©dicos y de salud"
  },
  {
    "code": "Z76.0",
    "description": "Consulta para repetici√≥n de receta"
  },
  {
    "code": "Z76.1",
    "description": "Consulta para atenci√≥n y supervisi√≥n de la salud del ni√±o abandonado"
  },
  {
    "code": "Z76.2",
    "description": "Consulta para atenci√≥n y supervisi√≥n de la salud de otros ni√±os o lactantes sanos"
  },
  {
    "code": "Z76.3",
    "description": "Persona sana que acompa√±a al enfermo"
  },
  {
    "code": "Z76.4",
    "description": "Otro hu√©sped en servicios de salud"
  },
  {
    "code": "Z76.5",
    "description": "Persona que consulta con simulaci√≥n consciente [simulador]"
  },
  {
    "code": "Z76.8",
    "description": "Personas en contacto con los servicios de salud en otras circunstancias especificadas"
  },
  {
    "code": "Z76.9",
    "description": "Personas en contacto con los servicios de salud en circunstancias no especificadas"
  },
  {
    "code": "Z80.0",
    "description": "Historia familiar de tumor maligno de √≥rganos digestivos"
  },
  {
    "code": "Z80.1",
    "description": "Historia familiar de tumor maligno de tr√°quea, bronquios y pulm√≥n"
  },
  {
    "code": "Z80.2",
    "description": "Historia familiar de tumor maligno de otros √≥rganos respiratorios e intrator√°cicos"
  },
  {
    "code": "Z80.3",
    "description": "Historia familiar de tumor maligno de mama"
  },
  {
    "code": "Z80.4",
    "description": "Historia familiar de tumor maligno de √≥rganos genitales"
  },
  {
    "code": "Z80.5",
    "description": "Historia familiar de tumor maligno de v√≠as urinarias"
  },
  {
    "code": "Z80.6",
    "description": "Historia familiar de leucemia"
  },
  {
    "code": "Z80.7",
    "description": "Historia familiar de otros tumores malignos del tejido linfoide, hematopoy√©tico y tejidos relacionados"
  },
  {
    "code": "Z80.8",
    "description": "Historia familiar de tumor maligno de otros √≥rganos o sistemas especificados"
  },
  {
    "code": "Z80.9",
    "description": "Historia familiar de tumor maligno, de sitio no especificado"
  },
  {
    "code": "Z81.0",
    "description": "Historia familiar de retardo mental"
  },
  {
    "code": "Z81.1",
    "description": "Historia familiar de abuso de alcohol"
  },
  {
    "code": "Z81.2",
    "description": "Historia familiar de abuso del tabaco"
  },
  {
    "code": "Z81.3",
    "description": "Historia familiar de abuso de otras sustancias psicoactivas"
  },
  {
    "code": "Z81.4",
    "description": "Historia familiar de abuso de otras sustancias"
  },
  {
    "code": "Z81.8",
    "description": "Historia familiar de otros trastornos mentales y del comportamiento"
  },
  {
    "code": "Z82.0",
    "description": "Historia familiar de epilepsia y otras enfermedades del sistema nervioso"
  },
  {
    "code": "Z82.1",
    "description": "Historia familiar de ceguera o p√©rdida de la visi√≥n"
  },
  {
    "code": "Z82.2",
    "description": "Historia familiar de sordera o p√©rdida de la audici√≥n"
  },
  {
    "code": "Z82.3",
    "description": "Historia familiar de apoplej√≠a"
  },
  {
    "code": "Z82.4",
    "description": "Historia familiar de enfermedad isqu√©mica del coraz√≥n y otras enfermedades del sistema circulatorio"
  },
  {
    "code": "Z82.5",
    "description": "Historia familiar de asma y de otras enfermedades cr√≥nicas de las v√≠as respiratorias inferiores"
  },
  {
    "code": "Z82.6",
    "description": "Historia familiar de artritis y otras enfermedades del sistema osteomuscular y tejido conjuntivo"
  },
  {
    "code": "Z82.7",
    "description": "Historia familiar de malformaciones cong√©nitas, deformidades y otras anomal√≠as cromos√≥micas"
  },
  {
    "code": "Z82.8",
    "description": "Historia familiar de otras discapacidades y enfermedades cr√≥nicas incapacitantes no clasificadas en otra parte"
  },
  {
    "code": "Z83.0",
    "description": "Historia familiar de infecci√≥n por el virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "Z83.1",
    "description": "Historia familiar de otras enfermedades infecciosas y parasitarias"
  },
  {
    "code": "Z83.2",
    "description": ""
  },
  {
    "code": "Z83.3",
    "description": "Historia familiar de diabetes mellitus"
  },
  {
    "code": "Z83.4",
    "description": "Historia familiar de otras enfermedades endocrinas, nutricionales y metab√≥licas"
  },
  {
    "code": "Z83.5",
    "description": "Historia familiar de trastornos de los ojos y de los o√≠dos"
  },
  {
    "code": "Z83.6",
    "description": "Historia familiar de enfermedades del sistema respiratorio"
  },
  {
    "code": "Z83.7",
    "description": "Historia familiar de enfermedades del sistema digestivo"
  },
  {
    "code": "Z84.0",
    "description": "Historia familiar de enfermedades de la piel y del tejido subcut√°neo"
  },
  {
    "code": "Z84.1",
    "description": "Historia familiar de trastornos del ri√±√≥n y del ur√©ter"
  },
  {
    "code": "Z84.2",
    "description": "Historia familiar de otras enfermedades del sistema genitourinario"
  },
  {
    "code": "Z84.3",
    "description": "Historia familiar de consanguinidad"
  },
  {
    "code": "Z84.8",
    "description": "Historia familiar de otras afecciones especificadas"
  },
  {
    "code": "Z85.0",
    "description": "Historia personal de tumor maligno de √≥rganos digestivos"
  },
  {
    "code": "Z85.1",
    "description": "Historia personal de tumor maligno de tr√°quea, bronquios y pulm√≥n"
  },
  {
    "code": "Z85.2",
    "description": "Historia personal de tumor maligno de otros √≥rganos respiratorios e intrator√°cicos"
  },
  {
    "code": "Z85.3",
    "description": "Historia personal de tumor maligno de mama"
  },
  {
    "code": "Z85.4",
    "description": "Historia personal de tumor maligno de √≥rganos genitales"
  },
  {
    "code": "Z85.5",
    "description": "Historia personal de tumor maligno de v√≠as urinarias"
  },
  {
    "code": "Z85.6",
    "description": "Historia personal de leucemia"
  },
  {
    "code": "Z85.7",
    "description": "Historia personal de otros tumores malignos del tejido linfoide, hematopoy√©tico y tejidos relacionados"
  },
  {
    "code": "Z85.8",
    "description": "Historia personal de tumor maligno de otros √≥rganos y sistemas"
  },
  {
    "code": "Z85.9",
    "description": "Historia personal de tumor maligno, de sitio no especificado"
  },
  {
    "code": "Z86.0",
    "description": "Historia personal de otros tumores"
  },
  {
    "code": "Z86.1",
    "description": "Historia personal de enfermedades infecciosas y parasitarias"
  },
  {
    "code": "Z86.2",
    "description": ""
  },
  {
    "code": "Z86.3",
    "description": "Historia personal de enfermedades endocrinas, nutricionales y metab√≥licas"
  },
  {
    "code": "Z86.4",
    "description": "Historia personal de abuso de sustancias psicoactivas"
  },
  {
    "code": "Z86.5",
    "description": "Historia personal de otros trastornos mentales o del comportamiento"
  },
  {
    "code": "Z86.6",
    "description": "Historia personal de enfermedades del sistema nervioso y de los √≥rganos de los sentidos"
  },
  {
    "code": "Z86.7",
    "description": "Historia personal de enfermedades del sistema circulatorio"
  },
  {
    "code": "Z87.0",
    "description": "Historia personal de enfermedades del sistema respiratorio"
  },
  {
    "code": "Z87.1",
    "description": "Historia personal de enfermedades del sistema digestivo"
  },
  {
    "code": "Z87.2",
    "description": "Historia personal de enfermedades de la piel y del tejido subcut√°neo"
  },
  {
    "code": "Z87.3",
    "description": "Historia personal de enfermedades del sistema osteomuscular y del tejido conjuntivo"
  },
  {
    "code": "Z87.4",
    "description": "Historia personal de enfermedades del sistema genitourinario"
  },
  {
    "code": "Z87.5",
    "description": "Historia personal de complicaciones del embarazo, del parto y del puerperio"
  },
  {
    "code": "Z87.6",
    "description": "Historia personal de ciertas afecciones originadas en el per√≠odo perinatal"
  },
  {
    "code": "Z87.7",
    "description": "Historia personal de malformaciones cong√©nitas, deformidades y anomal√≠as cromos√≥micas"
  },
  {
    "code": "Z87.8",
    "description": "Historia personal de otras afecciones especificadas"
  },
  {
    "code": "Z88.0",
    "description": "Historia personal de alergia a penicilina"
  },
  {
    "code": "Z88.1",
    "description": "Historia personal de alergia a otros agentes antibi√≥ticos"
  },
  {
    "code": "Z88.2",
    "description": "Historia personal de alergia a sulfonamidas"
  },
  {
    "code": "Z88.3",
    "description": "Historia personal de alergia a otros agentes antiinfecciosos"
  },
  {
    "code": "Z88.4",
    "description": "Historia personal de alergia a agente anest√©sico"
  },
  {
    "code": "Z88.5",
    "description": "Historia personal de alergia a agente narc√≥tico"
  },
  {
    "code": "Z88.6",
    "description": "Historia personal de alergia a agente analg√©sico"
  },
  {
    "code": "Z88.7",
    "description": "Historia personal de alergia a suero o vacuna"
  },
  {
    "code": "Z88.8",
    "description": "Historia personal de alergia a otras drogas, medicamentos y sustancias biol√≥gicas"
  },
  {
    "code": "Z88.9",
    "description": "Historia personal de alergia a drogas, medicamentos y sustancias biol√≥gicas no especificadas"
  },
  {
    "code": "Z89.0",
    "description": "Ausencia adquirida de dedo(s), [incluido el pulgar], unilateral"
  },
  {
    "code": "Z89.1",
    "description": "Ausencia adquirida de mano y mu√±eca"
  },
  {
    "code": "Z89.2",
    "description": "Ausencia adquirida de miembro superior por arriba de la mu√±eca"
  },
  {
    "code": "Z89.3",
    "description": "Ausencia adquirida de ambos miembros superiores [cualquier nivel]"
  },
  {
    "code": "Z89.4",
    "description": "Ausencia adquirida de pie y tobillo"
  },
  {
    "code": "Z89.5",
    "description": "Ausencia adquirida de pierna a nivel de o debajo de la rodilla"
  },
  {
    "code": "Z89.6",
    "description": "Ausencia adquirida de pierna por arriba de la rodilla"
  },
  {
    "code": "Z89.7",
    "description": "Ausencia adquirida de ambos miembros inferiores [cualquier nivel, excepto dedos del pie solamente]"
  },
  {
    "code": "Z89.8",
    "description": "Ausencia adquirida de miembros superiores e inferiores [cualquier nivel]"
  },
  {
    "code": "Z89.9",
    "description": "Ausencia adquirida de miembros no especificados"
  },
  {
    "code": "Z90.0",
    "description": "Ausencia adquirida de parte de la cabeza y del cuello"
  },
  {
    "code": "Z90.1",
    "description": "Ausencia adquirida de mama(s)"
  },
  {
    "code": "Z90.2",
    "description": "Ausencia adquirida (de parte) del pulm√≥n"
  },
  {
    "code": "Z90.3",
    "description": "Ausencia adquirida de parte del est√≥mago"
  },
  {
    "code": "Z90.4",
    "description": "Ausencia adquirida de otras partes del tubo digestivo"
  },
  {
    "code": "Z90.5",
    "description": "Ausencia adquirida de ri√±√≥n"
  },
  {
    "code": "Z90.6",
    "description": "Ausencia adquirida de otras partes de las v√≠as urinarias"
  },
  {
    "code": "Z90.7",
    "description": "Ausencia adquirida de √≥rgano(s) genital(es)"
  },
  {
    "code": "Z90.8",
    "description": "Ausencia adquirida de otros √≥rganos"
  },
  {
    "code": "Z91.0",
    "description": "Historia personal de alergia, no debida a drogas ni a sustancias biol√≥gicas"
  },
  {
    "code": "Z91.1",
    "description": "Historia personal de incumplimiento del r√©gimen o tratamiento m√©dico"
  },
  {
    "code": "Z91.2",
    "description": "Historia personal de higiene personal deficiente"
  },
  {
    "code": "Z91.3",
    "description": "Historia personal de ciclo sue√±o-vigilia no saludable"
  },
  {
    "code": "Z91.4",
    "description": "Historia personal de trauma psicol√≥gico, no clasificado en otra parte"
  },
  {
    "code": "Z91.5",
    "description": "Historia personal de lesi√≥n autoinfligida intencionalmente"
  },
  {
    "code": "Z91.6",
    "description": "Historia personal de otro trauma f√≠sico"
  },
  {
    "code": "Z91.8",
    "description": "Historia personal de otros factores de riesgo, no clasificados en otra parte"
  },
  {
    "code": "Z92.0",
    "description": "Historia personal de anticoncepci√≥n"
  },
  {
    "code": "Z92.1",
    "description": "Historia personal de uso (presente) de anticoagulantes por largo tiempo"
  },
  {
    "code": "Z92.2",
    "description": "Historia personal de uso (presente) de otros medicamentos por largo tiempo"
  },
  {
    "code": "Z92.3",
    "description": "Historia personal de irradiaci√≥n"
  },
  {
    "code": "Z92.4",
    "description": "Historia personal de cirug√≠a mayor, no clasificada en otra parte"
  },
  {
    "code": "Z92.5",
    "description": "Historia personal de medidas de rehabilitaci√≥n"
  },
  {
    "code": "Z92.8",
    "description": "Historia personal de otros tratamientos m√©dicos"
  },
  {
    "code": "Z92.9",
    "description": "Historia personal de tratamiento m√©dico no especificado"
  },
  {
    "code": "Z93.0",
    "description": "Traqueostom√≠a"
  },
  {
    "code": "Z93.1",
    "description": "Gastrostom√≠a"
  },
  {
    "code": "Z93.2",
    "description": "Ileostom√≠a"
  },
  {
    "code": "Z93.3",
    "description": "Colostom√≠a"
  },
  {
    "code": "Z93.4",
    "description": "Otros orificios artificiales del tubo gastrointestinal"
  },
  {
    "code": "Z93.5",
    "description": "Cistostom√≠a"
  },
  {
    "code": "Z93.6",
    "description": "Otros orificios artificiales de las v√≠as urinarias"
  },
  {
    "code": "Z93.8",
    "description": "Otras aberturas artificiales"
  },
  {
    "code": "Z93.9",
    "description": "Abertura artificial, no especificada"
  },
  {
    "code": "Z94.0",
    "description": "Trasplante de ri√±√≥n"
  },
  {
    "code": "Z94.1",
    "description": "Trasplante de coraz√≥n"
  },
  {
    "code": "Z94.2",
    "description": "Trasplante de pulm√≥n"
  },
  {
    "code": "Z94.3",
    "description": "Trasplante de coraz√≥n y pulmones"
  },
  {
    "code": "Z94.4",
    "description": "Trasplante de h√≠gado"
  },
  {
    "code": "Z94.5",
    "description": "Trasplante de piel"
  },
  {
    "code": "Z94.6",
    "description": "Trasplante de hueso"
  },
  {
    "code": "Z94.7",
    "description": "Trasplante de c√≥rnea"
  },
  {
    "code": "Z94.8",
    "description": "Otros √≥rganos y tejidos trasplantados"
  },
  {
    "code": "Z94.9",
    "description": "Organo o tejido trasplantado no especificado"
  },
  {
    "code": "Z95.0",
    "description": "Presencia de marcapaso card√≠aco"
  },
  {
    "code": "Z95.1",
    "description": "Presencia de derivaci√≥n aortocoronaria"
  },
  {
    "code": "Z95.2",
    "description": "Presencia de v√°lvula card√≠aca prot√©sica"
  },
  {
    "code": "Z95.3",
    "description": "Presencia de v√°lvula card√≠aca xenog√©nica"
  },
  {
    "code": "Z95.4",
    "description": "Presencia de otros reemplazos de v√°lvula card√≠aca"
  },
  {
    "code": "Z95.5",
    "description": "Presencia de angioplastia, injertos y pr√≥tesis coronarias"
  },
  {
    "code": "Z95.8",
    "description": "Presencia de otros injertos y pr√≥tesis cardiovasculares"
  },
  {
    "code": "Z95.9",
    "description": "Presencia de injertos e implantes cardiovasculares no especificados"
  },
  {
    "code": "Z96.0",
    "description": "Presencia de implante urogenital"
  },
  {
    "code": "Z96.1",
    "description": "Presencia de lentes intraoculares"
  },
  {
    "code": "Z96.2",
    "description": "Presencia de implantes √≥ticos y auditivos"
  },
  {
    "code": "Z96.3",
    "description": "Presencia de laringe artificial"
  },
  {
    "code": "Z96.4",
    "description": "Presencia de implantes endocrinos"
  },
  {
    "code": "Z96.5",
    "description": "Presencia de implantes de ra√≠z de diente y de mand√≠bula"
  },
  {
    "code": "Z96.6",
    "description": "Presencia de implante ortop√©dico articular"
  },
  {
    "code": "Z96.7",
    "description": "Presencia de otros implantes de tendones y huesos"
  },
  {
    "code": "Z96.8",
    "description": "Presencia de otros implantes funcionales especificados"
  },
  {
    "code": "Z96.9",
    "description": "Presencia de implantes funcionales no especificados"
  },
  {
    "code": "Z97.0",
    "description": "Presencia de ojo artificial"
  },
  {
    "code": "Z97.1",
    "description": "Presencia de miembro artificial (completo) (parcial)"
  },
  {
    "code": "Z97.2",
    "description": "Presencia de dispositivo prot√©sico dental (completo) (parcial)"
  },
  {
    "code": "Z97.3",
    "description": "Presencia de anteojos y lentes de contacto"
  },
  {
    "code": "Z97.4",
    "description": "Presencia de aud√≠fono externo"
  },
  {
    "code": "Z97.5",
    "description": "Presencia de dispositivo anticonceptivo (intrauterino)"
  },
  {
    "code": "Z97.8",
    "description": "Presencia de otros dispositivos especificados"
  },
  {
    "code": "Z98.0",
    "description": "Estado de derivaci√≥n intestinal o anastomosis"
  },
  {
    "code": "Z98.1",
    "description": "Estado de artrodesis"
  },
  {
    "code": "Z98.2",
    "description": "Presencia de dispositivo para drenaje de l√≠quido cefalorraqu√≠deo"
  },
  {
    "code": "Z98.8",
    "description": "Otros estados postquir√∫rgicos especificados"
  },
  {
    "code": "Z99.0",
    "description": "Dependencia de aspirador"
  },
  {
    "code": "Z99.1",
    "description": "Dependencia de respirador"
  },
  {
    "code": "Z99.2",
    "description": "Dependencia de di√°lisis renal"
  },
  {
    "code": "Z99.3",
    "description": "Dependencia de silla de ruedas"
  },
  {
    "code": "Z99.8",
    "description": "Dependencia de otras m√°quinas y dispositivos capacitantes"
  },
  {
    "code": "Z99.9",
    "description": "Dependencia de m√°quina y dispositivo capacitante, no especificada"
  }
]

================
File: src/catalogs/seed/cie10B.json
================
[
  {
    "code": "A00",
    "description": "C√≥lera"
  },
  {
    "code": "A01",
    "description": "Fiebres tifoidea y paratifoidea"
  },
  {
    "code": "A02",
    "description": "Otras infecciones debidas a Salmonella"
  },
  {
    "code": "A03",
    "description": "Shigelosis"
  },
  {
    "code": "A04",
    "description": "Otras infecciones intestinales bacterianas"
  },
  {
    "code": "A05",
    "description": "Otras intoxicaciones alimentarias bacterianas"
  },
  {
    "code": "A06",
    "description": "Amebiasis"
  },
  {
    "code": "A07",
    "description": "Otras enfermedades intestinales debidas a protozoarios"
  },
  {
    "code": "A08",
    "description": "Infecciones intestinales debidas a virus y otros organismos especificados"
  },
  {
    "code": "A09",
    "description": "Diarrea y gastroenteritis de presunto origen infeccioso"
  },
  {
    "code": "A15",
    "description": "Tuberculosis respiratoria, confirmada bacteriol√≥gica e histol√≥gicamente"
  },
  {
    "code": "A16",
    "description": "Tuberculosis respiratoria, no confirmada bacteriol√≥gica o histol√≥gicamente"
  },
  {
    "code": "A18",
    "description": "Tuberculosis de otros √≥rganos"
  },
  {
    "code": "A19",
    "description": "Tuberculosis miliar"
  },
  {
    "code": "A20",
    "description": "Peste"
  },
  {
    "code": "A21",
    "description": "Tularemia"
  },
  {
    "code": "A22",
    "description": "Carbunco [√°ntrax]"
  },
  {
    "code": "A23",
    "description": "Brucelosis"
  },
  {
    "code": "A24",
    "description": "Muermo y melioidosis"
  },
  {
    "code": "A25",
    "description": "Fiebres por mordedura de rata"
  },
  {
    "code": "A26",
    "description": "Erisipeloide"
  },
  {
    "code": "A27",
    "description": "Leptospirosis"
  },
  {
    "code": "A28",
    "description": "Otras enfermedades zoon√≥ticas bacterianas, no clasificadas en otra parte"
  },
  {
    "code": "A30",
    "description": "Lepra [enfermedad de Hansen]"
  },
  {
    "code": "A31",
    "description": "Infecciones debidas a otras micobacterias"
  },
  {
    "code": "A32",
    "description": "Listeriosis"
  },
  {
    "code": "A33",
    "description": "T√©tanos neonatal"
  },
  {
    "code": "A34",
    "description": "T√©tanos obst√©trico"
  },
  {
    "code": "A35",
    "description": "Otros t√©tanos"
  },
  {
    "code": "A36",
    "description": "Difteria"
  },
  {
    "code": "A37",
    "description": "Tos ferina [tos convulsiva]"
  },
  {
    "code": "A38",
    "description": "Escarlatina"
  },
  {
    "code": "A39",
    "description": "Infecci√≥n meningoc√≥cica"
  },
  {
    "code": "A40",
    "description": "Septicemia estreptoc√≥cica"
  },
  {
    "code": "A41",
    "description": "Otras septicemias"
  },
  {
    "code": "A42",
    "description": "Actinomicosis"
  },
  {
    "code": "A43",
    "description": "Nocardiosis"
  },
  {
    "code": "A44",
    "description": "Bartonelosis"
  },
  {
    "code": "A46",
    "description": "Erisipela"
  },
  {
    "code": "A48",
    "description": "Otras enfermedades bacterianas, no clasificadas en otra parte"
  },
  {
    "code": "A49",
    "description": "Infecci√≥n bacteriana de sitio no especificado"
  },
  {
    "code": "A50",
    "description": "S√≠filis cong√©nita"
  },
  {
    "code": "A51",
    "description": "S√≠filis precoz"
  },
  {
    "code": "A52",
    "description": "S√≠filis tard√≠a"
  },
  {
    "code": "A53",
    "description": "Otras s√≠filis y las no especificadas"
  },
  {
    "code": "A54",
    "description": "Infecci√≥n gonoc√≥cica"
  },
  {
    "code": "A55",
    "description": "Linfogranuloma (ven√©reo) por clamidias"
  },
  {
    "code": "A56",
    "description": "Otras enfermedades de transmisi√≥n sexual debidas a clamidias"
  },
  {
    "code": "A57",
    "description": "Chancro blando"
  },
  {
    "code": "A58",
    "description": "Granuloma inguinal"
  },
  {
    "code": "A59",
    "description": "Tricomoniasis"
  },
  {
    "code": "A60",
    "description": "Infecci√≥n anogenital debida a virus del herpes [herpes simple]"
  },
  {
    "code": "A63",
    "description": "Otras enfermedades de transmisi√≥n predominantemente sexual, no clasificadas en otra parte"
  },
  {
    "code": "A64",
    "description": "Enfermedad de transmisi√≥n sexual no especificada"
  },
  {
    "code": "A65",
    "description": "S√≠filis no ven√©rea"
  },
  {
    "code": "A66",
    "description": "Frambesia"
  },
  {
    "code": "A67",
    "description": "Pinta [carate]"
  },
  {
    "code": "A68",
    "description": "Fiebres recurrentes"
  },
  {
    "code": "A69",
    "description": "Otras infecciones causadas por espiroquetas"
  },
  {
    "code": "A70",
    "description": "Infecci√≥n debida a Chlamydia psittaci"
  },
  {
    "code": "A71",
    "description": "Tracoma"
  },
  {
    "code": "A74",
    "description": "Otras enfermedades causadas por clamidias"
  },
  {
    "code": "A75",
    "description": "Tifus"
  },
  {
    "code": "A77",
    "description": "Fiebre maculosa [rickettsiosis transmitida por garrapatas]"
  },
  {
    "code": "A78",
    "description": "Fiebre Q"
  },
  {
    "code": "A79",
    "description": "Otras rickettsiosis"
  },
  {
    "code": "A80",
    "description": "Poliomielitis aguda"
  },
  {
    "code": "A81",
    "description": "Infecciones del sistema nervioso central por virus at√≠pico"
  },
  {
    "code": "A82",
    "description": "Rabia"
  },
  {
    "code": "A83",
    "description": "Encefalitis viral transmitida por mosquitos"
  },
  {
    "code": "A84",
    "description": "Encefalitis viral transmitida por garrapatas"
  },
  {
    "code": "A85",
    "description": "Otras encefalitis virales, no clasificadas en otra parte"
  },
  {
    "code": "A86",
    "description": "Encefalitis viral, no especificada"
  },
  {
    "code": "A87",
    "description": "Meningitis viral"
  },
  {
    "code": "A88",
    "description": "Otras infecciones virales del sistema nervioso central, no clasificadas en otra parte"
  },
  {
    "code": "A89",
    "description": "Infecci√≥n viral del sistema nervioso central, no especificada"
  },
  {
    "code": "A90",
    "description": "Fiebre del dengue [dengue cl√°sico]"
  },
  {
    "code": "A91",
    "description": "Fiebre del dengue hemorr√°gico"
  },
  {
    "code": "A92",
    "description": "Otras fiebres virales transmitidas por mosquitos"
  },
  {
    "code": "A93",
    "description": "Otras fiebres virales transmitidas por artr√≥podos, no clasificadas en otra parte"
  },
  {
    "code": "A94",
    "description": "Fiebre viral transmitida por artr√≥podos, no especificada"
  },
  {
    "code": "A95",
    "description": "Fiebre amarilla"
  },
  {
    "code": "A96",
    "description": "Fiebre hemorr√°gica por arenavirus"
  },
  {
    "code": "A98",
    "description": "Otras fiebres virales hemorr√°gicas, no clasificadas en otra parte"
  },
  {
    "code": "A99",
    "description": "Fiebre viral hemorr√°gica, no especificada"
  },
  {
    "code": "B00",
    "description": "Infecciones herp√©ticas [herpes simple]"
  },
  {
    "code": "B01",
    "description": "Varicela"
  },
  {
    "code": "B02",
    "description": "Herpes zoster"
  },
  {
    "code": "B03",
    "description": "Viruela"
  },
  {
    "code": "B04",
    "description": "Viruela de los monos"
  },
  {
    "code": "B05",
    "description": "Sarampi√≥n"
  },
  {
    "code": "B06",
    "description": "Rub√©ola [sarampi√≥n alem√°n]"
  },
  {
    "code": "B07",
    "description": "Verrugas v√≠ricas"
  },
  {
    "code": "B08",
    "description": ""
  },
  {
    "code": "B09",
    "description": "Infecci√≥n viral no especificada, caracterizada por lesiones de la piel y de las membranas mucosas"
  },
  {
    "code": "B15",
    "description": "Hepatitis aguda tipo A"
  },
  {
    "code": "B16",
    "description": "Hepatitis aguda tipo B"
  },
  {
    "code": "B17",
    "description": "Otras hepatitis virales agudas"
  },
  {
    "code": "B18",
    "description": "Hepatitis viral cr√≥nica"
  },
  {
    "code": "B19",
    "description": "Hepatitis viral, sin otra especificaci√≥n"
  },
  {
    "code": "B20",
    "description": ""
  },
  {
    "code": "B21",
    "description": "Enfermedad por virus de la inmunodeficiencia humana [VIH], resultante en tumores malignos"
  },
  {
    "code": "B22",
    "description": "Enfermedad por virus de la inmunodeficiencia humana [VIH], resultante en otras enfermedades especificadas"
  },
  {
    "code": "B23",
    "description": "Enfermedad por virus de la inmunodeficiencia humana [VIH], resultante en otras afecciones"
  },
  {
    "code": "B24",
    "description": "Enfermedad por virus de la inmunodeficiencia humana [VIH], sin otra especificaci√≥n"
  },
  {
    "code": "B25",
    "description": "Enfermedad debida a virus citomeg√°lico"
  },
  {
    "code": "B26",
    "description": "Parotiditis infecciosa"
  },
  {
    "code": "B27",
    "description": "Mononucleosis infecciosa"
  },
  {
    "code": "B30",
    "description": "Conjuntivitis viral"
  },
  {
    "code": "B33",
    "description": "Otras enfermedades virales, no clasificadas en otra parte"
  },
  {
    "code": "B34",
    "description": "Infecci√≥n viral de sitio no especificado"
  },
  {
    "code": "B35",
    "description": "Dermatofitosis"
  },
  {
    "code": "B36",
    "description": "Otras micosis superficiales"
  },
  {
    "code": "B37",
    "description": "Candidiasis"
  },
  {
    "code": "B38",
    "description": "Coccidioidomicosis"
  },
  {
    "code": "B39",
    "description": "Histoplasmosis"
  },
  {
    "code": "B40",
    "description": "Blastomicosis"
  },
  {
    "code": "B41",
    "description": "Paracoccidioidomicosis"
  },
  {
    "code": "B42",
    "description": "Esporotricosis"
  },
  {
    "code": "B43",
    "description": "Cromomicosis y absceso feomic√≥tico"
  },
  {
    "code": "B44",
    "description": "Aspergilosis"
  },
  {
    "code": "B45",
    "description": "Criptococosis"
  },
  {
    "code": "B46",
    "description": "Cigomicosis"
  },
  {
    "code": "B47",
    "description": "Micetoma"
  },
  {
    "code": "B48",
    "description": "Otras micosis, no clasificadas en otra parte"
  },
  {
    "code": "B49",
    "description": "Micosis, no especificada"
  },
  {
    "code": "B50",
    "description": "Paludismo [malaria] debido a Plasmodium falciparum"
  },
  {
    "code": "B51",
    "description": "Paludismo [malaria] debido a Plasmodium vivax"
  },
  {
    "code": "B52",
    "description": "Paludismo [malaria] debido a Plasmodium malariae"
  },
  {
    "code": "B53",
    "description": "Otro paludismo [malaria] confirmado parasitol√≥gicamente"
  },
  {
    "code": "B54",
    "description": "Paludismo [malaria] no especificado"
  },
  {
    "code": "B55",
    "description": "Leishmaniasis"
  },
  {
    "code": "B56",
    "description": "Tripanosomiasis africana"
  },
  {
    "code": "B57",
    "description": "Enfermedad de Chagas"
  },
  {
    "code": "B58",
    "description": "Toxoplasmosis"
  },
  {
    "code": "B59",
    "description": "Neumocistosis"
  },
  {
    "code": "B60",
    "description": "Otras enfermedades debidas a protozoarios, no clasificadas en otra parte"
  },
  {
    "code": "B64",
    "description": "Enfermedad debida a protozoarios, no especificada"
  },
  {
    "code": "B65",
    "description": "Esquistosomiasis [bilharziasis]"
  },
  {
    "code": "B66",
    "description": "Otras infecciones debidas a trematodos"
  },
  {
    "code": "B67",
    "description": "Equinococosis"
  },
  {
    "code": "B68",
    "description": "Teniasis"
  },
  {
    "code": "B69",
    "description": "Cisticercosis"
  },
  {
    "code": "B70",
    "description": "Difilobotriasis y esparganosis"
  },
  {
    "code": "B71",
    "description": "Otras infecciones debidas a cestodos"
  },
  {
    "code": "B72",
    "description": "Dracontiasis"
  },
  {
    "code": "B73",
    "description": "Oncocercosis"
  },
  {
    "code": "B74",
    "description": "Filariasis"
  },
  {
    "code": "B75",
    "description": "Triquinosis"
  },
  {
    "code": "B76",
    "description": "Anquilostomiasis y necatoriasis"
  },
  {
    "code": "B77",
    "description": "Ascariasis"
  },
  {
    "code": "B78",
    "description": "Estrongiloidiasis"
  },
  {
    "code": "B79",
    "description": "Tricuriasis"
  },
  {
    "code": "B80",
    "description": "Enterobiasis"
  },
  {
    "code": "B81",
    "description": "Otras helmintiasis intestinales, no clasificadas en otra parte"
  },
  {
    "code": "B82",
    "description": "Parasitosis intestinales, sin otra especificaci√≥n"
  },
  {
    "code": "B83",
    "description": "Otras helmintiasis"
  },
  {
    "code": "B85",
    "description": "Pediculosis y phthiriasis"
  },
  {
    "code": "B86",
    "description": "Escabiosis"
  },
  {
    "code": "B87",
    "description": "Miasis"
  },
  {
    "code": "B88",
    "description": "Otras infestaciones"
  },
  {
    "code": "B89",
    "description": "Enfermedad parasitaria, no especificada"
  },
  {
    "code": "B90",
    "description": "Secuelas de tuberculosis"
  },
  {
    "code": "B91",
    "description": "Secuelas de poliomielitis"
  },
  {
    "code": "B92",
    "description": "Secuelas de lepra"
  },
  {
    "code": "B94",
    "description": "Secuelas de otras enfermedades infecciosas y parasitarias y de las no especificadas"
  },
  {
    "code": "B95",
    "description": "Estreptococos y estafilococos como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B96",
    "description": "Otros agentes bacterianos como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B97",
    "description": "Agentes virales como causa de enfermedades clasificadas en otros cap√≠tulos"
  },
  {
    "code": "B99",
    "description": "Otras enfermedades infecciosas y las no especificadas"
  },
  {
    "code": "C00",
    "description": "Tumor maligno del labio"
  },
  {
    "code": "C01",
    "description": "Tumor maligno de la base de la lengua"
  },
  {
    "code": "C02",
    "description": "Tumor maligno de otras partes y de las no especificadas de la lengua"
  },
  {
    "code": "C03",
    "description": "Tumor maligno de la enc√≠a"
  },
  {
    "code": "C04",
    "description": "Tumor maligno del piso de la boca"
  },
  {
    "code": "C05",
    "description": "Tumor maligno del paladar"
  },
  {
    "code": "C06",
    "description": "Tumor maligno de otras partes y de las no especificadas de la boca"
  },
  {
    "code": "C07",
    "description": "Tumor maligno de la gl√°ndula par√≥tida"
  },
  {
    "code": "C08",
    "description": "Tumor maligno de otras gl√°ndulas salivales mayores y de las no especificadas"
  },
  {
    "code": "C09",
    "description": "Tumor maligno de la am√≠gdala"
  },
  {
    "code": "C10",
    "description": "Tumor maligno de la orofaringe"
  },
  {
    "code": "C11",
    "description": "Tumor maligno de la nasofaringe"
  },
  {
    "code": "C12",
    "description": "Tumor maligno del seno piriforme"
  },
  {
    "code": "C13",
    "description": "Tumor maligno de la hipofaringe"
  },
  {
    "code": "C14",
    "description": "Tumor maligno de otros sitios y de los mal definidos del labio, de la cavidad bucal y de la faringe"
  },
  {
    "code": "C15",
    "description": "Tumor maligno del es√≥fago"
  },
  {
    "code": "C16",
    "description": "Tumor maligno del est√≥mago"
  },
  {
    "code": "C17",
    "description": "Tumor maligno del intestino delgado"
  },
  {
    "code": "C18",
    "description": "Tumor maligno del colon"
  },
  {
    "code": "C19",
    "description": "Tumor maligno de la uni√≥n rectosigmoidea"
  },
  {
    "code": "C20",
    "description": "Tumor maligno del recto"
  },
  {
    "code": "C21",
    "description": "Tumor maligno del ano y del conducto anal"
  },
  {
    "code": "C22",
    "description": "Tumor maligno del h√≠gado y de las v√≠as biliares intrahep√°ticas"
  },
  {
    "code": "C23",
    "description": "Tumor maligno de la ves√≠cula biliar"
  },
  {
    "code": "C24",
    "description": "Tumor maligno de otras partes y de las no especificadas de las v√≠as biliares"
  },
  {
    "code": "C25",
    "description": "Tumor maligno del p√°ncreas"
  },
  {
    "code": "C26",
    "description": "Tumor maligno de otros sitios y de los mal definidos de los √≥rganos digestivos"
  },
  {
    "code": "C30",
    "description": "Tumor maligno de las fosas nasales y del o√≠do medio"
  },
  {
    "code": "C31",
    "description": "Tumor maligno de los senos paranasales"
  },
  {
    "code": "C32",
    "description": "Tumor maligno de la laringe"
  },
  {
    "code": "C33",
    "description": "Tumor maligno de la tr√°quea"
  },
  {
    "code": "C34",
    "description": "Tumor maligno de los bronquios y del pulm√≥n"
  },
  {
    "code": "C37",
    "description": "Tumor maligno del timo"
  },
  {
    "code": "C38",
    "description": "Tumor maligno del coraz√≥n, del mediastino y de la pleura"
  },
  {
    "code": "C39",
    "description": "Tumor maligno de otros sitios y de los mal definidos del sistema respiratorio y de los √≥rganos intrator√°cicos"
  },
  {
    "code": "C40",
    "description": "Tumor maligno de los huesos y de los cart√≠lagos articulares de los miembros"
  },
  {
    "code": "C41",
    "description": "Tumor maligno de los huesos y de los cart√≠lagos articulares, de otros sitios y de sitios no especificados"
  },
  {
    "code": "C43",
    "description": "Melanoma maligno de la piel"
  },
  {
    "code": "C44",
    "description": "Otros tumores malignos de la piel"
  },
  {
    "code": "C45",
    "description": "Mesotelioma"
  },
  {
    "code": "C46",
    "description": "Sarcoma de Kaposi"
  },
  {
    "code": "C47",
    "description": "Tumor maligno de los nervios perif√©ricos y del sistema nervioso aut√≥nomo"
  },
  {
    "code": "C48",
    "description": "Tumor maligno del peritoneo y del retroperitoneo"
  },
  {
    "code": "C49",
    "description": "Tumor maligno de otros tejidos conjuntivos y de tejidos blandos"
  },
  {
    "code": "C50",
    "description": "Tumor maligno de la mama"
  },
  {
    "code": "C51",
    "description": "Tumor maligno de la vulva"
  },
  {
    "code": "C52",
    "description": "Tumor maligno de la vagina"
  },
  {
    "code": "C53",
    "description": "Tumor maligno del cuello del √∫tero"
  },
  {
    "code": "C54",
    "description": "Tumor maligno del cuerpo del √∫tero"
  },
  {
    "code": "C55",
    "description": "Tumor maligno del √∫tero, parte no especificada"
  },
  {
    "code": "C56",
    "description": "Tumor maligno del ovario"
  },
  {
    "code": "C57",
    "description": "Tumor maligno de otros √≥rganos genitales femeninos y de los no especificados"
  },
  {
    "code": "C58",
    "description": "Tumor maligno de la placenta"
  },
  {
    "code": "C60",
    "description": "Tumor maligno del pene"
  },
  {
    "code": "C61",
    "description": "Tumor maligno de la pr√≥stata"
  },
  {
    "code": "C62",
    "description": "Tumor maligno del test√≠culo"
  },
  {
    "code": "C63",
    "description": "Tumor maligno de otros √≥rganos genitales masculinos y de los no especificados"
  },
  {
    "code": "C64",
    "description": "Tumor maligno del ri√±√≥n, excepto de la pelvis renal"
  },
  {
    "code": "C65",
    "description": "Tumor maligno de la pelvis renal"
  },
  {
    "code": "C66",
    "description": "Tumor maligno del ur√©ter"
  },
  {
    "code": "C67",
    "description": "Tumor maligno de la vejiga urinaria"
  },
  {
    "code": "C68",
    "description": "Tumor maligno de otros √≥rganos urinarios y de los no especificados"
  },
  {
    "code": "C69",
    "description": "Tumor maligno del ojo y sus anexos"
  },
  {
    "code": "C70",
    "description": "Tumor maligno de las meninges"
  },
  {
    "code": "C71",
    "description": "Tumor maligno del enc√©falo"
  },
  {
    "code": "C72",
    "description": "Tumor maligno de la m√©dula espinal, de los nervios craneales y de otras partes del sistema nervioso central"
  },
  {
    "code": "C73",
    "description": "Tumor maligno de la gl√°ndula tiroides"
  },
  {
    "code": "C74",
    "description": "Tumor maligno de la gl√°ndula suprarrenal"
  },
  {
    "code": "C75",
    "description": "Tumor maligno de otras gl√°ndulas endocrinas y de estructuras afines"
  },
  {
    "code": "C76",
    "description": "Tumor maligno de otros sitios y de sitios mal definidos"
  },
  {
    "code": "C77",
    "description": "Tumor maligno secundario y el no especificado de los ganglios linf√°ticos"
  },
  {
    "code": "C78",
    "description": "Tumor maligno secundario de los √≥rganos respiratorios y digestivos"
  },
  {
    "code": "C79",
    "description": "Tumor maligno secundario de otros sitios"
  },
  {
    "code": "C80",
    "description": "Tumor maligno de sitios no especificados"
  },
  {
    "code": "C81",
    "description": "Enfermedad de Hodgkin"
  },
  {
    "code": "C82",
    "description": "Linfoma no Hodgkin folicular [nodular]"
  },
  {
    "code": "C83",
    "description": "Linfoma no Hodgkin difuso"
  },
  {
    "code": "C84",
    "description": "Linfoma de c√©lulas T, perif√©rico y cut√°neo"
  },
  {
    "code": "C85",
    "description": "Linfoma no Hodgkin de otro tipo y el no especificado"
  },
  {
    "code": "C88",
    "description": "Enfermedades inmunoproliferativas malignas"
  },
  {
    "code": "C90",
    "description": "Mieloma m√∫ltiple y tumores malignos de c√©lulas plasm√°ticas"
  },
  {
    "code": "C91",
    "description": "Leucemia linfoide"
  },
  {
    "code": "C92",
    "description": "Leucemia mieloide"
  },
  {
    "code": "C93",
    "description": "Leucemia monoc√≠tica"
  },
  {
    "code": "C94",
    "description": "Otras leucemias de tipo celular especificado"
  },
  {
    "code": "C95",
    "description": "Leucemia de c√©lulas de tipo no especificado"
  },
  {
    "code": "C96",
    "description": ""
  },
  {
    "code": "C97",
    "description": "Tumores malignos (primarios) de sitios m√∫ltiples independientes"
  },
  {
    "code": "D00",
    "description": "Carcinoma in situ de la cavidad bucal, del es√≥fago y del est√≥mago"
  },
  {
    "code": "D01",
    "description": "Carcinoma in situ de otros √≥rganos digestivos y de los no especificados"
  },
  {
    "code": "D02",
    "description": "Carcinoma in situ del sistema respiratorio y del o√≠do medio"
  },
  {
    "code": "D03",
    "description": "Melanoma in situ"
  },
  {
    "code": "D04",
    "description": "Carcinoma in situ de la piel"
  },
  {
    "code": "D05",
    "description": "Carcinoma in situ de la mama"
  },
  {
    "code": "D06",
    "description": "Carcinoma in situ del cuello del √∫tero"
  },
  {
    "code": "D07",
    "description": "Carcinoma in situ de otros √≥rganos genitales y de los no especificados"
  },
  {
    "code": "D09",
    "description": "Carcinoma in situ de otros sitios y de los no especificados"
  },
  {
    "code": "D10",
    "description": "Tumor benigno de la boca y de la faringe"
  },
  {
    "code": "D11",
    "description": "Tumor benigno de las gl√°ndulas salivales mayores"
  },
  {
    "code": "D12",
    "description": "Tumor benigno del colon, del recto, del conducto anal y del ano"
  },
  {
    "code": "D13",
    "description": "Tumor benigno de otras partes y de las mal definidas del sistema digestivo"
  },
  {
    "code": "D14",
    "description": "Tumor benigno del o√≠do medio y del sistema respiratorio"
  },
  {
    "code": "D15",
    "description": "Tumor benigno de otros √≥rganos intrator√°cicos y de los no especificados"
  },
  {
    "code": "D16",
    "description": "Tumor benigno del hueso y del cart√≠lago articular"
  },
  {
    "code": "D17",
    "description": "Tumores benignos lipomatosos"
  },
  {
    "code": "D18",
    "description": "Hemangioma y linfangioma de cualquier sitio"
  },
  {
    "code": "D19",
    "description": "Tumores benignos del tejido mesotelial"
  },
  {
    "code": "D20",
    "description": "Tumor benigno del tejido blando del peritoneo y del retroperitoneo"
  },
  {
    "code": "D21",
    "description": "Otros tumores benignos del tejido conjuntivo y de los tejidos blandos"
  },
  {
    "code": "D22",
    "description": "Nevo melanoc√≠tico"
  },
  {
    "code": "D23",
    "description": "Otros tumores benignos de la piel"
  },
  {
    "code": "D24",
    "description": "Tumor benigno de la mama"
  },
  {
    "code": "D25",
    "description": "Leiomioma del √∫tero"
  },
  {
    "code": "D26",
    "description": "Otros tumores benignos del √∫tero"
  },
  {
    "code": "D27",
    "description": "Tumor benigno del ovario"
  },
  {
    "code": "D28",
    "description": "Tumor benigno de otros √≥rganos genitales femeninos y de los no especificados"
  },
  {
    "code": "D29",
    "description": "Tumor benigno de los √≥rganos genitales masculinos"
  },
  {
    "code": "D30",
    "description": "Tumor benigno de los √≥rganos urinarios"
  },
  {
    "code": "D31",
    "description": "Tumor benigno del ojo y sus anexos"
  },
  {
    "code": "D32",
    "description": "Tumores benignos de las meninges"
  },
  {
    "code": "D33",
    "description": "Tumor benigno del enc√©falo y de otras partes del sistema nervioso central"
  },
  {
    "code": "D34",
    "description": "Tumor benigno de la gl√°ndula tiroides"
  },
  {
    "code": "D35",
    "description": "Tumor benigno de otras gl√°ndulas endocrinas y de las no especificadas"
  },
  {
    "code": "D36",
    "description": "Tumor benigno de otros sitios y de los no especificados"
  },
  {
    "code": "D37",
    "description": "Tumor de comportamiento incierto o desconocido de la cavidad bucal y de los √≥rganos digestivos"
  },
  {
    "code": "D38",
    "description": "Tumor de comportamiento incierto o desconocido del o√≠do medio y de los √≥rganos respiratorios e intrator√°cicos"
  },
  {
    "code": "D39",
    "description": "Tumor de comportamiento incierto o desconocido de los √≥rganos genitales femeninos"
  },
  {
    "code": "D40",
    "description": "Tumor de comportamiento incierto o desconocido de los √≥rganos genitales masculinos"
  },
  {
    "code": "D41",
    "description": "Tumor de comportamiento incierto o desconocido de los √≥rganos urinarios"
  },
  {
    "code": "D42",
    "description": "Tumor de comportamiento incierto o desconocido de las meninges"
  },
  {
    "code": "D43",
    "description": "Tumor de comportamiento incierto o desconocido del enc√©falo y del sistema nervioso central"
  },
  {
    "code": "D44",
    "description": "Tumor de comportamiento incierto o desconocido de las gl√°ndulas endocrinas"
  },
  {
    "code": "D45",
    "description": "Policitemia vera"
  },
  {
    "code": "D46",
    "description": "S√≠ndromes mielodispl√°sicos"
  },
  {
    "code": "D47",
    "description": ""
  },
  {
    "code": "D48",
    "description": "Tumor de comportamiento incierto o desconocido de otros sitios y de los no especificados"
  },
  {
    "code": "D50",
    "description": "Anemias por deficiencia de hierro"
  },
  {
    "code": "D51",
    "description": "Anemia por deficiencia de vitamina B12"
  },
  {
    "code": "D52",
    "description": "Anemia por deficiencia de folatos"
  },
  {
    "code": "D53",
    "description": "Otras anemias nutricionales"
  },
  {
    "code": "D55",
    "description": "Anemia debida a trastornos enzim√°ticos"
  },
  {
    "code": "D56",
    "description": "Talasemia"
  },
  {
    "code": "D57",
    "description": "Trastornos falciformes"
  },
  {
    "code": "D58",
    "description": "Otras anemias hemol√≠ticas hereditarias"
  },
  {
    "code": "D59",
    "description": "Anemia hemol√≠tica adquirida"
  },
  {
    "code": "D60",
    "description": "Aplasia adquirida, exclusiva de la serie roja [eritroblastopenia]"
  },
  {
    "code": "D61",
    "description": "Otras anemias apl√°sticas"
  },
  {
    "code": "D62",
    "description": "Anemia posthemorr√°gica aguda"
  },
  {
    "code": "D63",
    "description": "Anemia en enfermedades cr√≥nicas clasificadas en otra parte"
  },
  {
    "code": "D64",
    "description": "Otras anemias"
  },
  {
    "code": "D65",
    "description": "Coagulaci√≥n intravascular diseminada [s√≠ndrome de desfibrinaci√≥n]"
  },
  {
    "code": "D66",
    "description": "Deficiencia hereditaria del factor VIII"
  },
  {
    "code": "D67",
    "description": "Deficiencia hereditaria del factor IX"
  },
  {
    "code": "D68",
    "description": "Otros defectos de la coagulaci√≥n"
  },
  {
    "code": "D69",
    "description": "P√∫rpura y otras afecciones hemorr√°gicas"
  },
  {
    "code": "D70",
    "description": "Agranulocitosis"
  },
  {
    "code": "D71",
    "description": "Trastornos funcionales de los polimorfonucleares neutr√≥filos"
  },
  {
    "code": "D72",
    "description": "Otros trastornos de los leucocitos"
  },
  {
    "code": "D73",
    "description": "Enfermedades del bazo"
  },
  {
    "code": "D74",
    "description": "Metahemoglobinemia"
  },
  {
    "code": "D75",
    "description": "Otras enfermedades de la sangre y de los √≥rganos hematopoy√©ticos"
  },
  {
    "code": "D76",
    "description": "Ciertas enfermedades que afectan al tejido linforreticular y al sistema reticuloendotelial"
  },
  {
    "code": "D77",
    "description": "Otros trastornos de la sangre y de los √≥rganos hematopoy√©ticos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "D80",
    "description": "Inmunodeficiencia con predominio de defectos de los anticuerpos"
  },
  {
    "code": "D81",
    "description": "Inmunodeficiencias combinadas"
  },
  {
    "code": "D82",
    "description": "Inmunodeficiencia asociada con otros defectos mayores"
  },
  {
    "code": "D83",
    "description": "Inmunodeficiencia variable com√∫n"
  },
  {
    "code": "D84",
    "description": "Otras inmunodeficiencias"
  },
  {
    "code": "D86",
    "description": "Sarcoidosis"
  },
  {
    "code": "D89",
    "description": "Otros trastornos que afectan el mecanismo de la inmunidad, no clasificados en otra parte"
  },
  {
    "code": "E00",
    "description": "S√≠ndrome cong√©nito de deficiencia de yodo"
  },
  {
    "code": "E01",
    "description": "Trastornos tiroideos vinculados a deficiencia de yodo y afecciones relacionadas"
  },
  {
    "code": "E02",
    "description": "Hipotiroidismo subcl√≠nico por deficiencia de yodo"
  },
  {
    "code": "E03",
    "description": "Otros hipotiroidismos"
  },
  {
    "code": "E04",
    "description": "Otros bocios no t√≥xicos"
  },
  {
    "code": "E05",
    "description": "Tirotoxicosis [hipertiroidismo]"
  },
  {
    "code": "E06",
    "description": "Tiroiditis"
  },
  {
    "code": "E07",
    "description": "Otros trastornos tiroideos"
  },
  {
    "code": "E10",
    "description": "Diabetes mellitus insulinodependiente"
  },
  {
    "code": "E11",
    "description": "Diabetes mellitus no insulinodependiente"
  },
  {
    "code": "E12",
    "description": "Diabetes mellitus asociada con desnutrici√≥n"
  },
  {
    "code": "E13",
    "description": "Otras diabetes mellitus especificadas"
  },
  {
    "code": "E14",
    "description": "Diabetes mellitus, no especificada"
  },
  {
    "code": "E15",
    "description": "Coma hipoglic√©mico no diab√©tico"
  },
  {
    "code": "E16",
    "description": "Otros trastornos de la secreci√≥n interna del p√°ncreas"
  },
  {
    "code": "E20",
    "description": "Hipoparatiroidismo"
  },
  {
    "code": "E21",
    "description": "Hiperparatiroidismo y otros trastornos de la gl√°ndula paratiroides"
  },
  {
    "code": "E22",
    "description": "Hiperfunci√≥n de la gl√°ndula hip√≥fisis"
  },
  {
    "code": "E23",
    "description": "Hipofunci√≥n y otros trastornos de la gl√°ndula hip√≥fisis"
  },
  {
    "code": "E24",
    "description": "S√≠ndrome de Cushing"
  },
  {
    "code": "E25",
    "description": "Trastornos adrenogenitales"
  },
  {
    "code": "E26",
    "description": "Hiperaldosteronismo"
  },
  {
    "code": "E27",
    "description": "Otros trastornos de la gl√°ndula suprarrenal"
  },
  {
    "code": "E28",
    "description": "Disfunci√≥n ov√°rica"
  },
  {
    "code": "E29",
    "description": "Disfunci√≥n testicular"
  },
  {
    "code": "E30",
    "description": "Trastornos de la pubertad, no clasificados en otra parte"
  },
  {
    "code": "E31",
    "description": "Disfunci√≥n poliglandular"
  },
  {
    "code": "E32",
    "description": "Enfermedades del timo"
  },
  {
    "code": "E34",
    "description": "Otros trastornos endocrinos"
  },
  {
    "code": "E35",
    "description": "Trastornos endocrinos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "E40",
    "description": "Kwashiorkor"
  },
  {
    "code": "E41",
    "description": "Marasmo nutricional"
  },
  {
    "code": "E42",
    "description": "Kwashiorkor marasm√°tico"
  },
  {
    "code": "E43",
    "description": "Desnutrici√≥n proteicocal√≥rica severa, no especificada"
  },
  {
    "code": "E44",
    "description": "Desnutrici√≥n proteicocal√≥rica de grado moderado y leve"
  },
  {
    "code": "E45",
    "description": "Retardo del desarrollo debido a desnutrici√≥n proteicocal√≥rica"
  },
  {
    "code": "E46",
    "description": "Desnutrici√≥n proteicocal√≥rica, no especificada"
  },
  {
    "code": "E50",
    "description": "Deficiencia de vitamina A"
  },
  {
    "code": "E51",
    "description": "Deficiencia de tiamina"
  },
  {
    "code": "E52",
    "description": "Deficiencia de niacina [pelagra]"
  },
  {
    "code": "E53",
    "description": "Deficiencias de otras vitaminas del grupo B"
  },
  {
    "code": "E54",
    "description": "Deficiencia de √°cido asc√≥rbico"
  },
  {
    "code": "E55",
    "description": "Deficiencia de vitamina D"
  },
  {
    "code": "E56",
    "description": "Otras deficiencias de vitaminas"
  },
  {
    "code": "E58",
    "description": "Deficiencia diet√©tica de calcio"
  },
  {
    "code": "E59",
    "description": "Deficiencia diet√©tica de selenio"
  },
  {
    "code": "E60",
    "description": "Deficiencia diet√©tica de zinc"
  },
  {
    "code": "E61",
    "description": "Deficiencias de otros elementos nutricionales"
  },
  {
    "code": "E63",
    "description": "Otras deficiencias nutricionales"
  },
  {
    "code": "E64",
    "description": "Secuelas de la desnutrici√≥n y de otras deficiencias nutricionales"
  },
  {
    "code": "E65",
    "description": "Adiposidad localizada"
  },
  {
    "code": "E66",
    "description": "Obesidad"
  },
  {
    "code": "E67",
    "description": "Otros tipos de hiperalimentaci√≥n"
  },
  {
    "code": "E68",
    "description": "Secuelas de hiperalimentaci√≥n"
  },
  {
    "code": "E70",
    "description": "Trastornos del metabolismo de los amino√°cidos arom√°ticos"
  },
  {
    "code": "E71",
    "description": "Trastornos del metabolismo de los amino√°cidos de cadena ramificada y de los √°cidos grasos"
  },
  {
    "code": "E72",
    "description": "Otros trastornos del metabolismo de los amino√°cidos"
  },
  {
    "code": "E73",
    "description": "Intolerancia a la lactosa"
  },
  {
    "code": "E74",
    "description": "Otros trastornos del metabolismo de los carbohidratos"
  },
  {
    "code": "E75",
    "description": "Trastornos del metabolismo de los esfingol√≠pidos y otros trastornos por almacenamiento de l√≠pidos"
  },
  {
    "code": "E76",
    "description": "Trastornos del metabolismo de los glucosaminoglicanos"
  },
  {
    "code": "E77",
    "description": "Trastornos del metabolismo de las glucoprote√≠nas"
  },
  {
    "code": "E78",
    "description": "Trastornos del metabolismo de las lipoprote√≠nas y otras lipidemias"
  },
  {
    "code": "E79",
    "description": "Trastornos del metabolismo de las purinas y de las pirimidinas"
  },
  {
    "code": "E80",
    "description": "Trastornos del metabolismo de las porfirinas y de la bilirrubina"
  },
  {
    "code": "E83",
    "description": "Trastornos del metabolismo de los minerales"
  },
  {
    "code": "E84",
    "description": "Fibrosis qu√≠stica"
  },
  {
    "code": "E85",
    "description": "Amiloidosis"
  },
  {
    "code": "E86",
    "description": "Depleci√≥n del volumen"
  },
  {
    "code": "E87",
    "description": "Otros trastornos de los l√≠quidos, de los electr√≥litos y del equilibrio √°cido-b√°sico"
  },
  {
    "code": "E88",
    "description": "Otros trastornos metab√≥licos"
  },
  {
    "code": "E89",
    "description": "Trastornos endocrinos y metab√≥licos consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "E90",
    "description": "Trastornos nutricionales y metab√≥licos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "F01",
    "description": "Demencia vascular"
  },
  {
    "code": "F02",
    "description": "Demencia en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "F03",
    "description": "Demencia, no especificada"
  },
  {
    "code": "F04",
    "description": "S√≠ndrome amn√©sico org√°nico, no inducido por alcohol o por otras sustancias psicoactivas"
  },
  {
    "code": "F05",
    "description": "Delirio, no inducido por alcohol o por otras sustancias psicoactivas"
  },
  {
    "code": "F06",
    "description": "Otros trastornos mentales debidos a lesi√≥n y disfunci√≥n cerebral, y a enfermedad f√≠sica"
  },
  {
    "code": "F07",
    "description": "Trastornos de la personalidad y del comportamiento debidos a enfermedad, lesi√≥n o disfunci√≥n cerebral"
  },
  {
    "code": "F09",
    "description": "Trastorno mental org√°nico o sintom√°tico, no especificado"
  },
  {
    "code": "F10",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alcohol"
  },
  {
    "code": "F11",
    "description": "Trastornos mentales y del comportamiento debidos al uso de opi√°ceos"
  },
  {
    "code": "F12",
    "description": "Trastornos mentales y del comportamiento debidos al uso de cannabinoides"
  },
  {
    "code": "F13",
    "description": "Trastornos mentales y del comportamiento debidos al uso de sedantes o hipn√≥ticos"
  },
  {
    "code": "F14",
    "description": "Trastornos mentales y del comportamiento debidos al uso de coca√≠na"
  },
  {
    "code": "F15",
    "description": "Trastornos mentales y del comportamiento debidos al uso de otros estimulantes, incluida la cafe√≠na"
  },
  {
    "code": "F16",
    "description": "Trastornos mentales y del comportamiento debidos al uso de alucin√≥genos"
  },
  {
    "code": "F17",
    "description": "Trastornos mentales y del comportamiento debidos al uso de tabaco"
  },
  {
    "code": "F18",
    "description": "Trastornos mentales y del comportamiento debidos al uso de disolventes vol√°tiles"
  },
  {
    "code": "F19",
    "description": ""
  },
  {
    "code": "F20",
    "description": "Esquizofrenia"
  },
  {
    "code": "F21",
    "description": "Trastorno esquizot√≠pico"
  },
  {
    "code": "F22",
    "description": "Trastornos delirantes persistentes"
  },
  {
    "code": "F23",
    "description": "Trastornos psic√≥ticos agudos y transitorios"
  },
  {
    "code": "F24",
    "description": "Trastorno delirante inducido"
  },
  {
    "code": "F25",
    "description": "Trastornos esquizoafectivos"
  },
  {
    "code": "F28",
    "description": "Otros trastornos psic√≥ticos de origen no org√°nico"
  },
  {
    "code": "F29",
    "description": "Psicosis de origen no org√°nico, no especificada"
  },
  {
    "code": "F30",
    "description": "Episodio man√≠aco"
  },
  {
    "code": "F31",
    "description": "Trastorno afectivo bipolar"
  },
  {
    "code": "F32",
    "description": "Episodio depresivo"
  },
  {
    "code": "F33",
    "description": "Trastorno depresivo recurrente"
  },
  {
    "code": "F34",
    "description": "Trastornos del humor [afectivos] persistentes"
  },
  {
    "code": "F38",
    "description": "Otros trastornos del humor [afectivos]"
  },
  {
    "code": "F39",
    "description": "Trastorno del humor [afectivo], no especificado"
  },
  {
    "code": "F40",
    "description": "Trastornos f√≥bicos de ansiedad"
  },
  {
    "code": "F41",
    "description": "Otros trastornos de ansiedad"
  },
  {
    "code": "F42",
    "description": "Trastorno obsesivo-compulsivo"
  },
  {
    "code": "F43",
    "description": "Reacci√≥n al estr√©s grave y trastornos de adaptaci√≥n"
  },
  {
    "code": "F44",
    "description": "Trastornos disociativos [de conversi√≥n]"
  },
  {
    "code": "F45",
    "description": "Trastornos somatomorfos"
  },
  {
    "code": "F48",
    "description": "Otros trastornos neur√≥ticos"
  },
  {
    "code": "F50",
    "description": "Trastornos de la ingesti√≥n de alimentos"
  },
  {
    "code": "F51",
    "description": "Trastornos no org√°nicos del sue√±o"
  },
  {
    "code": "F52",
    "description": "Disfunci√≥n sexual no ocasionada por trastorno ni enfermedad org√°nicos"
  },
  {
    "code": "F53",
    "description": "Trastornos mentales y del comportamiento asociados con el puerperio, no clasificados en otra parte"
  },
  {
    "code": "F54",
    "description": "Factores psicol√≥gicos y del comportamiento asociados con trastornos o enfermedades clasificados en otra parte"
  },
  {
    "code": "F55",
    "description": "Abuso de sustancias que no producen dependencia"
  },
  {
    "code": "F59",
    "description": "S√≠ndromes del comportamiento asociados con alteraciones fisiol√≥gicas y factores f√≠sicos, no especificados"
  },
  {
    "code": "F60",
    "description": "Trastornos espec√≠ficos de la personalidad"
  },
  {
    "code": "F61",
    "description": "Trastornos mixtos y otros trastornos de la personalidad"
  },
  {
    "code": "F62",
    "description": "Cambios perdurables de la personalidad, no atribuibles a lesi√≥n o a  enfermedad cerebral"
  },
  {
    "code": "F63",
    "description": "Trastornos de los h√°bitos y de los impulsos"
  },
  {
    "code": "F64",
    "description": "Trastornos de la identidad de g√©nero"
  },
  {
    "code": "F65",
    "description": "Trastornos de la preferencia sexual"
  },
  {
    "code": "F66",
    "description": "Trastornos psicol√≥gicos y del comportamiento asociados con el desarrollo y con la orientaci√≥n sexuales"
  },
  {
    "code": "F68",
    "description": "Otros trastornos de la personalidad y del comportamiento en adultos"
  },
  {
    "code": "F69",
    "description": "Trastorno de la personalidad y del comportamiento en adultos, no especificado"
  },
  {
    "code": "F70",
    "description": "Retraso mental leve"
  },
  {
    "code": "F71",
    "description": "Retraso mental moderado"
  },
  {
    "code": "F72",
    "description": "Retraso mental grave"
  },
  {
    "code": "F73",
    "description": "Retraso mental profundo"
  },
  {
    "code": "F78",
    "description": "Otros tipos de retraso mental"
  },
  {
    "code": "F79",
    "description": "Retraso mental, no especificado"
  },
  {
    "code": "F80",
    "description": "Trastornos espec√≠ficos del desarrollo del habla y del lenguaje"
  },
  {
    "code": "F81",
    "description": "Trastornos espec√≠ficos del desarrollo de las habilidades escolares"
  },
  {
    "code": "F82",
    "description": "Trastorno espec√≠fico del desarrollo de la funci√≥n motriz"
  },
  {
    "code": "F83",
    "description": "Trastornos espec√≠ficos mixtos del desarrollo"
  },
  {
    "code": "F84",
    "description": "Trastornos generalizados del desarrollo"
  },
  {
    "code": "F88",
    "description": "Otros trastornos del desarrollo psicol√≥gico"
  },
  {
    "code": "F89",
    "description": "Trastorno del desarrollo psicol√≥gico, no especificado"
  },
  {
    "code": "F90",
    "description": "Trastornos hipercin√©ticos"
  },
  {
    "code": "F91",
    "description": "Trastornos de la conducta"
  },
  {
    "code": "F92",
    "description": "Trastornos mixtos de la conducta y de las emociones"
  },
  {
    "code": "F93",
    "description": "Trastornos emocionales de comienzo espec√≠fico en la ni√±ez"
  },
  {
    "code": "F94",
    "description": "Trastornos del comportamiento social de comienzo espec√≠fico en la ni√±ez y en la adolescencia"
  },
  {
    "code": "F95",
    "description": "Trastornos por tics"
  },
  {
    "code": "F98",
    "description": "Otros trastornos emocionales y del comportamiento que aparecen habitualmente en la ni√±ez y en la adolescencia"
  },
  {
    "code": "F99",
    "description": "Trastorno mental, no especificado"
  },
  {
    "code": "G00",
    "description": "Meningitis bacteriana, no clasificada en otra parte"
  },
  {
    "code": "G01",
    "description": "Meningitis en enfermedades bacterianas clasificadas en otra parte"
  },
  {
    "code": "G02",
    "description": "Meningitis en otras enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "G03",
    "description": "Meningitis debida a otras causas y a las no especificadas"
  },
  {
    "code": "G04",
    "description": "Encefalitis, mielitis y encefalomielitis"
  },
  {
    "code": "G05",
    "description": "Encefalitis, mielitis y encefalomielitis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G06",
    "description": "Absceso y granuloma intracraneal e intrarraqu√≠deo"
  },
  {
    "code": "G07",
    "description": "Absceso y granuloma intracraneal e intrarraqu√≠deo en enfermedades  clasificadas en otra parte"
  },
  {
    "code": "G08",
    "description": "Flebitis y tromboflebitis intracraneal e intrarraqu√≠dea"
  },
  {
    "code": "G09",
    "description": "Secuelas de enfermedades inflamatorias del sistema nervioso central"
  },
  {
    "code": "G10",
    "description": "Enfermedad de Huntington"
  },
  {
    "code": "G11",
    "description": "Ataxia hereditaria"
  },
  {
    "code": "G12",
    "description": "Atrofia muscular espinal y s√≠ndromes afines"
  },
  {
    "code": "G13",
    "description": ""
  },
  {
    "code": "G20",
    "description": "Enfermedad de Parkinson"
  },
  {
    "code": "G21",
    "description": "Parkinsonismo secundario"
  },
  {
    "code": "G22",
    "description": "Parkinsonismo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G23",
    "description": "Otras enfermedades degenerativas de los n√∫cleos de la base"
  },
  {
    "code": "G24",
    "description": "Diston√≠a"
  },
  {
    "code": "G25",
    "description": "Otros trastornos extrapiramidales y del movimiento"
  },
  {
    "code": "G26",
    "description": "Trastornos extrapiramidales y del movimiento en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G30",
    "description": "Enfermedad de Alzheimer"
  },
  {
    "code": "G31",
    "description": "Otras enfermedades degenerativas del sistema nervioso, no  clasificadas en otra parte"
  },
  {
    "code": "G32",
    "description": "Otros trastornos degenerativos del sistema nervioso en enfermedades  clasificadas en otra parte"
  },
  {
    "code": "G35",
    "description": "Esclerosis m√∫ltiple"
  },
  {
    "code": "G36",
    "description": "Otras desmielinizaciones diseminadas agudas"
  },
  {
    "code": "G37",
    "description": "Otras enfermedades desmielinizantes del sistema nervioso central"
  },
  {
    "code": "G40",
    "description": "Epilepsia"
  },
  {
    "code": "G41",
    "description": "Estado de mal epil√©ptico"
  },
  {
    "code": "G43",
    "description": "Migra√±a"
  },
  {
    "code": "G44",
    "description": "Otros s√≠ndromes de cefalea"
  },
  {
    "code": "G45",
    "description": "Ataques de isquemia cerebral transitoria y s√≠ndromes afines"
  },
  {
    "code": "G46",
    "description": "S√≠ndromes vasculares encef√°licos en enfermedades cerebrovasculares (I60- I67+)"
  },
  {
    "code": "G47",
    "description": "Trastornos del sue√±o"
  },
  {
    "code": "G50",
    "description": "Trastornos del nervio trig√©mino"
  },
  {
    "code": "G51",
    "description": "Trastornos del nervio facial"
  },
  {
    "code": "G52",
    "description": "Trastornos de otros nervios craneales"
  },
  {
    "code": "G53",
    "description": "Trastornos de los nervios craneales en enfermedades clasificadas en otra parte"
  },
  {
    "code": "B99",
    "description": "+)"
  },
  {
    "code": "G54",
    "description": "Trastornos de las ra√≠ces y de los plexos nerviosos"
  },
  {
    "code": "G55",
    "description": "Compresiones de las ra√≠ces y de los plexos nerviosos en enfermedades  clasificadas en otra parte"
  },
  {
    "code": "G56",
    "description": "Mononeuropat√≠as del miembro superior"
  },
  {
    "code": "G57",
    "description": "Mononeuropat√≠as del miembro inferior"
  },
  {
    "code": "G58",
    "description": "Otras mononeuropat√≠as"
  },
  {
    "code": "G59",
    "description": "Mononeuropat√≠a en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G60",
    "description": "Neuropat√≠a hereditaria e idiop√°tica"
  },
  {
    "code": "G61",
    "description": "Polineuropat√≠a inflamatoria"
  },
  {
    "code": "G62",
    "description": "Otras polineuropat√≠as"
  },
  {
    "code": "G63",
    "description": "Polineuropat√≠as en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G64",
    "description": "Otros trastornos del sistema nervioso perif√©rico"
  },
  {
    "code": "G70",
    "description": "Miastenia gravis y otros trastornos neuromusculares"
  },
  {
    "code": "G71",
    "description": "Trastornos musculares primarios"
  },
  {
    "code": "G72",
    "description": "Otras miopat√≠as"
  },
  {
    "code": "G73",
    "description": "Trastornos del m√∫sculo y de la uni√≥n neuromuscular en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G80",
    "description": "Par√°lisis cerebral infantil"
  },
  {
    "code": "G81",
    "description": "Hemiplej√≠a"
  },
  {
    "code": "G82",
    "description": "Paraplej√≠a y cuadriplej√≠a"
  },
  {
    "code": "G83",
    "description": "Otros s√≠ndromes paral√≠ticos"
  },
  {
    "code": "G90",
    "description": "Trastornos del sistema nervioso aut√≥nomo"
  },
  {
    "code": "G91",
    "description": "Hidroc√©falo"
  },
  {
    "code": "G92",
    "description": "Encefalopat√≠a t√≥xica"
  },
  {
    "code": "G93",
    "description": "Otros trastornos del enc√©falo"
  },
  {
    "code": "G94",
    "description": "Otros trastornos del enc√©falo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "G95",
    "description": "Otras enfermedades de la m√©dula espinal"
  },
  {
    "code": "G96",
    "description": "Otros trastornos del sistema nervioso central"
  },
  {
    "code": "G97",
    "description": "Trastornos del sistema nervioso consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "G98",
    "description": "Otros trastornos del sistema nervioso, no clasificados en otra parte"
  },
  {
    "code": "G99",
    "description": "Otros trastornos del sistema nervioso en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H00",
    "description": "Orzuelo y calacio"
  },
  {
    "code": "H01",
    "description": "Otras inflamaciones del p√°rpado"
  },
  {
    "code": "H02",
    "description": "Otros trastornos de los p√°rpados"
  },
  {
    "code": "H03",
    "description": "Trastornos del p√°rpado en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H04",
    "description": "Trastornos del aparato lagrimal"
  },
  {
    "code": "H05",
    "description": "Trastornos de la √≥rbita"
  },
  {
    "code": "H06",
    "description": "Trastornos del aparato lagrimal y de la √≥rbita en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H10",
    "description": "Conjuntivitis"
  },
  {
    "code": "H11",
    "description": "Otros trastornos de la conjuntiva"
  },
  {
    "code": "H13",
    "description": "Trastornos de la conjuntiva en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H15",
    "description": "Trastornos de la escler√≥tica"
  },
  {
    "code": "H16",
    "description": "Queratitis"
  },
  {
    "code": "H17",
    "description": "Opacidades y cicatrices corneales"
  },
  {
    "code": "H18",
    "description": "Otros trastornos de la c√≥rnea"
  },
  {
    "code": "H19",
    "description": "Trastornos de la escler√≥tica y de la c√≥rnea en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H20",
    "description": "Iridociclitis"
  },
  {
    "code": "H21",
    "description": "Otros trastornos del iris y del cuerpo ciliar"
  },
  {
    "code": "H22",
    "description": "Trastornos del iris y del cuerpo ciliar en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H25",
    "description": "Catarata senil"
  },
  {
    "code": "H26",
    "description": "Otras cataratas"
  },
  {
    "code": "H27",
    "description": "Otros trastornos del cristalino"
  },
  {
    "code": "H28",
    "description": "Catarata y otros trastornos del cristalino en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H30",
    "description": "Inflamaci√≥n coriorretiniana"
  },
  {
    "code": "H31",
    "description": "Otros trastornos de la coroides"
  },
  {
    "code": "H32",
    "description": "Trastornos coriorretinianos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H33",
    "description": "Desprendimiento y desgarro de la retina"
  },
  {
    "code": "H34",
    "description": "Oclusi√≥n vascular de la retina"
  },
  {
    "code": "H35",
    "description": "Otros trastornos de la retina"
  },
  {
    "code": "H36",
    "description": "Trastornos de la retina en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H40",
    "description": "Glaucoma"
  },
  {
    "code": "H42",
    "description": "Glaucoma en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H43",
    "description": "Trastornos del cuerpo v√≠treo"
  },
  {
    "code": "H44",
    "description": "Trastornos del globo ocular"
  },
  {
    "code": "H45",
    "description": "Trastornos del cuerpo v√≠treo y del globo ocular en enfermedades clasificadas  en otra parte"
  },
  {
    "code": "H46",
    "description": "Neuritis √≥ptica"
  },
  {
    "code": "H47",
    "description": "Otros trastornos del nervio √≥ptico [II par] y de las v√≠as opticas"
  },
  {
    "code": "H48",
    "description": "Trastornos del nervio √≥ptico [II par] y de las v√≠as √≥pticas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H49",
    "description": "Estrabismo paral√≠tico"
  },
  {
    "code": "H50",
    "description": "Otros estrabismos"
  },
  {
    "code": "H51",
    "description": "Otros trastornos de los movimientos binoculares"
  },
  {
    "code": "H52",
    "description": "Trastornos de la acomodaci√≥n y de la refracci√≥n"
  },
  {
    "code": "H53",
    "description": "Alteraciones de la visi√≥n"
  },
  {
    "code": "H54",
    "description": "Ceguera y disminuci√≥n de la agudeza visual"
  },
  {
    "code": "H55",
    "description": "Nistagmo y otros movimientos oculares irregulares"
  },
  {
    "code": "H57",
    "description": "Otros trastornos del ojo y sus anexos"
  },
  {
    "code": "H58",
    "description": "Otros trastornos del ojo y sus anexos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H59",
    "description": "Trastornos del ojo y sus anexos consecutivos a procedimientos, no  clasificados en otra parte"
  },
  {
    "code": "H60",
    "description": "Otitis externa"
  },
  {
    "code": "H61",
    "description": "Otros trastornos del o√≠do externo"
  },
  {
    "code": "H62",
    "description": "Trastornos del o√≠do externo en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H65",
    "description": "Otitis media no supurativa"
  },
  {
    "code": "H66",
    "description": "Otitis media supurativa y la no especificada"
  },
  {
    "code": "H67",
    "description": "Otitis media en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H68",
    "description": "Inflamaci√≥n y obstrucci√≥n de la trompa de Eustaquio"
  },
  {
    "code": "H69",
    "description": "Otros trastornos de la trompa de Eustaquio"
  },
  {
    "code": "H70",
    "description": "Mastoiditis y afecciones relacionadas"
  },
  {
    "code": "H71",
    "description": "Colesteatoma del o√≠do medio"
  },
  {
    "code": "H72",
    "description": "Perforaci√≥n de la membrana timp√°nica"
  },
  {
    "code": "H73",
    "description": "Otros trastornos de la membrana timp√°nica"
  },
  {
    "code": "H74",
    "description": "Otros trastornos del o√≠do medio y de la ap√≥fisis mastoides"
  },
  {
    "code": "H75",
    "description": "Otros trastornos del o√≠do medio y de la ap√≥fisis mastoides en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H80",
    "description": "Otosclerosis"
  },
  {
    "code": "H81",
    "description": "Trastornos de la funci√≥n vestibular"
  },
  {
    "code": "H82",
    "description": "S√≠ndromes vertiginosos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H83",
    "description": "Otros trastornos del o√≠do interno"
  },
  {
    "code": "H90",
    "description": "Hipoacusia conductiva y neurosensorial"
  },
  {
    "code": "H91",
    "description": "Otras hipoacusias"
  },
  {
    "code": "H92",
    "description": "Otalgia y secreci√≥n del o√≠do"
  },
  {
    "code": "H93",
    "description": "Otros trastornos del o√≠do, no clasificados en otra parte"
  },
  {
    "code": "H94",
    "description": "Otros trastornos del o√≠do en enfermedades clasificadas en otra parte"
  },
  {
    "code": "H95",
    "description": "Trastornos del o√≠do y de la ap√≥fisis mastoides consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "I00",
    "description": "Fiebre reum√°tica sin menci√≥n de complicaci√≥n card√≠aca"
  },
  {
    "code": "I01",
    "description": "Fiebre reum√°tica con complicaci√≥n card√≠aca"
  },
  {
    "code": "I02",
    "description": "Corea reum√°tica"
  },
  {
    "code": "I05",
    "description": "Enfermedades reum√°ticas de la v√°lvula mitral"
  },
  {
    "code": "I06",
    "description": "Enfermedades reum√°ticas de la v√°lvula a√≥rtica"
  },
  {
    "code": "I07",
    "description": "Enfermedades reum√°ticas de la v√°lvula tric√∫spide"
  },
  {
    "code": "I08",
    "description": "Enfermedades valvulares m√∫ltiples"
  },
  {
    "code": "I09",
    "description": "Otras enfermedades reum√°ticas del coraz√≥n"
  },
  {
    "code": "I10",
    "description": "Hipertensi√≥n esencial (primaria)"
  },
  {
    "code": "I11",
    "description": "Enfermedad card√≠aca hipertensiva"
  },
  {
    "code": "I12",
    "description": "Enfermedad renal hipertensiva"
  },
  {
    "code": "I13",
    "description": "Enfermedad cardiorrenal hipertensiva"
  },
  {
    "code": "I15",
    "description": "Hipertensi√≥n secundaria"
  },
  {
    "code": "I20",
    "description": "Angina de pecho"
  },
  {
    "code": "I21",
    "description": "Infarto agudo del miocardio"
  },
  {
    "code": "I22",
    "description": "Infarto subsecuente del miocardio"
  },
  {
    "code": "I23",
    "description": "Ciertas complicaciones presentes posteriores al infarto agudo del miocardio"
  },
  {
    "code": "I24",
    "description": "Otras enfermedades isqu√©micas agudas del coraz√≥n"
  },
  {
    "code": "I25",
    "description": "Enfermedad isqu√©mica cr√≥nica del coraz√≥n"
  },
  {
    "code": "I26",
    "description": "Embolia pulmonar"
  },
  {
    "code": "I27",
    "description": "Otras enfermedades cardiopulmonares"
  },
  {
    "code": "I28",
    "description": "Otras enfermedades de los vasos pulmonares"
  },
  {
    "code": "I30",
    "description": "Pericarditis aguda"
  },
  {
    "code": "I31",
    "description": "Otras enfermedades del pericardio"
  },
  {
    "code": "I32",
    "description": "Pericarditis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I33",
    "description": "Endocarditis aguda y subaguda"
  },
  {
    "code": "I34",
    "description": "Trastornos no reum√°ticos de la v√°lvula mitral"
  },
  {
    "code": "I35",
    "description": "Trastornos no reum√°ticos de la v√°lvula a√≥rtica"
  },
  {
    "code": "I36",
    "description": "Trastornos no reum√°ticos de la v√°lvula tric√∫spide"
  },
  {
    "code": "I37",
    "description": "Trastornos de la v√°lvula pulmonar"
  },
  {
    "code": "I38",
    "description": "Endocarditis, v√°lvula no especificada"
  },
  {
    "code": "I39",
    "description": "Endocarditis y trastornos valvulares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I40",
    "description": "Miocarditis aguda"
  },
  {
    "code": "I41",
    "description": "Miocarditis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I42",
    "description": "Cardiomiopat√≠a"
  },
  {
    "code": "I43",
    "description": "Cardiomiopat√≠a en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I44",
    "description": "Bloqueo auriculoventricular y de rama izquierda del haz"
  },
  {
    "code": "I45",
    "description": "Otros trastornos de la conducci√≥n"
  },
  {
    "code": "I46",
    "description": "Paro card√≠aco"
  },
  {
    "code": "I47",
    "description": "Taquicardia parox√≠stica"
  },
  {
    "code": "I48",
    "description": "Fibrilaci√≥n y aleteo auricular"
  },
  {
    "code": "I49",
    "description": "Otras arritmias card√≠acas"
  },
  {
    "code": "I50",
    "description": "Insuficiencia card√≠aca"
  },
  {
    "code": "I51",
    "description": "Complicaciones y descripciones mal definidas de enfermedad card√≠aca"
  },
  {
    "code": "I52",
    "description": "Otros trastornos card√≠acos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I60",
    "description": "Hemorragia subaracnoidea"
  },
  {
    "code": "I61",
    "description": "Hemorragia intraencef√°lica"
  },
  {
    "code": "I62",
    "description": "Otras hemorragias intracraneales no traum√°ticas"
  },
  {
    "code": "I63",
    "description": "Infarto cerebral"
  },
  {
    "code": "I64",
    "description": "Accidente vascular encef√°lico agudo, no especificado como hemorr√°gico o  isqu√©mico"
  },
  {
    "code": "I65",
    "description": "Oclusi√≥n y estenosis de las arterias precerebrales sin ocasionar infarto cerebral"
  },
  {
    "code": "I66",
    "description": "Oclusi√≥n y estenosis de las arterias cerebrales sin ocasionar infarto cerebral"
  },
  {
    "code": "I67",
    "description": "Otras enfermedades cerebrovasculares"
  },
  {
    "code": "I68",
    "description": "Trastornos cerebrovasculares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I69",
    "description": "Secuelas de enfermedad cerebrovascular"
  },
  {
    "code": "I70",
    "description": "Aterosclerosis"
  },
  {
    "code": "I71",
    "description": "Aneurisma y disecci√≥n a√≥rticos"
  },
  {
    "code": "I72",
    "description": "Otros aneurismas"
  },
  {
    "code": "I73",
    "description": "Otras enfermedades vasculares perif√©ricas"
  },
  {
    "code": "I74",
    "description": "Embolia y trombosis arteriales"
  },
  {
    "code": "I77",
    "description": "Otros trastornos arteriales o arteriolares"
  },
  {
    "code": "I78",
    "description": "Enfermedades de los vasos capilares"
  },
  {
    "code": "I79",
    "description": "Trastornos de las arterias, de las arteriolas y de los vasos capilares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I80",
    "description": "Flebitis y tromboflebitis"
  },
  {
    "code": "I81",
    "description": "Trombosis de la vena porta"
  },
  {
    "code": "I82",
    "description": "Otras embolias y trombosis venosas"
  },
  {
    "code": "I83",
    "description": "Venas varicosas de los miembros inferiores"
  },
  {
    "code": "I84",
    "description": "Hemorroides"
  },
  {
    "code": "I85",
    "description": "V√°rices esof√°gicas"
  },
  {
    "code": "I86",
    "description": "V√°rices de otros sitios"
  },
  {
    "code": "I87",
    "description": "Otros trastornos de las venas"
  },
  {
    "code": "I88",
    "description": "Linfadenitis inespec√≠fica"
  },
  {
    "code": "I89",
    "description": "Otros trastornos no infecciosos de los vasos y ganglios linf√°ticos"
  },
  {
    "code": "I95",
    "description": "Hipotensi√≥n"
  },
  {
    "code": "I97",
    "description": "Trastornos del sistema circulatorio consecutivos a procedimientos, no  clasificados en otra parte"
  },
  {
    "code": "I98",
    "description": "Otros trastornos del sistema circulatorio en enfermedades clasificadas en otra parte"
  },
  {
    "code": "I99",
    "description": "Otros trastornos y los no especificados del sistema circulatorio"
  },
  {
    "code": "J00",
    "description": "Rinofaringitis aguda [resfriado com√∫n]"
  },
  {
    "code": "J01",
    "description": "Sinusitis aguda"
  },
  {
    "code": "J02",
    "description": "Faringitis aguda"
  },
  {
    "code": "J03",
    "description": "Amigdalitis aguda"
  },
  {
    "code": "J04",
    "description": "Laringitis y traque√≠tis agudas"
  },
  {
    "code": "J05",
    "description": "Laringitis obstructiva aguda [crup] y epiglotitis"
  },
  {
    "code": "J06",
    "description": "Infecciones agudas de las v√≠as respiratorias superiores, de sitios m√∫ltiples o no especificados"
  },
  {
    "code": "J10",
    "description": "Influenza debida a virus de la influenza identificado"
  },
  {
    "code": "J11",
    "description": "Influenza debida a virus no identificado"
  },
  {
    "code": "J12",
    "description": "Neumon√≠a viral, no clasificada en otra parte"
  },
  {
    "code": "J13",
    "description": "Neumon√≠a debida a Streptococcus pneumoniae"
  },
  {
    "code": "J14",
    "description": "Neumon√≠a debida a Haemophilus influenzae"
  },
  {
    "code": "J15",
    "description": "Neumon√≠a bacteriana, no clasificada en otra parte"
  },
  {
    "code": "J16",
    "description": "Neumon√≠a debida a otros microorganismos infecciosos, no clasificados en otra parte"
  },
  {
    "code": "J17",
    "description": "Neumon√≠a en enfermedades clasificadas en otra parte"
  },
  {
    "code": "J18",
    "description": "Neumon√≠a, organismo no especificado"
  },
  {
    "code": "J20",
    "description": "Bronquitis aguda"
  },
  {
    "code": "J21",
    "description": "Bronquiolitis aguda"
  },
  {
    "code": "J22",
    "description": "Infecci√≥n aguda no especificada de las v√≠as respiratorias inferiores"
  },
  {
    "code": "J30",
    "description": "Rinitis al√©rgica y vasomotora"
  },
  {
    "code": "J31",
    "description": "Rinitis, rinofaringitis y faringitis cr√≥nicas"
  },
  {
    "code": "J32",
    "description": "Sinusitis cr√≥nica"
  },
  {
    "code": "J33",
    "description": "P√≥lipo nasal"
  },
  {
    "code": "J34",
    "description": "Otros trastornos de la nariz y de los senos paranasales"
  },
  {
    "code": "J35",
    "description": "Enfermedades cr√≥nicas de las am√≠gdalas y de las adenoides"
  },
  {
    "code": "J36",
    "description": "Absceso periamigdalino"
  },
  {
    "code": "J37",
    "description": "Laringitis y laringotraque√≠tis cr√≥nicas"
  },
  {
    "code": "J38",
    "description": "Enfermedades de las cuerdas vocales y de la laringe, no clasificadas en otra parte"
  },
  {
    "code": "J39",
    "description": "Otras enfermedades de las v√≠as respiratorias superiores"
  },
  {
    "code": "J40",
    "description": "Bronquitis, no especificada como aguda o cr√≥nica"
  },
  {
    "code": "J41",
    "description": "Bronquitis cr√≥nica simple y mucopurulenta"
  },
  {
    "code": "J42",
    "description": "Bronquitis cr√≥nica no especificada"
  },
  {
    "code": "J43",
    "description": "Enfisema"
  },
  {
    "code": "J44",
    "description": "Otras enfermedades pulmonares obstructivas cr√≥nicas"
  },
  {
    "code": "J45",
    "description": "Asma"
  },
  {
    "code": "J46",
    "description": "Estado asm√°tico"
  },
  {
    "code": "J47",
    "description": "Bronquiectasia"
  },
  {
    "code": "J60",
    "description": "Neumoconiosis de los mineros del carb√≥n"
  },
  {
    "code": "J61",
    "description": "Neumoconiosis debida al asbesto y a otras fibras minerales"
  },
  {
    "code": "J62",
    "description": "Neumoconiosis debida a polvo de s√≠lice"
  },
  {
    "code": "J63",
    "description": "Neumoconiosis debida a otros polvos inorg√°nicos"
  },
  {
    "code": "J64",
    "description": "Neumoconiosis, no especificada"
  },
  {
    "code": "J65",
    "description": "Neumoconiosis asociada con tuberculosis"
  },
  {
    "code": "J66",
    "description": "Enfermedades de las v√≠as a√©reas debidas a polvos org√°nicos espec√≠ficos"
  },
  {
    "code": "J67",
    "description": "Neumonitis debida a hipersensibilidad al polvo org√°nico"
  },
  {
    "code": "J68",
    "description": "Afecciones respiratorias debidas a inhalaci√≥n de gases, humos, vapores y sustancias qu√≠micas"
  },
  {
    "code": "J69",
    "description": "Neumonitis debida a s√≥lidos y l√≠quidos"
  },
  {
    "code": "J70",
    "description": "Afecciones respiratorias debidas a otros agentes externos"
  },
  {
    "code": "J80",
    "description": "S√≠ndrome de dificultad respiratoria del adulto"
  },
  {
    "code": "J81",
    "description": "Edema pulmonar"
  },
  {
    "code": "J82",
    "description": "Eosinofilia pulmonar, no clasificada en otra parte"
  },
  {
    "code": "J84",
    "description": "Otras enfermedades pulmonares intersticiales"
  },
  {
    "code": "J85",
    "description": "Absceso del pulm√≥n y del mediastino"
  },
  {
    "code": "J86",
    "description": "Piot√≥rax"
  },
  {
    "code": "J90",
    "description": "Derrame pleural no clasificado en otra parte"
  },
  {
    "code": "J91",
    "description": "Derrame pleural en afecciones clasificadas en otra parte"
  },
  {
    "code": "J92",
    "description": "Paquipleuritis"
  },
  {
    "code": "J93",
    "description": "Neumot√≥rax"
  },
  {
    "code": "J94",
    "description": "Otras afecciones de la pleura"
  },
  {
    "code": "J95",
    "description": "Trastornos del sistema respiratorio consecutivos a procedimientos, no clasificados en otra parte"
  },
  {
    "code": "J96",
    "description": "Insuficiencia respiratoria, no clasificada en otra parte"
  },
  {
    "code": "J98",
    "description": "Otros trastornos respiratorios"
  },
  {
    "code": "J99",
    "description": "Trastornos respiratorios en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K00",
    "description": "Trastornos del desarrollo y de la erupci√≥n de los dientes"
  },
  {
    "code": "K01",
    "description": "Dientes incluidos e impactados"
  },
  {
    "code": "K02",
    "description": "Caries dental"
  },
  {
    "code": "K03",
    "description": "Otras enfermedades de los tejidos duros de los dientes"
  },
  {
    "code": "K04",
    "description": "Enfermedades de la pulpa y de los tejidos periapicales"
  },
  {
    "code": "K05",
    "description": "Gingivitis y enfermedades periodontales"
  },
  {
    "code": "K06",
    "description": "Otros trastornos de la enc√≠a y de la zona ed√©ntula"
  },
  {
    "code": "K07",
    "description": "Anomal√≠as dentofaciales [incluso la maloclusi√≥n]"
  },
  {
    "code": "K08",
    "description": "Otros trastornos de los dientes y de sus estructuras de sost√©n"
  },
  {
    "code": "K09",
    "description": "Quistes de la regi√≥n bucal, no clasificados en otra parte"
  },
  {
    "code": "K10",
    "description": "Otras enfermedades de los maxilares"
  },
  {
    "code": "K11",
    "description": "Enfermedades de las gl√°ndulas salivales"
  },
  {
    "code": "K12",
    "description": "Estomatitis y lesiones afines"
  },
  {
    "code": "K13",
    "description": "Otras enfermedades de los labios y de la mucosa bucal"
  },
  {
    "code": "K14",
    "description": "Enfermedades de la lengua"
  },
  {
    "code": "K20",
    "description": "Esofagitis"
  },
  {
    "code": "K21",
    "description": "Enfermedad del reflujo gastroesof√°gico"
  },
  {
    "code": "K22",
    "description": "Otras enfermedades del es√≥fago"
  },
  {
    "code": "K23",
    "description": "Trastornos del es√≥fago en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K25",
    "description": "Ulcera g√°strica"
  },
  {
    "code": "K26",
    "description": "Ulcera duodenal"
  },
  {
    "code": "K27",
    "description": "Ulcera p√©ptica, de sitio no especificado"
  },
  {
    "code": "K28",
    "description": "Ulcera gastroyeyunal"
  },
  {
    "code": "K29",
    "description": "Gastritis y duodenitis"
  },
  {
    "code": "K30",
    "description": "Dispepsia"
  },
  {
    "code": "K31",
    "description": "Otras enfermedades del est√≥mago y del duodeno"
  },
  {
    "code": "K35",
    "description": "Apendicitis aguda"
  },
  {
    "code": "K36",
    "description": "Otros tipos de apendicitis"
  },
  {
    "code": "K37",
    "description": "Apendicitis, no especificada"
  },
  {
    "code": "K38",
    "description": "Otras enfermedades del ap√©ndice"
  },
  {
    "code": "K40",
    "description": "Hernia inguinal"
  },
  {
    "code": "K41",
    "description": "Hernia femoral"
  },
  {
    "code": "K42",
    "description": "Hernia umbilical"
  },
  {
    "code": "K43",
    "description": "Hernia ventral"
  },
  {
    "code": "K44",
    "description": "Hernia diafragm√°tica"
  },
  {
    "code": "K45",
    "description": "Otras hernias de la cavidad abdominal"
  },
  {
    "code": "K46",
    "description": "Hernia no especificada de la cavidad abdominal"
  },
  {
    "code": "K50",
    "description": "Enfermedad de Crohn [enteritis regional]"
  },
  {
    "code": "K51",
    "description": "Colitis ulcerativa"
  },
  {
    "code": "K52",
    "description": "Otras colitis y gastroenteritis no infecciosas"
  },
  {
    "code": "K55",
    "description": "Trastornos vasculares de los intestinos"
  },
  {
    "code": "K56",
    "description": "Ileo paral√≠tico y obstrucci√≥n intestinal sin hernia"
  },
  {
    "code": "K57",
    "description": "Enfermedad diverticular del intestino"
  },
  {
    "code": "K58",
    "description": "S√≠ndrome del colon irritable"
  },
  {
    "code": "K59",
    "description": "Otros trastornos funcionales del intestino"
  },
  {
    "code": "K60",
    "description": "Fisura y f√≠stula de las regiones anal y rectal"
  },
  {
    "code": "K61",
    "description": "Absceso de las regiones anal y rectal"
  },
  {
    "code": "K62",
    "description": "Otras enfermedades del ano y del recto"
  },
  {
    "code": "K63",
    "description": "Otras enfermedades de los intestinos"
  },
  {
    "code": "K65",
    "description": "Peritonitis"
  },
  {
    "code": "K66",
    "description": "Otros trastornos del peritoneo"
  },
  {
    "code": "K67",
    "description": "Trastornos del peritoneo en enfermedades infecciosas clasificadas en otra parte"
  },
  {
    "code": "K70",
    "description": "Enfermedad alcoh√≥lica del h√≠gado"
  },
  {
    "code": "K71",
    "description": "Enfermedad t√≥xica del h√≠gado"
  },
  {
    "code": "K72",
    "description": "Insuficiencia hep√°tica, no clasificada en otra parte"
  },
  {
    "code": "K73",
    "description": "Hepatitis cr√≥nica, no clasificada en otra parte"
  },
  {
    "code": "K74",
    "description": "Fibrosis y cirrosis del h√≠gado"
  },
  {
    "code": "K75",
    "description": "Otras enfermedades inflamatorias del h√≠gado"
  },
  {
    "code": "K76",
    "description": "Otras enfermedades del h√≠gado"
  },
  {
    "code": "K77",
    "description": "Trastornos del h√≠gado en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K80",
    "description": "Colelitiasis"
  },
  {
    "code": "K81",
    "description": "Colecistitis"
  },
  {
    "code": "K82",
    "description": "Otras enfermedades de la ves√≠cula biliar"
  },
  {
    "code": "K83",
    "description": "Otras enfermedades de las v√≠as biliares"
  },
  {
    "code": "K85",
    "description": "Pancreatitis aguda"
  },
  {
    "code": "K86",
    "description": "Otras enfermedades del p√°ncreas"
  },
  {
    "code": "K87",
    "description": "Trastornos de la ves√≠cula biliar, de las v√≠as biliares y del p√°ncreas en enfermedades clasificadas en otra parte"
  },
  {
    "code": "K90",
    "description": "Malabsorci√≥n intestinal"
  },
  {
    "code": "K91",
    "description": "Trastornos del sistema digestivo consecutivos a procedimientos, no  clasificados en otra parte"
  },
  {
    "code": "K92",
    "description": "Otras enfermedades del sistema digestivo"
  },
  {
    "code": "K93",
    "description": "Trastornos de otros √≥rganos digestivos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L00",
    "description": "S√≠ndrome estafiloc√≥cico de la piel escaldada"
  },
  {
    "code": "L01",
    "description": "Imp√©tigo"
  },
  {
    "code": "L02",
    "description": "Absceso cut√°neo, fur√∫nculo y √°ntrax"
  },
  {
    "code": "L03",
    "description": "Celulitis"
  },
  {
    "code": "L04",
    "description": "Linfadenitis aguda"
  },
  {
    "code": "L05",
    "description": "Quiste pilonidal"
  },
  {
    "code": "L08",
    "description": "Otras infecciones locales de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L10",
    "description": "P√©nfigo"
  },
  {
    "code": "L11",
    "description": "Otros trastornos acantol√≠ticos"
  },
  {
    "code": "L12",
    "description": "Penfigoide"
  },
  {
    "code": "L13",
    "description": "Otros trastornos flictenulares"
  },
  {
    "code": "L14",
    "description": "Trastornos flictenulares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L20",
    "description": "Dermatitis at√≥pica"
  },
  {
    "code": "L21",
    "description": "Dermatitis seborreica"
  },
  {
    "code": "L22",
    "description": "Dermatitis del pa√±al"
  },
  {
    "code": "L23",
    "description": "Dermatitis al√©rgica de contacto"
  },
  {
    "code": "L24",
    "description": "Dermatitis de contacto por irritantes"
  },
  {
    "code": "L25",
    "description": "Dermatitis de contacto, forma no especificada"
  },
  {
    "code": "L26",
    "description": "Dermatitis exfoliativa"
  },
  {
    "code": "L27",
    "description": "Dermatitis debida a sustancias ingeridas"
  },
  {
    "code": "L28",
    "description": "Liquen simple cr√≥nico y prurigo"
  },
  {
    "code": "L29",
    "description": "Prurito"
  },
  {
    "code": "L30",
    "description": "Otras dermatitis"
  },
  {
    "code": "L40",
    "description": "Psoriasis"
  },
  {
    "code": "L41",
    "description": "Parapsoriasis"
  },
  {
    "code": "L42",
    "description": "Pitiriasis rosada"
  },
  {
    "code": "L43",
    "description": "Liquen plano"
  },
  {
    "code": "L44",
    "description": "Otros trastornos papuloescamosos"
  },
  {
    "code": "L45",
    "description": "Trastornos papuloescamosos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L50",
    "description": "Urticaria"
  },
  {
    "code": "L51",
    "description": "Eritema multiforme"
  },
  {
    "code": "L52",
    "description": "Eritema nudoso"
  },
  {
    "code": "L53",
    "description": "Otras afecciones eritematosas"
  },
  {
    "code": "L54",
    "description": "Eritema en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L55",
    "description": "Quemadura solar"
  },
  {
    "code": "L56",
    "description": "Otros cambios agudos de la piel debidos a radiaci√≥n ultravioleta"
  },
  {
    "code": "L57",
    "description": "Cambios de la piel debidos a exposici√≥n cr√≥nica a radiaci√≥n no ionizante"
  },
  {
    "code": "L58",
    "description": "Radiodermatitis"
  },
  {
    "code": "L59",
    "description": "Otros trastornos de la piel y del tejido subcut√°neo relacionados con radiaci√≥n"
  },
  {
    "code": "L60",
    "description": "Trastornos de las u√±as"
  },
  {
    "code": "L62",
    "description": "Trastornos de las u√±as en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L63",
    "description": "Alopecia areata"
  },
  {
    "code": "L64",
    "description": "Alopecia andr√≥gena"
  },
  {
    "code": "L65",
    "description": "Otra p√©rdida no cicatricial del pelo"
  },
  {
    "code": "L66",
    "description": "Alopecia cicatricial [p√©rdida cicatricial del pelo]"
  },
  {
    "code": "L67",
    "description": "Anormalidades del tallo y del color del pelo"
  },
  {
    "code": "L68",
    "description": "Hipertricosis"
  },
  {
    "code": "L70",
    "description": "Acn√©"
  },
  {
    "code": "L71",
    "description": "Ros√°cea"
  },
  {
    "code": "L72",
    "description": "Quiste folicular de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L73",
    "description": "Otros trastornos foliculares"
  },
  {
    "code": "L74",
    "description": "Trastornos sudor√≠paros ecrinos"
  },
  {
    "code": "L75",
    "description": "Trastornos sudor√≠paros apocrinos"
  },
  {
    "code": "L80",
    "description": "Vit√≠ligo"
  },
  {
    "code": "L81",
    "description": "Otros trastornos de la pigmentaci√≥n"
  },
  {
    "code": "L82",
    "description": "Queratosis seborreica"
  },
  {
    "code": "L83",
    "description": "Acantosis nigricans"
  },
  {
    "code": "L84",
    "description": "Callos y callosidades"
  },
  {
    "code": "L85",
    "description": "Otros tipos de engrosamiento epid√©rmico"
  },
  {
    "code": "L86",
    "description": "Queratoderma en enfermedades clasificadas en otra parte"
  },
  {
    "code": "L87",
    "description": "Trastornos de la eliminaci√≥n transepid√©rmica"
  },
  {
    "code": "L88",
    "description": "Pioderma gangrenoso"
  },
  {
    "code": "L89",
    "description": "Ulcera de dec√∫bito"
  },
  {
    "code": "L90",
    "description": "Trastornos atr√≥ficos de la piel"
  },
  {
    "code": "L91",
    "description": "Trastornos hipertr√≥ficos de la piel"
  },
  {
    "code": "L92",
    "description": "Trastornos granulomatosos de la piel y del tejido subcut√°neo"
  },
  {
    "code": "L93",
    "description": "Lupus eritematoso"
  },
  {
    "code": "L94",
    "description": "Otros trastornos localizados del tejido conjuntivo"
  },
  {
    "code": "L95",
    "description": "Vasculitis limitada a la piel, no clasificada en otra parte"
  },
  {
    "code": "L97",
    "description": "Ulcera de miembro inferior, no clasificada en otra parte"
  },
  {
    "code": "L98",
    "description": "Otros trastornos de la piel y del tejido subcut√°neo, no clasificados en otra parte"
  },
  {
    "code": "L99",
    "description": "Otros trastornos de la piel y del tejido subcut√°neo en enfermedades  clasificadas en otra parte"
  },
  {
    "code": "M00",
    "description": "Artritis pi√≥gena"
  },
  {
    "code": "M01",
    "description": "Infecciones directas de la articulaci√≥n en enfermedades infecciosas y parasitarias clasificadas en otra parte"
  },
  {
    "code": "M02",
    "description": "Artropat√≠as reactivas"
  },
  {
    "code": "M03",
    "description": "Artropat√≠as postinfecciosas y reactivas en enfermedades clasificadas en  otra parte"
  },
  {
    "code": "M05",
    "description": "Artritis reumatoide seropositiva"
  },
  {
    "code": "M06",
    "description": "Otras artritis reumatoides"
  },
  {
    "code": "M07",
    "description": "Artropat√≠as psori√°sicas y enterop√°ticas"
  },
  {
    "code": "M08",
    "description": "Artritis juvenil"
  },
  {
    "code": "M09",
    "description": "Artritis juvenil en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M10",
    "description": "Gota"
  },
  {
    "code": "M11",
    "description": "Otras artropat√≠as por cristales"
  },
  {
    "code": "M12",
    "description": "Otras artropat√≠as espec√≠ficas"
  },
  {
    "code": "M13",
    "description": "Otras artritis"
  },
  {
    "code": "M14",
    "description": "Artropat√≠a en otras enfermedades clasificadas en otra parte"
  },
  {
    "code": "M15",
    "description": "Poliartrosis"
  },
  {
    "code": "M16",
    "description": "Coxartrosis [artrosis de la cadera]"
  },
  {
    "code": "M17",
    "description": "Gonartrosis [artrosis de la rodilla]"
  },
  {
    "code": "M18",
    "description": "Artrosis de la primera articulaci√≥n carpometacarpiana"
  },
  {
    "code": "M19",
    "description": "Otras artrosis"
  },
  {
    "code": "M20",
    "description": "Deformidades adquiridas de los dedos de la mano y del pie"
  },
  {
    "code": "M21",
    "description": "Otras deformidades adquiridas de los miembros"
  },
  {
    "code": "M22",
    "description": "Trastornos de la r√≥tula"
  },
  {
    "code": "M23",
    "description": "Trastorno interno de la rodilla"
  },
  {
    "code": "M24",
    "description": "Otros trastornos articulares espec√≠ficos"
  },
  {
    "code": "M25",
    "description": "Otros trastornos articulares, no clasificados en otra parte"
  },
  {
    "code": "M30",
    "description": "Poliarteritis nudosa y afecciones relacionadas"
  },
  {
    "code": "M31",
    "description": "Otras vasculopat√≠as necrotizantes"
  },
  {
    "code": "M32",
    "description": "Lupus eritematoso sist√©mico"
  },
  {
    "code": "M33",
    "description": "Dermatopolimiositis"
  },
  {
    "code": "M34",
    "description": "Esclerosis sist√©mica"
  },
  {
    "code": "M35",
    "description": "Otro compromiso sist√©mico del tejido conjuntivo"
  },
  {
    "code": "M36",
    "description": "Trastornos sist√©micos del tejido conjuntivo en enfermedades clasificadas en  otra parte"
  },
  {
    "code": "M40",
    "description": "Cifosis y lordosis"
  },
  {
    "code": "M41",
    "description": "Escoliosis"
  },
  {
    "code": "M42",
    "description": "Osteocondrosis de la columna vertebral"
  },
  {
    "code": "M43",
    "description": "Otras dorsopat√≠as deformantes"
  },
  {
    "code": "M45",
    "description": "Espondilitis anquilosante"
  },
  {
    "code": "M46",
    "description": "Otras espondilopat√≠as inflamatorias"
  },
  {
    "code": "M47",
    "description": "Espondilosis"
  },
  {
    "code": "M48",
    "description": "Otras espondilopat√≠as"
  },
  {
    "code": "M49",
    "description": "Espondilopat√≠as en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M50",
    "description": "Trastornos de disco cervical"
  },
  {
    "code": "M51",
    "description": "Otros trastornos de los discos intervertebrales"
  },
  {
    "code": "M53",
    "description": "Otras dorsopat√≠as, no clasificadas en otra parte"
  },
  {
    "code": "M54",
    "description": "Dorsalgia"
  },
  {
    "code": "M60",
    "description": "Miositis"
  },
  {
    "code": "M61",
    "description": "Calcificaci√≥n y osificaci√≥n del m√∫sculo"
  },
  {
    "code": "M62",
    "description": "Otros trastornos de los m√∫sculos"
  },
  {
    "code": "M63",
    "description": "Trastornos de los m√∫sculos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M65",
    "description": "Sinovitis y tenosinovitis"
  },
  {
    "code": "M66",
    "description": "Ruptura espont√°nea de la sinovia y del tend√≥n"
  },
  {
    "code": "M67",
    "description": "Otros trastornos de la sinovia y del tend√≥n"
  },
  {
    "code": "M68",
    "description": "Trastornos de los tendones y de la sinovia en enfermedades clasificadas en  otra parte"
  },
  {
    "code": "M70",
    "description": "Trastornos de los tejidos blandos relacionados con el uso, el uso excesivo y la presi√≥n"
  },
  {
    "code": "M71",
    "description": "Otras bursopat√≠as"
  },
  {
    "code": "M72",
    "description": "Trastornos fibrobl√°sticos"
  },
  {
    "code": "M73",
    "description": "Trastornos de los tejidos blandos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M75",
    "description": "Lesiones del hombro"
  },
  {
    "code": "M76",
    "description": "Entesopat√≠as del miembro inferior, excluido el pie"
  },
  {
    "code": "M77",
    "description": "Otras entesopat√≠as"
  },
  {
    "code": "M79",
    "description": "Otros trastornos de los tejidos blandos, no clasificados en otra parte"
  },
  {
    "code": "M80",
    "description": "Osteoporosis con fractura patol√≥gica"
  },
  {
    "code": "M81",
    "description": "Osteoporosis sin fractura patol√≥gica"
  },
  {
    "code": "M82",
    "description": "Osteoporosis en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M83",
    "description": "Osteomalacia del adulto"
  },
  {
    "code": "M84",
    "description": "Trastornos de la continuidad del hueso"
  },
  {
    "code": "M85",
    "description": "Otros trastornos de la densidad y de la estructura √≥seas"
  },
  {
    "code": "M86",
    "description": "Osteomielitis"
  },
  {
    "code": "M87",
    "description": "Osteonecrosis"
  },
  {
    "code": "M88",
    "description": "Enfermedad de Paget de los huesos [oste√≠tis deformante]"
  },
  {
    "code": "M89",
    "description": "Otros trastornos del hueso"
  },
  {
    "code": "M90",
    "description": "Osteopat√≠as en enfermedades clasificadas en otra parte"
  },
  {
    "code": "M91",
    "description": "Osteocondrosis juvenil de la cadera y de la pelvis"
  },
  {
    "code": "M92",
    "description": "Otras osteocondrosis juveniles"
  },
  {
    "code": "M93",
    "description": "Otras osteocondropat√≠as"
  },
  {
    "code": "M94",
    "description": "Otros trastornos del cart√≠lago"
  },
  {
    "code": "M95",
    "description": "Otras deformidades adquiridas del sistema osteomuscular y del tejido  conjuntivo"
  },
  {
    "code": "M96",
    "description": "Trastornos osteomusculares consecutivos a procedimientos, no clasificados  en otra parte"
  },
  {
    "code": "M99",
    "description": "Lesiones biomec√°nicas, no clasificadas en otra parte"
  },
  {
    "code": "N00",
    "description": "S√≠ndrome nefr√≠tico agudo"
  },
  {
    "code": "N01",
    "description": "S√≠ndrome nefr√≠tico r√°pidamente progresivo"
  },
  {
    "code": "N02",
    "description": "Hematuria recurrente y persistente"
  },
  {
    "code": "N03",
    "description": "S√≠ndrome nefr√≠tico cr√≥nico"
  },
  {
    "code": "N04",
    "description": "S√≠ndrome nefr√≥tico"
  },
  {
    "code": "N05",
    "description": "S√≠ndrome nefr√≠tico no especificado"
  },
  {
    "code": "N06",
    "description": "Proteinuria aislada con lesi√≥n morfol√≥gica especificada"
  },
  {
    "code": "N07",
    "description": "Nefropat√≠a hereditaria, no clasificada en otra parte"
  },
  {
    "code": "N08",
    "description": "Trastornos glomerulares en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N10",
    "description": "Nefritis tubulointersticial aguda"
  },
  {
    "code": "N11",
    "description": "Nefritis tubulointersticial cr√≥nica"
  },
  {
    "code": "N12",
    "description": "Nefritis tubulointersticial, no especificada como aguda o cr√≥nica"
  },
  {
    "code": "N13",
    "description": "Uropat√≠a obstructiva y por reflujo"
  },
  {
    "code": "N14",
    "description": "Afecciones tubulares y tubulointersticiales inducidas por drogas y por metales pesados"
  },
  {
    "code": "N15",
    "description": "Otras enfermedades renales tubulointersticiales"
  },
  {
    "code": "N16",
    "description": "Trastornos renales tubulointersticiales en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N17",
    "description": "Insuficiencia renal aguda"
  },
  {
    "code": "N18",
    "description": "Insuficiencia renal cr√≥nica"
  },
  {
    "code": "N19",
    "description": "Insuficiencia renal no especificada"
  },
  {
    "code": "N20",
    "description": "C√°lculo del ri√±√≥n y del ur√©ter"
  },
  {
    "code": "N21",
    "description": "C√°lculo de las v√≠as urinarias inferiores"
  },
  {
    "code": "N22",
    "description": "C√°lculo de las v√≠as urinarias en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N23",
    "description": "C√≥lico renal, no especificado"
  },
  {
    "code": "N25",
    "description": "Trastornos resultantes de la funci√≥n tubular renal alterada"
  },
  {
    "code": "N26",
    "description": "Ri√±√≥n contra√≠do, no especificado"
  },
  {
    "code": "N27",
    "description": "Ri√±√≥n peque√±o de causa desconocida"
  },
  {
    "code": "N28",
    "description": "Otros trastornos del ri√±√≥n y del ur√©ter, no clasificados en otra parte"
  },
  {
    "code": "N29",
    "description": "Otros trastornos del ri√±√≥n y del ur√©ter en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N30",
    "description": "Cistitis"
  },
  {
    "code": "N31",
    "description": "Disfunci√≥n neuromuscular de la vejiga, no clasificada en otra parte"
  },
  {
    "code": "N32",
    "description": "Otros trastornos de la vejiga"
  },
  {
    "code": "N33",
    "description": "Trastornos de la vejiga en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N34",
    "description": "Uretritis y s√≠ndrome uretral"
  },
  {
    "code": "N35",
    "description": "Estrechez uretral"
  },
  {
    "code": "N36",
    "description": "Otros trastornos de la uretra"
  },
  {
    "code": "N37",
    "description": "Trastornos de la uretra en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N39",
    "description": "Otros trastornos del sistema urinario"
  },
  {
    "code": "N40",
    "description": "Hiperplasia de la pr√≥stata"
  },
  {
    "code": "N41",
    "description": "Enfermedades inflamatorias de la pr√≥stata"
  },
  {
    "code": "N42",
    "description": "Otros trastornos de la pr√≥stata"
  },
  {
    "code": "N43",
    "description": "Hidrocele y espermatocele"
  },
  {
    "code": "N44",
    "description": "Torsi√≥n del test√≠culo"
  },
  {
    "code": "N45",
    "description": "Orquitis y epididimitis"
  },
  {
    "code": "N46",
    "description": "Esterilidad en el var√≥n"
  },
  {
    "code": "N47",
    "description": "Prepucio redundante, fimosis y parafimosis"
  },
  {
    "code": "N48",
    "description": "Otros trastornos del pene"
  },
  {
    "code": "N49",
    "description": "Trastornos inflamatorios de √≥rganos genitales masculinos, no clasificados en otra parte"
  },
  {
    "code": "N50",
    "description": "Otros trastornos de los √≥rganos genitales masculinos"
  },
  {
    "code": "N51",
    "description": "Trastornos de los √≥rganos genitales masculinos en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N60",
    "description": "Displasia mamaria benigna"
  },
  {
    "code": "N61",
    "description": "Trastornos inflamatorios de la mama"
  },
  {
    "code": "N62",
    "description": "Hipertrofia de la mama"
  },
  {
    "code": "N63",
    "description": "Masa no especificada en la mama"
  },
  {
    "code": "N64",
    "description": "Otros trastornos de la mama"
  },
  {
    "code": "N70",
    "description": "Salpingitis y ooforitis"
  },
  {
    "code": "N71",
    "description": "Enfermedad inflamatoria del √∫tero, excepto del cuello uterino"
  },
  {
    "code": "N72",
    "description": "Enfermedad inflamatoria del cuello uterino"
  },
  {
    "code": "N73",
    "description": "Otras enfermedades p√©lvicas inflamatorias femeninas"
  },
  {
    "code": "N74",
    "description": "Trastornos inflamatorios de la pelvis femenina en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N75",
    "description": "Enfermedades de la gl√°ndula de Bartholin"
  },
  {
    "code": "N76",
    "description": "Otras afecciones inflamatorias de la vagina y de la vulva"
  },
  {
    "code": "N77",
    "description": "Ulceraci√≥n e inflamaci√≥n vulvovaginal en enfermedades clasificadas en otra parte"
  },
  {
    "code": "N80",
    "description": "Endometriosis"
  },
  {
    "code": "N81",
    "description": "Prolapso genital femenino"
  },
  {
    "code": "N82",
    "description": "F√≠stulas que afectan el tracto genital femenino"
  },
  {
    "code": "N83",
    "description": "Trastornos no inflamatorios del ovario, de la trompa de Falopio y del ligamento  ancho"
  },
  {
    "code": "N84",
    "description": "P√≥lipo del tracto genital femenino"
  },
  {
    "code": "N85",
    "description": "Otros trastornos no inflamatorios del √∫tero, excepto del cuello"
  },
  {
    "code": "N86",
    "description": "Erosi√≥n y ectropi√≥n del cuello del √∫tero"
  },
  {
    "code": "N87",
    "description": "Displasia del cuello uterino"
  },
  {
    "code": "N88",
    "description": "Otros trastornos no inflamatorios del cuello del √∫tero"
  },
  {
    "code": "N89",
    "description": "Otros trastornos no inflamatorios de la vagina"
  },
  {
    "code": "N90",
    "description": "Otros trastornos no inflamatorios de la vulva y del perineo"
  },
  {
    "code": "N91",
    "description": "Menstruaci√≥n ausente, escasa o rara"
  },
  {
    "code": "N92",
    "description": "Menstruaci√≥n excesiva, frecuente e irregular"
  },
  {
    "code": "N93",
    "description": "Otras hemorragias uterinas o vaginales anormales"
  },
  {
    "code": "N94",
    "description": "Dolor y otras afecciones relacionadas con los √≥rganos genitales femeninos y con el ciclo menstrual"
  },
  {
    "code": "N95",
    "description": "Otros trastornos menop√°usicos y perimenop√°usicos"
  },
  {
    "code": "N96",
    "description": "Abortadora habitual"
  },
  {
    "code": "N97",
    "description": "Infertilidad femenina"
  },
  {
    "code": "N98",
    "description": "Complicaciones asociadas con la fecundaci√≥n artificial"
  },
  {
    "code": "N99",
    "description": "Trastornos del sistema genitourinario consecutivos a procedimientos, no  clasificados en otra parte"
  },
  {
    "code": "O00",
    "description": "Embarazo ect√≥pico"
  },
  {
    "code": "O01",
    "description": "Mola hidatiforme"
  },
  {
    "code": "O02",
    "description": "Otros productos anormales de la concepci√≥n"
  },
  {
    "code": "O03",
    "description": "Aborto espont√°neo"
  },
  {
    "code": "O04",
    "description": "Aborto m√©dico"
  },
  {
    "code": "O05",
    "description": "Otro aborto"
  },
  {
    "code": "O06",
    "description": "Aborto no especificado"
  },
  {
    "code": "O07",
    "description": "Intento fallido de aborto"
  },
  {
    "code": "O08",
    "description": "Complicaciones consecutivas al aborto, al embarazo ect√≥pico y al embarazo  molar"
  },
  {
    "code": "O10",
    "description": "Hipertensi√≥n preexistente que complica el embarazo, el parto y el puerperio"
  },
  {
    "code": "O11",
    "description": "Trastornos hipertensivos preexistentes, con proteinuria agregada"
  },
  {
    "code": "O12",
    "description": "Edema y proteinuria gestacionales [inducidos por el embarazo] sin hipertensi√≥n"
  },
  {
    "code": "O13",
    "description": "Hipertensi√≥n gestacional [inducida por el embarazo] sin proteinuria  significativa"
  },
  {
    "code": "O14",
    "description": "Hipertensi√≥n gestacional [inducida por el embarazo] con proteinuria  significativa"
  },
  {
    "code": "O15",
    "description": "Eclampsia"
  },
  {
    "code": "O16",
    "description": "Hipertensi√≥n materna, no especificada"
  },
  {
    "code": "O20",
    "description": "Hemorragia precoz del embarazo"
  },
  {
    "code": "O21",
    "description": "V√≥mitos excesivos en el embarazo"
  },
  {
    "code": "O22",
    "description": "Complicaciones venosas en el embarazo"
  },
  {
    "code": "O23",
    "description": "Infecci√≥n de las v√≠as genitourinarias en el embarazo"
  },
  {
    "code": "O24",
    "description": "Diabetes mellitus en el embarazo"
  },
  {
    "code": "O25",
    "description": "Desnutrici√≥n en el embarazo"
  },
  {
    "code": "O26",
    "description": "Atenci√≥n a la madre por otras complicaciones principalmente relacionadas con el embarazo"
  },
  {
    "code": "O28",
    "description": "Hallazgos anormales en el examen prenatal de la madre"
  },
  {
    "code": "O29",
    "description": "Complicaciones de la anestesia administrada durante el embarazo"
  },
  {
    "code": "O30",
    "description": "Embarazo m√∫ltiple"
  },
  {
    "code": "O31",
    "description": "Complicaciones espec√≠ficas del embarazo m√∫ltiple"
  },
  {
    "code": "O32",
    "description": "Atenci√≥n materna por presentaci√≥n anormal del feto, conocida o presunta"
  },
  {
    "code": "O33",
    "description": "Atenci√≥n materna por desproporci√≥n conocida o presunta"
  },
  {
    "code": "O34",
    "description": "Atenci√≥n materna por anormalidades conocidas o presuntas de los √≥rganos pelvianos de la madre"
  },
  {
    "code": "O35",
    "description": "Atenci√≥n materna por anormalidad o lesi√≥n fetal, conocida o presunta"
  },
  {
    "code": "O36",
    "description": "Atenci√≥n materna por otros problemas fetales conocidos o presuntos"
  },
  {
    "code": "O40",
    "description": "Polihidramnios"
  },
  {
    "code": "O41",
    "description": "Otros trastornos del l√≠quido amni√≥tico y de las membranas"
  },
  {
    "code": "O42",
    "description": "Ruptura prematura de las membranas"
  },
  {
    "code": "O43",
    "description": "Trastornos placentarios"
  },
  {
    "code": "O44",
    "description": "Placenta previa"
  },
  {
    "code": "O45",
    "description": "Desprendimiento prematuro de la placenta [abruptio placentae]"
  },
  {
    "code": "O46",
    "description": "Hemorragia anteparto, no clasificada en otra parte"
  },
  {
    "code": "O47",
    "description": "Falso trabajo de parto"
  },
  {
    "code": "O48",
    "description": "Embarazo prolongado"
  },
  {
    "code": "O60",
    "description": "Parto prematuro"
  },
  {
    "code": "O61",
    "description": "Fracaso de la inducci√≥n del trabajo de parto"
  },
  {
    "code": "O62",
    "description": "Anormalidades de la din√°mica del trabajo de parto"
  },
  {
    "code": "O63",
    "description": "Trabajo de parto prolongado"
  },
  {
    "code": "O64",
    "description": "Trabajo de parto obstruido debido a mala posici√≥n y presentaci√≥n anormal del feto"
  },
  {
    "code": "O65",
    "description": "Trabajo de parto obstruido debido a anormalidad de la pelvis materna"
  },
  {
    "code": "O66",
    "description": "Otras obstrucciones del trabajo de parto"
  },
  {
    "code": "O67",
    "description": "Trabajo de parto y parto complicados por hemorragia intraparto, no clasificados en otra parte"
  },
  {
    "code": "O68",
    "description": "Trabajo de parto y parto complicados por sufrimiento fetal"
  },
  {
    "code": "O69",
    "description": "Trabajo de parto y parto complicados por problemas del cord√≥n umbilical"
  },
  {
    "code": "O70",
    "description": "Desgarro perineal durante el parto"
  },
  {
    "code": "O71",
    "description": "Otro trauma obst√©trico"
  },
  {
    "code": "O72",
    "description": "Hemorragia postparto"
  },
  {
    "code": "O73",
    "description": "Retenci√≥n de la placenta o de las membranas, sin hemorragia"
  },
  {
    "code": "O74",
    "description": "Complicaciones de la anestesia administrada durante el trabajo de parto y el parto"
  },
  {
    "code": "O75",
    "description": "Otras complicaciones del trabajo de parto y del parto, no clasificadas en otra parte"
  },
  {
    "code": "O80",
    "description": "Parto √∫nico espont√°neo"
  },
  {
    "code": "O81",
    "description": "Parto √∫nico con f√≥rceps y ventosa extractora"
  },
  {
    "code": "O82",
    "description": "Parto √∫nico por ces√°rea"
  },
  {
    "code": "O83",
    "description": "Otros partos √∫nicos asistidos"
  },
  {
    "code": "O84",
    "description": "Parto m√∫ltiple"
  },
  {
    "code": "O85",
    "description": "Sepsis puerperal"
  },
  {
    "code": "O86",
    "description": "Otras infecciones puerperales"
  },
  {
    "code": "O87",
    "description": "Complicaciones venosas en el puerperio"
  },
  {
    "code": "O88",
    "description": "Embolia obst√©trica"
  },
  {
    "code": "O89",
    "description": "Complicaciones de la anestesia administrada durante el puerperio"
  },
  {
    "code": "O90",
    "description": "Complicaciones del puerperio, no clasificadas en otra parte"
  },
  {
    "code": "O91",
    "description": "Infecciones de la mama asociadas con el parto"
  },
  {
    "code": "O92",
    "description": "Otros trastornos de la mama y de la lactancia asociados con el parto"
  },
  {
    "code": "O95",
    "description": "Muerte obst√©trica de causa no especificada"
  },
  {
    "code": "O96",
    "description": ""
  },
  {
    "code": "O97",
    "description": "Muerte por secuelas de causas obst√©tricas directas"
  },
  {
    "code": "O98",
    "description": ""
  },
  {
    "code": "O99",
    "description": ""
  },
  {
    "code": "P00",
    "description": ""
  },
  {
    "code": "P01",
    "description": "Feto y reci√©n nacido afectados por complicaciones maternas del embarazo"
  },
  {
    "code": "P02",
    "description": "Feto y reci√©n nacido afectados por complicaciones de la placenta, del cord√≥n umbilical y de las membranas"
  },
  {
    "code": "P03",
    "description": "Feto y reci√©n nacido afectados por otras complicaciones del trabajo de parto y del parto"
  },
  {
    "code": "P04",
    "description": "Feto y reci√©n nacido afectados por influencias nocivas transmitidas a trav√©s de la placenta o de la leche materna"
  },
  {
    "code": "P05",
    "description": "Retardo del crecimiento fetal y desnutrici√≥n fetal"
  },
  {
    "code": "P07",
    "description": ""
  },
  {
    "code": "P08",
    "description": "Trastornos relacionados con el embarazo prolongado y con sobrepeso al nacer"
  },
  {
    "code": "P10",
    "description": "Hemorragia y laceraci√≥n intracraneal debidas a traumatismo del nacimiento"
  },
  {
    "code": "P11",
    "description": "Otros traumatismos del nacimiento en el sistema nervioso central"
  },
  {
    "code": "P12",
    "description": "Traumatismo del nacimiento en el cuero cabelludo"
  },
  {
    "code": "P13",
    "description": "Traumatismo del esqueleto durante el nacimiento"
  },
  {
    "code": "P14",
    "description": "Traumatismo del sistema nervioso perif√©rico durante el nacimiento"
  },
  {
    "code": "P15",
    "description": "Otros traumatismos del nacimiento"
  },
  {
    "code": "P20",
    "description": "Hipoxia intrauterina"
  },
  {
    "code": "P21",
    "description": "Asfixia del nacimiento"
  },
  {
    "code": "P22",
    "description": "Dificultad respiratoria del reci√©n nacido"
  },
  {
    "code": "P23",
    "description": "Neumon√≠a cong√©nita"
  },
  {
    "code": "P24",
    "description": "S√≠ndromes de aspiraci√≥n neonatal"
  },
  {
    "code": "P25",
    "description": "Enfisema intersticial y afecciones relacionadas, originadas en el per√≠odo perinatal"
  },
  {
    "code": "P26",
    "description": "Hemorragia pulmonar originada en el per√≠odo perinatal"
  },
  {
    "code": "P27",
    "description": "Enfermedad respiratoria cr√≥nica originada en el per√≠odo perinatal"
  },
  {
    "code": "P28",
    "description": "Otros problemas respiratorios del reci√©n nacido, originados en el per√≠odo perinatal"
  },
  {
    "code": "P29",
    "description": "Trastornos cardiovasculares originados en el per√≠odo perinatal"
  },
  {
    "code": "P35",
    "description": "Enfermedades virales cong√©nitas"
  },
  {
    "code": "P36",
    "description": "Sepsis bacteriana del reci√©n nacido"
  },
  {
    "code": "P37",
    "description": "Otras enfermedades infecciosas y parasitarias cong√©nitas"
  },
  {
    "code": "P38",
    "description": "Onfalitis del reci√©n nacido con o sin hemorragia leve"
  },
  {
    "code": "P39",
    "description": "Otras infecciones espec√≠ficas del per√≠odo perinatal"
  },
  {
    "code": "P50",
    "description": "P√©rdida de sangre fetal"
  },
  {
    "code": "P51",
    "description": "Hemorragia umbilical del reci√©n nacido"
  },
  {
    "code": "P52",
    "description": "Hemorragia intracraneal no traum√°tica del feto y del reci√©n nacido"
  },
  {
    "code": "P53",
    "description": "Enfermedad hemorr√°gica del feto y del reci√©n nacido"
  },
  {
    "code": "P54",
    "description": "Otras hemorragias neonatales"
  },
  {
    "code": "P55",
    "description": "Enfermedad hemol√≠tica del feto y del reci√©n nacido"
  },
  {
    "code": "P56",
    "description": "Hidropes√≠a fetal debida a enfermedad hemol√≠tica"
  },
  {
    "code": "P57",
    "description": "Kernicterus"
  },
  {
    "code": "P58",
    "description": "Ictericia neonatal debida a otras hem√≥lisis excesivas"
  },
  {
    "code": "P59",
    "description": "Ictericia neonatal por otras causas y por las no especificadas"
  },
  {
    "code": "P60",
    "description": "Coagulaci√≥n intravascular diseminada en el feto y el reci√©n nacido"
  },
  {
    "code": "P61",
    "description": "Otros trastornos hematol√≥gicos perinatales"
  },
  {
    "code": "P70",
    "description": "Trastornos transitorios del metabolismo de los carbohidratos espec√≠ficos del feto y del reci√©n nacido"
  },
  {
    "code": "P71",
    "description": "Trastornos neonatales transitorios del metabolismo del calcio y del magnesio"
  },
  {
    "code": "P72",
    "description": "Otros trastornos endocrinos neonatales transitorios"
  },
  {
    "code": "P74",
    "description": "Otras alteraciones metab√≥licas y electrol√≠ticas neonatales transitorias"
  },
  {
    "code": "P76",
    "description": "Otras obstrucciones intestinales del reci√©n nacido"
  },
  {
    "code": "P77",
    "description": "Enterocolitis necrotizante del feto y del reci√©n nacido"
  },
  {
    "code": "P78",
    "description": "Otros trastornos perinatales del sistema digestivo"
  },
  {
    "code": "P80",
    "description": "Hipotermia del reci√©n nacido"
  },
  {
    "code": "P81",
    "description": "Otras alteraciones de la regulaci√≥n de la temperatura en el reci√©n nacido"
  },
  {
    "code": "P83",
    "description": "Otras afecciones de la piel espec√≠ficas del feto y del reci√©n nacido"
  },
  {
    "code": "P90",
    "description": "Convulsiones del reci√©n nacido"
  },
  {
    "code": "P91",
    "description": "Otras alteraciones cerebrales del reci√©n nacido"
  },
  {
    "code": "P92",
    "description": "Problemas de la ingesti√≥n de alimentos del reci√©n nacido"
  },
  {
    "code": "P93",
    "description": "Reacciones e intoxicaciones debidas a drogas administradas al feto y al reci√©n nacido"
  },
  {
    "code": "P94",
    "description": "Trastornos del tono muscular en el reci√©n nacido"
  },
  {
    "code": "P95",
    "description": "Muerte fetal de causa no especificada"
  },
  {
    "code": "P96",
    "description": "Otras afecciones originadas en el per√≠odo perinatal"
  },
  {
    "code": "Q00",
    "description": "Anencefalia y malformaciones cong√©nitas similares"
  },
  {
    "code": "Q01",
    "description": "Encefalocele"
  },
  {
    "code": "Q02",
    "description": "Microcefalia"
  },
  {
    "code": "Q03",
    "description": "Hidroc√©falo cong√©nito"
  },
  {
    "code": "Q04",
    "description": "Otras malformaciones cong√©nitas del enc√©falo"
  },
  {
    "code": "Q05",
    "description": "Espina b√≠fida"
  },
  {
    "code": "Q06",
    "description": "Otras malformaciones cong√©nitas de la m√©dula espinal"
  },
  {
    "code": "Q07",
    "description": "Otras malformaciones cong√©nitas del sistema nervioso"
  },
  {
    "code": "Q10",
    "description": "Malformaciones cong√©nitas de los p√°rpados, del aparato lagrimal y de la √≥rbita"
  },
  {
    "code": "Q11",
    "description": "Anoftalm√≠a, microftalm√≠a y macroftalm√≠a"
  },
  {
    "code": "Q12",
    "description": "Malformaciones cong√©nitas del cristalino"
  },
  {
    "code": "Q13",
    "description": "Malformaciones cong√©nitas del segmento anterior del ojo"
  },
  {
    "code": "Q14",
    "description": "Malformaciones cong√©nitas del segmento posterior del ojo"
  },
  {
    "code": "Q15",
    "description": "Otras malformaciones cong√©nitas del ojo"
  },
  {
    "code": "Q16",
    "description": "Malformaciones cong√©nitas del o√≠do que causan alteraci√≥n de la audici√≥n"
  },
  {
    "code": "Q17",
    "description": "Otras malformaciones cong√©nitas del o√≠do"
  },
  {
    "code": "Q18",
    "description": "Otras malformaciones cong√©nitas de la cara y del cuello"
  },
  {
    "code": "Q20",
    "description": "Malformaciones cong√©nitas de las c√°maras card√≠acas y sus conexiones"
  },
  {
    "code": "Q21",
    "description": "Malformaciones cong√©nitas de los tabiques card√≠acos"
  },
  {
    "code": "Q22",
    "description": "Malformaciones cong√©nitas de las v√°lvulas pulmonar y tric√∫spide"
  },
  {
    "code": "Q23",
    "description": "Malformaciones cong√©nitas de las v√°lvulas a√≥rtica y mitral"
  },
  {
    "code": "Q24",
    "description": "Otras malformaciones cong√©nitas del coraz√≥n"
  },
  {
    "code": "Q25",
    "description": "Malformaciones cong√©nitas de las grandes arterias"
  },
  {
    "code": "Q26",
    "description": "Malformaciones cong√©nitas de las grandes venas"
  },
  {
    "code": "Q27",
    "description": "Otras malformaciones cong√©nitas del sistema vascular perif√©rico"
  },
  {
    "code": "Q28",
    "description": "Otras malformaciones cong√©nitas del sistema circulatorio"
  },
  {
    "code": "Q30",
    "description": "Malformaciones cong√©nitas de la nariz"
  },
  {
    "code": "Q31",
    "description": "Malformaciones cong√©nitas de la laringe"
  },
  {
    "code": "Q32",
    "description": "Malformaciones cong√©nitas de la tr√°quea y de los bronquios"
  },
  {
    "code": "Q33",
    "description": "Malformaciones cong√©nitas del pulm√≥n"
  },
  {
    "code": "Q34",
    "description": "Otras malformaciones cong√©nitas del sistema respiratorio"
  },
  {
    "code": "Q35",
    "description": "Fisura del paladar"
  },
  {
    "code": "Q36",
    "description": "Labio leporino"
  },
  {
    "code": "Q37",
    "description": "Fisura del paladar con labio leporino"
  },
  {
    "code": "Q38",
    "description": "Otras malformaciones cong√©nitas de la lengua, de la boca y de la faringe"
  },
  {
    "code": "Q39",
    "description": "Malformaciones cong√©nitas del es√≥fago"
  },
  {
    "code": "Q40",
    "description": "Otras malformaciones cong√©nitas de la parte superior del tubo digestivo"
  },
  {
    "code": "Q41",
    "description": "Ausencia, atresia y estenosis cong√©nita del intestino delgado"
  },
  {
    "code": "Q42",
    "description": "Ausencia, atresia y estenosis cong√©nita del intestino grueso"
  },
  {
    "code": "Q43",
    "description": "Otras malformaciones cong√©nitas del intestino"
  },
  {
    "code": "Q44",
    "description": "Malformaciones cong√©nitas de la ves√≠cula biliar, de los conductos biliares y  del h√≠gado"
  },
  {
    "code": "Q45",
    "description": "Otras malformaciones cong√©nitas del sistema digestivo"
  },
  {
    "code": "Q50",
    "description": "Malformaciones cong√©nitas de los ovarios, de las trompas de Falopio y de los ligamentos anchos"
  },
  {
    "code": "Q51",
    "description": "Malformaciones cong√©nitas del √∫tero y del cuello uterino"
  },
  {
    "code": "Q52",
    "description": "Otras malformaciones cong√©nitas de los √≥rganos genitales femeninos"
  },
  {
    "code": "Q53",
    "description": "Test√≠culo no descendido"
  },
  {
    "code": "Q54",
    "description": "Hipospadias"
  },
  {
    "code": "Q55",
    "description": "Otras malformaciones cong√©nitas de los √≥rganos genitales masculinos"
  },
  {
    "code": "Q56",
    "description": "Sexo indeterminado y seudohermafroditismo"
  },
  {
    "code": "Q60",
    "description": "Agenesia renal y otras malformaciones hipopl√°sicas del ri√±√≥n"
  },
  {
    "code": "Q61",
    "description": "Enfermedad qu√≠stica del ri√±√≥n"
  },
  {
    "code": "Q62",
    "description": "Defectos obstructivos cong√©nitos de la pelvis renal y malformaciones  cong√©nitas del ur√©ter"
  },
  {
    "code": "Q63",
    "description": "Otras malformaciones cong√©nitas del ri√±√≥n"
  },
  {
    "code": "Q64",
    "description": "Otras malformaciones cong√©nitas del sistema urinario"
  },
  {
    "code": "Q65",
    "description": "Deformidades cong√©nitas de la cadera"
  },
  {
    "code": "Q66",
    "description": "Deformidades cong√©nitas de los pies"
  },
  {
    "code": "Q67",
    "description": "Deformidades osteomusculares cong√©nitas de la cabeza, de la cara, de la  columna vertebral y del t√≥rax"
  },
  {
    "code": "Q68",
    "description": "Otras deformidades osteomusculares cong√©nitas"
  },
  {
    "code": "Q69",
    "description": "Polidactilia"
  },
  {
    "code": "Q70",
    "description": "Sindactilia"
  },
  {
    "code": "Q71",
    "description": "Defectos por reducci√≥n del miembro superior"
  },
  {
    "code": "Q72",
    "description": "Defectos por reducci√≥n del miembro inferior"
  },
  {
    "code": "Q73",
    "description": "Defectos por reducci√≥n de miembro no especificado"
  },
  {
    "code": "Q74",
    "description": "Otras anomal√≠as cong√©nitas del (de los) miembro(s)"
  },
  {
    "code": "Q75",
    "description": "Otras malformaciones cong√©nitas de los huesos del cr√°neo y de la cara"
  },
  {
    "code": "Q76",
    "description": "Malformaciones cong√©nitas de la columna vertebral y t√≥rax √≥seo"
  },
  {
    "code": "Q77",
    "description": "Osteocondrodisplasia con defecto del crecimiento de los huesos largos y de la columna vertebral"
  },
  {
    "code": "Q78",
    "description": "Otras osteocondrodisplasias"
  },
  {
    "code": "Q79",
    "description": "Malformaciones cong√©nitas del sistema osteomuscular, no clasificadas en otra parte"
  },
  {
    "code": "Q80",
    "description": "Ictiosis cong√©nita"
  },
  {
    "code": "Q81",
    "description": "Epiderm√≥lisis bullosa"
  },
  {
    "code": "Q82",
    "description": "Otras malformaciones cong√©nitas de la piel"
  },
  {
    "code": "Q83",
    "description": "Malformaciones cong√©nitas de la mama"
  },
  {
    "code": "Q84",
    "description": "Otras malformaciones cong√©nitas de las faneras"
  },
  {
    "code": "Q85",
    "description": "Facomatosis, no clasificada en otra parte"
  },
  {
    "code": "Q86",
    "description": "S√≠ndromes de malformaciones cong√©nitas debidos a causas ex√≥genas conocidas, no  clasificados en otra parte"
  },
  {
    "code": "Q87",
    "description": "Otros s√≠ndromes de malformaciones cong√©nitas especificados que afectan m√∫ltiples sistemas"
  },
  {
    "code": "Q89",
    "description": "Otras malformaciones cong√©nitas, no clasificadas en otra parte"
  },
  {
    "code": "Q90",
    "description": "S√≠ndrome de Down"
  },
  {
    "code": "Q91",
    "description": "S√≠ndrome de Edwards y s√≠ndrome de Patau"
  },
  {
    "code": "Q92",
    "description": "Otras trisom√≠as y trisom√≠as parciales de los autosomas, no clasificadas en otra  parte"
  },
  {
    "code": "Q93",
    "description": "Monosom√≠as y supresiones de los autosomas, no clasificadas en otra parte"
  },
  {
    "code": "Q95",
    "description": "Reordenamientos equilibrados y marcadores estructurales, no clasificados en otra parte"
  },
  {
    "code": "Q96",
    "description": "S√≠ndrome de Turner"
  },
  {
    "code": "Q97",
    "description": "Otras anomal√≠as de los cromosomas sexuales, con fenotipo femenino, no clasificadas en otra parte"
  },
  {
    "code": "Q98",
    "description": "Otras anomal√≠as de los cromosomas sexuales, con fenotipo masculino, no clasificadas en otra  parte"
  },
  {
    "code": "Q99",
    "description": "Otras anomal√≠as cromos√≥micas, no clasificadas en otra parte"
  },
  {
    "code": "R00",
    "description": "Anormalidades del latido card√≠aco"
  },
  {
    "code": "R01",
    "description": "Soplos y otros sonidos card√≠acos"
  },
  {
    "code": "R02",
    "description": "Gangrena, no clasificada en otra parte"
  },
  {
    "code": "R03",
    "description": "Lectura de presi√≥n sangu√≠nea anormal, sin diagn√≥stico"
  },
  {
    "code": "R04",
    "description": "Hemorragias de las v√≠as respiratorias"
  },
  {
    "code": "R05",
    "description": "Tos"
  },
  {
    "code": "R06",
    "description": "Anormalidades de la respiraci√≥n"
  },
  {
    "code": "R07",
    "description": "Dolor de garganta y en el pecho"
  },
  {
    "code": "R09",
    "description": "Otros s√≠ntomas y signos que involucran los sistemas circulatorio y respiratorio"
  },
  {
    "code": "R10",
    "description": "Dolor abdominal y p√©lvico"
  },
  {
    "code": "R11",
    "description": "N√°usea y v√≥mito"
  },
  {
    "code": "R12",
    "description": "Acidez"
  },
  {
    "code": "R13",
    "description": "Disfagia"
  },
  {
    "code": "R14",
    "description": "Flatulencia y afecciones afines"
  },
  {
    "code": "R15",
    "description": "Incontinencia fecal"
  },
  {
    "code": "R16",
    "description": "Hepatomegalia y esplenomegalia, no clasificadas en otra parte"
  },
  {
    "code": "R17",
    "description": "Ictericia no especificada"
  },
  {
    "code": "R18",
    "description": "Ascitis"
  },
  {
    "code": "R19",
    "description": "Otros s√≠ntomas y signos que involucran el sistema digestivo y el abdomen"
  },
  {
    "code": "R20",
    "description": "Alteraciones de la sensibilidad cut√°nea"
  },
  {
    "code": "R21",
    "description": "Salpullido y otras erupciones cut√°neas no especificadas"
  },
  {
    "code": "R22",
    "description": "Tumefacci√≥n, masa o prominencia de la piel y del tejido subcut√°neo localizadas"
  },
  {
    "code": "R23",
    "description": "Otros cambios en la piel"
  },
  {
    "code": "R25",
    "description": "Movimientos involuntarios anormales"
  },
  {
    "code": "R26",
    "description": "Anormalidades de la marcha y de la movilidad"
  },
  {
    "code": "R27",
    "description": "Otras fallas de coordinaci√≥n"
  },
  {
    "code": "R29",
    "description": "Otros s√≠ntomas y signos que involucran los sistemas nervioso y  osteomuscular"
  },
  {
    "code": "R30",
    "description": "Dolor asociado con la micci√≥n"
  },
  {
    "code": "R31",
    "description": "Hematuria, no especificada"
  },
  {
    "code": "R32",
    "description": "Incontinencia urinaria, no especificada"
  },
  {
    "code": "R33",
    "description": "Retenci√≥n de orina"
  },
  {
    "code": "R34",
    "description": "Anuria y oliguria"
  },
  {
    "code": "R35",
    "description": "Poliuria"
  },
  {
    "code": "R36",
    "description": "Descarga uretral"
  },
  {
    "code": "R39",
    "description": "Otros s√≠ntomas y signos que involucran el sistema urinario"
  },
  {
    "code": "R40",
    "description": "Somnolencia, estupor y coma"
  },
  {
    "code": "R41",
    "description": "Otros s√≠ntomas y signos que involucran la funci√≥n cognoscitiva y la  conciencia"
  },
  {
    "code": "R42",
    "description": "Mareo y desvanecimiento"
  },
  {
    "code": "R43",
    "description": "Trastornos del olfato y del gusto"
  },
  {
    "code": "R44",
    "description": "Otros s√≠ntomas y signos que involucran las sensaciones y percepciones  generales"
  },
  {
    "code": "R45",
    "description": "S√≠ntomas y signos que involucran el estado emocional"
  },
  {
    "code": "R46",
    "description": "S√≠ntomas y signos que involucran la apariencia y el comportamiento"
  },
  {
    "code": "R47",
    "description": "Alteraciones del habla, no clasificadas en otra parte"
  },
  {
    "code": "R48",
    "description": "Dislexia y otras disfunciones simb√≥licas, no clasificadas en otra parte"
  },
  {
    "code": "R49",
    "description": "Alteraciones de la voz"
  },
  {
    "code": "R50",
    "description": "Fiebre de origen desconocido"
  },
  {
    "code": "R51",
    "description": "Cefalea"
  },
  {
    "code": "R52",
    "description": "Dolor, no clasificado en otra parte"
  },
  {
    "code": "R53",
    "description": "Malestar y fatiga"
  },
  {
    "code": "R54",
    "description": "Senilidad"
  },
  {
    "code": "R55",
    "description": "S√≠ncope y colapso"
  },
  {
    "code": "R56",
    "description": "Convulsiones, no clasificadas en otra parte"
  },
  {
    "code": "R57",
    "description": "Choque, no clasificado en otra parte"
  },
  {
    "code": "R58",
    "description": "Hemorragia, no clasificada en otra parte"
  },
  {
    "code": "R59",
    "description": "Adenomegalia"
  },
  {
    "code": "R60",
    "description": "Edema, no clasificado en otra parte"
  },
  {
    "code": "R61",
    "description": "Hiperhidrosis"
  },
  {
    "code": "R62",
    "description": "Falta del desarrollo fisiol√≥gico normal esperado"
  },
  {
    "code": "R63",
    "description": "S√≠ntomas y signos concernientes a la alimentaci√≥n y a la ingesti√≥n de l√≠quidos"
  },
  {
    "code": "R64",
    "description": "Caquexia"
  },
  {
    "code": "R68",
    "description": "Otros s√≠ntomas y signos generales"
  },
  {
    "code": "R69",
    "description": "Causas de morbilidad desconocidas y no especificadas"
  },
  {
    "code": "R70",
    "description": "Velocidad de eritrosedimentaci√≥n elevada y otras anormalidades de la viscosidad del plasma"
  },
  {
    "code": "R71",
    "description": "Anormalidad de los eritrocitos"
  },
  {
    "code": "R72",
    "description": "Anormalidades de los leucocitos, no clasificadas en otra parte"
  },
  {
    "code": "R73",
    "description": "Nivel elevado de glucosa en sangre"
  },
  {
    "code": "R74",
    "description": "Nivel anormal de enzimas en suero"
  },
  {
    "code": "R75",
    "description": "Evidencias de laboratorio del virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "R76",
    "description": "Otros hallazgos inmunol√≥gicos anormales en suero"
  },
  {
    "code": "R77",
    "description": "Otras anormalidades de las prote√≠nas plasm√°ticas"
  },
  {
    "code": "R78",
    "description": "Hallazgo de drogas y otras sustancias que normalmente no se encuentran en  la sangre"
  },
  {
    "code": "R79",
    "description": "Otros hallazgos anormales en la qu√≠mica sangu√≠nea"
  },
  {
    "code": "R80",
    "description": "Proteinuria aislada"
  },
  {
    "code": "R81",
    "description": "Glucosuria"
  },
  {
    "code": "R82",
    "description": "Otros hallazgos anormales en la orina"
  },
  {
    "code": "R83",
    "description": "Hallazgos anormales en el l√≠quido cefalorraqu√≠deo"
  },
  {
    "code": "R84",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos respiratorios y  tor√°cicos"
  },
  {
    "code": "R85",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos digestivos y de la cavidad abdominal"
  },
  {
    "code": "R86",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales masculinos"
  },
  {
    "code": "R87",
    "description": "Hallazgos anormales en muestras tomadas de √≥rganos genitales femeninos"
  },
  {
    "code": "R89",
    "description": "Hallazgos anormales en muestras tomadas de otros √≥rganos, sistemas y tejidos"
  },
  {
    "code": "R90",
    "description": "Hallazgos anormales en diagn√≥stico por imagen del sistema nervioso central"
  },
  {
    "code": "R91",
    "description": "Hallazgos anormales en diagn√≥stico por imagen del pulm√≥n"
  },
  {
    "code": "R92",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de la mama"
  },
  {
    "code": "R93",
    "description": "Hallazgos anormales en diagn√≥stico por imagen de otras estructuras del  cuerpo"
  },
  {
    "code": "R94",
    "description": "Resultados anormales en estudios funcionales"
  },
  {
    "code": "R95",
    "description": "S√≠ndrome de la muerte s√∫bita infantil"
  },
  {
    "code": "R96",
    "description": "Otras muertes s√∫bitas de causa desconocida"
  },
  {
    "code": "R98",
    "description": "Muerte sin asistencia"
  },
  {
    "code": "R99",
    "description": "Otras causas mal definidas y las no especificadas de mortalidad"
  },
  {
    "code": "S00",
    "description": "Traumatismo superficial de la cabeza"
  },
  {
    "code": "S01",
    "description": "Herida de la cabeza"
  },
  {
    "code": "S02",
    "description": "Fractura de huesos del cr√°neo y de la cara"
  },
  {
    "code": "S03",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y de ligamentos de la cabeza"
  },
  {
    "code": "S04",
    "description": "Traumatismo de nervios craneales"
  },
  {
    "code": "S05",
    "description": "Traumatismo del ojo y de la √≥rbita"
  },
  {
    "code": "S06",
    "description": "Traumatismo intracraneal"
  },
  {
    "code": "S07",
    "description": "Traumatismo por aplastamiento de la cabeza"
  },
  {
    "code": "S08",
    "description": "Amputaci√≥n traum√°tica de parte de la cabeza"
  },
  {
    "code": "S09",
    "description": "Otros traumatismos y los no especificados de la cabeza"
  },
  {
    "code": "S10",
    "description": "Traumatismo superficial del cuello"
  },
  {
    "code": "S11",
    "description": "Herida del cuello"
  },
  {
    "code": "S12",
    "description": "Fractura del cuello"
  },
  {
    "code": "S13",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos del cuello"
  },
  {
    "code": "S14",
    "description": "Traumatismo de la m√©dula espinal y de nervios a nivel del cuello"
  },
  {
    "code": "S15",
    "description": "Traumatismo de vasos sangu√≠neos a nivel del cuello"
  },
  {
    "code": "S16",
    "description": "Traumatismo de tend√≥n y m√∫sculos a nivel del cuello"
  },
  {
    "code": "S17",
    "description": "Traumatismo por aplastamiento del cuello"
  },
  {
    "code": "S18",
    "description": "Amputaci√≥n traum√°tica a nivel del cuello"
  },
  {
    "code": "S19",
    "description": "Otros traumatismos y los no especificados del cuello"
  },
  {
    "code": "S20",
    "description": "Traumatismo superficial del t√≥rax"
  },
  {
    "code": "S21",
    "description": "Herida del t√≥rax"
  },
  {
    "code": "S22",
    "description": "Fractura de las costillas, del estern√≥n y de la columna tor√°cica [dorsal]"
  },
  {
    "code": "S23",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos del t√≥rax"
  },
  {
    "code": "S24",
    "description": "Traumatismo de nervios y de la m√©dula espinal a nivel del t√≥rax"
  },
  {
    "code": "S25",
    "description": "Traumatismo de vasos sangu√≠neos del t√≥rax"
  },
  {
    "code": "S26",
    "description": "Traumatismo del coraz√≥n"
  },
  {
    "code": "S27",
    "description": "Traumatismo de otros √≥rganos intrator√°cicos y de los no especificados"
  },
  {
    "code": "S28",
    "description": "Traumatismo por aplastamiento del t√≥rax y amputaci√≥n traum√°tica de parte del t√≥rax"
  },
  {
    "code": "S29",
    "description": "Otros traumatismos y los no especificados del t√≥rax"
  },
  {
    "code": "S30",
    "description": "Traumatismo superficial del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S31",
    "description": "Herida del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S32",
    "description": "Fractura de la columna lumbar y de la pelvis"
  },
  {
    "code": "S33",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos de la columna lumbar y de la pelvis"
  },
  {
    "code": "S34",
    "description": ""
  },
  {
    "code": "S35",
    "description": "Traumatismo de vasos sangu√≠neos a nivel del abdomen, de la regi√≥n  lumbosacra y de la pelvis"
  },
  {
    "code": "S36",
    "description": "Traumatismo de √≥rganos intraabdominales"
  },
  {
    "code": "S37",
    "description": "Traumatismo del aparato urinario y de los √≥rganos p√©lvicos"
  },
  {
    "code": "S38",
    "description": ""
  },
  {
    "code": "S39",
    "description": "Otros traumatismos y los no especificados del abdomen, de la regi√≥n lumbosacra y de la pelvis"
  },
  {
    "code": "S40",
    "description": "Traumatismo superficial del hombro y del brazo"
  },
  {
    "code": "S41",
    "description": "Herida del hombro y del brazo"
  },
  {
    "code": "S42",
    "description": "Fractura del hombro y del brazo"
  },
  {
    "code": "S43",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos de la cintura escapular"
  },
  {
    "code": "S44",
    "description": "Traumatismo de nervios a nivel del hombro y del brazo"
  },
  {
    "code": "S45",
    "description": "Traumatismo de vasos sangu√≠neos a nivel del hombro y del brazo"
  },
  {
    "code": "S46",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel del hombro y del brazo"
  },
  {
    "code": "S47",
    "description": "Traumatismo por aplastamiento del hombro y del brazo"
  },
  {
    "code": "S48",
    "description": "Amputaci√≥n traum√°tica del hombro y del brazo"
  },
  {
    "code": "S49",
    "description": "Otros traumatismos y los no especificados del hombro y del brazo"
  },
  {
    "code": "S50",
    "description": "Traumatismo superficial del antebrazo y del codo"
  },
  {
    "code": "S51",
    "description": "Herida del antebrazo y del codo"
  },
  {
    "code": "S52",
    "description": "Fractura del antebrazo"
  },
  {
    "code": "S53",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos del codo"
  },
  {
    "code": "S54",
    "description": "Traumatismo de nervios a nivel del antebrazo"
  },
  {
    "code": "S55",
    "description": "Traumatismo de los vasos sangu√≠neos a nivel del antebrazo"
  },
  {
    "code": "S56",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel del antebrazo"
  },
  {
    "code": "S57",
    "description": "Traumatismo por aplastamiento del antebrazo"
  },
  {
    "code": "S58",
    "description": "Amputaci√≥n traum√°tica del antebrazo"
  },
  {
    "code": "S59",
    "description": "Otros traumatismos y los no especificados del antebrazo"
  },
  {
    "code": "S60",
    "description": "Traumatismo superficial de la mu√±eca y de la mano"
  },
  {
    "code": "S61",
    "description": "Herida de la mu√±eca y de la mano"
  },
  {
    "code": "S62",
    "description": "Fractura a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S63",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S64",
    "description": "Traumatismo de nervios a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S65",
    "description": "Traumatismo de vasos sangu√≠neos a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S66",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel de la mu√±eca y de la mano"
  },
  {
    "code": "S67",
    "description": "Traumatismo por aplastamiento de la mu√±eca y de la mano"
  },
  {
    "code": "S68",
    "description": "Amputaci√≥n traum√°tica de la mu√±eca y de la mano"
  },
  {
    "code": "S69",
    "description": "Otros traumatismos y los no especificados de la mu√±eca y de la mano"
  },
  {
    "code": "S70",
    "description": "Traumatismo superficial de la cadera y del muslo"
  },
  {
    "code": "S71",
    "description": "Herida de la cadera y del muslo"
  },
  {
    "code": "S72",
    "description": "Fractura del f√©mur"
  },
  {
    "code": "S73",
    "description": "Luxaci√≥n, esguince y torcedura de la articulaci√≥n y de los ligamentos de la cadera"
  },
  {
    "code": "S74",
    "description": "Traumatismo de nervios a nivel de la cadera y del muslo"
  },
  {
    "code": "S75",
    "description": "Traumatismo de vasos sangu√≠neos a nivel de la cadera y del muslo"
  },
  {
    "code": "S76",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel de la cadera y del muslo"
  },
  {
    "code": "S77",
    "description": "Traumatismo por aplastamiento de la cadera y del muslo"
  },
  {
    "code": "S78",
    "description": "Amputaci√≥n traum√°tica de la cadera y del muslo"
  },
  {
    "code": "S79",
    "description": "Otros traumatismos y los no especificados de la cadera y del muslo"
  },
  {
    "code": "S80",
    "description": "Traumatismo superficial de la pierna"
  },
  {
    "code": "S81",
    "description": "Herida de la pierna"
  },
  {
    "code": "S82",
    "description": "Fractura de la pierna, inclusive el tobillo"
  },
  {
    "code": "S83",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos de la rodilla"
  },
  {
    "code": "S84",
    "description": "Traumatismo de nervios a nivel de la pierna"
  },
  {
    "code": "S85",
    "description": "Traumatismo de vasos sangu√≠neos a nivel de la pierna"
  },
  {
    "code": "S86",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel de la pierna"
  },
  {
    "code": "S87",
    "description": "Traumatismo por aplastamiento de la pierna"
  },
  {
    "code": "S88",
    "description": "Amputaci√≥n traum√°tica de la pierna"
  },
  {
    "code": "S89",
    "description": "Otros traumatismos y los no especificados de la pierna"
  },
  {
    "code": "S90",
    "description": "Traumatismo superficial del tobillo y del pie"
  },
  {
    "code": "S91",
    "description": "Herida del tobillo y del pie"
  },
  {
    "code": "S92",
    "description": "Fractura del pie, excepto del tobillo"
  },
  {
    "code": "S93",
    "description": "Luxaci√≥n, esguince y torcedura de articulaciones y ligamentos del tobillo y del pie"
  },
  {
    "code": "S94",
    "description": "Traumatismo de nervios a nivel del pie y del tobillo"
  },
  {
    "code": "S95",
    "description": "Traumatismo de vasos sangu√≠neos a nivel del pie y del tobillo"
  },
  {
    "code": "S96",
    "description": "Traumatismo de tend√≥n y m√∫sculo a nivel del pie y del tobillo"
  },
  {
    "code": "S97",
    "description": "Traumatismo por aplastamiento del pie y del tobillo"
  },
  {
    "code": "S98",
    "description": "Amputaci√≥n traum√°tica del pie y del tobillo"
  },
  {
    "code": "S99",
    "description": "Otros traumatismos y los no especificados del pie y del tobillo"
  },
  {
    "code": "T00",
    "description": "Traumatismos superficiales que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T01",
    "description": "Heridas que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T02",
    "description": "Fracturas que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T03",
    "description": "Luxaciones, torceduras y esguinces que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T04",
    "description": "Traumatismos por aplastamiento que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T05",
    "description": "Amputaciones traum√°ticas que afectan m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T06",
    "description": "Otros traumatismos que afectan m√∫ltiples regiones del cuerpo, no clasificados en otra parte"
  },
  {
    "code": "T07",
    "description": "Traumatismos m√∫ltiples, no especificados"
  },
  {
    "code": "T08",
    "description": "Fractura de la columna vertebral, nivel no especificado"
  },
  {
    "code": "T09",
    "description": "Otros traumatismos de la columna vertebral y del tronco, nivel no especificado"
  },
  {
    "code": "T10",
    "description": "Fractura de miembro superior, nivel no especificado"
  },
  {
    "code": "T11",
    "description": "Otros traumatismos de miembro superior, nivel no especificado"
  },
  {
    "code": "T12",
    "description": "Fractura de miembro inferior, nivel no especificado"
  },
  {
    "code": "T13",
    "description": "Otros traumatismos de miembro inferior, nivel no especificado"
  },
  {
    "code": "T14",
    "description": "Traumatismo de regiones no especificadas del cuerpo"
  },
  {
    "code": "T15",
    "description": "Cuerpo extra√±o en parte externa del ojo"
  },
  {
    "code": "T16",
    "description": "Cuerpo extra√±o en el o√≠do"
  },
  {
    "code": "T17",
    "description": "Cuerpo extra√±o en las v√≠as respiratorias"
  },
  {
    "code": "T18",
    "description": "Cuerpo extra√±o en el tubo digestivo"
  },
  {
    "code": "T19",
    "description": "Cuerpo extra√±o en las v√≠as genitourinarias"
  },
  {
    "code": "T20",
    "description": "Quemadura y corrosi√≥n de la cabeza y del cuello"
  },
  {
    "code": "T21",
    "description": "Quemadura y corrosi√≥n del tronco"
  },
  {
    "code": "T22",
    "description": "Quemadura y corrosi√≥n del hombro y miembro superior, excepto de la mu√±eca y de la mano"
  },
  {
    "code": "T23",
    "description": "Quemadura y corrosi√≥n de la mu√±eca y de la mano"
  },
  {
    "code": "T24",
    "description": "Quemadura y corrosi√≥n de la cadera y miembro inferior, excepto tobillo y pie"
  },
  {
    "code": "T25",
    "description": "Quemadura y corrosi√≥n del tobillo y del pie"
  },
  {
    "code": "T26",
    "description": "Quemadura y corrosi√≥n limitada al ojo y sus anexos"
  },
  {
    "code": "T27",
    "description": "Quemadura y corrosi√≥n de las v√≠as respiratorias"
  },
  {
    "code": "T28",
    "description": "Quemadura y corrosi√≥n de otros √≥rganos internos"
  },
  {
    "code": "T29",
    "description": "Quemaduras y corrosiones de m√∫ltiples regiones del cuerpo"
  },
  {
    "code": "T30",
    "description": "Quemadura y corrosi√≥n, regi√≥n del cuerpo no especificada"
  },
  {
    "code": "T31",
    "description": ""
  },
  {
    "code": "T32",
    "description": "Corrosiones clasificadas seg√∫n la extensi√≥n de la superficie del cuerpo afectada"
  },
  {
    "code": "T33",
    "description": "Congelamiento superficial"
  },
  {
    "code": "T34",
    "description": "Congelamiento con necrosis tisular"
  },
  {
    "code": "T35",
    "description": "Congelamiento que afecta m√∫ltiples regiones del cuerpo y congelamiento no especificado"
  },
  {
    "code": "T36",
    "description": "Envenenamiento por antibi√≥ticos sist√©micos"
  },
  {
    "code": "T37",
    "description": "Envenenamiento por otros antiinfecciosos y antiparasitarios sist√©micos"
  },
  {
    "code": "T38",
    "description": "Envenenamiento por hormonas y sus sustitutos y antagonistas sint√©ticos, no clasificados en otra parte"
  },
  {
    "code": "T39",
    "description": "Envenenamiento por analg√©sicos no narc√≥ticos, antipir√©ticos y antirreum√°ticos"
  },
  {
    "code": "T40",
    "description": "Envenenamiento por narc√≥ticos y psicodisl√©pticos [alucin√≥genos]"
  },
  {
    "code": "T41",
    "description": "Envenenamiento por anest√©sicos y gases terap√©uticos"
  },
  {
    "code": "T42",
    "description": "Envenenamiento por antiepil√©pticos, hipn√≥ticos-sedantes y drogas antiparkinsonianas"
  },
  {
    "code": "T43",
    "description": "Envenenamiento por Envenenamiento por psicotr√≥picos, no clasificados en otra parte"
  },
  {
    "code": "T44",
    "description": "Envenenamiento por drogas que afectan principalmente el sistema nervioso  aut√≥nomo"
  },
  {
    "code": "T45",
    "description": ""
  },
  {
    "code": "T46",
    "description": "Envenenamiento por agentes que afectan principalmente el sistema  cardiovascular"
  },
  {
    "code": "T47",
    "description": "Envenenamiento por agentes que afectan principalmente el sistema  gastrointestinal"
  },
  {
    "code": "T48",
    "description": ""
  },
  {
    "code": "T49",
    "description": ""
  },
  {
    "code": "T50",
    "description": "Envenenamiento por diur√©ticos y otras drogas, medicamentos y sustancias biol√≥gicas no especificadas"
  },
  {
    "code": "T51",
    "description": "Envenenamiento por Efecto t√≥xico del alcohol"
  },
  {
    "code": "T52",
    "description": "Envenenamiento por Efecto t√≥xico de disolventes org√°nicos"
  },
  {
    "code": "T53",
    "description": "Envenenamiento por Efecto t√≥xico de los derivados halogenados de los hidrocarburos alif√°ticos y arom√°ticos"
  },
  {
    "code": "T54",
    "description": "Envenenamiento por Efecto t√≥xico de sustancias corrosivas"
  },
  {
    "code": "T55",
    "description": "Envenenamiento por Efecto t√≥xico de detergentes y jabones"
  },
  {
    "code": "T56",
    "description": "Envenenamiento por Efecto t√≥xico de metales"
  },
  {
    "code": "T57",
    "description": "Envenenamiento por Efecto t√≥xico de otras sustancias inorg√°nicas"
  },
  {
    "code": "T58",
    "description": "Envenenamiento por Efecto t√≥xico del mon√≥xido de carbono"
  },
  {
    "code": "T59",
    "description": "Envenenamiento por Efecto t√≥xico de otros gases, humos y vapores"
  },
  {
    "code": "T60",
    "description": "Envenenamiento por Efecto t√≥xico de plaguicidas [pesticidas]"
  },
  {
    "code": "T61",
    "description": "Envenenamiento por Efecto t√≥xico de sustancias nocivas ingeridas como alimentos marinos"
  },
  {
    "code": "T62",
    "description": "Envenenamiento por Efecto t√≥xico de otras sustancias nocivas ingeridas como alimento"
  },
  {
    "code": "T63",
    "description": "Envenenamiento por Efecto t√≥xico del contacto con animales venenosos"
  },
  {
    "code": "T64",
    "description": "Envenenamiento por Efecto t√≥xico de aflatoxina y otras micotoxinas contaminantes de alimentos"
  },
  {
    "code": "T65",
    "description": "Envenenamiento por Efecto t√≥xico de otras sustancias y las no especificadas"
  },
  {
    "code": "T66",
    "description": "Efectos no especificados de la radiaci√≥n"
  },
  {
    "code": "T67",
    "description": "Efectos del calor y de la luz"
  },
  {
    "code": "T68",
    "description": "Hipotermia"
  },
  {
    "code": "T69",
    "description": "Otros efectos de la reducci√≥n de la temperatura"
  },
  {
    "code": "T70",
    "description": "Efectos de la presi√≥n del aire y de la presi√≥n del agua"
  },
  {
    "code": "T71",
    "description": "Asfixia"
  },
  {
    "code": "T73",
    "description": "Efectos de otras privaciones"
  },
  {
    "code": "T74",
    "description": "S√≠ndromes del maltrato"
  },
  {
    "code": "T75",
    "description": "Efectos de otras causas externas"
  },
  {
    "code": "T78",
    "description": "Efectos adversos, no clasificados en otra parte"
  },
  {
    "code": "T79",
    "description": "Algunas complicaciones precoces de traumatismos, no clasificadas en otra  parte"
  },
  {
    "code": "T80",
    "description": "Complicaciones consecutivas a infusi√≥n, transfusi√≥n e inyecci√≥n terap√©utica"
  },
  {
    "code": "T81",
    "description": "Complicaciones de procedimientos, no clasificadas en otra parte"
  },
  {
    "code": "T82",
    "description": "Complicaciones de dispositivos prot√©sicos, implantes e injertos  cardiovasculares"
  },
  {
    "code": "T83",
    "description": "Complicaciones de dispositivos, implantes e injertos genitourinarios"
  },
  {
    "code": "T84",
    "description": "Complicaciones de dispositivos prot√©sicos, implantes e injertos ortop√©dicos internos"
  },
  {
    "code": "T85",
    "description": "Complicaciones de otros dispositivos prot√©sicos, implantes e injertos internos"
  },
  {
    "code": "T86",
    "description": "Falla y rechazo del trasplante de √≥rganos y tejidos"
  },
  {
    "code": "T87",
    "description": "Complicaciones peculiares de la reinserci√≥n y amputaci√≥n"
  },
  {
    "code": "T88",
    "description": "Otras complicaciones de la atenci√≥n m√©dica y quir√∫rgica, no clasificadas en  otra parte"
  },
  {
    "code": "T90",
    "description": "Secuelas de traumatismos de la cabeza"
  },
  {
    "code": "T91",
    "description": "Secuelas de traumatismos del cuello y del tronco"
  },
  {
    "code": "T92",
    "description": "Secuelas de traumatismos de miembro superior"
  },
  {
    "code": "T93",
    "description": "Secuelas de traumatismos de miembro inferior"
  },
  {
    "code": "T94",
    "description": "Secuelas de traumatismos que afectan m√∫ltiples regiones del cuerpo y las no especificadas"
  },
  {
    "code": "T95",
    "description": "Secuelas de quemaduras, corrosiones y congelamientos"
  },
  {
    "code": "T96",
    "description": "Secuelas de envenenamientos por drogas, medicamentos y sustancias  biol√≥gicas"
  },
  {
    "code": "T97",
    "description": "Secuelas de efectos t√≥xicos de sustancias de procedencia principalmente no medicinal"
  },
  {
    "code": "T98",
    "description": "Secuelas de otros efectos y los no especificados de causas externas"
  },
  {
    "code": "V01",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V02",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V03",
    "description": "Peat√≥n lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V04",
    "description": "Peat√≥n lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V05",
    "description": "Peat√≥n lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V06",
    "description": "Peat√≥n lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V09",
    "description": "Peat√≥n lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V10",
    "description": "Ciclista lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V11",
    "description": "Ciclista lesionado por colisi√≥n con otro ciclista"
  },
  {
    "code": "V12",
    "description": "Ciclista lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V13",
    "description": "Ciclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V14",
    "description": "Ciclista lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V15",
    "description": "Ciclista lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V16",
    "description": "Ciclista lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V17",
    "description": "Ciclista lesionado por colisi√≥n con objeto estacionado o fijo,"
  },
  {
    "code": "V18",
    "description": "Ciclista lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V19",
    "description": "Ciclista lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V20",
    "description": "Motociclista lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V21",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de pedal,"
  },
  {
    "code": "V22",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V23",
    "description": "Motociclista lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V24",
    "description": "Motociclista lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V25",
    "description": "Motociclista lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V26",
    "description": "Motociclista lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V27",
    "description": "Motociclista lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V28",
    "description": "Motociclista lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V29",
    "description": "Motociclista lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V30",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V31",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V32",
    "description": ""
  },
  {
    "code": "V33",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V34",
    "description": ""
  },
  {
    "code": "V35",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V36",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V37",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V38",
    "description": "Ocupante de veh√≠culo de motor de tres ruedas lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V39",
    "description": ""
  },
  {
    "code": "V40",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V41",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V42",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V43",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con otro autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V44",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V45",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V46",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V47",
    "description": "Ocupante de autom√≥vil lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V48",
    "description": "Ocupante de autom√≥vil lesionado en accidente de transporte sin colisi√≥n,"
  },
  {
    "code": "V49",
    "description": "Ocupante de autom√≥vil lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V50",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V51",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V52",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V53",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V54",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V55",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V56",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V57",
    "description": "Ocupante de camioneta o furgoneta lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V58",
    "description": "Ocupante de camioneta o furgoneta lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V59",
    "description": "Ocupante de camioneta o furgoneta lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V60",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V61",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V62",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V63",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V64",
    "description": ""
  },
  {
    "code": "V65",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V66",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con otros veh√≠culos sin  motor"
  },
  {
    "code": "V67",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V68",
    "description": "Ocupante de veh√≠culo de transporte pesado lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V69",
    "description": ""
  },
  {
    "code": "V70",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con peat√≥n o animal"
  },
  {
    "code": "V71",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de pedal"
  },
  {
    "code": "V72",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de motor de dos o tres ruedas"
  },
  {
    "code": "V73",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con autom√≥vil, camioneta o furgoneta"
  },
  {
    "code": "V74",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con veh√≠culo de transporte pesado o autob√∫s"
  },
  {
    "code": "V75",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con tren o veh√≠culo de rieles"
  },
  {
    "code": "V76",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con otros veh√≠culos sin motor"
  },
  {
    "code": "V77",
    "description": "Ocupante de autob√∫s lesionado por colisi√≥n con objeto fijo o estacionado"
  },
  {
    "code": "V78",
    "description": "Ocupante de autob√∫s lesionado en accidente de transporte sin colisi√≥n"
  },
  {
    "code": "V79",
    "description": "Ocupante de autob√∫s lesionado en otros accidentes de transporte, y en los no especificados"
  },
  {
    "code": "V80",
    "description": "Jinete u ocupante de veh√≠culo de tracci√≥n animal lesionado en accidente de transporte"
  },
  {
    "code": "V81",
    "description": "Ocupante de tren o veh√≠culo de rieles lesionado en accidente de transporte"
  },
  {
    "code": "V82",
    "description": "Ocupante de tranv√≠a lesionado en accidente de transporte"
  },
  {
    "code": "V83",
    "description": ""
  },
  {
    "code": "V84",
    "description": ""
  },
  {
    "code": "V85",
    "description": "Ocupante de veh√≠culo especial (de motor) para construcci√≥n lesionado en accidente de transporte"
  },
  {
    "code": "V86",
    "description": ""
  },
  {
    "code": "V87",
    "description": "Accidente de tr√°nsito de tipo especificado, pero donde se desconoce el modo de transporte de la v√≠ctima"
  },
  {
    "code": "V88",
    "description": "Accidente no de tr√°nsito de tipo especificado, pero donde se desconoce el modo de transporte  de la v√≠ctima"
  },
  {
    "code": "V89",
    "description": "Accidente de veh√≠culo de motor o sin motor, tipo de veh√≠culo no especificado"
  },
  {
    "code": "V90",
    "description": "Accidente de embarcaci√≥n que causa ahogamiento y sumersi√≥n"
  },
  {
    "code": "V91",
    "description": "Accidente de embarcaci√≥n que causa otros tipos de traumatismo"
  },
  {
    "code": "V92",
    "description": "Ahogamiento y sumersi√≥n relacionados con transporte por agua, sin accidente a la embarcaci√≥n"
  },
  {
    "code": "V93",
    "description": "Accidente en una embarcaci√≥n, sin accidente a la embarcaci√≥n, que no causa ahogamiento o sumersi√≥n"
  },
  {
    "code": "V94",
    "description": "Otros accidentes de transporte por agua, y los no especificados"
  },
  {
    "code": "V95",
    "description": "Accidente de aeronave de motor, con ocupante lesionado"
  },
  {
    "code": "V96",
    "description": "Accidente de aeronave sin motor, con ocupante lesionado"
  },
  {
    "code": "V97",
    "description": "Otros accidentes de transporte a√©reo especificados"
  },
  {
    "code": "V98",
    "description": "Otros accidentes de transporte especificados"
  },
  {
    "code": "V99",
    "description": "Accidente de transporte no especificado"
  },
  {
    "code": "W00",
    "description": "Ca√≠da en el mismo nivel por hielo o nieve"
  },
  {
    "code": "W01",
    "description": "Ca√≠da en el mismo nivel por deslizamiento, tropez√≥n y traspi√©"
  },
  {
    "code": "W02",
    "description": "Ca√≠da por patines para hielo, esqu√≠s, patines de ruedas o patineta"
  },
  {
    "code": "W03",
    "description": "Otras ca√≠das en el mismo nivel por colisi√≥n con o por empuj√≥n de otra persona"
  },
  {
    "code": "W04",
    "description": "Ca√≠da al ser trasladado o sostenido por otras personas"
  },
  {
    "code": "W05",
    "description": "Ca√≠da que implica silla de ruedas"
  },
  {
    "code": "W06",
    "description": "Ca√≠da que implica cama"
  },
  {
    "code": "W07",
    "description": "Ca√≠da que implica silla"
  },
  {
    "code": "W08",
    "description": "Ca√≠da que implica otro mueble"
  },
  {
    "code": "W09",
    "description": "Ca√≠da que implica equipos para juegos infantiles"
  },
  {
    "code": "W10",
    "description": "Ca√≠da en o desde escalera y escalones"
  },
  {
    "code": "W11",
    "description": "Ca√≠da en o desde escaleras manuales"
  },
  {
    "code": "W12",
    "description": "Ca√≠da en o desde andamio"
  },
  {
    "code": "W13",
    "description": "Ca√≠da desde, fuera o a trav√©s de un edificio u otra construcci√≥n"
  },
  {
    "code": "W14",
    "description": "Ca√≠da desde un √°rbol"
  },
  {
    "code": "W15",
    "description": "Ca√≠da desde pe√±asco"
  },
  {
    "code": "W16",
    "description": "Salto o zambullida dentro del agua que causa otro traumatismo sin sumersi√≥n o ahogamiento"
  },
  {
    "code": "W17",
    "description": "Otras ca√≠das de un nivel a otro"
  },
  {
    "code": "W18",
    "description": "Otras ca√≠das en el mismo nivel"
  },
  {
    "code": "W19",
    "description": "Ca√≠da no especificada"
  },
  {
    "code": "W20",
    "description": "Golpe por objeto arrojado, proyectado o que cae"
  },
  {
    "code": "W21",
    "description": "Golpe contra o golpeado por equipo para deportes"
  },
  {
    "code": "W22",
    "description": "Golpe contra o golpeado por otros objetos"
  },
  {
    "code": "W23",
    "description": "Atrapado, aplastado, trabado o apretado en o entre objetos"
  },
  {
    "code": "W24",
    "description": "Contacto traum√°tico con dispositivos de elevaci√≥n y transmisi√≥n, no clasificados en otra parte"
  },
  {
    "code": "W25",
    "description": "Contacto traum√°tico con vidrio cortante"
  },
  {
    "code": "W26",
    "description": "Contacto traum√°tico con cuchillo, espada, daga o pu√±al"
  },
  {
    "code": "W27",
    "description": "Contacto traum√°tico con herramientas manuales sin motor"
  },
  {
    "code": "W28",
    "description": "Contacto traum√°tico con cortadora de c√©sped, con motor"
  },
  {
    "code": "W29",
    "description": "Contacto traum√°tico con otras herramientas manuales y artefactos del hogar, con motor"
  },
  {
    "code": "W30",
    "description": "Contacto traum√°tico con maquinaria agr√≠cola"
  },
  {
    "code": "W31",
    "description": "Contacto traum√°tico con otras maquinarias, y las no especificadas"
  },
  {
    "code": "W32",
    "description": "Disparo de arma corta"
  },
  {
    "code": "W33",
    "description": "Disparo de rifle, escopeta y arma larga"
  },
  {
    "code": "W34",
    "description": "Disparo de otras armas de fuego, y las no especificadas"
  },
  {
    "code": "W35",
    "description": "Explosi√≥n y rotura de caldera"
  },
  {
    "code": "W36",
    "description": "Explosi√≥n y rotura de cilindro con gas"
  },
  {
    "code": "W37",
    "description": "Explosi√≥n y rotura de neum√°tico, tubo o manguera de goma presurizada"
  },
  {
    "code": "W38",
    "description": "Explosi√≥n y rotura de otros dispositivos presurizados especificados"
  },
  {
    "code": "W39",
    "description": "Explosi√≥n de fuegos artificiales"
  },
  {
    "code": "W40",
    "description": "Explosi√≥n de otros materiales"
  },
  {
    "code": "W41",
    "description": "Exposici√≥n a chorro de alta presi√≥n"
  },
  {
    "code": "W42",
    "description": "Exposici√≥n al ruido"
  },
  {
    "code": "W43",
    "description": "Exposici√≥n a vibraciones"
  },
  {
    "code": "W44",
    "description": "Cuerpo extra√±o que penetra por el ojo u orificio natural"
  },
  {
    "code": "W45",
    "description": "Cuerpo extra√±o que penetra a trav√©s de la piel"
  },
  {
    "code": "W49",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas inanimadas, y las no especificadas"
  },
  {
    "code": "W50",
    "description": "Aporreo, golpe, mordedura, patada, rasgu√±o o torcedura infligidos por otra persona"
  },
  {
    "code": "W51",
    "description": "Choque o empell√≥n contra otra persona"
  },
  {
    "code": "W52",
    "description": "Persona aplastada, empujada o pisoteada por una multitud o estampida humana"
  },
  {
    "code": "W53",
    "description": "Mordedura de rata"
  },
  {
    "code": "W54",
    "description": "Mordedura o ataque de perro"
  },
  {
    "code": "W55",
    "description": "Mordedura o ataque de otros mam√≠feros"
  },
  {
    "code": "W56",
    "description": "Contacto traum√°tico con animales marinos"
  },
  {
    "code": "W57",
    "description": "Mordedura o picadura de insectos y otros artr√≥podos no venenosos"
  },
  {
    "code": "W58",
    "description": "Mordedura o ataque de cocodrilo o caim√°n"
  },
  {
    "code": "W59",
    "description": "Mordedura o aplastamiento por otros reptiles"
  },
  {
    "code": "W60",
    "description": "Contacto traum√°tico con aguijones, espinas u hojas cortantes de plantas"
  },
  {
    "code": "W64",
    "description": "Exposici√≥n a otras fuerzas mec√°nicas animadas, y las no especificadas"
  },
  {
    "code": "W65",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en la ba√±era"
  },
  {
    "code": "W66",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en la ba√±era"
  },
  {
    "code": "W67",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en una piscina"
  },
  {
    "code": "W68",
    "description": "Ahogamiento y sumersi√≥n consecutivos a ca√≠da en una piscina"
  },
  {
    "code": "W69",
    "description": "Ahogamiento y sumersi√≥n mientras se est√° en aguas naturales"
  },
  {
    "code": "W70",
    "description": "Ahogamiento y sumersi√≥n posterior a ca√≠da en aguas naturales"
  },
  {
    "code": "W73",
    "description": "Otros ahogamientos y sumersiones especificados"
  },
  {
    "code": "W74",
    "description": "Ahogamiento y sumersi√≥n no especificados"
  },
  {
    "code": "W75",
    "description": "Sofocaci√≥n y estrangulamiento accidental en la cama"
  },
  {
    "code": "W76",
    "description": "Otros estrangulamientos y ahorcamientos accidentales"
  },
  {
    "code": "W77",
    "description": "Obstrucci√≥n de la respiraci√≥n debida a hundimiento, ca√≠da de tierra u otras sustancias"
  },
  {
    "code": "W78",
    "description": "Inhalaci√≥n de contenidos g√°stricos"
  },
  {
    "code": "W79",
    "description": "Inhalaci√≥n e ingesti√≥n de alimento que causa obstrucci√≥n de las v√≠as respiratorias"
  },
  {
    "code": "W80",
    "description": "Inhalaci√≥n e ingesti√≥n de otros objetos que causan obstrucci√≥n de las v√≠as respiratorias"
  },
  {
    "code": "W81",
    "description": "Confinado o atrapado en un ambiente con bajo contenido de ox√≠geno"
  },
  {
    "code": "W83",
    "description": "Otras obstrucciones especificadas de la respiraci√≥n"
  },
  {
    "code": "W84",
    "description": "Obstrucci√≥n no especificada de la respiraci√≥n"
  },
  {
    "code": "W85",
    "description": "Exposici√≥n a l√≠neas de transmisi√≥n el√©ctrica"
  },
  {
    "code": "W86",
    "description": "Exposici√≥n a otras corrientes el√©ctricas especificadas"
  },
  {
    "code": "W87",
    "description": "Exposici√≥n a corriente el√©ctrica no especificada"
  },
  {
    "code": "W88",
    "description": "Exposici√≥n a radiaci√≥n ionizante"
  },
  {
    "code": "W89",
    "description": "Exposici√≥n a fuente de luz visible y ultravioleta, de origen artificial"
  },
  {
    "code": "W90",
    "description": "Exposici√≥n a otros tipos de radiaci√≥n no ionizante"
  },
  {
    "code": "W91",
    "description": "Exposici√≥n a radiaci√≥n de tipo no especificado"
  },
  {
    "code": "W92",
    "description": "Exposici√≥n a calor excesivo de origen artificial"
  },
  {
    "code": "W93",
    "description": "Exposici√≥n a fr√≠o excesivo de origen artificial"
  },
  {
    "code": "W94",
    "description": "Exposici√≥n a presi√≥n de aire alta y baja y a cambios en la presi√≥n del aire"
  },
  {
    "code": "W99",
    "description": "Exposici√≥n a otros factores ambientales y a los no especificados, de origen artificial"
  },
  {
    "code": "X00",
    "description": "Exposici√≥n a fuego no controlado en edificio u otra construcci√≥n"
  },
  {
    "code": "X01",
    "description": "Exposici√≥n a fuego no controlado en lugar que no es edificio u otra construcci√≥n"
  },
  {
    "code": "X02",
    "description": "Exposici√≥n a fuego controlado en edificio u otra construcci√≥n"
  },
  {
    "code": "X03",
    "description": "Exposici√≥n a fuego controlado en lugar que no es edificio u otra construcci√≥n"
  },
  {
    "code": "X04",
    "description": "Exposici√≥n a ignici√≥n de material altamente inflamable"
  },
  {
    "code": "X05",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de ropas de dormir"
  },
  {
    "code": "X06",
    "description": "Exposici√≥n a ignici√≥n o fusi√≥n de otras ropas y accesorios"
  },
  {
    "code": "X08",
    "description": "Exposici√≥n a otros humos, fuegos o llamas especificados"
  },
  {
    "code": "X09",
    "description": "Exposici√≥n a humos, fuegos o llamas no especificados"
  },
  {
    "code": "X10",
    "description": "Contacto con bebidas, alimentos, grasas y aceites para cocinar, calientes"
  },
  {
    "code": "X11",
    "description": "Contacto con agua caliente corriente"
  },
  {
    "code": "X12",
    "description": "Contacto con otros l√≠quidos calientes"
  },
  {
    "code": "X13",
    "description": "Contacto con vapor de agua y otros vapores calientes"
  },
  {
    "code": "X14",
    "description": "Contacto con aire y gases calientes"
  },
  {
    "code": "X15",
    "description": "Contacto con utensilios dom√©sticos calientes"
  },
  {
    "code": "X16",
    "description": "Contacto con radiadores, ca√±er√≠as y artefactos para calefacci√≥n, calientes"
  },
  {
    "code": "X17",
    "description": "Contacto con m√°quinas, motores y herramientas calientes"
  },
  {
    "code": "X18",
    "description": "Contacto con otros metales calientes"
  },
  {
    "code": "X19",
    "description": "Contacto con otras sustancias calientes, y las no especificadas"
  },
  {
    "code": "X20",
    "description": "Contacto traum√°tico con serpientes y lagartos venenosos"
  },
  {
    "code": "X21",
    "description": "Contacto traum√°tico con ara√±as venenosas"
  },
  {
    "code": "X22",
    "description": "Contacto traum√°tico con escorpi√≥n"
  },
  {
    "code": "X23",
    "description": "Contacto traum√°tico con avispones, avispas y abejas"
  },
  {
    "code": "X24",
    "description": "Contacto traum√°tico con cent√≠podos y miri√°podos venenosos (tropicales)"
  },
  {
    "code": "X25",
    "description": "Contacto traum√°tico con otros artr√≥podos venenosos especificados"
  },
  {
    "code": "X26",
    "description": "Contacto traum√°tico con animales y plantas marinas venenosos"
  },
  {
    "code": "X27",
    "description": "Contacto traum√°tico con otros animales venenosos especificados"
  },
  {
    "code": "X28",
    "description": "Contacto traum√°tico con otras plantas venenosas especificadas"
  },
  {
    "code": "X29",
    "description": "Contacto traum√°tico con animales y plantas venenosos no especificados"
  },
  {
    "code": "X30",
    "description": "Exposici√≥n al calor natural excesivo"
  },
  {
    "code": "X31",
    "description": "Exposici√≥n al fr√≠o natural excesivo"
  },
  {
    "code": "X32",
    "description": "Exposici√≥n a rayos solares"
  },
  {
    "code": "X33",
    "description": "V√≠ctima de rayo"
  },
  {
    "code": "X34",
    "description": "V√≠ctima de terremoto"
  },
  {
    "code": "X35",
    "description": "V√≠ctima de erupci√≥n volc√°nica"
  },
  {
    "code": "X36",
    "description": "V√≠ctima de avalancha, derrumbe y otros movimientos de tierra"
  },
  {
    "code": "X37",
    "description": "V√≠ctima de tormenta catacl√≠smica"
  },
  {
    "code": "X38",
    "description": "V√≠ctima de inundaci√≥n"
  },
  {
    "code": "X39",
    "description": "Exposici√≥n a otras fuerzas de la naturaleza, y las no especificadas"
  },
  {
    "code": "X40",
    "description": "Envenenamiento accidental por, y exposici√≥n a analg√©sicos no narc√≥ticos, antipir√©ticos y antirreum√°ticos"
  },
  {
    "code": "X41",
    "description": ""
  },
  {
    "code": "X42",
    "description": ""
  },
  {
    "code": "X43",
    "description": "Envenenamiento accidental por, y exposici√≥n a otras drogas que act√∫an sobre el sistema nervioso aut√≥nomo"
  },
  {
    "code": "X44",
    "description": ""
  },
  {
    "code": "X45",
    "description": "Envenenamiento accidental por, y exposici√≥n al alcohol"
  },
  {
    "code": "X46",
    "description": ""
  },
  {
    "code": "X47",
    "description": "Envenenamiento accidental por, y exposici√≥n a otros gases y vapores"
  },
  {
    "code": "X48",
    "description": "Envenenamiento accidental por, y exposici√≥n a plaguicidas"
  },
  {
    "code": "X49",
    "description": ""
  },
  {
    "code": "X50",
    "description": "Exceso de esfuerzo y movimientos extenuantes y repetitivos"
  },
  {
    "code": "X51",
    "description": "Viajes y desplazamientos"
  },
  {
    "code": "X52",
    "description": "Permanencia prolongada en ambiente sin gravedad"
  },
  {
    "code": "X53",
    "description": "Privaci√≥n de alimentos"
  },
  {
    "code": "X54",
    "description": "Privaci√≥n de agua"
  },
  {
    "code": "X57",
    "description": "Privaci√≥n no especificada"
  },
  {
    "code": "X58",
    "description": "Exposici√≥n a otros factores especificados"
  },
  {
    "code": "X59",
    "description": "Exposici√≥n a factores no especificados"
  },
  {
    "code": "X60",
    "description": ""
  },
  {
    "code": "X61",
    "description": ""
  },
  {
    "code": "X62",
    "description": ""
  },
  {
    "code": "X63",
    "description": ""
  },
  {
    "code": "X64",
    "description": ""
  },
  {
    "code": "X65",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n al alcohol"
  },
  {
    "code": "X66",
    "description": ""
  },
  {
    "code": "X67",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a otros gases y vapores"
  },
  {
    "code": "X68",
    "description": "Envenenamiento autoinfligido intencionalmente por, y exposici√≥n a plaguicidas"
  },
  {
    "code": "X69",
    "description": ""
  },
  {
    "code": "X70",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahorcamiento, estrangulamiento o sofocaci√≥n"
  },
  {
    "code": "X71",
    "description": "Lesi√≥n autoinfligida intencionalmente por ahogamiento y sumersi√≥n"
  },
  {
    "code": "X72",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de arma corta"
  },
  {
    "code": "X73",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de rifle, escopeta y arma larga"
  },
  {
    "code": "X74",
    "description": "Lesi√≥n autoinfligida intencionalmente por disparo de otras armas de fuego, y las no especificadas"
  },
  {
    "code": "X75",
    "description": "Lesi√≥n autoinfligida intencionalmente por material explosivo"
  },
  {
    "code": "X76",
    "description": "Lesi√≥n autoinfligida intencionalmente por humo, fuego y llamas"
  },
  {
    "code": "X77",
    "description": "Lesi√≥n autoinfligida intencionalmente por vapor de agua, vapores y objetos calientes"
  },
  {
    "code": "X78",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto cortante"
  },
  {
    "code": "X79",
    "description": "Lesi√≥n autoinfligida intencionalmente por objeto romo o sin filo"
  },
  {
    "code": "X80",
    "description": "Lesi√≥n autoinfligida intencionalmente al saltar desde un lugar elevado"
  },
  {
    "code": "X81",
    "description": "Lesi√≥n autoinfligida intencionalmente por arrojarse o colocarse delante de objeto en movimiento"
  },
  {
    "code": "X82",
    "description": "Lesi√≥n autoinfligida intencionalmente por colisi√≥n de veh√≠culo de motor"
  },
  {
    "code": "X83",
    "description": "Lesi√≥n autoinfligida intencionalmente por otros medios especificados"
  },
  {
    "code": "X84",
    "description": "Lesi√≥n autoinfligida intencionalmente por medios no especificados"
  },
  {
    "code": "X85",
    "description": "Agresi√≥n con drogas, medicamentos y sustancias biol√≥gicas"
  },
  {
    "code": "X86",
    "description": "Agresi√≥n con sustancia corrosiva"
  },
  {
    "code": "X87",
    "description": "Agresi√≥n con plaguicidas"
  },
  {
    "code": "X88",
    "description": "Agresi√≥n con gases y vapores"
  },
  {
    "code": "X89",
    "description": "Agresi√≥n con otros productos qu√≠micos y sustancias nocivas especificadas"
  },
  {
    "code": "X90",
    "description": "Agresi√≥n con productos qu√≠micos y sustancias nocivas no especificadas"
  },
  {
    "code": "X91",
    "description": "Agresi√≥n por ahorcamiento, estrangulamiento y sofocaci√≥n"
  },
  {
    "code": "X92",
    "description": "Agresi√≥n por  ahogamiento y sumersi√≥n"
  },
  {
    "code": "X93",
    "description": "Agresi√≥n con disparo de arma corta"
  },
  {
    "code": "X94",
    "description": "Agresi√≥n con disparo de rifle, escopeta y arma larga"
  },
  {
    "code": "X95",
    "description": "Agresi√≥n con disparo de otras armas de fuego, y las no especificadas"
  },
  {
    "code": "X96",
    "description": "Agresi√≥n con material explosivo"
  },
  {
    "code": "X97",
    "description": "Agresi√≥n con humo, fuego y llamas"
  },
  {
    "code": "X98",
    "description": "Agresi√≥n con vapor de agua, vapores y objetos calientes"
  },
  {
    "code": "X99",
    "description": "Agresi√≥n con objeto cortante"
  },
  {
    "code": "Y00",
    "description": "Agresi√≥n con objeto romo o sin filo"
  },
  {
    "code": "Y01",
    "description": "Agresi√≥n por empuj√≥n desde un lugar elevado"
  },
  {
    "code": "Y02",
    "description": "Agresi√≥n por empujar o colocar a la v√≠ctima delante de objeto en movimiento"
  },
  {
    "code": "Y03",
    "description": "Agresi√≥n por colisi√≥n de veh√≠culo de motor"
  },
  {
    "code": "Y04",
    "description": "Agresi√≥n con fuerza corporal"
  },
  {
    "code": "Y05",
    "description": "Agresi√≥n sexual con fuerza corporal"
  },
  {
    "code": "Y06",
    "description": "Negligencia y abandono"
  },
  {
    "code": "Y07",
    "description": "Otros s√≠ndromes de maltrato"
  },
  {
    "code": "Y08",
    "description": "Agresi√≥n por otros medios especificados"
  },
  {
    "code": "Y09",
    "description": "Agresi√≥n por medios no especificados"
  },
  {
    "code": "Y10",
    "description": ""
  },
  {
    "code": "Y11",
    "description": ""
  },
  {
    "code": "Y12",
    "description": ""
  },
  {
    "code": "Y13",
    "description": ""
  },
  {
    "code": "Y14",
    "description": ""
  },
  {
    "code": "Y15",
    "description": "Envenenamiento por, y exposici√≥n al alcohol, de intenci√≥n no determinada"
  },
  {
    "code": "Y16",
    "description": ""
  },
  {
    "code": "Y17",
    "description": "Envenenamiento por, y exposici√≥n a otros gases y vapores, de intenci√≥n no determinada"
  },
  {
    "code": "Y18",
    "description": "Envenenamiento por, y exposici√≥n a plaguicidas, de intenci√≥n no determinada"
  },
  {
    "code": "Y19",
    "description": ""
  },
  {
    "code": "Y20",
    "description": "Ahorcamiento, estrangulamiento y sofocaci√≥n, de intenci√≥n no determinada"
  },
  {
    "code": "Y21",
    "description": "Ahogamiento y sumersi√≥n, de intenci√≥n no determinada"
  },
  {
    "code": "Y22",
    "description": "Disparo de arma corta, de intenci√≥n no determinada"
  },
  {
    "code": "Y23",
    "description": "Disparo de rifle, escopeta y arma larga, de intenci√≥n no determinada"
  },
  {
    "code": "Y24",
    "description": "Disparo de otras armas de fuego, y las no especificadas, de intenci√≥n no determinada"
  },
  {
    "code": "Y25",
    "description": "Contacto traum√°tico con material explosivo, de intenci√≥n no determinada"
  },
  {
    "code": "Y26",
    "description": "Exposici√≥n al humo, fuego y llamas, de intenci√≥n no determinada"
  },
  {
    "code": "Y27",
    "description": "Contacto con vapor de agua, vapores y objetos calientes, de intenci√≥n no determinada"
  },
  {
    "code": "Y28",
    "description": "Contacto traum√°tico con objeto cortante, de intenci√≥n no determinada"
  },
  {
    "code": "Y29",
    "description": "Contacto traum√°tico con objeto romo o sin filo, de intenci√≥n no determinada"
  },
  {
    "code": "Y30",
    "description": "Ca√≠da, salto o empuj√≥n desde lugar elevado, de intenci√≥n no determinada"
  },
  {
    "code": "Y31",
    "description": "Ca√≠da, permanencia o carrera delante o hacia objeto en movimiento, de intenci√≥n no determinada"
  },
  {
    "code": "Y32",
    "description": "Colisi√≥n de veh√≠culo de motor, de intenci√≥n no determinada"
  },
  {
    "code": "Y33",
    "description": "Otros eventos especificados, de intenci√≥n no determinada"
  },
  {
    "code": "Y34",
    "description": "Evento no especificado, de intenci√≥n no determinada"
  },
  {
    "code": "Y35",
    "description": "Intervenci√≥n legal"
  },
  {
    "code": "Y36",
    "description": "Operaciones de guerra"
  },
  {
    "code": "Y40",
    "description": "Efectos adversos de antibi√≥ticos sist√©micos"
  },
  {
    "code": "Y41",
    "description": "Efectos adversos de otros antiinfecciosos y antiparasitarios sist√©micos"
  },
  {
    "code": "Y42",
    "description": "Efectos adversos de hormonas y sus sustitutos sint√©ticos y antagonistas, no clasificados en otra parte"
  },
  {
    "code": "Y43",
    "description": "Efectos adversos de agentes sist√©micos primarios"
  },
  {
    "code": "Y44",
    "description": "Efectos adversos de agentes que afectan primariamente los constituyentes de la sangre"
  },
  {
    "code": "Y45",
    "description": "Efectos adversos de drogas analg√©sicas, antipir√©ticas y antiinflamatorias"
  },
  {
    "code": "Y46",
    "description": "Efectos adversos de drogas antiepil√©pticas y antiparkinsonianas"
  },
  {
    "code": "Y47",
    "description": "Efectos adversos de drogas sedantes, hipn√≥ticas y ansiol√≠ticas"
  },
  {
    "code": "Y48",
    "description": "Efectos adversos de gases anest√©sicos y terap√©uticos"
  },
  {
    "code": "Y49",
    "description": "Efectos adversos de drogas psicotr√≥picas, no clasificadas en otra parte"
  },
  {
    "code": "Y50",
    "description": "Efectos adversos de estimulantes del sistema nervioso central, no clasificados en otra parte"
  },
  {
    "code": "Y51",
    "description": "Efectos adversos de drogas que afectan primariamente el sistema nervioso aut√≥nomo"
  },
  {
    "code": "Y52",
    "description": "Efectos adversos de agentes que afectan primariamente el sistema cardiovascular"
  },
  {
    "code": "Y53",
    "description": "Efectos adversos de agentes que afectan primariamente el sistema gastrointestinal"
  },
  {
    "code": "Y54",
    "description": ""
  },
  {
    "code": "Y55",
    "description": ""
  },
  {
    "code": "Y56",
    "description": ""
  },
  {
    "code": "Y57",
    "description": "Efectos adversos de otras drogas y medicamentos, y los no especificados"
  },
  {
    "code": "Y58",
    "description": "Efectos adversos de vacunas bacterianas"
  },
  {
    "code": "Y59",
    "description": "Efectos adversos de otras vacunas y sustancias biol√≥gicas, y las no especificadas"
  },
  {
    "code": "Y60",
    "description": "Corte, punci√≥n, perforaci√≥n o hemorragia no intencional durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y61",
    "description": "Objeto extra√±o dejado accidentalmente en el cuerpo durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y62",
    "description": "Fallas en la esterilizaci√≥n durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y63",
    "description": "Falla en la dosificaci√≥n durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y64",
    "description": "Medicamentos o sustancias biol√≥gicas contaminados"
  },
  {
    "code": "Y65",
    "description": "Otros incidentes durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y66",
    "description": "No administraci√≥n de la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y69",
    "description": "Incidentes no especificados durante la atenci√≥n m√©dica y quir√∫rgica"
  },
  {
    "code": "Y70",
    "description": "Dispositivos de anestesiolog√≠a asociados con incidentes adversos"
  },
  {
    "code": "Y71",
    "description": "Dispositivos cardiovasculares asociados con incidentes adversos"
  },
  {
    "code": "Y72",
    "description": "Dispositivos otorrinolaringol√≥gicos asociados con incidentes adversos"
  },
  {
    "code": "Y73",
    "description": "Dispositivos de gastroenterolog√≠a y urolog√≠a asociados con incidentes adversos"
  },
  {
    "code": "Y74",
    "description": "Dispositivos para uso hospitalario general y personal asociados con incidentes adversos"
  },
  {
    "code": "Y75",
    "description": "Dispositivos neurol√≥gicos asociados con incidentes adversos"
  },
  {
    "code": "Y76",
    "description": "Dispositivos ginecol√≥gicos y obst√©tricos asociados con incidentes adversos"
  },
  {
    "code": "Y77",
    "description": "Dispositivos oft√°lmicos asociados con incidentes adversos"
  },
  {
    "code": "Y78",
    "description": "Aparatos radiol√≥gicos asociados con incidentes adversos"
  },
  {
    "code": "Y79",
    "description": "Dispositivos ortop√©dicos asociados con incidentes adversos"
  },
  {
    "code": "Y80",
    "description": "Aparatos de medicina f√≠sica asociados con incidentes adversos"
  },
  {
    "code": "Y81",
    "description": "Dispositivos de cirug√≠a general y pl√°stica asociados con incidentes adversos"
  },
  {
    "code": "Y82",
    "description": "Otros dispositivos m√©dicos, y los no especificados, asociados con incidentes adversos"
  },
  {
    "code": "Y83",
    "description": ""
  },
  {
    "code": "Y84",
    "description": ""
  },
  {
    "code": "Y85",
    "description": "Secuelas de accidentes de transporte"
  },
  {
    "code": "Y86",
    "description": "Secuelas de otros accidentes"
  },
  {
    "code": "Y87",
    "description": "Secuelas de lesiones autoinfligidas intencionalmente, agresiones y eventos de intenci√≥n no determinada"
  },
  {
    "code": "Y88",
    "description": "Secuelas con atenci√≥n m√©dica y quir√∫rgica como causa externa"
  },
  {
    "code": "Y89",
    "description": "Secuelas de otras causas externas"
  },
  {
    "code": "Y90",
    "description": "Evidencia de alcoholismo determinada por el nivel de alcohol en la sangre"
  },
  {
    "code": "Y91",
    "description": "Evidencia de alcoholismo determinada por el nivel de intoxicaci√≥n"
  },
  {
    "code": "Y95",
    "description": "Afecci√≥n nosocomial"
  },
  {
    "code": "Y96",
    "description": "Afecci√≥n relacionada con el trabajo"
  },
  {
    "code": "Y97",
    "description": "Afecci√≥n relacionada con la contaminaci√≥n ambiental"
  },
  {
    "code": "Y98",
    "description": "Afecci√≥n relacionada con el estilo de vida"
  },
  {
    "code": "Z00",
    "description": "Examen general e investigaci√≥n de personas sin quejas o sin diagn√≥stico informado"
  },
  {
    "code": "Z01",
    "description": "Otros ex√°menes especiales e investigaciones en personas sin quejas o sin diagn√≥stico informado"
  },
  {
    "code": "Z02",
    "description": "Ex√°menes y contactos para fines administrativos"
  },
  {
    "code": "Z03",
    "description": "Observaci√≥n y evaluaci√≥n m√©dicas por sospecha de enfermedades y afecciones"
  },
  {
    "code": "Z04",
    "description": "Examen y observaci√≥n por otras razones"
  },
  {
    "code": "Z08",
    "description": "Examen de seguimiento consecutivo al tratamiento por tumor maligno"
  },
  {
    "code": "Z09",
    "description": "Examen de seguimiento consecutivo a tratamiento por otras afecciones diferentes a tumores malignos"
  },
  {
    "code": "Z10",
    "description": "Control general de salud de rutina de subpoblaciones definidas"
  },
  {
    "code": "Z11",
    "description": "Examen de pesquisa especial para enfermedades infecciosas y parasitarias"
  },
  {
    "code": "Z12",
    "description": "Examen de pesquisa especial para tumores"
  },
  {
    "code": "Z13",
    "description": "Examen de pesquisa especial para otras enfermedades y trastornos"
  },
  {
    "code": "Z20",
    "description": "Contacto con y exposici√≥n a enfermedades transmisibles"
  },
  {
    "code": "Z21",
    "description": "Estado de infecci√≥n asintom√°tica por el virus de la inmunodeficiencia humana [VIH]"
  },
  {
    "code": "Z22",
    "description": "Portador de enfermedad infecciosa"
  },
  {
    "code": "Z23",
    "description": "Necesidad de inmunizaci√≥n contra enfermedad bacteriana √∫nica"
  },
  {
    "code": "Z24",
    "description": "Necesidad de inmunizaci√≥n contra ciertas enfermedades virales"
  },
  {
    "code": "Z25",
    "description": "Necesidad de inmunizaci√≥n contra otras enfermedades virales √∫nicas"
  },
  {
    "code": "Z26",
    "description": "Necesidad de inmunizaci√≥n contra otras enfermedades infecciosas √∫nicas"
  },
  {
    "code": "Z27",
    "description": "Necesidad de inmunizaci√≥n contra combinaciones de enfermedades infecciosas"
  },
  {
    "code": "Z28",
    "description": "Inmunizaci√≥n no realizada"
  },
  {
    "code": "Z29",
    "description": "Necesidad de otras medidas profil√°cticas"
  },
  {
    "code": "Z30",
    "description": "Atenci√≥n para la anticoncepci√≥n"
  },
  {
    "code": "Z31",
    "description": "Atenci√≥n para la procreaci√≥n"
  },
  {
    "code": "Z32",
    "description": "Examen y prueba del embarazo"
  },
  {
    "code": "Z33",
    "description": "Estado de embarazo, incidental"
  },
  {
    "code": "Z34",
    "description": "Supervisi√≥n de embarazo normal"
  },
  {
    "code": "Z35",
    "description": "Supervisi√≥n de embarazo de alto riesgo"
  },
  {
    "code": "Z36",
    "description": "Pesquisas prenatales"
  },
  {
    "code": "Z37",
    "description": "Producto del parto"
  },
  {
    "code": "Z38",
    "description": "Nacidos vivos seg√∫n lugar de nacimiento"
  },
  {
    "code": "Z39",
    "description": "Examen y atenci√≥n del postparto"
  },
  {
    "code": "Z40",
    "description": "Cirug√≠a profil√°ctica"
  },
  {
    "code": "Z41",
    "description": "Procedimientos para otros prop√≥sitos que no sean los de mejorar el estado de salud"
  },
  {
    "code": "Z42",
    "description": "Cuidados posteriores a la cirug√≠a pl√°stica"
  },
  {
    "code": "Z43",
    "description": "Atenci√≥n de orificios artificiales"
  },
  {
    "code": "Z44",
    "description": "Prueba y ajuste de dispositivos prot√©sicos externos"
  },
  {
    "code": "Z45",
    "description": "Asistencia y ajuste de dispositivos implantados"
  },
  {
    "code": "Z46",
    "description": "Prueba y ajuste de otros dispositivos"
  },
  {
    "code": "Z47",
    "description": "Otros cuidados posteriores a la ortopedia"
  },
  {
    "code": "Z48",
    "description": "Otros cuidados posteriores a la cirug√≠a"
  },
  {
    "code": "Z49",
    "description": "Cuidados relativos al procedimiento de di√°lisis"
  },
  {
    "code": "Z50",
    "description": "Atenci√≥n por el uso de procedimientos de rehabilitaci√≥n"
  },
  {
    "code": "Z51",
    "description": "Otra atenci√≥n m√©dica"
  },
  {
    "code": "Z52",
    "description": "Donantes de √≥rganos y tejidos"
  },
  {
    "code": "Z53",
    "description": "Persona en contacto con los servicios de salud para procedimientos espec√≠ficos no realizados"
  },
  {
    "code": "Z54",
    "description": "Convalecencia"
  },
  {
    "code": "Z55",
    "description": "Problemas relacionados con la educaci√≥n y la alfabetizaci√≥n"
  },
  {
    "code": "Z56",
    "description": "Problemas relacionados con el empleo y el desempleo"
  },
  {
    "code": "Z57",
    "description": "Exposici√≥n a factores de riesgo ocupacional"
  },
  {
    "code": "Z58",
    "description": "Problemas relacionados con el ambiente f√≠sico"
  },
  {
    "code": "Z59",
    "description": "Problemas relacionados con la vivienda y las circunstancias econ√≥micas"
  },
  {
    "code": "Z60",
    "description": "Problemas relacionados con el ambiente social"
  },
  {
    "code": "Z61",
    "description": "Problemas relacionados con hechos negativos en la ni√±ez"
  },
  {
    "code": "Z62",
    "description": "Otros problemas relacionados con la crianza del ni√±o"
  },
  {
    "code": "Z63",
    "description": "Otros problemas relacionados con el grupo primario de apoyo, inclusive circunstancias familiares"
  },
  {
    "code": "Z64",
    "description": "Problemas relacionados con ciertas circunstancias psicosociales"
  },
  {
    "code": "Z65",
    "description": "Problemas relacionados con otras circunstancias psicosociales"
  },
  {
    "code": "Z70",
    "description": "Consulta relacionada con actitud, conducta u orientaci√≥n sexual"
  },
  {
    "code": "Z71",
    "description": ""
  },
  {
    "code": "Z72",
    "description": "Problemas relacionados con el estilo de vida"
  },
  {
    "code": "Z73",
    "description": "Problemas relacionados con dificultades con el modo de vida"
  },
  {
    "code": "Z74",
    "description": "Problemas relacionados con dependencia del prestador de servicios"
  },
  {
    "code": "Z75",
    "description": "Problemas relacionados con facilidades de atenci√≥n m√©dica u otros servicios de salud"
  },
  {
    "code": "Z76",
    "description": "Personas en contacto con los servicios de salud por otras circunstancias"
  },
  {
    "code": "Z80",
    "description": "Historia familiar de tumor maligno"
  },
  {
    "code": "Z81",
    "description": "Historia familiar de trastornos mentales y del comportamiento"
  },
  {
    "code": "Z82",
    "description": "Historia familiar de ciertas discapacidades y enfermedades cr√≥nicas incapacitantes"
  },
  {
    "code": "Z83",
    "description": "Historia familiar de otros trastornos espec√≠ficos"
  },
  {
    "code": "Z84",
    "description": "Historia familiar de otras afecciones"
  },
  {
    "code": "Z85",
    "description": "Historia personal de tumor maligno"
  },
  {
    "code": "Z86",
    "description": "Historia personal de algunas otras enfermedades"
  },
  {
    "code": "Z87",
    "description": "Historia personal de otras enfermedades y afecciones"
  },
  {
    "code": "Z88",
    "description": "Historia personal de alergia a drogas, medicamentos y sustancias biol√≥gicas"
  },
  {
    "code": "Z89",
    "description": "Ausencia adquirida de miembros"
  },
  {
    "code": "Z90",
    "description": "Ausencia adquirida de √≥rganos, no clasificada en otra parte"
  },
  {
    "code": "Z91",
    "description": "Historia personal de factores de riesgo, no clasificados en otra parte"
  },
  {
    "code": "Z92",
    "description": "Historia personal de tratamiento m√©dico"
  },
  {
    "code": "Z93",
    "description": "Aberturas artificiales"
  },
  {
    "code": "Z94",
    "description": "Organos y tejidos trasplantados"
  },
  {
    "code": "Z95",
    "description": "Presencia de implantes e injertos cardiovasculares"
  },
  {
    "code": "Z96",
    "description": "Presencia de otros implantes funcionales"
  },
  {
    "code": "Z97",
    "description": "Presencia de otros dispositivos"
  },
  {
    "code": "Z98",
    "description": "Otros estados postquir√∫rgicos"
  },
  {
    "code": "Z99",
    "description": "Dependencia de m√°quinas y dispositivos capacitantes, no clasificada en otra parte"
  }
]

================
File: src/catalogs/subcat-cie-diez/dto/create-subcat-cie-diez.dto.ts
================
import { IsNotEmpty, IsNumber, IsString } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreateSubcatCieDiezDto {
  @ApiProperty({
    description: 'C√≥digo de la subcategor√≠a CIE-10',
    example: 'A01.0',
    type: String,
  })
  @IsString()
  code: string;

  @ApiProperty({
    description: 'Descripci√≥n de la subcategor√≠a CIE-10',
    example: 'Fiebre tifoidea',
    type: String,
  })
  @IsString()
  description: string;

  @ApiProperty({
    description:
      'ID de la categor√≠a CIE-10 a la que pertenece esta subcategor√≠a',
    example: 1,
    type: Number,
  })
  @IsNumber()
  @IsNotEmpty()
  categoryId: number;
}

================
File: src/catalogs/subcat-cie-diez/dto/update-subcat-cie-diez.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreateSubcatCieDiezDto } from './create-subcat-cie-diez.dto';

export class UpdateSubcatCieDiezDto extends PartialType(
  CreateSubcatCieDiezDto,
) {}

================
File: src/catalogs/subcat-cie-diez/entities/subcat-cie-diez.entity.ts
================
export class SubcatCieDiez {}

================
File: src/catalogs/subcat-cie-diez/subcat-cie-diez.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  Query,
} from '@nestjs/common';
import { SubcatCieDiezService } from './subcat-cie-diez.service';
import { CreateSubcatCieDiezDto } from './dto/create-subcat-cie-diez.dto';
import { UpdateSubcatCieDiezDto } from './dto/update-subcat-cie-diez.dto';
import { PaginationParams } from 'src/utils/pagination.helper';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiQuery,
  ApiBody,
  ApiSecurity,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Catalogs - CIE-10 Subcategories')
@ApiSecurity('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'ID del tenant',
  required: true,
})
@Controller('subcat-cie-diez')
export class SubcatCieDiezController {
  constructor(private readonly subcatCieDiezService: SubcatCieDiezService) {}

  @Post()
  @ApiOperation({ summary: 'Crear una subcategor√≠a CIE-10' })
  @ApiBody({ type: CreateSubcatCieDiezDto })
  @ApiResponse({
    status: 201,
    description: 'La subcategor√≠a CIE-10 ha sido creada exitosamente.',
  })
  @ApiResponse({
    status: 400,
    description: 'Solicitud inv√°lida (datos faltantes o incorrectos).',
  })
  create(@Body() createSubcatCieDiezDto: CreateSubcatCieDiezDto) {
    return this.subcatCieDiezService.create(createSubcatCieDiezDto);
  }

  @Get()
  @ApiOperation({ summary: 'Obtener todas las subcategor√≠as CIE-10' })
  @ApiQuery({
    name: 'page',
    required: false,
    description: 'N√∫mero de p√°gina para la paginaci√≥n',
  })
  @ApiQuery({
    name: 'pageSize',
    required: false,
    description: 'N√∫mero de √≠tems por p√°gina',
  })
  @ApiQuery({
    name: 'orderBy',
    required: false,
    description: 'Campo por el cual ordenar los resultados',
  })
  @ApiQuery({
    name: 'orderDirection',
    required: false,
    description: 'Direcci√≥n de la ordenaci√≥n (asc o desc)',
  })
  @ApiResponse({
    status: 200,
    description: 'Subcategor√≠as CIE-10 recuperadas exitosamente.',
  })
  findAll(@Query() paginationParams: PaginationParams) {
    return this.subcatCieDiezService.findAll(paginationParams);
  }

  @Get('search')
  @ApiOperation({ summary: 'Buscar subcategor√≠as CIE-10 por palabra clave' })
  @ApiQuery({
    name: 'searchWord',
    required: true,
    description: 'Palabra clave para buscar subcategor√≠as CIE-10',
  })
  @ApiResponse({
    status: 200,
    description: 'Subcategor√≠as CIE-10 encontradas.',
  })
  search(@Query('searchWord') searchWord: string) {
    return this.subcatCieDiezService.search(searchWord);
  }

  @Get('category/:id')
  @ApiOperation({ summary: 'Obtener subcategor√≠as CIE-10 por categor√≠a' })
  @ApiParam({
    name: 'id',
    description: 'ID de la categor√≠a CIE-10',
    type: 'number',
  })
  @ApiQuery({
    name: 'page',
    required: false,
    description: 'N√∫mero de p√°gina para la paginaci√≥n',
  })
  @ApiQuery({
    name: 'pageSize',
    required: false,
    description: 'N√∫mero de √≠tems por p√°gina',
  })
  @ApiQuery({
    name: 'orderBy',
    required: false,
    description: 'Campo por el cual ordenar los resultados',
  })
  @ApiQuery({
    name: 'orderDirection',
    required: false,
    description: 'Direcci√≥n de la ordenaci√≥n (asc o desc)',
  })
  @ApiResponse({
    status: 200,
    description:
      'Subcategor√≠as CIE-10 de la categor√≠a especificada recuperadas exitosamente.',
  })
  findAllCategories(
    @Param('id') id: number,
    @Query() paginationParams: PaginationParams,
  ) {
    return this.subcatCieDiezService.findAllCategories(id, paginationParams);
  }

  @Get(':id')
  @ApiOperation({ summary: 'Obtener una subcategor√≠a CIE-10 por ID' })
  @ApiParam({
    name: 'id',
    description: 'ID de la subcategor√≠a CIE-10',
    type: 'number',
  })
  @ApiResponse({
    status: 200,
    description: 'Subcategor√≠a CIE-10 recuperada exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description:
      'La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.',
  })
  findOne(@Param('id') id: string) {
    return this.subcatCieDiezService.findOne(+id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Actualizar una subcategor√≠a CIE-10' })
  @ApiParam({
    name: 'id',
    description: 'ID de la subcategor√≠a CIE-10 a actualizar',
    type: 'number',
  })
  @ApiBody({ type: UpdateSubcatCieDiezDto })
  @ApiResponse({
    status: 200,
    description: 'La subcategor√≠a CIE-10 ha sido actualizada exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description:
      'La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.',
  })
  @ApiResponse({
    status: 400,
    description: 'Solicitud inv√°lida.',
  })
  update(
    @Param('id') id: string,
    @Body() updateSubcatCieDiezDto: UpdateSubcatCieDiezDto,
  ) {
    return this.subcatCieDiezService.update(+id, updateSubcatCieDiezDto);
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Eliminar una subcategor√≠a CIE-10' })
  @ApiParam({
    name: 'id',
    description: 'ID de la subcategor√≠a CIE-10 a eliminar',
    type: 'number',
  })
  @ApiResponse({
    status: 200,
    description: 'La subcategor√≠a CIE-10 ha sido eliminada exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description:
      'La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.',
  })
  remove(@Param('id') id: string) {
    return this.subcatCieDiezService.remove(+id);
  }
}

================
File: src/catalogs/subcat-cie-diez/subcat-cie-diez.module.ts
================
import { Module } from '@nestjs/common';
import { SubcatCieDiezService } from './subcat-cie-diez.service';
import { SubcatCieDiezController } from './subcat-cie-diez.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [SubcatCieDiezController],
  providers: [SubcatCieDiezService, PrismaService],
})
export class SubcatCieDiezModule {}

================
File: src/catalogs/subcat-cie-diez/subcat-cie-diez.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { CreateSubcatCieDiezDto } from './dto/create-subcat-cie-diez.dto';
import { UpdateSubcatCieDiezDto } from './dto/update-subcat-cie-diez.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';

@Injectable()
export class SubcatCieDiezService {
  constructor(private readonly prisma: PrismaService) {}
  async create(createSubcatCieDiezDto: CreateSubcatCieDiezDto) {
    try {
      const category = await this.prisma.category_cie_diez.findUnique({
        where: { id: createSubcatCieDiezDto.categoryId },
      });

      if (!category)
        throw new NotFoundException('No se encuentra la categoria');

      const subCat = await this.prisma.subcategories_cie_diez.create({
        data: {
          ...createSubcatCieDiezDto,
        },
      });

      if (!subCat) throw new Error('No se ha podido generar la sub categoria');

      return { message: 'La sub categor√≠a ha sido correctamente creada' };
    } catch (error) {
      return { message: `Error al crear la sub categoria ${error.message}` };
    }
  }

  async search(searchWord: string) {
    try {
      const subcat = await this.prisma.subcategories_cie_diez.findMany({
        where: {
          OR: [
            {
              code: {
                contains: searchWord,
                mode: 'insensitive',
              },
            },
            {
              description: {
                contains: searchWord,
                mode: 'insensitive',
              },
            },
          ],
        },
      });

      if (!subcat)
        throw new NotFoundException({ message: 'No existe la sub categoria' });

      return subcat;
    } catch (error) {
      console.log(error);
      return {
        message: `Error al consultar las sub categorias ${error.message}`,
      };
    }
  }

  async findAll(paginationParams: PaginationParams) {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      const subcategories = await this.prisma.subcategories_cie_diez.findMany({
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });
      return subcategories;
    } catch (error) {
      return {
        message: `Error al consultar las sub categorias ${error.message}`,
      };
    }
  }

  async findOne(id: number) {
    try {
      const subcategory = await this.prisma.subcategories_cie_diez.findUnique({
        where: { id: id },
      });
      if (!subcategory)
        throw new NotFoundException('No se encontr√≥ la sub categoria');
      return subcategory;
    } catch (error) {
      return {
        message: `Error al consultar la sub categoria ${error.message}`,
      };
    }
  }

  async update(id: number, updateSubcatCieDiezDto: UpdateSubcatCieDiezDto) {
    try {
      const subcategory = await this.prisma.subcategories_cie_diez.update({
        where: { id: id },
        data: { ...updateSubcatCieDiezDto },
      });
      return { message: 'La categoria ha sido correctamente actualizada' };
    } catch (error) {
      return {
        message: `Error al actualizar la sub categoria ${error.message}`,
      };
    }
  }

  async remove(id: number) {
    try {
      const subcategory = this.prisma.subcategories_cie_diez.delete({
        where: { id: id },
      });
      if (!subcategory)
        throw new NotFoundException('No se encontr√≥ la subcategoria');
      return { message: 'La sub categor√≠a ha sido eliminada' };
    } catch (error) {
      return { message: `Error al eliminar la sub categoria ${error.message}` };
    }
  }

  async findAllCategories(id: number, paginationParams: PaginationParams) {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      const subcategories = await this.prisma.subcategories_cie_diez.findMany({
        where: { categoryId: +id },
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });
      return subcategories;
    } catch (error) {
      return { message: `Error al consultar las categorias ${error.message}` };
    }
  }
}

================
File: src/common/cache/cache.decorator.ts
================
import { SetMetadata } from '@nestjs/common';

export const CACHE_KEY = 'cache_key';
export const CACHE_TTL = 'cache_ttl';
export const CACHE_INVALIDATE = 'cache_invalidate';

/**
 * Decorator to cache the result of a method
 * @param keyPrefix - Prefix for the cache key
 * @param ttl - Time to live in seconds (optional)
 */
export const CacheResult = (keyPrefix: string, ttl?: number) => {
  return (
    target: any,
    propertyName: string,
    descriptor: PropertyDescriptor,
  ) => {
    SetMetadata(CACHE_KEY, keyPrefix)(target, propertyName, descriptor);
    if (ttl !== undefined) {
      SetMetadata(CACHE_TTL, ttl)(target, propertyName, descriptor);
    }
  };
};

/**
 * Decorator to invalidate cache for a specific catalog
 * @param catalogName - Name of the catalog to invalidate
 */
export const InvalidateCache = (catalogName: string) => {
  return (
    target: any,
    propertyName: string,
    descriptor: PropertyDescriptor,
  ) => {
    SetMetadata(CACHE_INVALIDATE, catalogName)(
      target,
      propertyName,
      descriptor,
    );
  };
};

================
File: src/common/cache/cache.interceptor.ts
================
import {
  Injectable,
  NestInterceptor,
  ExecutionContext,
  CallHandler,
} from '@nestjs/common';
import { Reflector } from '@nestjs/core';
import { Observable, of } from 'rxjs';
import { tap } from 'rxjs/operators';
import { CacheService } from './cache.service';
import { CACHE_KEY, CACHE_TTL, CACHE_INVALIDATE } from './cache.decorator';

@Injectable()
export class CacheInterceptor implements NestInterceptor {
  constructor(
    private readonly cacheService: CacheService,
    private readonly reflector: Reflector,
  ) {}

  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {
    const cacheKey = this.reflector.get<string>(
      CACHE_KEY,
      context.getHandler(),
    );
    const cacheTTL = this.reflector.get<number>(
      CACHE_TTL,
      context.getHandler(),
    );
    const invalidateCatalog = this.reflector.get<string>(
      CACHE_INVALIDATE,
      context.getHandler(),
    );

    // Handle cache invalidation
    if (invalidateCatalog) {
      return next.handle().pipe(
        tap(() => {
          this.cacheService.invalidateCatalog(invalidateCatalog);
        }),
      );
    }

    // Handle caching
    if (cacheKey) {
      const request = context.switchToHttp().getRequest();
      const args = context.getArgs();

      // Generate cache key based on method arguments
      const fullCacheKey = this.generateCacheKey(cacheKey, args);

      // Try to get from cache
      const cachedResult = this.cacheService.get(fullCacheKey);
      if (cachedResult !== undefined) {
        return of(cachedResult);
      }

      // If not in cache, execute and cache the result
      return next.handle().pipe(
        tap((result) => {
          this.cacheService.set(fullCacheKey, result, cacheTTL);
        }),
      );
    }

    return next.handle();
  }

  private generateCacheKey(prefix: string, args: any[]): string {
    // Create a hash of the arguments to include in cache key
    const argsString = JSON.stringify(args);
    const argsHash = this.simpleHash(argsString);
    return this.cacheService.generateKey(prefix, argsHash);
  }

  private simpleHash(str: string): string {
    let hash = 0;
    if (str.length === 0) return hash.toString();
    for (let i = 0; i < str.length; i++) {
      const char = str.charCodeAt(i);
      hash = (hash << 5) - hash + char;
      hash = hash & hash; // Convert to 32bit integer
    }
    return Math.abs(hash).toString();
  }
}

================
File: src/common/cache/cache.module.ts
================
import { Global, Module } from '@nestjs/common';
import { CacheService } from './cache.service';
import { CacheInterceptor } from './cache.interceptor';

@Global()
@Module({
  providers: [CacheService, CacheInterceptor],
  exports: [CacheService, CacheInterceptor],
})
export class CacheModule {}

================
File: src/common/cache/cache.service.ts
================
import { Injectable, Logger } from '@nestjs/common';
import * as NodeCache from 'node-cache';

export interface CacheOptions {
  ttl?: number; // time to live in seconds
  checkperiod?: number; // period in seconds for checking expired keys
}

@Injectable()
export class CacheService {
  private readonly cache: NodeCache;
  private readonly logger = new Logger(CacheService.name);

  constructor() {
    // Default configuration: 1 hour TTL, check every 10 minutes
    this.cache = new NodeCache({
      stdTTL: 3600, // 1 hour default TTL
      checkperiod: 600, // Check for expired keys every 10 minutes
      useClones: false, // Better performance, but be careful with object mutations
    });

    // Log cache statistics periodically
    this.cache.on('set', (key) => {
      this.logger.debug(`Cache SET: ${key}`);
    });

    this.cache.on('del', (key) => {
      this.logger.debug(`Cache DEL: ${key}`);
    });

    this.cache.on('expired', (key) => {
      this.logger.debug(`Cache EXPIRED: ${key}`);
    });
  }

  /**
   * Get a value from cache
   */
  get<T>(key: string): T | undefined {
    try {
      const value = this.cache.get<T>(key);
      if (value !== undefined) {
        this.logger.debug(`Cache HIT: ${key}`);
      } else {
        this.logger.debug(`Cache MISS: ${key}`);
      }
      return value;
    } catch (error) {
      this.logger.error(`Cache GET error for key ${key}:`, error);
      return undefined;
    }
  }

  /**
   * Set a value in cache
   */
  set<T>(key: string, value: T, ttl?: number): boolean {
    try {
      const success = this.cache.set(key, value, ttl);
      if (success) {
        this.logger.debug(
          `Cache SET success: ${key} (TTL: ${ttl || 'default'})`,
        );
      }
      return success;
    } catch (error) {
      this.logger.error(`Cache SET error for key ${key}:`, error);
      return false;
    }
  }

  /**
   * Delete a specific key from cache
   */
  del(key: string): number {
    try {
      const deleted = this.cache.del(key);
      this.logger.debug(`Cache DEL: ${key} (deleted: ${deleted})`);
      return deleted;
    } catch (error) {
      this.logger.error(`Cache DEL error for key ${key}:`, error);
      return 0;
    }
  }

  /**
   * Delete multiple keys matching a pattern
   */
  delPattern(pattern: string): number {
    try {
      const keys = this.cache.keys();
      const matchingKeys = keys.filter((key) => {
        const regex = new RegExp(pattern.replace(/\*/g, '.*'));
        return regex.test(key);
      });

      let deletedCount = 0;
      matchingKeys.forEach((key) => {
        deletedCount += this.cache.del(key);
      });

      this.logger.debug(
        `Cache DEL PATTERN: ${pattern} (deleted: ${deletedCount} keys)`,
      );
      return deletedCount;
    } catch (error) {
      this.logger.error(
        `Cache DEL PATTERN error for pattern ${pattern}:`,
        error,
      );
      return 0;
    }
  }

  /**
   * Check if a key exists in cache
   */
  has(key: string): boolean {
    return this.cache.has(key);
  }

  /**
   * Get all keys in cache
   */
  keys(): string[] {
    return this.cache.keys();
  }

  /**
   * Clear all cache
   */
  flushAll(): void {
    this.cache.flushAll();
    this.logger.warn('Cache FLUSH ALL: All cache cleared');
  }

  /**
   * Get cache statistics
   */
  getStats(): NodeCache.Stats {
    return this.cache.getStats();
  }

  /**
   * Generate a cache key with prefix
   */
  generateKey(prefix: string, ...parts: (string | number)[]): string {
    return `${prefix}:${parts.join(':')}`;
  }

  /**
   * Invalidate all cache entries for a specific catalog
   */
  invalidateCatalog(catalogName: string): number {
    const pattern = `${catalogName}:*`;
    return this.delPattern(pattern);
  }

  /**
   * Wrapper method for caching database queries
   */
  async getOrSet<T>(
    key: string,
    fetchFunction: () => Promise<T>,
    ttl?: number,
  ): Promise<T> {
    // Try to get from cache first
    const cachedValue = this.get<T>(key);
    if (cachedValue !== undefined) {
      return cachedValue;
    }

    // If not in cache, fetch and store
    try {
      const value = await fetchFunction();
      this.set(key, value, ttl);
      return value;
    } catch (error) {
      this.logger.error(`Error in getOrSet for key ${key}:`, error);
      throw error;
    }
  }
}

================
File: src/common/config/logging.config.ts
================
import { ConfigService } from '@nestjs/config';

export interface LoggingConfig {
  enablePrismaQueries: boolean;
  enableDetailedQueries: boolean;
  enableCacheLogs: boolean;
  enableSlowQueryWarning: boolean;
  slowQueryThreshold: number; // in milliseconds
  logLevel: 'debug' | 'info' | 'warn' | 'error';
}

export class LoggingConfigService {
  private config: LoggingConfig;

  constructor(private configService: ConfigService) {
    this.config = {
      enablePrismaQueries: this.configService.get<boolean>(
        'ENABLE_PRISMA_LOGS',
        true,
      ),
      enableDetailedQueries: this.configService.get<boolean>(
        'ENABLE_DETAILED_QUERY_LOGS',
        process.env.NODE_ENV === 'development',
      ),
      enableCacheLogs: this.configService.get<boolean>(
        'ENABLE_CACHE_LOGS',
        true,
      ),
      enableSlowQueryWarning: this.configService.get<boolean>(
        'ENABLE_SLOW_QUERY_WARNING',
        true,
      ),
      slowQueryThreshold: this.configService.get<number>(
        'SLOW_QUERY_THRESHOLD_MS',
        1000,
      ),
      logLevel: this.configService.get<'debug' | 'info' | 'warn' | 'error'>(
        'LOG_LEVEL',
        'info',
      ),
    };
  }

  get enablePrismaQueries(): boolean {
    return this.config.enablePrismaQueries;
  }

  get enableDetailedQueries(): boolean {
    return this.config.enableDetailedQueries;
  }

  get enableCacheLogs(): boolean {
    return this.config.enableCacheLogs;
  }

  get enableSlowQueryWarning(): boolean {
    return this.config.enableSlowQueryWarning;
  }

  get slowQueryThreshold(): number {
    return this.config.slowQueryThreshold;
  }

  get logLevel(): string {
    return this.config.logLevel;
  }

  shouldLogLevel(level: 'debug' | 'info' | 'warn' | 'error'): boolean {
    const levels = ['debug', 'info', 'warn', 'error'];
    const currentLevelIndex = levels.indexOf(this.config.logLevel);
    const targetLevelIndex = levels.indexOf(level);
    return targetLevelIndex >= currentLevelIndex;
  }

  /**
   * Dynamic configuration update (useful for runtime debugging)
   */
  updateConfig(updates: Partial<LoggingConfig>): void {
    this.config = { ...this.config, ...updates };
  }

  getConfig(): LoggingConfig {
    return { ...this.config };
  }
}

================
File: src/docs/appointments.md
================
# Documentaci√≥n de API: Appointments

Este documento proporciona detalles sobre los endpoints del m√≥dulo de Appointments (Citas) disponibles en la API de Segimed.

## Informaci√≥n General

- **Base URL**: `/appointments`
- **Controlador**: `AppointmentsController`
- **Servicios Relacionados**: `AppointmentsService`
- **Autenticaci√≥n**: Requiere un token Bearer de acceso JWT
- **Tenant**: Requiere un header `tenant-id` que especifica el ID del inquilino

## Permisos Requeridos

Los endpoints en este m√≥dulo requieren los siguientes permisos:

- `SCHEDULE_APPOINTMENTS`: Para programar y gestionar citas
- `VIEW_DOCTOR_DETAILS`: Para ver los calendarios de m√©dicos
- `VIEW_STATISTICS`: Para acceder a las estad√≠sticas de citas

## Endpoints

### 1. Crear Cita

Crea una nueva cita en el sistema.

- **URL**: `POST /appointments`
- **Permisos**: `SCHEDULE_APPOINTMENTS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Body**:
  ```json
  {
    "consultation_reason": "String (requerido) - Raz√≥n de la consulta",
    "start": "Date (requerido) - Fecha y hora de inicio (ISO format)",
    "end": "Date (requerido) - Fecha y hora de fin (ISO format)",
    "patient_id": "UUID (requerido) - ID del paciente",
    "physician_id": "UUID (requerido) - ID del m√©dico",
    "status": "Enum (opcional) - Estado de la cita [atendida, cancelada, pendiente]",
    "comments": "String (opcional) - Comentarios adicionales"
  }
  ```
- **Respuestas**:
  - `201 Created`: Cita creada correctamente
  - `400 Bad Request`: Datos de cita inv√°lidos
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

### 2. Obtener Citas del Usuario

Devuelve las citas asociadas al usuario actual.

- **URL**: `GET /appointments/user`
- **Permisos**: `SCHEDULE_APPOINTMENTS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Par√°metros de consulta**:
  - `status` (opcional): Filtrar por estado (`atendida`, `cancelada`, `pendiente`)
  - `page` (opcional): N√∫mero de p√°gina para paginaci√≥n
  - `limit` (opcional): N√∫mero de elementos por p√°gina
- **Respuestas**:
  - `200 OK`: Citas devueltas correctamente
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

### 3. Actualizar Estado de Cita

Actualiza el estado de una cita existente.

- **URL**: `PATCH /appointments/:id/status`
- **Permisos**: `SCHEDULE_APPOINTMENTS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Par√°metros de ruta**:
  - `id`: ID de la cita
- **Body**:
  ```json
  {
    "status": "Enum (requerido) - Nuevo estado [atendida, cancelada, pendiente]",
    "reason": "String (opcional) - Raz√≥n del cambio de estado"
  }
  ```
- **Respuestas**:
  - `200 OK`: Estado de la cita actualizado correctamente
  - `400 Bad Request`: Datos inv√°lidos
  - `404 Not Found`: Cita no encontrada
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

### 4. Calendario del M√©dico Actual

Devuelve los datos de calendario para el m√©dico actual.

- **URL**: `GET /appointments/physician-calendar`
- **Permisos**: `VIEW_DOCTOR_DETAILS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Par√°metros de consulta**:
  - `startDate` (opcional): Fecha de inicio (ISO format)
  - `endDate` (opcional): Fecha de fin (ISO format)
  - `status` (opcional): Filtrar por estado (`atendida`, `cancelada`, `pendiente`)
  - `month` (opcional): Mes para el calendario (1-12)
  - `year` (opcional): A√±o para el calendario
- **Respuestas**:
  - `200 OK`: Calendario devuelto correctamente
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

### 5. Calendario de un M√©dico Espec√≠fico

Devuelve los datos de calendario para un m√©dico espec√≠fico.

- **URL**: `GET /appointments/physician/:physicianId/calendar`
- **Permisos**: `VIEW_DOCTOR_DETAILS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Par√°metros de ruta**:
  - `physicianId`: ID del m√©dico
- **Par√°metros de consulta**:
  - `startDate` (opcional): Fecha de inicio (ISO format)
  - `endDate` (opcional): Fecha de fin (ISO format)
  - `status` (opcional): Filtrar por estado (`atendida`, `cancelada`, `pendiente`)
  - `month` (opcional): Mes para el calendario (1-12)
  - `year` (opcional): A√±o para el calendario
- **Respuestas**:
  - `200 OK`: Calendario devuelto correctamente
  - `404 Not Found`: M√©dico no encontrado
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

### 6. Estad√≠sticas de Citas

Devuelve estad√≠sticas sobre las citas.

- **URL**: `GET /appointments/statistics`
- **Permisos**: `VIEW_STATISTICS`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Par√°metros de consulta (requeridos)**:
  - `type`: Tipo de estad√≠sticas a recuperar (enum):
    - `appointments_by_status`: Citas por estado
    - `appointments_by_day`: Citas por d√≠a
    - `appointments_by_month`: Citas por mes
    - `appointments_by_physician`: Citas por m√©dico
    - `diagnoses_distribution`: Distribuci√≥n de diagn√≥sticos
    - `consultations_count`: Recuento de consultas
    - `patient_demographics`: Demograf√≠a de pacientes
    - `attendance_rate`: Tasa de asistencia
    - `physician_workload`: Carga de trabajo del m√©dico
    - `scheduling_trends`: Tendencias de programaci√≥n
- **Par√°metros de consulta (opcionales)**:
  - `startDate`: Fecha de inicio (ISO format)
  - `endDate`: Fecha de fin (ISO format)
  - `groupBy`: C√≥mo agrupar estad√≠sticas (enum):
    - `day`: Por d√≠a
    - `week`: Por semana
    - `month`: Por mes
    - `quarter`: Por trimestre
    - `year`: Por a√±o
    - `physician`: Por m√©dico
    - `patient`: Por paciente
    - `status`: Por estado
    - `specialty`: Por especialidad
    - `diagnosis`: Por diagn√≥stico
  - `physicianId`: Filtrar por ID de m√©dico
  - `patientId`: Filtrar por ID de paciente
  - `specialtyId`: Filtrar por ID de especialidad
  - `limit`: Limitar n√∫mero de resultados
  - `filter`: Criterios de filtro adicionales
- **Respuestas**:
  - `200 OK`: Estad√≠sticas devueltas correctamente
  - `401 Unauthorized`: No autorizado
  - `403 Forbidden`: Permisos insuficientes

## Modelos de Datos

### CreateAppointmentDto

```typescript
{
  consultation_reason: string; // Raz√≥n de la consulta (requerido)
  start: Date; // Fecha/hora de inicio (requerido, formato ISO)
  end: Date; // Fecha/hora de fin (requerido, formato ISO)
  patient_id: string; // UUID del paciente (requerido)
  physician_id: string; // UUID del m√©dico (requerido)
  status?: status_type; // Estado (opcional): atendida, cancelada, pendiente
  comments?: string; // Comentarios (opcional)
  tenant_id?: string; // ID del tenant (opcional, UUID)
}
```

### GetAppointmentsCalendarDto

```typescript
{
  startDate?: string; // Fecha de inicio (formato ISO)
  endDate?: string; // Fecha de fin (formato ISO)
  view?: 'dia' | 'semana' | 'mes'; // Vista del calendario (default: 'semana')
  status?: status_type; // Estado: atendida, cancelada, pendiente
  month?: number; // Mes (1-12)
  year?: number; // A√±o
}
```

### GetStatisticsDto

```typescript
{
  type: StatisticsType; // Tipo de estad√≠sticas (requerido, ver enumeraciones)
  startDate?: string; // Fecha de inicio (formato ISO)
  endDate?: string; // Fecha de fin (formato ISO)
  groupBy?: GroupBy; // C√≥mo agrupar las estad√≠sticas
  limit?: number; // L√≠mite de resultados
  physicianId?: string; // Filtro por ID de m√©dico (UUID)
  patientId?: string; // Filtro por ID de paciente (UUID)
  specialtyId?: number; // Filtro por ID de especialidad
  filter?: string; // Criterios de filtro adicionales
}
```

## Enumeraciones

### StatisticsType

- `appointments_by_status`: Citas por estado
- `appointments_by_day`: Citas por d√≠a
- `appointments_by_month`: Citas por mes
- `appointments_by_physician`: Citas por m√©dico
- `diagnoses_distribution`: Distribuci√≥n de diagn√≥sticos
- `consultations_count`: Recuento de consultas
- `patient_demographics`: Demograf√≠a de pacientes
- `attendance_rate`: Tasa de asistencia
- `physician_workload`: Carga de trabajo del m√©dico
- `scheduling_trends`: Tendencias de programaci√≥n

### GroupBy

- `day`: Por d√≠a
- `week`: Por semana
- `month`: Por mes
- `quarter`: Por trimestre
- `year`: Por a√±o
- `physician`: Por m√©dico
- `patient`: Por paciente
- `status`: Por estado
- `specialty`: Por especialidad
- `diagnosis`: Por diagn√≥stico

### status_type

- `atendida`: Cita atendida
- `cancelada`: Cita cancelada
- `pendiente`: Cita pendiente

================
File: src/docs/auth.md
================
# Autenticaci√≥n y Autorizaci√≥n (Auth) - API Endpoints

## Descripci√≥n

El m√≥dulo de Autenticaci√≥n y Autorizaci√≥n gestiona todas las operaciones relacionadas con el registro de usuarios, inicio de sesi√≥n, gesti√≥n de contrase√±as, verificaci√≥n de identidad, y administraci√≥n de roles y permisos. Este m√≥dulo es fundamental para la seguridad y el control de acceso de la plataforma SEGIMED.

## Endpoints Principales de Autenticaci√≥n

### `POST /auth/register`

Registra un nuevo usuario en el sistema.

#### Request Body: `CreateUserDto`

```json
{
  "name": "Juan",
  "last_name": "P√©rez",
  "email": "juan.perez@example.com",
  "password": "StrongP@ss123",
  "dni": "12345678",
  "phone_prefix": "+52",
  "phone": "9876543210",
  "role": "patient"
}
```

#### Responses

- `201 Created`: Usuario registrado exitosamente.

  ```json
  {
    "id": "123e4567-e89b-12d3-a456-426614174000",
    "name": "Juan",
    "last_name": "P√©rez",
    "email": "juan.perez@example.com",
    "role": "patient",
    "created_at": "2025-05-22T10:30:00.000Z",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
  ```

- `400 Bad Request`: Datos de usuario inv√°lidos.
- `409 Conflict`: Correo electr√≥nico ya en uso.

### `POST /auth`

Autentica a un usuario y devuelve un token JWT.

#### Request Body: `CreateAuthDto`

```json
{
  "email": "juan.perez@example.com",
  "password": "StrongP@ss123"
}
```

#### Responses

- `200 OK`: Autenticaci√≥n exitosa.

  ```json
  {
    "user": {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "name": "Juan",
      "last_name": "P√©rez",
      "email": "juan.perez@example.com",
      "role": "patient"
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "tenants": [
      {
        "id": "tid_12345-6789-abcd-ef0123456789",
        "name": "Hospital General"
      }
    ]
  }
  ```

- `401 Unauthorized`: Credenciales inv√°lidas.

### `POST /auth/google`

Autentica a un usuario con credenciales de Google.

#### Request Body: `GoogleUserDto`

```json
{
  "token": "google_id_token_here",
  "google_id": "google_user_id",
  "name": "Juan",
  "last_name": "P√©rez",
  "email": "juan.perez@example.com",
  "photo_url": "https://example.com/photo.jpg"
}
```

#### Responses

- `200 OK`: Autenticaci√≥n exitosa con Google.
- `401 Unauthorized`: Credenciales de Google inv√°lidas.

### `POST /auth/request-password`

Env√≠a un correo electr√≥nico con un enlace para restablecer la contrase√±a.

#### Request Body: `RequestPasswordDto`

```json
{
  "email": "juan.perez@example.com"
}
```

#### Responses

- `200 OK`: Correo de restablecimiento de contrase√±a enviado.
- `404 Not Found`: Usuario no encontrado.

### `POST /auth/reset-password`

Restablece la contrase√±a de un usuario utilizando un token.

#### Request Body: `ResetPasswordDto`

```json
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "password": "NewStrongP@ss123"
}
```

#### Responses

- `200 OK`: Contrase√±a restablecida exitosamente.
- `400 Bad Request`: Token inv√°lido o expirado.

### `POST /auth/send-otp`

Env√≠a un c√≥digo de verificaci√≥n al tel√©fono del usuario.

#### Request Body

```json
{
  "user_id": "123e4567-e89b-12d3-a456-426614174000",
  "phone_prefix": "+52",
  "phone": "9876543210"
}
```

#### Responses

- `200 OK`: C√≥digo de verificaci√≥n enviado.
- `400 Bad Request`: ID de usuario o n√∫mero de tel√©fono inv√°lido.

### `POST /auth/verify-otp`

Verifica el c√≥digo OTP enviado al usuario.

#### Request Body

```json
{
  "user_id": "123e4567-e89b-12d3-a456-426614174000",
  "code": "123456"
}
```

#### Responses

- `200 OK`: C√≥digo OTP verificado exitosamente.
- `400 Bad Request`: C√≥digo OTP inv√°lido.

### `POST /auth/create-superadmin`

Crea un usuario superadministrador con privilegios completos. Requiere una clave secreta.

#### Request Body: `CreateSuperAdminDto`

```json
{
  "name": "Admin",
  "last_name": "Principal",
  "email": "admin@segimed.com",
  "password": "SuperStrongP@ss123",
  "secret_key": "supersecret_key_here",
  "tenant_id": "tid_12345-6789-abcd-ef0123456789"
}
```

#### Responses

- `201 Created`: Superadministrador creado exitosamente.
- `400 Bad Request`: Datos inv√°lidos o clave secreta incorrecta.

## Endpoints de Gesti√≥n de Roles y Permisos

### `GET /roles`

Obtiene todos los roles disponibles. Requiere el permiso `CONFIGURE_USER_PERMISSIONS`.

#### Query Parameters

- `tenantId` (opcional): ID del tenant para filtrar roles espec√≠ficos.

#### Responses

- `200 OK`: Lista de roles recuperada exitosamente.
- `403 Forbidden`: No tiene permisos para ver roles.

### `GET /roles/:id`

Obtiene un rol espec√≠fico por su ID. Requiere el permiso `CONFIGURE_USER_PERMISSIONS`.

#### Path Parameters

- `id`: ID del rol a consultar.

#### Responses

- `200 OK`: Rol recuperado exitosamente.
- `404 Not Found`: Rol no encontrado.
- `403 Forbidden`: No tiene permisos para ver roles.

### `POST /roles`

Crea un nuevo rol. Requiere el permiso `CONFIGURE_USER_PERMISSIONS` y ser administrador del tenant.

#### Request Body

```json
{
  "name": "M√©dico Especialista",
  "description": "M√©dicos con acceso a funcionalidades avanzadas",
  "permissions": ["VIEW_PATIENT", "EDIT_MEDICAL_RECORD", "CREATE_PRESCRIPTION"],
  "tenantId": "tid_12345-6789-abcd-ef0123456789"
}
```

#### Responses

- `201 Created`: Rol creado exitosamente.
- `400 Bad Request`: Datos inv√°lidos.
- `403 Forbidden`: No tiene permisos para crear roles.

### `PUT /roles/:id`

Actualiza un rol existente. Requiere el permiso `CONFIGURE_USER_PERMISSIONS` y ser administrador del tenant.

#### Path Parameters

- `id`: ID del rol a actualizar.

#### Request Body

```json
{
  "name": "M√©dico Especialista Senior",
  "description": "M√©dicos con privilegios ampliados",
  "permissions": [
    "VIEW_PATIENT",
    "EDIT_MEDICAL_RECORD",
    "CREATE_PRESCRIPTION",
    "APPROVE_STUDIES"
  ]
}
```

#### Responses

- `200 OK`: Rol actualizado exitosamente.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Rol no encontrado.
- `403 Forbidden`: No tiene permisos para actualizar roles.

### `POST /roles/assign`

Asigna un rol a un usuario. Requiere el permiso `CONFIGURE_USER_PERMISSIONS` y ser administrador del tenant.

#### Request Body

```json
{
  "userId": "123e4567-e89b-12d3-a456-426614174000",
  "roleId": "rol_12345-6789-abcd-ef0123456789"
}
```

#### Responses

- `200 OK`: Rol asignado exitosamente al usuario.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Usuario o rol no encontrado.
- `403 Forbidden`: No tiene permisos para asignar roles.

### `DELETE /roles/assign`

Elimina un rol de un usuario. Requiere el permiso `CONFIGURE_USER_PERMISSIONS` y ser administrador del tenant.

#### Request Body

```json
{
  "userId": "123e4567-e89b-12d3-a456-426614174000",
  "roleId": "rol_12345-6789-abcd-ef0123456789"
}
```

#### Responses

- `200 OK`: Rol eliminado exitosamente del usuario.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Usuario o rol no encontrado.
- `403 Forbidden`: No tiene permisos para eliminar roles de usuarios.

### `GET /roles/permissions`

Obtiene todos los permisos disponibles en el sistema. Requiere el permiso `CONFIGURE_USER_PERMISSIONS`.

#### Responses

- `200 OK`: Lista de permisos recuperada exitosamente.
- `403 Forbidden`: No tiene permisos para ver permisos.

### `GET /roles/user/:userId`

Obtiene todos los roles asignados a un usuario espec√≠fico. Requiere el permiso `CONFIGURE_USER_PERMISSIONS`.

#### Path Parameters

- `userId`: ID del usuario cuya informaci√≥n de roles se desea consultar.

#### Responses

- `200 OK`: Roles del usuario recuperados exitosamente.
- `404 Not Found`: Usuario no encontrado.
- `403 Forbidden`: No tiene permisos para ver roles de usuarios.

### `POST /roles/seed`

Inicializa roles y permisos predeterminados en el sistema. Solo accesible para superadministradores.

#### Responses

- `201 Created`: Roles y permisos inicializados exitosamente.
- `400 Bad Request`: Error al crear roles y permisos.
- `403 Forbidden`: No tiene permisos de superadministrador.

### `POST /permission-updater/update-default-permissions`

Actualiza los permisos predeterminados para m√©dicos y pacientes. Este endpoint solo es accesible para superadministradores.

#### Responses

- `200 OK`: Permisos predeterminados actualizados exitosamente.
- `403 Forbidden`: No tiene permisos de superadministrador.

## Flujos de Autenticaci√≥n

### Registro e Inicio de Sesi√≥n Normal

1. El usuario se registra con `POST /auth/register`
2. El sistema env√≠a un correo de verificaci√≥n o un c√≥digo OTP
3. El usuario verifica su cuenta (si es necesario)
4. El usuario inicia sesi√≥n con `POST /auth`
5. El sistema devuelve un token JWT para autenticaci√≥n subsiguiente

### Inicio de Sesi√≥n con Google

1. El usuario inicia el flujo de autenticaci√≥n con Google en el frontend
2. Una vez autenticado con Google, el frontend recibe un token de ID
3. El frontend env√≠a este token a `POST /auth/google`
4. El sistema verifica el token con Google, crea o recupera el usuario y devuelve un token JWT

### Restablecimiento de Contrase√±a

1. El usuario solicita restablecer su contrase√±a con `POST /auth/request-password`
2. El sistema env√≠a un correo electr√≥nico con un enlace que contiene un token JWT
3. El usuario accede al enlace y proporciona una nueva contrase√±a
4. El frontend env√≠a la nueva contrase√±a y el token a `POST /auth/reset-password`
5. El sistema verifica el token, actualiza la contrase√±a y confirma el cambio

## Consideraciones de Seguridad

- Todos los endpoints que modifican roles y permisos requieren privilegios de administrador de tenant o superadministrador.
- La creaci√≥n de superadministradores est√° protegida por una clave secreta.
- Los tokens JWT tienen un tiempo de expiraci√≥n configurado.
- Las contrase√±as deben cumplir con requisitos de seguridad (longitud m√≠nima, combinaci√≥n de caracteres).
- La autenticaci√≥n de dos factores (2FA) est√° disponible a trav√©s del sistema OTP.
- Todas las contrase√±as se almacenan hasheadas, no en texto plano.

## Integraci√≥n con Otros M√≥dulos

- **M√≥dulo de Usuarios**: Gestiona la informaci√≥n de los usuarios y su perfil.
- **M√≥dulo de Tenants**: Administra la estructura multitenancy de la plataforma.
- **M√≥dulo de Verificaci√≥n**: Maneja la verificaci√≥n de identidad de los usuarios.
- **Servicios de Email y SMS**: Para enviar notificaciones y c√≥digos de verificaci√≥n.

================
File: src/docs/background.md
================
# M√≥dulo de Antecedentes

## Descripci√≥n General

El m√≥dulo de Antecedentes es responsable de gestionar la informaci√≥n m√©dica de antecedentes del paciente. Esto incluye varios aspectos del historial m√©dico de un paciente, como alergias, vacunas, enfermedades pasadas, cirug√≠as, antecedentes m√©dicos familiares y medicamentos actuales.

Esta informaci√≥n es crucial para proporcionar una atenci√≥n m√©dica integral e informada.

## Endpoints

### `POST /background`

Crea un nuevo registro de antecedentes para un paciente.

**Cuerpo de la Solicitud (Request Body):**

El cuerpo de la solicitud debe ser un objeto JSON que se ajuste al `CreateBackgroundDto`.

```json
{
  "patient_id": "string (UUID)",
  "vaccinations": "string",
  "allergies": "string",
  "pathological_history": "string",
  "family_medical_history": "string",
  "non_pathological_history": "string",
  "surgical_history": "string",
  "childhood_medical_history": "string",
  "current_medication": "string",
  "tenant_id": "string"
}
```

**Respuestas (Responses):**

- `201 Created` (Creado): Registro de antecedentes creado exitosamente.
  ```json
  {
    // Cuerpo de la respuesta del servidor tras la creaci√≥n exitosa
  }
  ```
- `400 Bad Request` (Solicitud Incorrecta): Entrada inv√°lida. El cuerpo de la solicitud no se ajusta al esquema esperado o contiene datos inv√°lidos.
  ```json
  {
    "alert": "Se han detectado los siguientes errores en la petici√≥n: ",
    "errors": [
      {
        "property": "nombreDelCampo",
        "constraints": {
          "nombreDeLaRestriccion": "Mensaje de error"
        }
      }
    ]
  }
  ```
- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `500 Internal Server Error` (Error Interno del Servidor): Ocurri√≥ un error inesperado en el servidor.
  ```json
  {
    "message": "Error al crear antecedentes",
    "error": "Mensaje de error espec√≠fico"
  }
  ```

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Identificador para el tenant)

**Ejemplo de Uso (cURL):**

```bash
curl -X POST \
  http://localhost:3000/background \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID' \
  -d '{
    "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "vaccinations": "Influenza (2023), T√©tanos (2020)",
    "allergies": "Polen, √Åcaros del polvo",
    "pathological_history": "Asma diagnosticada en la infancia.",
    "family_medical_history": "Madre con hipertensi√≥n.",
    "non_pathological_history": "No fumador, alcohol ocasional.",
    "surgical_history": "Amigdalectom√≠a (1995)",
    "childhood_medical_history": "Varicela (1990)",
    "current_medication": "Inhalador de Albuterol seg√∫n sea necesario.",
    "tenant_id": "tenant_organizacion_xyz"
  }'
```

================
File: src/docs/cat-cie-diez.md
================
# Cat√°logo CIE-10 Endpoints

## Descripci√≥n

El m√≥dulo del Cat√°logo CIE-10 (Clasificaci√≥n Internacional de Enfermedades, D√©cima Revisi√≥n) proporciona endpoints para gestionar las categor√≠as de enfermedades y problemas de salud relacionados. Permite crear, leer, actualizar y eliminar (CRUD) entradas del cat√°logo CIE-10.

## Endpoints

A continuaci√≥n, se detallan los endpoints disponibles en el m√≥dulo del Cat√°logo CIE-10:

### `POST /cat-cie-diez`

Crea una nueva categor√≠a en el cat√°logo CIE-10.

**Request Body:** `CreateCatCieDiezDto`

```json
{
  "code": "A001",
  "description": "Fiebres tifoidea y paratifoidea"
}
```

**Responses:**

- `201 Created`: La categor√≠a CIE-10 ha sido creada exitosamente.
- `400 Bad Request`: Solicitud inv√°lida (ej. datos faltantes o incorrectos).

### `GET /cat-cie-diez`

Obtiene todas las categor√≠as del cat√°logo CIE-10, con opci√≥n de paginaci√≥n.

**Query Parameters:**

- `page` (number, opcional): N√∫mero de p√°gina para la paginaci√≥n.
- `pageSize` (number, opcional): N√∫mero de √≠tems por p√°gina.
- `orderBy` (string, opcional): Campo por el cual ordenar los resultados (ej. "code", "description").
- `orderDirection` (string, opcional): Direcci√≥n de la ordenaci√≥n ('asc' o 'desc').

**Responses:**

- `200 OK`: Categor√≠as CIE-10 recuperadas exitosamente.
  Ejemplo de respuesta:
  ```json
  [
    {
      "id": 1,
      "code": "A001",
      "description": "Fiebres tifoidea y paratifoidea"
    },
    {
      "id": 2,
      "code": "A002",
      "description": "C√≥lera"
    }
    // ... m√°s categor√≠as
  ]
  ```

### `GET /cat-cie-diez/{id}`

Obtiene una categor√≠a espec√≠fica del cat√°logo CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la categor√≠a CIE-10.

**Responses:**

- `200 OK`: Categor√≠a CIE-10 recuperada exitosamente.
  Ejemplo de respuesta:
  ```json
  {
    "id": 1,
    "code": "A001",
    "description": "Fiebres tifoidea y paratifoidea"
  }
  ```
- `404 Not Found`: La categor√≠a CIE-10 con el ID especificado no fue encontrada.

### `PATCH /cat-cie-diez/{id}`

Actualiza una categor√≠a existente en el cat√°logo CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la categor√≠a CIE-10 a actualizar.

**Request Body:** `UpdateCatCieDiezDto` (parcial de `CreateCatCieDiezDto`)

```json
{
  "description": "Fiebres tifoidea, paratifoidea y otras salmonelosis"
}
```

**Responses:**

- `200 OK`: La categor√≠a CIE-10 ha sido actualizada exitosamente.
- `404 Not Found`: La categor√≠a CIE-10 con el ID especificado no fue encontrada.
- `400 Bad Request`: Solicitud inv√°lida.

### `DELETE /cat-cie-diez/{id}`

Elimina una categor√≠a del cat√°logo CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la categor√≠a CIE-10 a eliminar.

**Responses:**

- `200 OK`: La categor√≠a CIE-10 ha sido eliminada exitosamente.
- `404 Not Found`: La categor√≠a CIE-10 con el ID especificado no fue encontrada.

================
File: src/docs/cat-identification-type.md
================
# Cat√°logo de Tipos de Identificaci√≥n - API Endpoints

Este documento describe los endpoints para gestionar el cat√°logo de tipos de identificaci√≥n.

**Todos los endpoints en este m√≥dulo requieren autenticaci√≥n y el permiso `MANAGE_CATALOGS`.**

## Descripci√≥n

El cat√°logo de tipos de identificaci√≥n permite gestionar los diferentes tipos de documentos de identidad que pueden utilizar los usuarios del sistema, organizados por pa√≠s. Esto incluye c√©dulas de ciudadan√≠a, pasaportes, DNI, etc.

## Endpoints

### `POST /cat-identification-type`

Crea un nuevo tipo de identificaci√≥n en el cat√°logo.

**Headers:**

- `Authorization` (string, required): Bearer token JWT.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `MANAGE_CATALOGS`: Gestionar cat√°logos del sistema.

**Request Body:**

```json
{
  "name": "string (Nombre del tipo de identificaci√≥n)",
  "description": "string (Descripci√≥n opcional)",
  "country": "string (Pa√≠s donde es v√°lido este tipo)"
}
```

**Ejemplo:**

```json
{
  "name": "C√©dula de Ciudadan√≠a",
  "description": "Documento de identificaci√≥n nacional para ciudadanos",
  "country": "Colombia"
}
```

**Validaciones:**

- `name`: Requerido, string entre 1-100 caracteres
- `description`: Opcional, string m√°ximo 255 caracteres
- `country`: Requerido, string entre 1-100 caracteres

**Responses:**

- `201 Created`: El tipo de identificaci√≥n ha sido creado exitosamente.
  ```json
  {
    "id": 1,
    "name": "C√©dula de Ciudadan√≠a",
    "description": "Documento de identificaci√≥n nacional para ciudadanos",
    "country": "Colombia",
    "created_at": "2024-01-15T10:30:00.000Z",
    "updated_at": "2024-01-15T10:30:00.000Z"
  }
  ```
- `400 Bad Request`: Datos de entrada inv√°lidos.
- `403 Forbidden`: No tiene permisos para gestionar cat√°logos.

### `GET /cat-identification-type`

Obtiene todos los tipos de identificaci√≥n del cat√°logo.

**Headers:**

- `Authorization` (string, required): Bearer token JWT.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `MANAGE_CATALOGS`: Gestionar cat√°logos del sistema.

**Query Parameters:**

- `country` (string, optional): Filtrar por pa√≠s (b√∫squeda insensible a may√∫sculas).

**Responses:**

- `200 OK`: Lista de tipos de identificaci√≥n.
  ```json
  [
    {
      "id": 1,
      "name": "C√©dula de Ciudadan√≠a",
      "description": "Documento de identificaci√≥n nacional para ciudadanos",
      "country": "Colombia",
      "created_at": "2024-01-15T10:30:00.000Z",
      "updated_at": "2024-01-15T10:30:00.000Z"
    },
    {
      "id": 2,
      "name": "Pasaporte",
      "description": "Documento de viaje internacional",
      "country": "Colombia",
      "created_at": "2024-01-15T11:00:00.000Z",
      "updated_at": "2024-01-15T11:00:00.000Z"
    }
  ]
  ```
- `400 Bad Request`: Error al obtener los datos.
- `403 Forbidden`: No tiene permisos para ver cat√°logos.

**Ejemplos de uso:**

```bash
# Obtener todos los tipos
GET /cat-identification-type

# Filtrar por pa√≠s
GET /cat-identification-type?country=Colombia
GET /cat-identification-type?country=argentina
```

### `GET /cat-identification-type/{id}`

Obtiene un tipo de identificaci√≥n espec√≠fico por su ID.

**Headers:**

- `Authorization` (string, required): Bearer token JWT.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `MANAGE_CATALOGS`: Gestionar cat√°logos del sistema.

**Path Parameters:**

- `id` (number): ID del tipo de identificaci√≥n.

**Responses:**

- `200 OK`: Detalles del tipo de identificaci√≥n.
  ```json
  {
    "id": 1,
    "name": "C√©dula de Ciudadan√≠a",
    "description": "Documento de identificaci√≥n nacional para ciudadanos",
    "country": "Colombia",
    "created_at": "2024-01-15T10:30:00.000Z",
    "updated_at": "2024-01-15T10:30:00.000Z"
  }
  ```
- `400 Bad Request`: ID inv√°lido.
- `403 Forbidden`: No tiene permisos para ver cat√°logos.
- `404 Not Found`: Tipo de identificaci√≥n no encontrado.

### `PATCH /cat-identification-type/{id}`

Actualiza un tipo de identificaci√≥n espec√≠fico por su ID.

**Headers:**

- `Authorization` (string, required): Bearer token JWT.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `MANAGE_CATALOGS`: Gestionar cat√°logos del sistema.

**Path Parameters:**

- `id` (number): ID del tipo de identificaci√≥n a actualizar.

**Request Body:**

Todos los campos son opcionales (partial update):

```json
{
  "name": "string (opcional)",
  "description": "string (opcional)",
  "country": "string (opcional)"
}
```

**Ejemplo:**

```json
{
  "description": "Documento nacional de identificaci√≥n actualizado"
}
```

**Responses:**

- `200 OK`: El tipo de identificaci√≥n ha sido actualizado exitosamente.
  ```json
  {
    "id": 1,
    "name": "C√©dula de Ciudadan√≠a",
    "description": "Documento nacional de identificaci√≥n actualizado",
    "country": "Colombia",
    "created_at": "2024-01-15T10:30:00.000Z",
    "updated_at": "2024-01-15T15:45:00.000Z"
  }
  ```
- `400 Bad Request`: Datos de entrada inv√°lidos.
- `403 Forbidden`: No tiene permisos para gestionar cat√°logos.
- `404 Not Found`: Tipo de identificaci√≥n no encontrado.

### `DELETE /cat-identification-type/{id}`

Elimina un tipo de identificaci√≥n espec√≠fico por su ID.

**Headers:**

- `Authorization` (string, required): Bearer token JWT.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `MANAGE_CATALOGS`: Gestionar cat√°logos del sistema.

**Path Parameters:**

- `id` (number): ID del tipo de identificaci√≥n a eliminar.

**Responses:**

- `200 OK`: El tipo de identificaci√≥n ha sido eliminado exitosamente.
  ```json
  {
    "id": 1,
    "name": "C√©dula de Ciudadan√≠a",
    "description": "Documento de identificaci√≥n nacional para ciudadanos",
    "country": "Colombia",
    "created_at": "2024-01-15T10:30:00.000Z",
    "updated_at": "2024-01-15T10:30:00.000Z"
  }
  ```
- `403 Forbidden`: No tiene permisos para gestionar cat√°logos.
- `404 Not Found`: Tipo de identificaci√≥n no encontrado.

## Consideraciones de Seguridad

- **Autenticaci√≥n requerida**: Todos los endpoints requieren un JWT v√°lido.
- **Autorizaci√≥n por permisos**: Se requiere el permiso `MANAGE_CATALOGS`.
- **Tenant isolation**: Se aplican las pol√≠ticas de tenant del sistema.

## Validaciones de Datos

### Campos Requeridos

- `name`: Nombre del tipo de identificaci√≥n
- `country`: Pa√≠s donde es v√°lido

### L√≠mites de Caracteres

- `name`: 1-100 caracteres
- `description`: 0-255 caracteres (opcional)
- `country`: 1-100 caracteres

### Tipos de Datos

- Todos los campos de texto son strings
- `id` es un entero autoincremental
- Fechas en formato ISO 8601

## Casos de Uso Comunes

### Configuraci√≥n Inicial del Sistema

```bash
# Crear tipos de identificaci√≥n para Colombia
POST /cat-identification-type
{
  "name": "C√©dula de Ciudadan√≠a",
  "description": "Documento nacional de Colombia",
  "country": "Colombia"
}

POST /cat-identification-type
{
  "name": "Tarjeta de Identidad",
  "description": "Para menores de edad en Colombia",
  "country": "Colombia"
}
```

### Gesti√≥n por Pa√≠s

```bash
# Obtener tipos disponibles para un pa√≠s espec√≠fico
GET /cat-identification-type?country=Argentina

# Listar todos para revisi√≥n
GET /cat-identification-type
```

### Mantenimiento de Cat√°logo

```bash
# Actualizar descripci√≥n
PATCH /cat-identification-type/1
{
  "description": "Descripci√≥n actualizada del documento"
}

# Eliminar tipo obsoleto
DELETE /cat-identification-type/5
```

## Integraci√≥n con Otros M√≥dulos

- **User Management**: Los usuarios referencian este cat√°logo en el campo `identification_type_id`
- **Patient Registration**: Se utiliza durante el registro de pacientes
- **Authentication**: Los tipos de identificaci√≥n son parte del perfil de usuario

================
File: src/docs/cat-measure-unit.md
================
# Cat√°logo de Unidades de Medida Endpoints

## Descripci√≥n

El m√≥dulo del Cat√°logo de Unidades de Medida gestiona las unidades utilizadas para los signos vitales en la plataforma. Permite crear, leer y eliminar unidades de medida. Todos los endpoints de este m√≥dulo requieren el header `tenant_id`.

## Endpoints

A continuaci√≥n, se detallan los endpoints disponibles:

### `POST /cat-measure-unit`

Crea una nueva unidad de medida. Este endpoint requiere permisos de Super Administrador y `MANAGE_CATALOGS`.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Request Body:** `CreateCatMeasureUnitDto`

```json
{
  "name": "mmHg",
  "description": "Mil√≠metros de mercurio",
  "cat_vital_signs_id": 1
}
```

**Responses:**

- `201 Created`: La unidad de medida ha sido creada exitosamente.
- `400 Bad Request`: Solicitud inv√°lida (ej. datos faltantes o incorrectos).
- `403 Forbidden`: Acceso denegado (no es Super Administrador o no tiene el permiso `MANAGE_CATALOGS`).

### `GET /cat-measure-unit`

Obtiene todas las unidades de medida. Opcionalmente, puede filtrarlas por el ID de un signo vital espec√≠fico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Query Parameters:**

- `vitalSignId` (number, opcional): ID del signo vital para filtrar las unidades de medida.

**Responses:**

- `200 OK`: Unidades de medida recuperadas exitosamente.
  Ejemplo de respuesta (sin filtro):
  ```json
  [
    {
      "id": 1,
      "name": "mmHg",
      "description": "Mil√≠metros de mercurio",
      "cat_vital_signs_id": 1
    },
    {
      "id": 2,
      "name": "lat/min",
      "description": "Latidos por minuto",
      "cat_vital_signs_id": 2
    }
    // ... m√°s unidades
  ]
  ```
  Ejemplo de respuesta (filtrado por `vitalSignId=1`):
  ```json
  [
    {
      "id": 1,
      "name": "mmHg",
      "description": "Mil√≠metros de mercurio",
      "cat_vital_signs_id": 1
    }
  ]
  ```
- `400 Bad Request`: Solicitud inv√°lida (ej. `vitalSignId` no es un n√∫mero).
- `403 Forbidden`: Acceso denegado.

### `DELETE /cat-measure-unit/{id}`

Elimina una unidad de medida por su ID. Este endpoint requiere permisos de Super Administrador y `MANAGE_CATALOGS`.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (number, required): ID de la unidad de medida a eliminar.

**Responses:**

- `200 OK`: La unidad de medida ha sido eliminada exitosamente.
- `403 Forbidden`: Acceso denegado (no es Super Administrador o no tiene el permiso `MANAGE_CATALOGS`).
- `404 Not Found`: La unidad de medida con el ID especificado no fue encontrada.

================
File: src/docs/cat-study-type.md
================
# Cat√°logo de Tipos de Estudio Endpoints

## Descripci√≥n

El m√≥dulo del Cat√°logo de Tipos de Estudio gestiona los diferentes tipos de estudios m√©dicos que se pueden registrar en la plataforma (ej. "An√°lisis de Sangre", "Radiograf√≠a", etc.). Permite crear, leer, actualizar y eliminar estos tipos de estudio.

## Endpoints

A continuaci√≥n, se detallan los endpoints disponibles:

### `POST /cat-study-type`

Crea un nuevo tipo de estudio.

**Request Body:** `CreateCatStudyTypeDto`

```json
{
  "name": "An√°lisis de Sangre"
}
```

**Responses:**

- `201 Created`: El tipo de estudio ha sido creado exitosamente.
  Respuesta Ejemplo:
  ```json
  {
    "id": 1,
    "name": "An√°lisis de Sangre"
  }
  ```
- `400 Bad Request`: Solicitud inv√°lida (ej. el campo `name` est√° vac√≠o).

### `GET /cat-study-type`

Obtiene todos los tipos de estudio registrados.

**Responses:**

- `200 OK`: Tipos de estudio recuperados exitosamente.
  Respuesta Ejemplo:
  ```json
  [
    {
      "id": 1,
      "name": "An√°lisis de Sangre"
    },
    {
      "id": 2,
      "name": "Radiograf√≠a de T√≥rax"
    }
    // ... m√°s tipos de estudio
  ]
  ```

### `GET /cat-study-type/{id}`

Obtiene un tipo de estudio espec√≠fico por su ID.

**Path Parameters:**

- `id` (number, required): ID del tipo de estudio.

**Responses:**

- `200 OK`: Tipo de estudio recuperado exitosamente.
  Respuesta Ejemplo:
  ```json
  {
    "id": 1,
    "name": "An√°lisis de Sangre"
  }
  ```
- `404 Not Found`: El tipo de estudio con el ID especificado no fue encontrado.

### `PUT /cat-study-type/{id}`

Actualiza un tipo de estudio existente por su ID. Requiere que se env√≠e el objeto completo del tipo de estudio.

**Path Parameters:**

- `id` (number, required): ID del tipo de estudio a actualizar.

**Request Body:** `CreateCatStudyTypeDto` (se env√≠a el objeto completo)

```json
{
  "name": "An√°lisis de Sangre Completo"
}
```

**Responses:**

- `200 OK`: El tipo de estudio ha sido actualizado exitosamente.
  Respuesta Ejemplo:
  ```json
  {
    "id": 1,
    "name": "An√°lisis de Sangre Completo"
  }
  ```
- `404 Not Found`: El tipo de estudio con el ID especificado no fue encontrado.
- `400 Bad Request`: Solicitud inv√°lida.

### `DELETE /cat-study-type/{id}`

Elimina un tipo de estudio por su ID.

**Path Parameters:**

- `id` (number, required): ID del tipo de estudio a eliminar.

**Responses:**

- `200 OK`: El tipo de estudio ha sido eliminado exitosamente.
  Respuesta Ejemplo (puede variar, podr√≠a ser el objeto eliminado o un mensaje de √©xito):
  ```json
  {
    "id": 1,
    "name": "An√°lisis de Sangre Completo"
  }
  ```
- `404 Not Found`: El tipo de estudio con el ID especificado no fue encontrado.

================
File: src/docs/cat-vital-signs.md
================
# API de Cat√°logo de Signos Vitales

Este m√≥dulo proporciona endpoints para gestionar el cat√°logo de signos vitales en la plataforma SEGIMED.

## Requisitos de Seguridad

- **Autenticaci√≥n con Token Bearer**: Los endpoints de creaci√≥n y eliminaci√≥n requieren un token JWT v√°lido en el header de Authorization.
- **Permisos de SuperAdmin**: Solo los endpoints de creaci√≥n y eliminaci√≥n requieren permisos de SuperAdmin.
- **Acceso P√∫blico**: Los endpoints de consulta (GET) son de acceso p√∫blico sin requerir autenticaci√≥n.

## Endpoints

### Crear un Signo Vital

```http
POST /cat-vital-signs
```

Crea un nuevo signo vital en el cat√°logo.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |

#### Permiso Requerido

Requiere rol de **SuperAdmin**

#### Cuerpo de la Petici√≥n

```json
{
  "name": "Frecuencia Card√≠aca",
  "category": "Cardiovascular",
  "specialties": [1, 2, 3],
  "color": "#FF5733",
  "mini_icon": "heart-mini",
  "icon": "heart-icon",
  "background_icon": "heart-background",
  "normal_min_value": 60,
  "normal_max_value": 100,
  "slightly_high_value": 120,
  "high_max_value": 140,
  "critical_max_value": 180,
  "cat_measure_unit_id": 1
}
```

| Campo               | Tipo     | Descripci√≥n                                  | Requerido |
| ------------------- | -------- | -------------------------------------------- | --------- |
| name                | string   | Nombre del signo vital                       | S√≠        |
| category            | string   | Categor√≠a a la que pertenece el signo vital  | S√≠        |
| specialties         | number[] | Array de IDs de especialidades relacionadas  | S√≠        |
| color               | string   | Color asociado al signo vital para la UI     | S√≠        |
| mini_icon           | string   | Identificador del mini icono del signo vital | S√≠        |
| icon                | string   | Identificador del icono del signo vital      | S√≠        |
| background_icon     | string   | Identificador del icono de fondo             | No        |
| normal_min_value    | number   | Valor m√≠nimo normal del signo vital          | No        |
| normal_max_value    | number   | Valor m√°ximo normal del signo vital          | No        |
| slightly_high_value | number   | Valor umbral ligeramente alto                | No        |
| high_max_value      | number   | Valor m√°ximo alto                            | No        |
| critical_max_value  | number   | Valor m√°ximo cr√≠tico                         | No        |
| cat_measure_unit_id | number   | ID de la unidad de medida asociada           | No        |

#### Respuesta

**C√≥digo de Estado**: 201 Created

```json
{
  "id": 1,
  "name": "Frecuencia Card√≠aca",
  "category": "Cardiovascular",
  "color": "#FF5733",
  "mini_icon": "heart-mini",
  "icon": "heart-icon",
  "background_icon": "heart-background",
  "normal_min_value": 60,
  "normal_max_value": 100,
  "slightly_high_value": 120,
  "high_max_value": 140,
  "critical_max_value": 180,
  "specialties": [
    {
      "id": 1,
      "name": "Cardiolog√≠a"
    },
    {
      "id": 2,
      "name": "Medicina General"
    }
  ],
  "cat_measure_unit": {
    "id": 1,
    "name": "bpm",
    "description": "Latidos por minuto"
  }
}
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "Detalles de la solicitud incorrecta",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Obtener Todos los Signos Vitales

```http
GET /cat-vital-signs
```

Recupera una lista de todos los signos vitales, opcionalmente filtrados por IDs de especialidad.

#### Headers

No requiere headers de autenticaci√≥n.

#### Permiso Requerido

No requiere permisos especiales - **Acceso p√∫blico**

#### Par√°metros de Consulta

| Par√°metro    | Requerido | Descripci√≥n                                                   |
| ------------ | --------- | ------------------------------------------------------------- |
| specialtyIds | No        | Lista de IDs de especialidad separados por coma (ej. "1,2,3") |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
[
  {
    "id": 1,
    "name": "Frecuencia Card√≠aca",
    "category": "Cardiovascular",
    "color": "#FF5733",
    "mini_icon": "heart-mini",
    "icon": "heart-icon",
    "background_icon": "heart-background",
    "normal_min_value": 60,
    "normal_max_value": 100,
    "slightly_high_value": 120,
    "high_max_value": 140,
    "critical_max_value": 180,
    "specialties": [
      {
        "id": 1,
        "name": "Cardiolog√≠a"
      },
      {
        "id": 2,
        "name": "Medicina General"
      }
    ],
    "cat_measure_unit": {
      "id": 1,
      "name": "bpm",
      "description": "Latidos por minuto"
    }
  },
  {
    "id": 2,
    "name": "Temperatura",
    "category": "General",
    "color": "#FFA500",
    "mini_icon": "temp-mini",
    "icon": "temp-icon",
    "background_icon": "temp-background",
    "normal_min_value": 36.1,
    "normal_max_value": 37.2,
    "slightly_high_value": 37.5,
    "high_max_value": 38.5,
    "critical_max_value": 40.0,
    "specialties": [
      {
        "id": 1,
        "name": "Medicina General"
      }
    ],
    "cat_measure_unit": {
      "id": 2,
      "name": "¬∞C",
      "description": "Grados Celsius"
    }
  }
]
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "ID de especialidad inv√°lido: abc",
  "error": "Bad Request"
}
```

### Obtener un Signo Vital por ID

```http
GET /cat-vital-signs/{id}
```

Recupera un signo vital espec√≠fico por su ID.

#### Headers

No requiere headers de autenticaci√≥n.

#### Permiso Requerido

No requiere permisos especiales - **Acceso p√∫blico**

#### Par√°metros de Ruta

| Par√°metro | Requerido | Descripci√≥n                    |
| --------- | --------- | ------------------------------ |
| id        | S√≠        | ID del signo vital a consultar |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "id": 1,
  "name": "Frecuencia Card√≠aca",
  "category": "Cardiovascular",
  "color": "#FF5733",
  "mini_icon": "heart-mini",
  "icon": "heart-icon",
  "background_icon": "heart-background",
  "normal_min_value": 60,
  "normal_max_value": 100,
  "slightly_high_value": 120,
  "high_max_value": 140,
  "critical_max_value": 180,
  "specialties": [
    {
      "id": 1,
      "name": "Cardiolog√≠a"
    },
    {
      "id": 2,
      "name": "Medicina General"
    }
  ],
  "cat_measure_unit": {
    "id": 1,
    "name": "bpm",
    "description": "Latidos por minuto"
  }
}
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "ID inv√°lido",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 404 Not Found

```json
{
  "statusCode": 404,
  "message": "Signo vital no encontrado",
  "error": "Not Found"
}
```

### Eliminar un Signo Vital

```http
DELETE /cat-vital-signs/{id}
```

Elimina un signo vital del cat√°logo.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |

#### Permiso Requerido

Requiere rol de **SuperAdmin**

#### Par√°metros de Ruta

| Par√°metro | Requerido | Descripci√≥n                   |
| --------- | --------- | ----------------------------- |
| id        | S√≠        | ID del signo vital a eliminar |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Signo vital con ID 1 ha sido eliminado"
}
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "ID inv√°lido",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

## Notas

- Esta API est√° dise√±ada para gestionar los signos vitales utilizados en evaluaciones m√©dicas
- Los signos vitales son datos de cat√°logo global del sistema, no est√°n asociados a ning√∫n tenant espec√≠fico
- Los signos vitales pueden estar asociados con m√∫ltiples especialidades m√©dicas
- Cada signo vital puede tener campos visuales como color, mini_icon, icon y background_icon para mejorar la experiencia de usuario
- Los signos vitales pueden tener m√∫ltiples rangos de valores definidos (normal, ligeramente alto, alto, cr√≠tico) para validaci√≥n y alertas
- Cada signo vital puede estar asociado con una unidad de medida espec√≠fica
- **Acceso p√∫blico**: Los endpoints de consulta (GET) no requieren autenticaci√≥n ni permisos especiales
- **Operaciones administrativas**: Solo los usuarios SuperAdmin pueden crear o eliminar signos vitales
- **Seguridad**: Los endpoints de cat√°logo no exponen informaci√≥n de pacientes, solo datos de configuraci√≥n del sistema

## Campos Adicionales

### Campos Visuales

- **color**: Color hexadecimal para representar el signo vital en la interfaz de usuario
- **mini_icon**: Identificador del icono peque√±o para mostrar en listas compactas
- **icon**: Identificador del icono principal para mostrar en vistas detalladas
- **background_icon**: Identificador del icono de fondo para elementos visuales especiales

### Campos de Validaci√≥n y Rangos

- **normal_min_value**: Valor m√≠nimo del rango normal para el signo vital
- **normal_max_value**: Valor m√°ximo del rango normal para el signo vital
- **slightly_high_value**: Umbral para valores ligeramente elevados
- **high_max_value**: Valor m√°ximo para el rango alto
- **critical_max_value**: Valor m√°ximo cr√≠tico que requiere atenci√≥n inmediata

### Relaciones

- **specialties**: Lista de especialidades m√©dicas asociadas al signo vital
- **cat_measure_unit**: Unidad de medida asociada al signo vital (relaci√≥n uno-a-uno)
- **cat_measure_unit_id**: ID de la unidad de medida asociada

================
File: src/docs/catalog-seed.md
================
# API de Inicializaci√≥n de Cat√°logos

Este m√≥dulo proporciona endpoints para inicializar varios cat√°logos con datos predefinidos. Estos endpoints est√°n restringidos a usuarios SuperAdmin que tienen el permiso .

## Requisitos de Seguridad

- **Autenticaci√≥n con Token Bearer**: Todos los endpoints requieren un token JWT v√°lido en el header de Authorization.
- **ID de Tenant**: Todas las peticiones deben incluir el header `tenant_id`.
- **Permisos de SuperAdmin**: Todos los endpoints requieren rol de SuperAdmin y el permiso `CONFIGURE_SYSTEM_SETTINGS`.

## Endpoints

### Inicializar Todos los Cat√°logos

```http
POST /catalogs/seed
```

Inicializa todos los cat√°logos disponibles con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Todos los cat√°logos han sido inicializados correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de Tipos de Estudio

```http
POST /catalogs/seed/study-types
```

Inicializa solo el cat√°logo de tipos de estudio con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de tipos de estudio inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo CIE-10

```http
POST /catalogs/seed/cie-diez
```

Inicializa solo el cat√°logo CIE-10 con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo CIE-10 inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Subcat√°logo CIE-10

```http
POST /catalogs/seed/subcat-cie-diez
```

Inicializa solo el subcat√°logo CIE-10 con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Subcat√°logo CIE-10 inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de Signos Vitales

```http
POST /catalogs/seed/vital-signs
```

Inicializa solo el cat√°logo de signos vitales con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de signos vitales inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de Unidades de Medida

```http
POST /catalogs/seed/measure-units
```

Inicializa solo el cat√°logo de unidades de medida con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de unidades de medida inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de Especialidades

```http
POST /catalogs/seed/specialties
```

Inicializa solo el cat√°logo de especialidades con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de especialidades inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de Subsistemas F√≠sicos

```http
POST /catalogs/seed/physical-subsystems
```

Inicializa solo el cat√°logo de subsistemas f√≠sicos con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de subsistemas f√≠sicos inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

### Inicializar Cat√°logo de √Åreas de Exploraci√≥n F√≠sica

```http
POST /catalogs/seed/exploration-areas
```

Inicializa solo el cat√°logo de √°reas de exploraci√≥n f√≠sica con datos predefinidos.

#### Headers

| Header        | Requerido | Descripci√≥n            |
|---------------|-----------|------------------------|
| Authorization | S√≠        | Bearer {access_token}  |
| tenant_id     | S√≠        | ID del tenant          |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "message": "Cat√°logo de √°reas de exploraci√≥n f√≠sica inicializado correctamente"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "Recurso prohibido",
  "error": "Forbidden"
}
```

## Notas

- Estos endpoints solo son accesibles para usuarios con privilegios de SuperAdmin y el permiso requerido.
- Cada endpoint inicializa un cat√°logo espec√≠fico con valores predefinidos.
- El endpoint principal `/catalogs/seed` inicializa todos los cat√°logos a la vez.

================
File: src/docs/file-upload.md
================
# Documentaci√≥n de API: File Upload

Este documento proporciona detalles sobre los endpoints del m√≥dulo de File Upload (Carga de Archivos) disponibles en la API de Segimed.

## Informaci√≥n General

- **Base URL**: `/files`
- **Controlador**: `FileUploadController`
- **Servicios Relacionados**: `FileUploadService`, `FileUploadRepository`
- **Servicio de Almacenamiento**: Cloudinary

## Descripci√≥n del M√≥dulo

El m√≥dulo File Upload permite a los usuarios cargar archivos (im√°genes y documentos PDF) al servidor. Estos archivos son almacenados en Cloudinary, un servicio de gesti√≥n de activos en la nube, y la API devuelve la URL y el tipo de archivo cargado.

## Limitaciones y Validaciones

- **Tipos de archivo permitidos**:
  - Im√°genes: jpg, jpeg, png, webp, svg
  - Documentos: pdf
- **Tama√±o m√°ximo de archivo**:
  - 10MB para documentos PDF
  - 5MB para im√°genes (aunque la validaci√≥n actual es de 10MB para todos los tipos)

## Endpoints

### 1. Subir Archivo

Permite cargar un archivo (imagen o PDF) al servidor.

- **URL**: `POST /files/upload`
- **Content-Type**: `multipart/form-data`
- **Body**:
  - `file`: El archivo a cargar (campo binario)
- **Respuestas**:
  - `200 OK`: Archivo subido correctamente
    ```json
    {
      "url": "https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg",
      "type": "image"
    }
    ```
  - `400 Bad Request`: Archivo inv√°lido o excede el tama√±o m√°ximo permitido
  - `500 Internal Server Error`: Error al procesar la carga del archivo

## Funcionalidades Adicionales del Servicio

Aunque no est√°n expuestas como endpoints API, el servicio tambi√©n proporciona las siguientes funcionalidades:

### Carga de Archivos Base64

El servicio `FileUploadService` incluye un m√©todo para cargar archivos desde una cadena en formato base64:

```typescript
async uploadBase64File(
  dataUri: string,
  filename?: string,
): Promise<{ url: string; type: string }>
```

Este m√©todo es utilizado internamente por otros m√≥dulos cuando necesitan cargar archivos que ya est√°n en formato base64.

## Configuraci√≥n del Servicio

El m√≥dulo utiliza Cloudinary como servicio de almacenamiento. La configuraci√≥n se obtiene de las siguientes variables de entorno:

- `CLOUDINARY_CLOUD_NAME`: Nombre de la nube en Cloudinary
- `CLOUDINARY_API_KEY`: Clave de API de Cloudinary
- `CLOUDINARY_API_SECRET`: Secreto de API de Cloudinary

## Ejemplos de Uso

### Carga de archivo desde el cliente

```javascript
// Ejemplo con Fetch API
const formData = new FormData();
const fileInput = document.querySelector('input[type="file"]');
formData.append('file', fileInput.files[0]);

fetch('https://api.segimed.com/files/upload', {
  method: 'POST',
  body: formData,
  // Incluir headers de autenticaci√≥n si son necesarios
})
  .then((response) => response.json())
  .then((data) => {
    console.log('URL del archivo:', data.url);
    console.log('Tipo de archivo:', data.type);
  })
  .catch((error) => console.error('Error al subir el archivo:', error));
```

## Consideraciones de Seguridad

- El servicio valida el tipo y tama√±o de los archivos antes de procesarlos.
- Actualmente no hay restricciones de autenticaci√≥n para este endpoint, lo que podr√≠a ser un riesgo de seguridad. Es recomendable:
  - A√±adir autenticaci√≥n (Bearer JWT).
  - Implementar limitaci√≥n de tasa (rate limiting).
  - Considerar escanear los archivos en busca de virus o contenido malicioso antes de procesarlos.

## Recomendaciones para Mejoras Futuras

1. A√±adir autenticaci√≥n y autorizaci√≥n al endpoint de carga de archivos.
2. Implementar un endpoint para eliminar archivos previamente cargados.
3. A√±adir soporte para m√°s tipos de archivos seg√∫n las necesidades de la aplicaci√≥n.
4. Implementar mejor manejo de errores y validaciones m√°s espec√≠ficas para cada tipo de archivo.
5. Considerar a√±adir metadatos a los archivos cargados para facilitar su gesti√≥n y b√∫squeda.

================
File: src/docs/Manual_de_Introducci√≥n_a_Segimed.md
================
# Manual de Introducci√≥n a Segimed Backend para Desarrolladores

## √çndice

1. Introducci√≥n y Visi√≥n General
2. Arquitectura del Sistema
3. Estructura del Proyecto
4. Modelo de Datos
5. Sistema Multi-Tenant
6. Autenticaci√≥n y Autorizaci√≥n
7. Principales M√≥dulos y Funcionalidades
8. Flujos de Trabajo Comunes
9. Configuraci√≥n del Entorno de Desarrollo
10. Convenciones de C√≥digo
11. Recursos y Documentaci√≥n

---

## 1. Introducci√≥n y Visi√≥n General

Segimed es una plataforma de gesti√≥n m√©dica integral desarrollada para facilitar la administraci√≥n de cl√≠nicas, consultorios m√©dicos y profesionales de la salud. El sistema permite gestionar pacientes, citas, historias cl√≠nicas, recetas, certificados y √≥rdenes m√©dicas en un entorno seguro y organizado.

**Objetivos principales de la aplicaci√≥n:**

- Gesti√≥n completa de pacientes y sus historias cl√≠nicas
- Agendamiento y gesti√≥n de citas m√©dicas
- Generaci√≥n de documentos m√©dicos (recetas, certificados, √≥rdenes de estudios)
- Administraci√≥n de m√©dicos y sus especialidades
- Dashboard con estad√≠sticas e indicadores

## 2. Arquitectura del Sistema

### 2.1 Stack Tecnol√≥gico

- **Backend**: NestJS (Framework de Node.js)
- **Base de Datos**: PostgreSQL
- **ORM**: Prisma
- **Autenticaci√≥n**: JWT (JSON Web Tokens)
- **Documentaci√≥n API**: Swagger
- **Almacenamiento de archivos**: Cloudinary
- **Notificaciones**: Twilio y servicio de Email
- **Integraci√≥n de pagos**: PayPal

### 2.2 Patr√≥n Arquitect√≥nico

Segimed implementa una arquitectura modular basada en los principios de NestJS:

- **M√≥dulos**: Unidades funcionales independientes y reutilizables
- **Controladores**: Gestionan las rutas HTTP y solicitudes entrantes
- **Servicios**: Encapsulan la l√≥gica de negocio
- **DTOs**: Objetos de transferencia de datos para validaci√≥n
- **Entidades**: Representan el modelo de datos

## 3. Estructura del Proyecto

El proyecto est√° organizado en los siguientes directorios principales:

```
src/
  |- app.module.ts             # M√≥dulo principal de la aplicaci√≥n
  |- main.ts                   # Punto de entrada de la aplicaci√≥n
  |- auth/                     # Autenticaci√≥n y autorizaci√≥n
  |- catalogs/                 # Cat√°logos del sistema (ej. CIE-10, tipos de estudios)
  |- management/               # Gesti√≥n de usuarios, pacientes y suscripciones
  |- medical_order/            # Gesti√≥n de √≥rdenes m√©dicas
  |- medical-scheduling/       # Agendamiento m√©dico y eventos
  |- mobile-functions/         # Funciones para aplicaciones m√≥viles
  |- prisma/                   # Configuraci√≥n de Prisma ORM
  |- services/                 # Servicios externos (email, Twilio)
  |- utils/                    # Utilidades y helpers
```

## 4. Modelo de Datos

Segimed utiliza Prisma como ORM para interactuar con la base de datos PostgreSQL. Las principales entidades del sistema son:

- **tenant**: Representa organizaciones o cl√≠nicas independientes
- **user**: Usuarios del sistema (m√©dicos, administrativos, etc.)
- **patient**: Pacientes registrados
- **physician**: M√©dicos asociados al sistema
- **appointment**: Citas m√©dicas
- **medical_event**: Eventos m√©dicos (consultas)
- **prescription**: Recetas m√©dicas
- **medical_order**: √ìrdenes m√©dicas (estudios, certificados)

El esquema completo se encuentra definido en schema.prisma.

## 5. Sistema Multi-Tenant

Segimed implementa un modelo multi-tenant para dar servicio a m√∫ltiples organizaciones m√©dicas de forma independiente:

- Cada organizaci√≥n (cl√≠nica, hospital, consultorio) est√° representada por un tenant
- Los datos est√°n l√≥gicamente separados por tenant
- Se implementan middlewares espec√≠ficos (`TenantMiddleware`, `TenantExtractorMiddleware`) para gestionar el contexto del tenant en cada solicitud
- La seguridad se refuerza mediante el `TenantAccessGuard` que verifica los permisos a nivel de tenant

## 6. Autenticaci√≥n y Autorizaci√≥n

### 6.1 Autenticaci√≥n

- Basada en JWT (JSON Web Tokens)
- Rutas de autenticaci√≥n en `/auth`
- Soporte para login con credenciales y Google Auth
- Recuperaci√≥n de contrase√±a mediante OTP

### 6.2 Sistema de Permisos

- Sistema granular basado en permisos espec√≠ficos (definidos en permission.enum.ts)
- Roles predefinidos (m√©dico, administrativo, etc.)
- Guards personalizados para verificar permisos (`PermissionGuard`)
- Decoradores para facilitar la verificaci√≥n de permisos (`@RequirePermission()`)

## 7. Principales M√≥dulos y Funcionalidades

### 7.1 Gesti√≥n de Pacientes

- CRUD completo de pacientes
- Gesti√≥n de historias cl√≠nicas
- Vinculaci√≥n con tenants

### 7.2 Agendamiento M√©dico

- Programaci√≥n de citas
- Gesti√≥n de horarios de m√©dicos
- Confirmaciones y recordatorios

### 7.3 √ìrdenes M√©dicas

El sistema permite generar tres tipos de documentos m√©dicos:

1. **Autorizaciones de estudios** (tipo `study-authorization`):

   - Solicitud de estudios diagn√≥sticos como resonancias, radiograf√≠as, etc.
   - Asociado a un diagn√≥stico CIE-10

2. **Certificados m√©dicos** (tipo `certification`):

   - Documentos que certifican condici√≥n m√©dica, ausencias, etc.
   - Vinculados a diagn√≥sticos CIE-10

3. **Recetas m√©dicas** (tipo `medication`):
   - Prescripci√≥n de uno o m√°s medicamentos
   - Incluye dosis, frecuencia, duraci√≥n y observaciones

Ejemplo de formato para √≥rdenes m√©dicas (enviar como form-data con archivo adjunto):

```json
{
  "type": "study-authorization",
  "form_data": {
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "cat_study_type_id": 1,
    "request_reason": "Se requiere resonancia magn√©tica para evaluar lesi√≥n en rodilla",
    "description_type": "Resonancia Magn√©tica de Rodilla",
    "application_date": "2023-12-01T10:00:00Z",
    "category_cie_diez_id": 45
  }
}
```

### 7.4 Historia Cl√≠nica

- Registro de signos vitales
- Exploraci√≥n f√≠sica por √°reas
- Antecedentes m√©dicos
- Diagn√≥sticos con codificaci√≥n CIE-10

## 8. Flujos de Trabajo Comunes

### 8.1 Creaci√≥n de una Orden M√©dica

1. Seleccionar paciente
2. Determinar tipo de orden (estudio, certificado, receta)
3. Completar formulario espec√≠fico seg√∫n tipo
4. Adjuntar archivo relacionado (opcional)
5. Enviar mediante POST a `/medical-order?type={tipo}`

### 8.2 Agendamiento de Citas

1. Verificar disponibilidad del m√©dico
2. Crear cita mediante endpoint de appointments
3. Asociar paciente y m√©dico
4. Definir fecha, hora y duraci√≥n

### 8.3 Registro de Consulta M√©dica

1. Crear evento m√©dico
2. Registrar signos vitales
3. Documentar exploraci√≥n f√≠sica
4. Establecer diagn√≥stico(s)
5. Generar √≥rdenes m√©dicas necesarias

## 9. Configuraci√≥n del Entorno de Desarrollo

### 9.1 Requisitos Previos

- Node.js (v14 o superior)
- PostgreSQL
- npm o yarn
- Git

### 9.2 Instalaci√≥n

1. Clonar el repositorio
2. Instalar dependencias: `npm install`
3. Crear archivo `.env` basado en `.env.example`
4. Configurar conexi√≥n a la base de datos en `.env`
5. Generar cliente Prisma: `npm run prisma`
6. Iniciar servidor en modo desarrollo: `npm run start:dev`

### 9.3 Variables de Entorno Esenciales

- `DATABASE_URL`: URL de conexi√≥n a PostgreSQL
- `JWT_SECRET`: Clave secreta para JWT
- `CLOUDINARY_*`: Credenciales de Cloudinary
- `TWILIO_*`: Credenciales de Twilio
- `EMAIL_*`: Configuraci√≥n del servicio de email

## 10. Convenciones de C√≥digo

### 10.1 Estructura de M√≥dulos

Cada m√≥dulo funcional debe seguir la estructura:

- `*.module.ts`: Definici√≥n del m√≥dulo
- `*.controller.ts`: Controlador con endpoints
- `*.service.ts`: Servicio con l√≥gica de negocio
- `dto/`: Objetos de transferencia de datos
- `entities/`: Entidades relacionadas

### 10.2 Nomenclatura

- **Clases**: PascalCase
- **M√©todos y variables**: camelCase
- **Constantes**: UPPER_SNAKE_CASE
- **Archivos**: kebab-case

### 10.3 Documentaci√≥n

- Documentar endpoints con decoradores de Swagger
- Comentar funciones complejas
- Mantener README actualizado

## 11. Recursos y Documentaci√≥n

### 11.1 Documentaci√≥n Interna

- Swagger UI: Disponible en `/api` cuando el servidor est√° en ejecuci√≥n
- Ejemplos de uso: Directorio examples

### 11.2 Documentaci√≥n Externa

- [NestJS Documentation](https://docs.nestjs.com/)
- [Prisma Documentation](https://www.prisma.io/docs/)
- [JWT Authentication](https://jwt.io/introduction)

### 11.3 Archivos de Ejemplo

El directorio examples contiene ejemplos de los diferentes tipos de solicitudes y formatos JSON utilizados en la aplicaci√≥n, como:

- medical-files.json: Ejemplos de √≥rdenes m√©dicas
- `medical-prescriptions.json`: Ejemplos de recetas
- `patient-study-base64.json`: Ejemplos con archivos codificados en base64

---

================
File: src/docs/medical_order.md
================
# Documentaci√≥n API de √ìrdenes M√©dicas

## Descripci√≥n General

La API de √ìrdenes M√©dicas proporciona endpoints para gestionar varios tipos de √≥rdenes m√©dicas, incluyendo recetas, autorizaciones de estudios, certificados, solicitudes de hospitalizaci√≥n y solicitudes de turnos.

**Nota Importante:** La gesti√≥n de medicaciones (creaci√≥n/actualizaci√≥n de prescripciones y su historial) est√° centralizada en el `PrescriptionService` para garantizar consistencia y reutilizaci√≥n entre diferentes m√≥dulos del sistema.

## Autenticaci√≥n

Todos los endpoints requieren autenticaci√≥n mediante token Bearer y los permisos apropiados.

## URL Base

`/medical-order`

## Arquitectura de Medicaciones

### Procesamiento Centralizado

El sistema utiliza un enfoque centralizado para el procesamiento de medicaciones:

- **PrescriptionService.processMedications()**: M√©todo centralizado que maneja la l√≥gica de creaci√≥n/actualizaci√≥n de prescripciones y su historial
- **Transacciones**: Todas las operaciones de medicaci√≥n se ejecutan dentro de transacciones de base de datos para garantizar consistencia
- **Reutilizaci√≥n**: La misma l√≥gica se utiliza tanto para √≥rdenes m√©dicas como para consultas m√©dicas

### Sistema de Notificaciones Centralizado

El sistema incluye un `NotificationService` centralizado que maneja todas las notificaciones a pacientes:

- **Email y WhatsApp**: Env√≠o autom√°tico de notificaciones por ambos canales cuando est√°n disponibles
- **Plantillas Din√°micas**: Diferentes plantillas seg√∫n el tipo de orden m√©dica (medicaci√≥n vs. otros tipos)
- **Adjuntos Autom√°ticos**: Inclusi√≥n autom√°tica de documentos PDF cuando est√°n disponibles
- **Gesti√≥n de Errores**: Manejo robusto de errores sin afectar el flujo principal
- **Reutilizaci√≥n**: Mismo servicio utilizado por √≥rdenes m√©dicas y eventos m√©dicos

### Flujo de Procesamiento

1. **Verificaci√≥n**: Se verifica si existe una prescripci√≥n activa para el medicamento
2. **Actualizaci√≥n**: Si existe, se crea una nueva entrada en el historial de modificaciones
3. **Creaci√≥n**: Si no existe, se crea una nueva prescripci√≥n y su primera entrada en el historial
4. **Asociaci√≥n**: Se asocia la entrada del historial con la orden m√©dica o evento m√©dico correspondiente
5. **Notificaci√≥n**: Se env√≠an notificaciones autom√°ticas al paciente por email y WhatsApp

## Tipos de √ìrdenes M√©dicas

El sistema soporta los siguientes tipos de √≥rdenes m√©dicas:

1. **Autorizaci√≥n de Estudio (`study-authorization`)**

   - Para solicitar estudios m√©dicos como resonancias magn√©ticas, tomograf√≠as, etc.
   - Requiere tipo de estudio y motivo
   - Puede incluir documentos de respaldo

2. **Certificado (`certification`)**

   - Certificados m√©dicos para ausencia laboral, aptitud deportiva, etc.
   - Tipos est√°ndar o personalizados
   - Requiere categor√≠a de diagn√≥stico CIE-10

3. **Solicitud de Hospitalizaci√≥n (`hospitalization-request`)**

   - Para programar cirug√≠as o tratamientos planificados
   - Requiere motivo de hospitalizaci√≥n y diagn√≥stico CIE-10
   - Puede incluir documentaci√≥n adicional

4. **Solicitud de Turno (`appointment-request`)**

   - Para derivaciones a especialistas
   - Requiere especialidad m√©dica y diagn√≥stico CIE-10
   - Puede incluir motivo de la derivaci√≥n

5. **Medicaci√≥n (`medication`)**

   - Para prescribir medicamentos
   - M√∫ltiples medicamentos por orden
   - Incluye dosificaci√≥n, frecuencia y duraci√≥n

6. **Autorizaci√≥n de Medicaci√≥n (`medication-authorization`)**
   - Para autorizar uso de medicaci√≥n cr√≥nica
   - Similar a las √≥rdenes de medicaci√≥n regulares
   - Usualmente para duraciones m√°s largas

## Endpoints

### 1. Crear Orden M√©dica

Crea una nueva orden m√©dica en el sistema.

**Endpoint:** `POST /medical-order`

**Par√°metros de Consulta:**

- `type` (requerido): Tipo de orden m√©dica. Valores posibles:
  - `study-authorization`
  - `certification`
  - `hospitalization-request`
  - `appointment-request`
  - `medication`
  - `medication-authorization`

**Permiso Requerido:** `CREATE_MEDICAL_ORDERS`

**Ejemplos de Solicitudes:**

1. Autorizaci√≥n de Estudio:

```json
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "cat_study_type_id": 1,
  "request_reason": "Se requiere resonancia magn√©tica para evaluar lesi√≥n en rodilla",
  "description_type": "Resonancia Magn√©tica de Rodilla",
  "application_date": "2023-12-01T10:00:00Z",
  "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9..."
}
```

2. Prescripci√≥n de Medicamentos:

```json
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "description_type": "Receta m√©dica para control de dolor",
  "medications": [
    {
      "monodrug": "Paracetamol",
      "dose": "500",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as",
      "observations": "Tomar con alimentos"
    },
    {
      "monodrug": "Ibuprofeno",
      "dose": "400",
      "dose_units": "mg",
      "frecuency": "Cada 12 horas",
      "duration": "5",
      "duration_units": "d√≠as",
      "observations": "Tomar despu√©s de las comidas para evitar irritaci√≥n estomacal"
    }
  ]
}
```

3. Solicitud de Hospitalizaci√≥n:

```json
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "category_cie_diez_id": 78,
  "hospitalization_reason": "Paciente requiere intervenci√≥n quir√∫rgica programada",
  "request_reason": "Hernia discal que requiere cirug√≠a",
  "description_type": "Internaci√≥n para cirug√≠a de columna",
  "application_date": "2023-12-01T10:00:00Z"
}
```

4. Solicitud de Turno:

```json
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "cat_speciality_id": 3,
  "category_cie_diez_id": 52,
  "description_type": "Derivaci√≥n a traumatolog√≠a por dolor en rodilla",
  "application_date": "2023-12-01T10:00:00Z"
}
```

**Respuesta Exitosa (201):**

```json
{
  "message": "Se ha creado correctamente la orden m√©dica",
  "order_id": "123e4567-e89b-12d3-a456-426614174000"
}
```

### 2. Obtener Todas las √ìrdenes M√©dicas

Recupera todas las √≥rdenes m√©dicas con paginaci√≥n.

**Endpoint:** `GET /medical-order`

**Par√°metros de Consulta:**

- `page` (opcional): N√∫mero de p√°gina para paginaci√≥n
- `limit` (opcional): N√∫mero de elementos por p√°gina
- `type` (opcional): Filtrar por tipo de orden
- `patient_id` (opcional): Filtrar por ID de paciente

**Permiso Requerido:** `VIEW_MEDICAL_ORDERS`

**Respuesta Exitosa (200):**

```json
{
  "data": [
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "url": "https://example.com/orders/123",
      "request_date": "2023-12-01T14:30:00Z",
      "organization_name": "Hospital General",
      "physician_name": "Dr. Juan P√©rez",
      "patient_name": "Mar√≠a Garc√≠a",
      "order_type": "Prescripci√≥n"
    }
  ],
  "total": 42,
  "page": 1,
  "limit": 10,
  "totalPages": 5
}
```

### 3. Obtener √ìrdenes M√©dicas del M√©dico

Recupera todas las √≥rdenes m√©dicas de un m√©dico espec√≠fico con paginaci√≥n.

**Endpoint:** `GET /medical-order/physician`

**Par√°metros de Consulta:**

- `page` (opcional): N√∫mero de p√°gina para paginaci√≥n
- `limit` (opcional): N√∫mero de elementos por p√°gina
- `patient_id` (opcional): Filtrar por ID de paciente
- `type` (opcional): Filtrar por tipo de orden

**Permiso Requerido:** `VIEW_MEDICAL_ORDERS`

**Respuesta Exitosa (200):**

```json
{
  "data": [
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "url": "https://example.com/orders/123",
      "request_date": "2023-12-01T14:30:00Z",
      "organization_name": "Hospital General",
      "physician_name": "Dr. Juan P√©rez",
      "patient_name": "Mar√≠a Garc√≠a",
      "order_type": "Prescripci√≥n"
    }
  ],
  "total": 42,
  "page": 1,
  "limit": 10,
  "totalPages": 5
}
```

### 4. Obtener √ìrdenes M√©dicas del Paciente

Recupera todas las √≥rdenes m√©dicas de un paciente espec√≠fico con paginaci√≥n.

**Endpoint:** `GET /medical-order/patient`

**Par√°metros de Consulta:**

- `page` (opcional): N√∫mero de p√°gina para paginaci√≥n
- `limit` (opcional): N√∫mero de elementos por p√°gina
- `physician_id` (opcional): Filtrar por ID del m√©dico
- `type` (opcional): Filtrar por tipo de orden
- `tenant_id` (opcional): Filtrar por ID del tenant

**Permiso Requerido:** `VIEW_MEDICAL_ORDERS`

**Respuesta Exitosa (200):**

```json
{
  "data": [
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "url": "https://example.com/orders/123",
      "request_date": "2023-12-01T14:30:00Z",
      "organization_name": "Hospital General",
      "physician_name": "Dr. Juan P√©rez",
      "order_type": "Prescripci√≥n",
      "tenant_id": "123e4567-e89b-12d3-a456-426614174001"
    }
  ],
  "total": 42,
  "page": 1,
  "limit": 10,
  "totalPages": 5
}
```

### 5. Obtener Orden M√©dica Espec√≠fica

Recupera una orden m√©dica espec√≠fica por ID.

**Endpoint:** `GET /medical-order/:id`

**Permiso Requerido:** `VIEW_MEDICAL_ORDERS`

**Respuesta Exitosa (200):**

```json
{
  "id": "123e4567-e89b-12d3-a456-426614174000",
  "url": "https://example.com/orders/123",
  "request_date": "2023-12-01T14:30:00Z",
  "organization_name": "Hospital General",
  "physician_name": "Dr. Juan P√©rez",
  "patient_name": "Mar√≠a Garc√≠a",
  "order_type": "Prescripci√≥n"
}
```

### 6. Actualizar Orden M√©dica

Actualiza una orden m√©dica espec√≠fica por ID.

**Endpoint:** `PATCH /medical-order/:id`

**Permiso Requerido:** `UPDATE_MEDICAL_ORDERS`

**Cuerpo de la Solicitud:**

```json
{
  "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9..."
}
```

**Respuesta Exitosa (200):**

```json
{
  "message": "Orden m√©dica actualizada correctamente"
}
```

### 7. Eliminar Orden M√©dica

Elimina una orden m√©dica espec√≠fica por ID.

**Endpoint:** `DELETE /medical-order/:id`

**Permiso Requerido:** `DELETE_MEDICAL_ORDERS`

**Respuesta Exitosa (200):**

```json
{
  "message": "Orden m√©dica eliminada correctamente"
}
```

## Respuestas de Error

### 400 Solicitud Incorrecta

```json
{
  "message": "Datos de solicitud inv√°lidos",
  "error": "Bad Request"
}
```

### 403 Prohibido

```json
{
  "message": "Permisos insuficientes",
  "error": "Forbidden"
}
```

### 404 No Encontrado

```json
{
  "message": "Orden m√©dica no encontrada",
  "error": "Not Found"
}
```

## Tipos de Respuesta

### Respuesta Base de Orden M√©dica

```typescript
{
  id: string; // Identificador √∫nico de la orden m√©dica
  url: string; // URL para acceder a la orden m√©dica
  request_date: Date; // Fecha en que se solicit√≥ la orden
  organization_name: string; // Nombre de la organizaci√≥n que proporciona la orden
  physician_name: string; // Nombre completo del m√©dico que cre√≥ la orden
}
```

## Archivos y Documentos

### Formatos de Archivo Soportados

- Documentos PDF (application/pdf)
- Im√°genes (image/jpeg, image/png)
- Tama√±o m√°ximo de archivo: 5MB

### Formato de Carga de Archivos

Los archivos deben enviarse como data URIs codificados en base64 en el siguiente formato:

```
data:[<mediatype>];base64,<data>
```

Ejemplo:

```json
{
  "file": "data:application/pdf;base64,JVBERi0xLjUNJeLjz9..."
}
```

## Detalles de Medicaci√≥n

### Campos de Medicamento

- `monodrug` (string, requerido): Nombre gen√©rico del medicamento
- `dose` (string, requerido): Cantidad de medicamento por dosis
- `dose_units` (string, requerido): Unidades para la dosis (mg, ml, etc.)
- `frecuency` (string, requerido): Frecuencia de administraci√≥n
- `duration` (string, requerido): Duraci√≥n del tratamiento
- `duration_units` (string, requerido): Unidades para la duraci√≥n (d√≠as, semanas, etc.)
- `observations` (string, opcional): Instrucciones adicionales
- `authorized` (boolean, opcional): Indica si el medicamento est√° pre-autorizado

### Unidades de Duraci√≥n Comunes

- "d√≠as" (days)
- "semanas" (weeks)
- "meses" (months)

### Unidades de Dosis Comunes

- "mg" (milligrams)
- "ml" (milliliters)
- "gotas" (drops)
- "unidades" (units)

### Frecuencias Comunes

- "Cada 8 horas" (Every 8 hours)
- "Cada 12 horas" (Every 12 hours)
- "Una vez al d√≠a" (Once a day)
- "Cada 24 horas" (Every 24 hours)
- "Dos veces al d√≠a" (Twice a day)

================
File: src/docs/medical-events.md
================
# M√≥dulo de Eventos M√©dicos

## Descripci√≥n

El m√≥dulo de Eventos M√©dicos gestiona la creaci√≥n, consulta y atenci√≥n de eventos m√©dicos asociados a citas de pacientes. Un evento m√©dico registra los detalles cl√≠nicos de una consulta o interacci√≥n m√©dica.

**Nota Importante:** La gesti√≥n de medicaciones durante las consultas m√©dicas est√° centralizada en el `PrescriptionService` para garantizar consistencia con el resto del sistema y mantener un historial unificado de prescripciones.

## Utilidad

Este m√≥dulo es crucial para registrar la informaci√≥n cl√≠nica generada durante una consulta, como diagn√≥sticos, comentarios del m√©dico, procedimientos, tratamientos y signos vitales. Esta informaci√≥n es fundamental para el seguimiento del paciente y la continuidad de la atenci√≥n.

## Arquitectura de Medicaciones

### Procesamiento Integrado

Durante la atenci√≥n de eventos m√©dicos, el procesamiento de medicaciones utiliza:

- **PrescriptionService.processMedications()**: Mismo m√©todo centralizado usado por las √≥rdenes m√©dicas
- **Transacciones**: Todas las operaciones (evento m√©dico + medicaciones) se ejecutan en una sola transacci√≥n
- **Consistencia**: Las medicaciones prescritas en consultas se integran autom√°ticamente con el historial global del paciente
- **Autorizaci√≥n Autom√°tica**: Las medicaciones prescritas durante consultas se marcan como autorizadas por defecto

### Sistema de Notificaciones Centralizado

El sistema utiliza el `NotificationService` para enviar notificaciones autom√°ticas:

- **Notificaciones de Medicaci√≥n**: Cuando se finalizan consultas con medicaciones prescritas
- **Email y WhatsApp**: Env√≠o por ambos canales cuando est√°n disponibles
- **Plantillas Espec√≠ficas**: Plantillas optimizadas para notificaciones de medicaci√≥n
- **Adjuntos Inteligentes**: B√∫squeda autom√°tica de √≥rdenes m√©dicas relacionadas para incluir archivos PDF
- **Gesti√≥n de Errores**: Notificaciones no bloquean el flujo principal de la consulta

### Flujo de Atenci√≥n

1. **Actualizaci√≥n del Evento**: Se actualizan los datos cl√≠nicos del evento m√©dico
2. **Procesamiento de Medicaciones**: Se procesan las medicaciones usando el servicio centralizado
3. **Notificaciones**: Si la consulta finaliza, se env√≠an notificaciones autom√°ticas al paciente
4. **Finalizaci√≥n**: Se actualiza el estado de la cita asociada

## Endpoints

Todos los endpoints de este m√≥dulo requieren los siguientes headers:

- `Authorization`: `Bearer <JWT_TOKEN>` (Token de autenticaci√≥n del usuario)
- `X-Tenant-ID`: `<TENANT_UUID>` (Identificador √∫nico del tenant/organizaci√≥n, opcional en Swagger)

---

### POST /medical-events

Crea un nuevo evento m√©dico. Este endpoint se utiliza generalmente al iniciar una consulta o registrar un evento m√©dico b√°sico.

**Permisos Requeridos:** Acceso autenticado dentro del tenant.

**Body de la Petici√≥n (`CreateMedicalEventDto`):**

```json
{
  "appointment_id": "uuid-del-appointment",
  "patient_id": "uuid-del-paciente",
  "physician_id": "uuid-del-medico",
  "physician_comments": "Comentarios iniciales del m√©dico.",
  "main_diagnostic_cie": "A00.1",
  "evolution": "Evoluci√≥n inicial del paciente.",
  "procedure": "Procedimiento inicial realizado.",
  "treatment": "Tratamiento inicial indicado."
}
```

**Ejemplo de Petici√≥n:**

```http
POST /medical-events
Host: localhost:3000
Authorization: Bearer <JWT_TOKEN>
X-Tenant-ID: <TENANT_UUID>
Content-Type: application/json

{
  "appointment_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
  "patient_id": "b5191b80-2a8d-4eb2-9958-9273a0708025",
  "physician_id": "dbacf6c6-6918-41e0-8923-4de0ce59eb84",
  "physician_comments": "Paciente refiere dolor abdominal agudo.",
  "main_diagnostic_cie": "R10.4"
}
```

**Respuesta Exitosa (201 Created):**

```json
{
  "message": "El evento m√©dico ha sido creado exitosamente."
  // La respuesta puede incluir el objeto del evento m√©dico creado, por ejemplo:
  // "id": "uuid-del-nuevo-evento-medico",
  // "appointment_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
  // ...otros campos
}
```

**Respuesta de Error (ej. 400 Bad Request):**

```json
{
  "statusCode": 400,
  "message": ["appointment_id must be a UUID"],
  "error": "Bad Request"
}
```

**Respuesta de Error (ej. 500 Internal Server Error - Foreign Key Constraint):**

```json
{
  "message": "Error al crear el evento m√©dico: Foreign key constraint violated: `medical_event_appointment_id_fkey (index)`",
  "error": "Internal Server Error",
  "statusCode": 500
}
```

(Esto indica que el `appointment_id` proporcionado no existe en la base de datos.)

---

### GET /medical-events

Obtiene una lista de eventos m√©dicos, con opciones de filtrado y paginaci√≥n.

**Permisos Requeridos:** Acceso autenticado dentro del tenant.

**Par√°metros de Query:**

- `patient_id` (string, opcional): Filtrar por ID del paciente (UUID).
- `physician_id` (string, opcional): Filtrar por ID del m√©dico (UUID).
- `page` (number, opcional): N√∫mero de p√°gina para paginaci√≥n.
- `pageSize` (number, opcional): N√∫mero de eventos por p√°gina.
- `orderBy` (string, opcional): Campo por el cual ordenar (ej. `created_at`).
- `orderDirection` (string, opcional): Direcci√≥n de ordenamiento (`asc` o `desc`).

**Ejemplo de Petici√≥n:**

```http
GET /medical-events?patient_id=b5191b80-2a8d-4eb2-9958-9273a0708025&pageSize=10&page=1
Host: localhost:3000
Authorization: Bearer <JWT_TOKEN>
X-Tenant-ID: <TENANT_UUID>
```

**Respuesta Exitosa (200 OK):**

```json
[
  {
    "id": "event-uuid-1",
    "appointment_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "patient_id": "b5191b80-2a8d-4eb2-9958-9273a0708025",
    "physician_id": "dbacf6c6-6918-41e0-8923-4de0ce59eb84",
    "physician_comments": "Comentarios del m√©dico.",
    "main_diagnostic_cie": "A00.1",
    "evolution": "Evoluci√≥n del paciente.",
    "procedure": "Procedimiento realizado.",
    "treatment": "Tratamiento indicado.",
    "created_at": "2024-05-22T10:00:00.000Z",
    "updated_at": "2024-05-22T10:05:00.000Z"
    // ... otros campos si el evento ha sido "atendido"
  }
  // ... m√°s eventos m√©dicos
]
```

**Respuesta de Error (ej. 401 Unauthorized):**

```json
{
  "statusCode": 401,
  "message": "Unauthorized"
}
```

---

### POST /medical-events/attend

Registra la atenci√≥n detallada de un evento m√©dico existente. Esto incluye signos vitales, exploraciones f√≠sicas, medicaciones, etc.

**Permisos Requeridos:** `Permission.ASSIGN_TREATMENTS`

**Body de la Petici√≥n (`AttendMedicalEventDto`):**

```json
{
  "id": "uuid-del-evento-medico-a-atender",
  "physician_comments": "Comentarios actualizados del m√©dico durante la atenci√≥n.",
  "main_diagnostic_cie": "A00.1", // Puede ser el mismo o actualizado
  "evolution": "Evoluci√≥n detallada del paciente.",
  "procedure": "Procedimientos realizados durante la atenci√≥n.",
  "treatment": "Tratamiento detallado y/o actualizado.",
  "vital_signs": [
    { "vital_sign_id": 1, "measure": 120 }, // ej. Presi√≥n Arterial Sist√≥lica
    { "vital_sign_id": 2, "measure": 80 } // ej. Presi√≥n Arterial Diast√≥lica
  ],
  "subcategory_cie_ids": [10, 15], // IDs de subcategor√≠as CIE
  "physical_explorations": [
    {
      "physical_exploration_area_id": 3,
      "description": "Abdomen blando, no doloroso."
    }
  ],
  "physical_examinations": [
    {
      "physical_subsystem_id": 5,
      "description": "Murmullo vesicular conservado en ambos campos pulmonares."
    }
  ],
  "medications": [
    {
      "monodrug": "Paracetamol",
      "dose": "500",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "3",
      "duration_units": "d√≠as",
      "observations": "Tomar con alimentos."
    }
  ],
  "consultation_ended": true
}
```

**Ejemplo de Petici√≥n:**

```http
POST /medical-events/attend
Host: localhost:3000
Authorization: Bearer <JWT_TOKEN>
X-Tenant-ID: <TENANT_UUID>
Content-Type: application/json

{
  "id": "event-uuid-1",
  "physician_comments": "Se actualizan comentarios. Paciente estable.",
  "vital_signs": [
    { "vital_sign_id": 1, "measure": 120 },
    { "vital_sign_id": 2, "measure": 80 },
    { "vital_sign_id": 3, "measure": 36.5 }
  ],
  "medications": [
    {
      "monodrug": "Ibuprofeno",
      "dose": "400",
      "dose_units": "mg",
      "frecuency": "Cada 6 horas",
      "duration": "2",
      "duration_units": "d√≠as",
      "observations": "Si persiste el dolor."
    }
  ],
  "consultation_ended": true
}
```

**Respuesta Exitosa (201 Created/OK):**
(La documentaci√≥n Swagger indica 201, pero una actualizaci√≥n podr√≠a ser 200 OK)

```json
{
  "message": "El evento m√©dico ha sido atendido exitosamente."
  // Podr√≠a devolver el evento m√©dico actualizado
}
```

**Respuesta de Error (ej. 400 Bad Request):**

```json
{
  "statusCode": 400,
  "message": [
    "id must be a UUID",
    "vital_signs.0.vital_sign_id must be an integer number"
  ],
  "error": "Bad Request"
}
```

**Respuesta de Error (ej. 403 Forbidden):**

```json
{
  "message": "Forbidden resource",
  "error": "Forbidden",
  "statusCode": 403
}
```

(Si el usuario no tiene el permiso `Permission.ASSIGN_TREATMENTS`)

---

## DTOs Detallados

### `CreateMedicalEventDto`

Usado para crear un evento m√©dico.

- `appointment_id: string` (UUID, Requerido) - ID de la cita asociada.
- `patient_id: string` (UUID, Requerido) - ID del paciente.
- `physician_id: string` (UUID, Requerido) - ID del m√©dico.
- `physician_comments?: string` (Opcional) - Comentarios del m√©dico.
- `main_diagnostic_cie?: string` (Opcional) - C√≥digo CIE del diagn√≥stico principal.
- `evolution?: string` (Opcional) - Evoluci√≥n del paciente.
- `procedure?: string` (Opcional) - Procedimientos realizados.
- `treatment?: string` (Opcional) - Tratamiento indicado.

### `AttendMedicalEventDto`

Usado para registrar la atenci√≥n detallada de un evento m√©dico.

- `id: string` (UUID, Requerido) - ID del evento m√©dico a atender.
- `physician_comments?: string` (Opcional)
- `main_diagnostic_cie?: string` (Opcional)
- `evolution?: string` (Opcional)
- `procedure?: string` (Opcional)
- `treatment?: string` (Opcional)
- `vital_signs?: VitalSignItemDto[]` (Opcional) - Lista de signos vitales.
- `subcategory_cie_ids?: number[]` (Opcional) - Lista de IDs de subcategor√≠as CIE.
- `physical_explorations?: PhysicalExplorationItemDto[]` (Opcional) - Lista de exploraciones f√≠sicas.
- `physical_examinations?: PhysicalExaminationItemDto[]` (Opcional) - Lista de ex√°menes f√≠sicos.
- `medications?: MedicationItemDto[]` (Opcional) - Lista de medicaciones.
- `consultation_ended?: boolean` (Opcional) - Indica si la consulta ha finalizado.

#### `VitalSignItemDto`

- `vital_sign_id: number` (Requerido) - ID del tipo de signo vital (del cat√°logo).
- `measure: number` (Requerido) - Medida del signo vital.

#### `PhysicalExplorationItemDto`

- `physical_exploration_area_id: number` (Requerido) - ID del √°rea de exploraci√≥n f√≠sica (del cat√°logo).
- `description: string` (Requerido) - Descripci√≥n de la exploraci√≥n.

#### `PhysicalExaminationItemDto`

- `physical_subsystem_id?: number` (Opcional) - ID del subsistema f√≠sico (del cat√°logo).
- `description: string` (Requerido) - Descripci√≥n del examen.

#### `MedicationItemDto`

- `monodrug: string` (Requerido) - Nombre del monodroga.
- `dose: string` (Requerido) - Dosis.
- `dose_units: string` (Requerido) - Unidades de la dosis (ej. "mg", "ml").
- `frecuency: string` (Requerido) - Frecuencia de administraci√≥n (ej. "Cada 8 horas").
- `duration: string` (Requerido) - Duraci√≥n del tratamiento (ej. "7").
- `duration_units: string` (Requerido) - Unidades de la duraci√≥n (ej. "d√≠as", "semanas").
- `observations?: string` (Opcional) - Observaciones adicionales.

================
File: src/docs/medicine.md
================
# M√≥dulo de Medicinas

## Descripci√≥n

El m√≥dulo de medicinas proporciona funcionalidades para buscar y gestionar informaci√≥n sobre medicamentos. Permite a los desarrolladores interactuar con la API para obtener detalles de medicinas basadas en diversos criterios de b√∫squeda.

## Utilidad

Este m√≥dulo es esencial para cualquier funcionalidad dentro de la aplicaci√≥n que requiera acceso a informaci√≥n de medicamentos, como la prescripci√≥n de medicinas, la consulta de interacciones medicamentosas, o la visualizaci√≥n de detalles de un medicamento espec√≠fico.

## API Externa Consultada

El m√≥dulo de medicinas realiza consultas a la siguiente API externa para obtener informaci√≥n sobre los medicamentos:

- **URL Base:** `https://www.datos.gov.co/resource/i7cb-raxc.json`
- **Descripci√≥n:** Esta API proporciona datos abiertos sobre medicamentos registrados en Colombia, gestionada por el gobierno colombiano.

La integraci√≥n con esta API permite al sistema acceder a una base de datos actualizada y oficial de medicamentos.

## Endpoints

A continuaci√≥n, se detallan los endpoints disponibles en el m√≥dulo de medicinas:

### GET /medicine/searchMedicine

Busca medicamentos utilizando un texto que se aplica tanto al principio activo como al nombre del producto.

**Par√°metros de Query:**

- `query` (string, requerido): Texto a buscar en el principio activo y nombre del producto.

**Ejemplo de Petici√≥n:**

```http
GET /medicine/searchMedicine?query=clon
```

**Respuesta Exitosa (200 OK):**

```json
[
  {
    "id": "EXP123456",
    "active_principle": "Clonazepam",
    "product": "Clonazepam Genfar",
    "presentation": "Tableta",
    "administration_route": "Oral",
    "quantity": "2",
    "measurement_unit": "mg"
  }
]
```

**Respuesta de Error (400 Bad Request):**

```json
{
  "statusCode": 400,
  "message": "El par√°metro de b√∫squeda es requerido",
  "error": "Bad Request"
}
```

**Notas Adicionales:**

- El par√°metro `query` es obligatorio y no puede estar vac√≠o.
- La b√∫squeda se aplica a ambos campos: principio activo Y producto.
- La respuesta incluir√° medicamentos que coincidan en cualquiera de los dos campos.

================
File: src/docs/mobile-appointments.md
================
# Mobile Appointments API

Este documento describe los endpoints de citas m√©dicas para la aplicaci√≥n m√≥vil.

**Todos los endpoints requieren autenticaci√≥n JWT y est√°n dirigidos espec√≠ficamente a pacientes. El ID del paciente se extrae autom√°ticamente del JWT token.**

## Endpoints

### `GET /mobile/appointments`

Obtiene las citas del paciente autenticado. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `Authorization` (string, required): Bearer token JWT del paciente.

**Permisos requeridos:**

- `VIEW_OWN_APPOINTMENTS`: Ver citas propias.

**Query Parameters:**

- `home` (boolean, optional):
  - `true`: Devuelve solo la pr√≥xima cita pendiente
  - `false` o no especificado: Devuelve todas las citas agrupadas

**Validaciones Autom√°ticas:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Datos propios**: Solo puede ver sus propias citas (patient_id desde JWT)

**Funcionalidad Multitenant:**

Este endpoint busca citas del paciente autenticado en **todas las organizaciones** a las que pertenece:

1. **Extrae el patient_id**: Directamente del JWT token (req.user.id)
2. **Obtiene tenant IDs**: Del JWT o consultando `patient_tenant` en la base de datos
3. **Busca citas**: En todas las organizaciones usando `tenant_id: { in: tenantIds }`
4. **Incluye especialidades**: Obtiene la especialidad de cada m√©dico de forma optimizada

**Responses:**

#### Pr√≥xima cita (`home=true`)

- `200 OK`: Pr√≥xima cita pendiente.
  ```json
  {
    "next_appointment": {
      "id": "uuid-cita",
      "start": "2024-01-15T10:00:00Z",
      "status": "pendiente",
      "physician": {
        "id": "uuid-medico",
        "name": "Santiago",
        "last_name": "P√©rez",
        "image": "https://example.com/doctor.jpg",
        "specialty": "Cardiolog√≠a"
      }
    },
    "message": "Pr√≥xima cita encontrada exitosamente"
  }
  ```

#### Todas las citas (`home=false`)

- `200 OK`: Todas las citas agrupadas por estado.
  ```json
  {
    "appointments": {
      "pending": [
        {
          "id": "uuid-cita-1",
          "start": "2024-01-15T10:00:00Z",
          "status": "pendiente",
          "physician": {
            "id": "uuid-medico-1",
            "name": "Santiago",
            "last_name": "P√©rez",
            "image": "https://example.com/doctor1.jpg",
            "specialty": "Cardiolog√≠a"
          }
        }
      ],
      "past": [
        {
          "id": "uuid-cita-2",
          "start": "2024-01-10T09:00:00Z",
          "status": "atendida",
          "physician": {
            "id": "uuid-medico-2",
            "name": "Mar√≠a",
            "last_name": "Gonz√°lez",
            "image": "https://example.com/doctor2.jpg",
            "specialty": "Neurolog√≠a"
          }
        }
      ],
      "pending_count": 1,
      "past_count": 1
    },
    "message": "Citas obtenidas exitosamente"
  }
  ```

**Error Responses:**

- `400 Bad Request`: Usuario no es paciente o solicitud inv√°lida.
- `401 Unauthorized`: Token JWT inv√°lido o faltante.
- `403 Forbidden`: No tiene permisos para ver citas.

### `PATCH /mobile/appointments/{appointment_id}/cancel` üÜï

**Nuevo endpoint para cancelar citas**

Permite al paciente autenticado cancelar sus propias citas pendientes. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `Authorization` (string, required): Bearer token JWT del paciente.

**Permisos requeridos:**

- `VIEW_OWN_APPOINTMENTS`: Ver citas propias (se reutiliza para cancelaci√≥n).

**Path Parameters:**

- `appointment_id` (string): ID de la cita a cancelar.

**Request Body:**

```json
{
  "reason": "string (Raz√≥n de cancelaci√≥n, opcional)"
}
```

**Ejemplo:**

```json
{
  "reason": "No puedo asistir por motivos personales"
}
```

**Validaciones:**

- `reason`: Opcional, string m√°ximo 500 caracteres

**Validaciones Autom√°ticas:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Cita propia**: La cita debe pertenecer al paciente autenticado
- ‚úÖ **Cita pendiente**: Solo se pueden cancelar citas con status 'pendiente'
- ‚úÖ **Cita futura**: No se pueden cancelar citas pasadas
- ‚úÖ **Multitenant**: Busca en todas las organizaciones del paciente

**Funcionalidad Multitenant:**

Este endpoint tambi√©n maneja multitenant autom√°ticamente:

1. **Extrae el patient_id**: Directamente del JWT token (req.user.id)
2. **Verifica pertenencia**: La cita debe pertenecer al paciente en alguna de sus organizaciones
3. **Valida estado**: Solo permite cancelar citas pendientes
4. **Valida temporalidad**: Solo permite cancelar citas futuras
5. **Actualiza estado**: Cambia el status a 'cancelada' y guarda la raz√≥n

**Responses:**

- `200 OK`: Cita cancelada exitosamente.
  ```json
  {
    "id": "uuid-cita",
    "status": "cancelada",
    "start": "2024-01-15T10:00:00Z",
    "physician": {
      "name": "Santiago",
      "last_name": "P√©rez"
    },
    "message": "Cita cancelada exitosamente",
    "cancelled_reason": "No puedo asistir por motivos personales"
  }
  ```

**Error Responses:**

- `400 Bad Request`:
  - Usuario no es paciente
  - Cita no est√° pendiente
  - Cita ya pas√≥
  - Datos de entrada inv√°lidos
- `401 Unauthorized`: Token JWT inv√°lido o faltante.
- `403 Forbidden`: No tiene permisos para cancelar citas.
- `404 Not Found`: Cita no encontrada o no tienes permisos para cancelarla.

**Ejemplo de uso:**

```bash
PATCH /mobile/appointments/123e4567-e89b-12d3-a456-426614174000/cancel
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "reason": "Tengo una emergencia familiar"
}
```

## Caracter√≠sticas Generales

### Autenticaci√≥n y Autorizaci√≥n

- **JWT requerido**: Todos los endpoints requieren autenticaci√≥n.
- **Solo pacientes**: Los endpoints est√°n dise√±ados espec√≠ficamente para usuarios con rol 'patient'.
- **Permisos m√≠nimos**: Se requiere `VIEW_OWN_APPOINTMENTS` para todas las operaciones.
- **ID autom√°tico**: El patient_id se extrae autom√°ticamente del JWT token.

### Funcionalidad Multitenant

Todos los endpoints manejan multitenant de forma transparente:

1. **Extrae patient_id**: Autom√°ticamente del JWT token (req.user.id)
2. **Prioriza JWT**: Si hay tenants en el token, los usa directamente
3. **Fallback a DB**: Si no, consulta `patient_tenant` para obtener organizaciones
4. **B√∫squeda inclusiva**: Busca datos en todas las organizaciones del paciente
5. **Optimizaci√≥n**: Minimiza consultas a la base de datos

### Optimizaciones de Rendimiento

- **Consultas batch**: Las especialidades se obtienen en una sola consulta
- **Mapeo eficiente**: Se usan Maps para relacionar datos de m√©dicos y especialidades
- **Ordenamiento inteligente**: Citas pendientes ascendente, pasadas descendente
- **Filtros a nivel DB**: Las consultas incluyen filtros para reducir transferencia de datos

### Estados de Citas

- **pendiente**: Cita programada y confirmada
- **atendida**: Cita que ya se realiz√≥
- **cancelada**: Cita cancelada por el paciente o m√©dico
- **no_asistio**: Paciente no asisti√≥ a la cita

### Casos de Uso M√≥viles

#### Dashboard Principal (Home)

```bash
# Obtener pr√≥xima cita para mostrar en home
GET /mobile/appointments?home=true
Authorization: Bearer <patient-jwt-token>
```

#### Lista Completa de Citas

```bash
# Ver historial completo organizado
GET /mobile/appointments
Authorization: Bearer <patient-jwt-token>
```

#### Cancelaci√≥n de Cita

```bash
# Cancelar con raz√≥n espec√≠fica
PATCH /mobile/appointments/{id}/cancel
Authorization: Bearer <patient-jwt-token>
Content-Type: application/json

{
  "reason": "Conflicto de horario laboral"
}

# Cancelar sin raz√≥n espec√≠fica
PATCH /mobile/appointments/{id}/cancel
Authorization: Bearer <patient-jwt-token>
Content-Type: application/json

{}
```

## Seguridad

### Validaciones Autom√°ticas

Todos los endpoints realizan validaciones autom√°ticas:

1. **Autenticaci√≥n**: JWT v√°lido y no expirado
2. **Autorizaci√≥n**: Usuario debe ser paciente (`role: 'patient'`)
3. **Ownership**: Solo puede acceder a sus propios datos
4. **Multitenant**: Acceso seguro a datos de todas sus organizaciones

### No Hay Exposici√≥n de IDs

- **Patient ID**: Se obtiene del JWT, no se expone en URLs
- **Tenant IDs**: Se manejan internamente, no requieren especificaci√≥n manual
- **Seguridad**: Previene acceso no autorizado a datos de otros pacientes

## Integraci√≥n con Otros M√≥dulos

- **Authentication**: Usa JWT para identificar al paciente autom√°ticamente
- **Patient Management**: Consulta organizaciones del paciente
- **Physician Management**: Obtiene datos y especialidades de m√©dicos
- **Tenant Management**: Maneja multitenant de forma transparente
- **Appointment Scheduling**: Se integra con el sistema principal de citas

## Diferencias con APIs de Profesionales

| Aspecto         | Mobile API (Pacientes)   | Professional API (M√©dicos) |
| --------------- | ------------------------ | -------------------------- |
| **Patient ID**  | Del JWT autom√°ticamente  | Par√°metro en URL           |
| **Alcance**     | Solo datos propios       | Datos de sus pacientes     |
| **Multitenant** | Todas sus organizaciones | Su organizaci√≥n            |
| **Permisos**    | `VIEW_OWN_APPOINTMENTS`  | `VIEW_PATIENT_DETAILS`     |

================
File: src/docs/mobile-latest-vital-signs.md
================
# API de √öltimos Signos Vitales - M√≥vil

Este endpoint permite a los pacientes obtener el √∫ltimo registro de todos los tipos de signos vitales del cat√°logo, independientemente de si fueron registrados durante una consulta m√©dica o mediante autoevaluaci√≥n.

## Endpoint

### Obtener √öltimo Registro de Todos los Signos Vitales

```http
GET /mobile/self-evaluation-event/latest-vital-signs/all
```

Obtiene el √∫ltimo valor registrado para cada tipo de signo vital del cat√°logo para el paciente autenticado.

#### Headers Requeridos

| Header        | Requerido | Descripci√≥n                  |
| ------------- | --------- | ---------------------------- |
| Authorization | S√≠        | Bearer {access_token}        |
| tenant-id     | S√≠        | UUID del tenant del paciente |

#### Permisos Requeridos

- **Autenticaci√≥n**: Requerida (Paciente v√≠a JWT)
- **Permiso**: `VIEW_PATIENT_DETAILS`
- **Acceso**: El paciente solo puede acceder a su propia informaci√≥n

#### L√≥gica de Negocio

1. **Extracci√≥n del paciente**: Se obtiene el `patient_id` del token JWT del usuario autenticado
2. **Obtenci√≥n del cat√°logo**: Se recuperan todos los tipos de signos vitales del cat√°logo (`cat_vital_signs`)
3. **B√∫squeda de registros**: Para cada tipo de signo vital del cat√°logo:
   - Se busca el registro m√°s reciente en la tabla `vital_signs` para el `patient_id` y el `vital_sign_id` actual
   - Se consideran tanto los registros asociados a `medical_event_id` como a `self_evaluation_event_id`
   - Se ordena por `created_at DESC` y se toma el primero
4. **Construcci√≥n de respuesta**:
   - Si se encuentra un registro: se incluye la medida, fecha de creaci√≥n e informaci√≥n del cat√°logo
   - Si no se encuentra: el valor de la medida es "Sin datos" y la fecha es `null`
5. **Informaci√≥n incluida**: Se incluye toda la informaci√≥n del cat√°logo excepto el campo `specialties`

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "data": [
    {
      "vital_sign": {
        "id": 1,
        "name": "Frecuencia Card√≠aca",
        "category": "Cardiovascular",
        "color": "#FF5733",
        "mini_icon": "heart-mini",
        "icon": "heart-icon",
        "background_icon": "heart-background",
        "normal_min_value": 60,
        "normal_max_value": 100,
        "slightly_high_value": 120,
        "high_max_value": 140,
        "critical_max_value": 180
      },
      "measure": 98,
      "created_at": "2024-01-15T10:30:00.000Z",
      "cat_measure_unit": {
        "id": 1,
        "name": "bpm",
        "description": "Latidos por minuto"
      }
    },
    {
      "vital_sign": {
        "id": 2,
        "name": "Temperatura",
        "category": "General",
        "color": "#FFA500",
        "mini_icon": "temp-mini",
        "icon": "temp-icon",
        "background_icon": "temp-background",
        "normal_min_value": 36.1,
        "normal_max_value": 37.2,
        "slightly_high_value": 37.5,
        "high_max_value": 38.5,
        "critical_max_value": 40.0
      },
      "measure": 36.8,
      "created_at": "2024-01-14T15:45:00.000Z",
      "cat_measure_unit": {
        "id": 2,
        "name": "¬∞C",
        "description": "Grados Celsius"
      }
    },
    {
      "vital_sign": {
        "id": 3,
        "name": "Presi√≥n Arterial",
        "category": "Cardiovascular",
        "color": "#FF0000",
        "mini_icon": "pressure-mini",
        "icon": "pressure-icon",
        "background_icon": "pressure-background",
        "normal_min_value": 90,
        "normal_max_value": 140,
        "slightly_high_value": 150,
        "high_max_value": 180,
        "critical_max_value": 200
      },
      "measure": "Sin datos",
      "created_at": null,
      "cat_measure_unit": {
        "id": 3,
        "name": "mmHg",
        "description": "Mil√≠metros de mercurio"
      }
    }
  ]
}
```

#### Estructura de la Respuesta

| Campo                                   | Tipo                  | Descripci√≥n                                           |
| --------------------------------------- | --------------------- | ----------------------------------------------------- |
| `data`                                  | Array                 | Array de objetos con informaci√≥n de signos vitales    |
| `data[].vital_sign`                     | Object                | Informaci√≥n del cat√°logo del signo vital              |
| `data[].vital_sign.id`                  | number                | ID del signo vital en el cat√°logo                     |
| `data[].vital_sign.name`                | string                | Nombre del signo vital                                |
| `data[].vital_sign.category`            | string                | Categor√≠a del signo vital                             |
| `data[].vital_sign.color`               | string \| null        | Color asociado para la UI                             |
| `data[].vital_sign.mini_icon`           | string \| null        | Identificador del mini icono                          |
| `data[].vital_sign.icon`                | string \| null        | Identificador del icono                               |
| `data[].vital_sign.background_icon`     | string \| null        | Identificador del icono de fondo                      |
| `data[].vital_sign.normal_min_value`    | number \| null        | Valor m√≠nimo normal                                   |
| `data[].vital_sign.normal_max_value`    | number \| null        | Valor m√°ximo normal                                   |
| `data[].vital_sign.slightly_high_value` | number \| null        | Valor umbral ligeramente alto                         |
| `data[].vital_sign.high_max_value`      | number \| null        | Valor m√°ximo alto                                     |
| `data[].vital_sign.critical_max_value`  | number \| null        | Valor m√°ximo cr√≠tico                                  |
| `data[].measure`                        | number \| "Sin datos" | √öltimo valor medido o "Sin datos" si no hay registros |
| `data[].created_at`                     | string \| null        | Fecha de creaci√≥n del √∫ltimo registro (ISO 8601)      |
| `data[].cat_measure_unit`               | Object \| null        | Informaci√≥n de la unidad de medida                    |
| `data[].cat_measure_unit.id`            | number                | ID de la unidad de medida                             |
| `data[].cat_measure_unit.name`          | string                | Nombre de la unidad de medida                         |
| `data[].cat_measure_unit.description`   | string                | Descripci√≥n de la unidad de medida                    |

#### C√≥digos de Error

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "Error al obtener los √∫ltimos signos vitales: [detalle del error]",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 401 Unauthorized

```json
{
  "statusCode": 401,
  "message": "Usuario no autenticado",
  "error": "Unauthorized"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "No tiene acceso a esta organizaci√≥n",
  "error": "Forbidden"
}
```

**C√≥digo de Estado**: 404 Not Found

```json
{
  "statusCode": 404,
  "message": "Paciente no encontrado",
  "error": "Not Found"
}
```

## Caracter√≠sticas T√©cnicas

### Fuentes de Datos

El endpoint considera registros de signos vitales de ambas fuentes:

1. **Consultas M√©dicas**: Registros asociados a `medical_event_id`
2. **Autoevaluaciones**: Registros asociados a `self_evaluation_event_id`

### Ordenamiento

- Los signos vitales se devuelven ordenados alfab√©ticamente por nombre
- Para cada tipo, se toma el registro m√°s reciente basado en `created_at`

### Filtros Aplicados

- Solo se consideran registros no eliminados (`deleted = false`)
- Solo se incluyen registros del paciente autenticado
- **No se aplica filtro por tenant** en los resultados como se especifica en los requisitos

### Optimizaci√≥n

- Se utiliza una consulta por cada tipo de signo vital para obtener el m√°s reciente
- Se incluyen las relaciones necesarias en una sola consulta para evitar N+1 queries

## Casos de Uso

### Aplicaci√≥n M√≥vil

Este endpoint es ideal para:

1. **Dashboard del paciente**: Mostrar un resumen de todos los signos vitales
2. **Historial m√©dico**: Proporcionar una vista completa del estado de salud
3. **Seguimiento de salud**: Permitir al paciente ver qu√© signos vitales ha registrado
4. **Interfaz de autoevaluaci√≥n**: Mostrar valores previos como referencia

### Integraci√≥n con UI

La informaci√≥n del cat√°logo incluye campos espec√≠ficos para la interfaz:

- `color`: Para c√≥digos de color en gr√°ficos y elementos visuales
- `mini_icon`, `icon`, `background_icon`: Para diferentes contextos de visualizaci√≥n
- Rangos de valores: Para validaci√≥n y alertas visuales

## Seguridad

- **Autenticaci√≥n obligatoria**: Solo usuarios autenticados pueden acceder
- **Autorizaci√≥n por paciente**: Cada paciente solo ve sus propios datos
- **Validaci√≥n de tenant**: Se verifica el acceso al tenant especificado
- **Permisos granulares**: Requiere permiso espec√≠fico para ver detalles del paciente

================
File: src/docs/mobile-self-evaluation.md
================
# Mobile Self-Evaluation Events API - Signos Vitales

Este documento describe los endpoints de autoevaluaci√≥n m√≥vil para el registro y consulta de signos vitales por parte de los pacientes.

**Todos los endpoints est√°n dirigidos espec√≠ficamente a pacientes. El ID del paciente se extrae autom√°ticamente del JWT token.**

## Endpoints

### `POST /mobile/self-evaluation-event/vital-signs` üÜï

**Endpoint principal para pacientes - Registrar signos vitales propios**

Permite a los pacientes registrar sus propios signos vitales desde la aplicaci√≥n m√≥vil. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `Authorization` (string, required): Bearer token JWT del paciente.

**Permisos requeridos:**

- `REGISTER_OWN_VITAL_SIGNS`: Registrar signos vitales propios.

**Request Body:**

```json
{
  "vital_signs": [
    { "vital_sign_id": 1, "measure": 36.5 }, // Temperatura corporal en ¬∞C
    { "vital_sign_id": 2, "measure": 120 }, // Presi√≥n sist√≥lica en mmHg
    { "vital_sign_id": 3, "measure": 80 }, // Presi√≥n diast√≥lica en mmHg
    { "vital_sign_id": 4, "measure": 75 } // Frecuencia card√≠aca en bpm
  ]
}
```

**Validaciones Autom√°ticas:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Datos propios**: Solo puede registrar sus propios signos vitales
- ‚úÖ **Al menos un signo vital**: Debe proporcionar m√≠nimo un registro

**Caracter√≠sticas:**

- **Sin medical_event_id**: No requiere evento m√©dico asociado (signos vitales independientes)
- **Sin tenant_id**: Se guardan como datos globales del paciente
- **Sin patient_id**: Se extrae autom√°ticamente del JWT
- **Multitenant**: Disponible para pacientes de cualquier organizaci√≥n

**Responses:**

- `201 Created`: Signos vitales registrados exitosamente.
  ```json
  {
    "id": "uuid-evento",
    "patient_id": "uuid-paciente",
    "medical_event_id": null,
    "created_at": "2024-01-15T10:30:00Z",
    "vital_signs": [
      {
        "id": "uuid-signo",
        "measure": 36.5,
        "vital_sign_name": "Temperatura Corporal",
        "measure_unit": "¬∞C",
        "created_at": "2024-01-15T10:30:00Z"
      }
    ],
    "message": "Signos vitales registrados exitosamente"
  }
  ```

**Error Responses:**

- `400 Bad Request`: Usuario no es paciente o datos inv√°lidos.
- `401 Unauthorized`: Token JWT inv√°lido o faltante.
- `403 Forbidden`: No tiene permisos para registrar signos vitales.

**Ejemplo de uso:**

```bash
POST /mobile/self-evaluation-event/vital-signs
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "vital_signs": [
    { "vital_sign_id": 1, "measure": 36.8 },
    { "vital_sign_id": 2, "measure": 125 },
    { "vital_sign_id": 3, "measure": 82 }
  ]
}
```

### `GET /mobile/self-evaluation-event/latest-vital-signs/all`

**Obtener √∫ltimo registro de todos los signos vitales propios**

Obtiene el √∫ltimo valor registrado para cada tipo de signo vital del cat√°logo para el paciente autenticado. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `Authorization` (string, required): Bearer token JWT del paciente.

**Permisos requeridos:**

- `VIEW_OWN_VITAL_SIGNS`: Ver signos vitales propios.

**Validaciones Autom√°ticas:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Datos propios**: Solo puede ver sus propios signos vitales

**Funcionalidad:**

- **Datos completos**: Incluye signos vitales registrados por el paciente Y por m√©dicos durante consultas
- **Cat√°logo completo**: Muestra todos los tipos de signos vitales disponibles
- **Sin datos**: Si nunca registr√≥ un tipo, se indica "Sin datos"
- **Multitenant**: Busca en todas las organizaciones del paciente

**Responses:**

- `200 OK`: √öltimos signos vitales obtenidos exitosamente.
  ```json
  {
    "data": [
      {
        "vital_sign": {
          "id": 1,
          "name": "Temperatura Corporal",
          "category": "B√°sicos",
          "color": "#FF5722",
          "normal_min_value": 36.0,
          "normal_max_value": 37.5
        },
        "measure": 36.5,
        "created_at": "2024-01-15T10:30:00Z",
        "cat_measure_unit": {
          "id": 1,
          "name": "¬∞C",
          "description": "Grados Celsius"
        }
      },
      {
        "vital_sign": {
          "id": 2,
          "name": "Presi√≥n Arterial Sist√≥lica",
          "category": "Cardiovascular"
        },
        "measure": "Sin datos",
        "created_at": undefined
      }
    ]
  }
  ```

### `GET /mobile/self-evaluation-event/vital-signs/{vitalSignTypeId}/history`

**Obtener historial y anal√≠tica de un signo vital espec√≠fico propio**

Obtiene un historial detallado y estad√≠sticas mensuales para un tipo de signo vital espec√≠fico del paciente autenticado. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `Authorization` (string, required): Bearer token JWT del paciente.

**Permisos requeridos:**

- `VIEW_OWN_VITAL_SIGNS`: Ver signos vitales propios.

**Path Parameters:**

- `vitalSignTypeId` (number): ID del tipo de signo vital del cat√°logo.

**Query Parameters:**

- `month` (string, required): Mes en formato YYYY-MM (ej: "2024-01").

**Validaciones Autom√°ticas:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Datos propios**: Solo puede ver sus propios signos vitales
- ‚úÖ **Formato de mes**: Debe ser YYYY-MM v√°lido

**Funcionalidad:**

- **Datos hist√≥ricos**: Incluye registros del paciente Y de m√©dicos durante consultas
- **Estad√≠sticas mensuales**: Promedio, m√≠nimo, m√°ximo, cantidad de registros
- **Organizaci√≥n semanal**: Datos agrupados por semanas del mes
- **Multitenant**: Busca en todas las organizaciones del paciente

**Responses:**

- `200 OK`: Historial y estad√≠sticas obtenidas exitosamente.
  ```json
  {
    "monthly_stats": {
      "average": 36.7,
      "min_value": 36.2,
      "max_value": 37.1,
      "total_records": 15,
      "vital_sign_info": {
        "name": "Temperatura Corporal",
        "normal_min_value": 36.0,
        "normal_max_value": 37.5
      }
    },
    "weekly_data": [
      {
        "week_number": 1,
        "week_range": "1-7",
        "days": [
          {
            "day": 1,
            "date": "2024-01-01",
            "records": [
              {
                "measure": 36.5,
                "created_at": "2024-01-01T08:00:00Z"
              }
            ]
          }
        ]
      }
    ]
  }
  ```

### `POST /mobile/self-evaluation-event` (Para profesionales)

**Crear evento de autoevaluaci√≥n asociado a consulta m√©dica**

Este endpoint est√° destinado a profesionales de la salud para crear eventos de autoevaluaci√≥n asociados a eventos m√©dicos espec√≠ficos.

**Headers:**

- `Authorization` (string, required): Bearer token JWT del profesional.
- `tenant-id` (string, required): ID del tenant.

**Permisos requeridos:**

- `VIEW_PATIENT_DETAILS`: Ver detalles de pacientes.

**Request Body:**

```json
{
  "patient_id": "uuid-paciente",
  "medical_event_id": "uuid-evento-medico",
  "tenant_id": "uuid-tenant",
  "vital_signs": [{ "vital_sign_id": 1, "measure": 36.5 }]
}
```

## Diferencias entre Endpoints

| Aspecto           | `/vital-signs` (Pacientes)    | Base endpoint (Profesionales)      |
| ----------------- | ----------------------------- | ---------------------------------- |
| **Usuario**       | Solo pacientes                | Profesionales de la salud          |
| **Patient ID**    | Del JWT autom√°ticamente       | Par√°metro requerido                |
| **Medical Event** | No requerido (signos propios) | Requerido (asociado a consulta)    |
| **Tenant ID**     | No requerido (datos globales) | Requerido en header                |
| **Alcance**       | Solo datos propios            | Datos de pacientes bajo su cuidado |
| **Prop√≥sito**     | Automonitoreo del paciente    | Registro durante consulta m√©dica   |

## Caracter√≠sticas de Seguridad

### Validaciones Autom√°ticas

Todos los endpoints de pacientes realizan validaciones autom√°ticas:

1. **Autenticaci√≥n**: JWT v√°lido y no expirado
2. **Autorizaci√≥n**: Usuario debe ser paciente (`role: 'patient'`)
3. **Ownership**: Solo puede acceder a sus propios datos
4. **Datos globales**: Los signos vitales propios se guardan como datos globales del paciente

### No Hay Exposici√≥n de IDs

- **Patient ID**: Se obtiene del JWT, no se expone en URLs ni body
- **Medical Event ID**: No se requiere para signos vitales propios
- **Tenant ID**: No se requiere, se manejan como datos globales del paciente

## Beneficios para Pacientes

### Facilidad de Uso

- **Sin IDs manuales**: Todo autom√°tico desde JWT
- **Sin contexto m√©dico**: No necesita evento m√©dico para registrar
- **Datos globales**: Accesibles desde cualquier organizaci√≥n

### Funcionalidad Completa

- **Registro simple**: Solo seleccionar signos vitales y valores
- **Historial completo**: Ve todos sus datos sin importar el origen
- **Estad√≠sticas**: Anal√≠tica mensual y tendencias
- **Cat√°logo completo**: Ve todos los tipos disponibles

### Privacidad y Seguridad

- **Datos propios √∫nicamente**: No puede ver datos de otros pacientes
- **Autenticaci√≥n obligatoria**: JWT v√°lido requerido siempre
- **Multitenant seguro**: Acceso a todas sus organizaciones de forma segura

## Casos de Uso M√≥viles

### Registro Diario de Signos Vitales

```bash
# Paciente registra temperatura y presi√≥n arterial matutina
POST /mobile/self-evaluation-event/vital-signs
Authorization: Bearer <patient-jwt-token>

{
  "vital_signs": [
    { "vital_sign_id": 1, "measure": 36.6 },
    { "vital_sign_id": 2, "measure": 118 },
    { "vital_sign_id": 3, "measure": 78 }
  ]
}
```

### Dashboard de Salud

```bash
# Ver todos los √∫ltimos registros para mostrar en pantalla principal
GET /mobile/self-evaluation-event/latest-vital-signs/all
Authorization: Bearer <patient-jwt-token>
```

### An√°lisis de Tendencias

```bash
# Ver evoluci√≥n de presi√≥n arterial en enero 2024
GET /mobile/self-evaluation-event/vital-signs/2/history?month=2024-01
Authorization: Bearer <patient-jwt-token>
```

## Integraci√≥n con Otros M√≥dulos

- **Authentication**: Usa JWT para identificar al paciente autom√°ticamente
- **Vital Signs Catalog**: Se integra con el cat√°logo completo de signos vitales
- **Patient Management**: Acceso multitenant a datos del paciente
- **Medical Events**: Compatible con registros de consultas m√©dicas
- **Mobile Architecture**: Sigue patrones consistentes con otros m√≥dulos m√≥viles

## Pr√≥ximos Pasos

1. **Probar endpoints** desde aplicaci√≥n m√≥vil
2. **Verificar permisos** en diferentes organizaciones
3. **Validar multitenant** con pacientes de m√∫ltiples organizaciones
4. **Optimizar rendimiento** para grandes vol√∫menes de datos

## Contacto

Para dudas sobre funcionalidad de signos vitales m√≥viles, consultar:

- Este documento (`mobile-self-evaluation.md`)
- `src/mobile-functions/self-evaluation-event/`
- `src/docs/NEW_PERMISSIONS_SUMMARY.md`

================
File: src/docs/mobile-vital-sign-history.md
================
# API de Historial de Signos Vitales - M√≥vil

Este endpoint permite a los pacientes obtener un historial detallado y estad√≠sticas mensuales para un tipo de signo vital espec√≠fico, con datos organizados por semanas.

## Endpoint

### Obtener Historial y Anal√≠tica de un Signo Vital Espec√≠fico

```http
GET /mobile/self-evaluation-event/vital-signs/:vitalSignTypeId/history?month=YYYY-MM
```

Obtiene un historial detallado y estad√≠sticas mensuales para un tipo de signo vital espec√≠fico registrado por el paciente (o por un m√©dico en consulta).

#### Path Parameters

| Par√°metro       | Tipo   | Requerido | Descripci√≥n                                                  |
| --------------- | ------ | --------- | ------------------------------------------------------------ |
| vitalSignTypeId | number | S√≠        | ID del tipo de signo vital del cat√°logo (cat_vital_signs.id) |

#### Query Parameters

| Par√°metro | Tipo   | Requerido | Descripci√≥n                              | Ejemplo   |
| --------- | ------ | --------- | ---------------------------------------- | --------- |
| month     | string | S√≠        | Mes en formato YYYY-MM para el historial | "2023-10" |

#### Headers Requeridos

| Header        | Requerido | Descripci√≥n                  |
| ------------- | --------- | ---------------------------- |
| Authorization | S√≠        | Bearer {access_token}        |
| tenant-id     | S√≠        | UUID del tenant del paciente |

#### Permisos Requeridos

- **Autenticaci√≥n**: Requerida (Paciente v√≠a JWT)
- **Permiso**: `VIEW_PATIENT_DETAILS`
- **Acceso**: El paciente solo puede acceder a su propia informaci√≥n

#### L√≥gica de Negocio

1. **Validaci√≥n de par√°metros**:

   - Validar que `vitalSignTypeId` sea un n√∫mero v√°lido
   - Validar que `month` tenga formato YYYY-MM
   - Verificar que el tipo de signo vital existe en el cat√°logo

2. **Extracci√≥n del paciente**: Se obtiene el `patient_id` del token JWT

3. **Filtrado de registros**: Se obtienen todos los registros de `vital_signs` para:

   - El `patient_id` del usuario autenticado
   - El `vitalSignTypeId` especificado
   - El mes especificado en el par√°metro `month`
   - Considerando tanto `medical_event_id` como `self_evaluation_event_id`

4. **C√°lculo de estad√≠sticas mensuales**:

   - **√öltimo valor**: √öltimo registro del mes por fecha
   - **Valor m√°ximo**: Mayor valor registrado en el mes
   - **Valor m√≠nimo**: Menor valor registrado en el mes
   - **Promedio**: Promedio de todos los valores del mes
   - **Alertas**: Cantidad de registros que superaron `critical_max_value`

5. **Organizaci√≥n semanal**:
   - Agrupar registros por semanas (domingo a s√°bado)
   - Para cada d√≠a: calcular promedio si hay m√∫ltiples registros
   - Incluir todos los d√≠as del mes, marcando "Sin datos" cuando no hay registros

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "vital_sign": {
    "id": 1,
    "name": "Frecuencia Card√≠aca",
    "category": "Cardiovascular",
    "color": "#FF5733",
    "mini_icon": "heart-mini",
    "icon": "heart-icon",
    "background_icon": "heart-background",
    "normal_min_value": 60,
    "normal_max_value": 100,
    "slightly_high_value": 120,
    "high_max_value": 140,
    "critical_max_value": 180
  },
  "cat_measure_unit": {
    "id": 1,
    "name": "bpm",
    "description": "Latidos por minuto"
  },
  "month": "2023-10",
  "monthly_stats": {
    "last_value": 102,
    "last_value_date": "2023-10-28T14:30:00.000Z",
    "max_value": 110,
    "max_value_date": "2023-10-15T09:15:00.000Z",
    "min_value": 85,
    "min_value_date": "2023-10-03T07:45:00.000Z",
    "average_value": 96.8,
    "total_records": 25,
    "alerts_count": 3
  },
  "weekly_data": [
    {
      "week_number": 1,
      "week_start": "2023-10-01",
      "week_end": "2023-10-07",
      "days": [
        {
          "day": 1,
          "average_measure": 95.5,
          "records_count": 2
        },
        {
          "day": 2,
          "average_measure": "Sin datos",
          "records_count": 0
        },
        {
          "day": 3,
          "average_measure": 85,
          "records_count": 1
        },
        {
          "day": 4,
          "average_measure": 92.3,
          "records_count": 3
        },
        {
          "day": 5,
          "average_measure": "Sin datos",
          "records_count": 0
        },
        {
          "day": 6,
          "average_measure": 98,
          "records_count": 1
        },
        {
          "day": 7,
          "average_measure": 94.5,
          "records_count": 2
        }
      ]
    },
    {
      "week_number": 2,
      "week_start": "2023-10-08",
      "week_end": "2023-10-14",
      "days": [
        {
          "day": 8,
          "average_measure": 96,
          "records_count": 1
        }
        // ... m√°s d√≠as
      ]
    }
    // ... m√°s semanas
  ]
}
```

#### Estructura de la Respuesta

| Campo                                  | Tipo                  | Descripci√≥n                                           |
| -------------------------------------- | --------------------- | ----------------------------------------------------- |
| `vital_sign`                           | Object                | Informaci√≥n del cat√°logo del signo vital              |
| `vital_sign.id`                        | number                | ID del signo vital en el cat√°logo                     |
| `vital_sign.name`                      | string                | Nombre del signo vital                                |
| `vital_sign.category`                  | string                | Categor√≠a del signo vital                             |
| `vital_sign.color`                     | string \| null        | Color asociado para la UI                             |
| `vital_sign.mini_icon`                 | string \| null        | Identificador del mini icono                          |
| `vital_sign.icon`                      | string \| null        | Identificador del icono                               |
| `vital_sign.background_icon`           | string \| null        | Identificador del icono de fondo                      |
| `vital_sign.normal_min_value`          | number \| null        | Valor m√≠nimo normal                                   |
| `vital_sign.normal_max_value`          | number \| null        | Valor m√°ximo normal                                   |
| `vital_sign.slightly_high_value`       | number \| null        | Valor umbral ligeramente alto                         |
| `vital_sign.high_max_value`            | number \| null        | Valor m√°ximo alto                                     |
| `vital_sign.critical_max_value`        | number \| null        | Valor m√°ximo cr√≠tico                                  |
| `cat_measure_unit`                     | Object \| null        | Informaci√≥n de la unidad de medida                    |
| `cat_measure_unit.id`                  | number                | ID de la unidad de medida                             |
| `cat_measure_unit.name`                | string                | Nombre de la unidad de medida                         |
| `cat_measure_unit.description`         | string                | Descripci√≥n de la unidad de medida                    |
| `month`                                | string                | Mes solicitado en formato YYYY-MM                     |
| `monthly_stats`                        | Object                | Estad√≠sticas del mes                                  |
| `monthly_stats.last_value`             | number \| null        | √öltimo valor registrado en el mes                     |
| `monthly_stats.last_value_date`        | string \| null        | Fecha del √∫ltimo valor (ISO 8601)                     |
| `monthly_stats.max_value`              | number \| null        | Valor m√°ximo del mes                                  |
| `monthly_stats.max_value_date`         | string \| null        | Fecha del valor m√°ximo (ISO 8601)                     |
| `monthly_stats.min_value`              | number \| null        | Valor m√≠nimo del mes                                  |
| `monthly_stats.min_value_date`         | string \| null        | Fecha del valor m√≠nimo (ISO 8601)                     |
| `monthly_stats.average_value`          | number \| null        | Promedio de valores del mes                           |
| `monthly_stats.total_records`          | number                | Total de registros en el mes                          |
| `monthly_stats.alerts_count`           | number                | Cantidad de registros que superaron umbrales cr√≠ticos |
| `weekly_data`                          | Array                 | Datos organizados por semanas                         |
| `weekly_data[].week_number`            | number                | N√∫mero de semana en el mes (1-6)                      |
| `weekly_data[].week_start`             | string                | Fecha de inicio de semana (domingo) YYYY-MM-DD        |
| `weekly_data[].week_end`               | string                | Fecha de fin de semana (s√°bado) YYYY-MM-DD            |
| `weekly_data[].days`                   | Array                 | Datos de cada d√≠a de la semana                        |
| `weekly_data[].days[].day`             | number                | D√≠a del mes (1-31)                                    |
| `weekly_data[].days[].average_measure` | number \| "Sin datos" | Promedio de medidas del d√≠a o "Sin datos"             |
| `weekly_data[].days[].records_count`   | number                | Cantidad de registros para ese d√≠a                    |

#### C√≥digos de Error

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "El formato del mes debe ser YYYY-MM (ej. 2023-10)",
  "error": "Bad Request"
}
```

```json
{
  "statusCode": 400,
  "message": "El par√°metro month es requerido",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 401 Unauthorized

```json
{
  "statusCode": 401,
  "message": "Usuario no autenticado",
  "error": "Unauthorized"
}
```

**C√≥digo de Estado**: 403 Forbidden

```json
{
  "statusCode": 403,
  "message": "No tiene acceso a esta organizaci√≥n",
  "error": "Forbidden"
}
```

**C√≥digo de Estado**: 404 Not Found

```json
{
  "statusCode": 404,
  "message": "Tipo de signo vital no encontrado",
  "error": "Not Found"
}
```

```json
{
  "statusCode": 404,
  "message": "Paciente no encontrado",
  "error": "Not Found"
}
```

## Caracter√≠sticas T√©cnicas

### Fuentes de Datos

El endpoint considera registros de signos vitales de ambas fuentes:

1. **Consultas M√©dicas**: Registros asociados a `medical_event_id`
2. **Autoevaluaciones**: Registros asociados a `self_evaluation_event_id`

### Organizaci√≥n Temporal

#### Estad√≠sticas Mensuales

- **√öltimo valor**: Basado en `created_at` m√°s reciente
- **M√°ximo/M√≠nimo**: Valores extremos con sus fechas correspondientes
- **Promedio**: Calculado sobre todos los registros del mes
- **Alertas**: Conteo de valores que superan `critical_max_value`

#### Organizaci√≥n Semanal

- **Semanas**: De domingo a s√°bado
- **Cobertura completa**: Incluye todos los d√≠as del mes solicitado
- **Promedio diario**: Si hay m√∫ltiples registros por d√≠a, se calcula el promedio
- **D√≠as sin datos**: Se marcan expl√≠citamente como "Sin datos"

### Filtros Aplicados

- Solo registros no eliminados (`deleted = false`)
- Solo registros del paciente autenticado
- Solo registros del tipo de signo vital especificado
- Solo registros dentro del rango de fechas del mes solicitado

### Optimizaci√≥n

- Una sola consulta para obtener todos los registros del mes
- Procesamiento en memoria para estad√≠sticas y agrupaci√≥n semanal
- Redondeo a 2 decimales para promedios

## Casos de Uso

### Aplicaci√≥n M√≥vil

Este endpoint es ideal para:

1. **Gr√°ficos de tendencias**: Mostrar evoluci√≥n temporal de un signo vital
2. **An√°lisis de patrones**: Identificar d√≠as/semanas con mejores/peores valores
3. **Alertas de salud**: Mostrar cu√°ntas veces se superaron umbrales cr√≠ticos
4. **Seguimiento m√©dico**: Proporcionar datos detallados para consultas
5. **Motivaci√≥n del paciente**: Mostrar progreso y estad√≠sticas de mejora

### Integraci√≥n con UI

#### Gr√°ficos y Visualizaciones

- **Gr√°fico de l√≠neas**: Usar datos semanales para mostrar tendencias
- **Gr√°fico de barras**: Mostrar promedios semanales o diarios
- **Indicadores**: Usar colores del cat√°logo para rangos de valores
- **Alertas visuales**: Destacar d√≠as con valores cr√≠ticos

#### Dashboard de Salud

- **Resumen mensual**: Mostrar estad√≠sticas principales
- **Comparaci√≥n temporal**: Comparar con meses anteriores
- **Objetivos de salud**: Comparar con rangos normales del cat√°logo

## Seguridad

- **Autenticaci√≥n obligatoria**: Solo usuarios autenticados pueden acceder
- **Autorizaci√≥n por paciente**: Cada paciente solo ve sus propios datos
- **Validaci√≥n de par√°metros**: Formato de fecha y ID de signo vital
- **Validaci√≥n de tenant**: Se verifica el acceso al tenant especificado
- **Permisos granulares**: Requiere permiso espec√≠fico para ver detalles del paciente

## Ejemplos de Uso

### Solicitud B√°sica

```bash
GET /mobile/self-evaluation-event/vital-signs/1/history?month=2023-10
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
tenant-id: 123e4567-e89b-12d3-a456-426614174000
```

### Casos de Respuesta

#### Mes con Datos Completos

- Todas las estad√≠sticas mensuales pobladas
- M√∫ltiples semanas con datos variados
- Algunos d√≠as con m√∫ltiples registros (promediados)

#### Mes con Pocos Datos

- Estad√≠sticas mensuales limitadas
- Muchos d√≠as marcados como "Sin datos"
- Alertas pueden ser cero

#### Mes sin Datos

- Todas las estad√≠sticas mensuales en `null` o `0`
- Todos los d√≠as marcados como "Sin datos"
- Estructura semanal completa pero vac√≠a

================
File: src/docs/mobile.appointment.md
================
# Mobile Appointments API

Este m√≥dulo proporciona endpoints optimizados para aplicaciones m√≥viles para gestionar las citas de pacientes.

## Endpoints

### GET `/mobile/appointments`

Obtiene las citas del paciente autenticado seg√∫n el par√°metro `home`.

#### Par√°metros Query

- `home` (boolean, opcional):
  - `true`: Devuelve solo la pr√≥xima cita pendiente del paciente
  - `false` o no especificado: Devuelve todas las citas agrupadas por estado (pendientes/pasadas)

#### Autenticaci√≥n

- Requiere Bearer token en el header `Authorization`
- Solo funciona para usuarios con rol `patient`
- Autom√°ticamente considera todos los tenants asociados al paciente seg√∫n su JWT

#### Headers

- `Authorization: Bearer <token>` (requerido)
- `x-tenant-id: <tenant_id>` (opcional, para especificar un tenant espec√≠fico)

#### Respuestas

##### Cuando `home=true` - Pr√≥xima cita

```json
{
  "next_appointment": {
    "id": "uuid",
    "start": "2024-01-15T10:00:00Z",
    "end": "2024-01-15T11:00:00Z",
    "status": "pendiente",
    "physician": {
      "id": "uuid",
      "name": "Dr. Juan",
      "surname": "P√©rez",
      "specialties": ["Cardiolog√≠a"]
    },
    "tenant": {
      "id": "uuid",
      "name": "Hospital Central"
    },
    "notes": "Revisi√≥n mensual"
  },
  "message": "Pr√≥xima cita encontrada exitosamente"
}
```

##### Cuando `home=false` - Todas las citas

```json
{
  "appointments": {
    "pending": [
      {
        "id": "uuid",
        "start": "2024-01-15T10:00:00Z",
        "end": "2024-01-15T11:00:00Z",
        "status": "pendiente",
        "physician": {
          "id": "uuid",
          "name": "Dr. Juan",
          "surname": "P√©rez",
          "specialties": ["Cardiolog√≠a"]
        },
        "tenant": {
          "id": "uuid",
          "name": "Hospital Central"
        },
        "notes": "Revisi√≥n mensual"
      }
    ],
    "past": [
      {
        "id": "uuid",
        "start": "2024-01-01T10:00:00Z",
        "end": "2024-01-01T11:00:00Z",
        "status": "atendida",
        "physician": {
          "id": "uuid",
          "name": "Dr. Mar√≠a",
          "surname": "Gonz√°lez",
          "specialties": ["Medicina General"]
        },
        "tenant": {
          "id": "uuid",
          "name": "Cl√≠nica Norte"
        }
      }
    ],
    "pending_count": 1,
    "past_count": 1
  },
  "message": "Citas obtenidas exitosamente"
}
```

#### C√≥digos de Estado

- `200 OK`: Operaci√≥n exitosa
- `400 Bad Request`: Error en la solicitud o datos inv√°lidos
- `401 Unauthorized`: Token inv√°lido o faltante
- `403 Forbidden`: No tiene permisos para acceder
- `404 Not Found`: Paciente no encontrado

## L√≥gica de Multi-Tenant para Pacientes

El sistema maneja autom√°ticamente pacientes asociados a m√∫ltiples organizaciones (tenants):

1. **JWT Token**: El token JWT del paciente incluye un array `tenants` con todas las organizaciones asociadas
2. **Tenant Espec√≠fico**: Si se env√≠a el header `x-tenant-id`, se filtran solo las citas de esa organizaci√≥n (si el paciente tiene acceso)
3. **Todos los Tenants**: Si no se especifica tenant, se obtienen citas de todas las organizaciones asociadas al paciente
4. **Validaci√≥n**: El sistema verifica que el paciente tenga acceso a los tenants solicitados

## Permisos Requeridos

- `VIEW_OWN_APPOINTMENTS`: Permiso para ver las citas propias del paciente

## Ejemplo de Uso

### Obtener pr√≥xima cita (para pantalla de inicio)

```bash
curl -X GET "https://api.example.com/mobile/appointments?home=true" \
  -H "Authorization: Bearer <jwt_token>"
```

### Obtener todas las citas (para pantalla de historial)

```bash
curl -X GET "https://api.example.com/mobile/appointments" \
  -H "Authorization: Bearer <jwt_token>"
```

### Obtener citas de una organizaci√≥n espec√≠fica

```bash
curl -X GET "https://api.example.com/mobile/appointments" \
  -H "Authorization: Bearer <jwt_token>" \
  -H "x-tenant-id: <tenant_uuid>"
```

================
File: src/docs/mood.md
================
# Documentaci√≥n de API: Mood

Este documento proporciona detalles sobre los endpoints del m√≥dulo de Mood (Estado de √Ånimo) disponibles en la API de Segimed, espec√≠ficamente dise√±ados para la aplicaci√≥n m√≥vil.

## Informaci√≥n General

- **Base URL**: `/mobile/mood`
- **Controlador**: `MoodController`
- **Servicios Relacionados**: `MoodService`
- **Autenticaci√≥n**: Requiere un token Bearer de acceso JWT
- **Tenant**: Requiere un header `tenant-id` que especifica el ID del inquilino

## Descripci√≥n del M√≥dulo

El m√≥dulo Mood permite a los pacientes registrar su estado de √°nimo diario a trav√©s de la aplicaci√≥n m√≥vil. Este registro ayuda a los profesionales de la salud a monitorear el bienestar emocional de sus pacientes y a detectar posibles problemas que requieran atenci√≥n.

## Limitaciones

- Los pacientes s√≥lo pueden registrar un estado de √°nimo por d√≠a.
- La escala de estados de √°nimo va del 1 al 5, donde:
  - 1: Muy mal
  - 2: Mal
  - 3: Regular
  - 4: Bien
  - 5: Muy bien

## Endpoints

### 1. Registrar Estado de √Ånimo

Registra el estado de √°nimo actual del paciente.

- **URL**: `POST /mobile/mood`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Body**:
  ```json
  {
    "mood_level": 4
  }
  ```
- **Respuestas**:
  - `201 Created`: Estado de √°nimo registrado correctamente
    ```json
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "mood_level": 4,
      "created_at": "2025-05-23T10:30:00Z",
      "message": "¬°Gracias por contarnos c√≥mo te sientes hoy!"
    }
    ```
  - `409 Conflict`: Ya se ha registrado un estado de √°nimo hoy
  - `401 Unauthorized`: No autorizado

### 2. Obtener Estado de √Ånimo de Hoy

Devuelve el estado de √°nimo registrado por el paciente en el d√≠a actual.

- **URL**: `GET /mobile/mood/today`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Respuestas**:
  - `200 OK`: Estado de √°nimo obtenido correctamente
    ```json
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "mood_level": 4,
      "created_at": "2025-05-23T10:30:00Z"
    }
    ```
  - `404 Not Found`: No se ha registrado ning√∫n estado de √°nimo hoy
  - `401 Unauthorized`: No autorizado

### 3. Obtener Historial de Estados de √Ånimo

Devuelve el historial completo de estados de √°nimo registrados por el paciente.

- **URL**: `GET /mobile/mood/history`
- **Headers**:
  - `Authorization`: Bearer token
  - `tenant-id`: ID del tenant
- **Respuestas**:
  - `200 OK`: Historial obtenido correctamente
    ```json
    [
      {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "mood_level": 4,
        "created_at": "2025-05-23T10:30:00Z",
        "patient_id": "123e4567-e89b-12d3-a456-426614174001",
        "tenant_id": "123e4567-e89b-12d3-a456-426614174002"
      },
      {
        "id": "123e4567-e89b-12d3-a456-426614174003",
        "mood_level": 3,
        "created_at": "2025-05-22T09:15:00Z",
        "patient_id": "123e4567-e89b-12d3-a456-426614174001",
        "tenant_id": "123e4567-e89b-12d3-a456-426614174002"
      }
    ]
    ```
  - `401 Unauthorized`: No autorizado

## Modelos de Datos

### CreateMoodDto

```typescript
{
  mood_level: number; // Nivel de estado de √°nimo (1-5)
}
```

### MoodEntry (Modelo de Base de Datos)

```typescript
{
  id: string; // UUID √∫nico del registro
  mood_level: number; // Nivel de estado de √°nimo (1-5)
  created_at: Date; // Fecha y hora de registro
  patient_id: string; // ID del paciente que registr√≥ el estado de √°nimo
  tenant_id: string; // ID del tenant al que pertenece el paciente
}
```

## Uso en Aplicaci√≥n M√≥vil

Este m√≥dulo est√° dise√±ado espec√≠ficamente para ser utilizado por la aplicaci√≥n m√≥vil de Segimed. Los pacientes pueden:

1. Registrar su estado de √°nimo diario
2. Ver su registro de hoy
3. Revisar su historial para observar cambios en su bienestar emocional a lo largo del tiempo

Esta informaci√≥n tambi√©n est√° disponible para los profesionales de salud a trav√©s de otras interfaces, permiti√©ndoles monitorear el bienestar emocional de sus pacientes.

================
File: src/docs/MULTITENANT_GUIDE.md
================
# Gu√≠a de Implementaci√≥n Multitenant

Esta gu√≠a explica c√≥mo funciona la arquitectura multitenant en el proyecto SEGIMED y c√≥mo implementar nuevas funcionalidades que la soporten.

## Introducci√≥n

El sistema SEGIMED maneja m√∫ltiples organizaciones (tenants) donde:

- Un **paciente** puede estar asociado a m√∫ltiples organizaciones
- Los **datos m√©dicos** (signos vitales, prescripciones, estudios) deben ser accesibles desde todas las organizaciones del paciente
- Los **m√©dicos** pertenecen a organizaciones espec√≠ficas y ven datos seg√∫n sus permisos

## Arquitectura Multitenant

### 1. Esquema de Base de Datos

```sql
-- Tabla principal de tenants/organizaciones
tenant: {
  id: string (UUID)
  name: string
  type: string
  // ... otros campos
}

-- Relaci√≥n paciente-organizaci√≥n (many-to-many)
patient_tenant: {
  id: string (UUID)
  patient_id: string (FK a user donde role='patient')
  tenant_id: string (FK a tenant)
  deleted: boolean
}

-- Tablas de datos m√©dicos con tenant_id
prescription: {
  id: string
  patient_id: string
  tenant_id: string (nullable - para auto-asignadas)
  // ... otros campos
}

vital_signs: {
  id: string
  patient_id: string
  tenant_id: string
  // ... otros campos
}
```

### 2. Middleware de Tenant

**Archivo**: `src/utils/middleware/tenantPrismaMiddleware.ts`

```typescript
// Aplica filtros autom√°ticos por tenant_id
// EXCEPCI√ìN: Skip cuando hay l√≥gica OR (queries multitenant)
if (params.action === 'findMany' || params.action === 'findFirst') {
  if (params.args.where?.OR) {
    // Skip automatic filtering for multitenant queries
    return next(params);
  }
  // Apply tenant filter...
}
```

## Patrones de Implementaci√≥n

### 1. Obtenci√≥n de Tenant IDs del Paciente

**Patr√≥n est√°ndar** usado en todos los servicios:

```typescript
/**
 * Obtiene los tenant IDs del paciente de forma optimizada
 */
private async getPatientTenantIds(
  patientId: string,
  userTenants?: { id: string; name: string; type: string }[],
): Promise<string[]> {
  // Si los tenants vienen del JWT, usarlos directamente
  if (userTenants && userTenants.length > 0) {
    return userTenants.map((tenant) => tenant.id);
  }

  // Sino, buscar en la DB con el patient_id directamente
  const patientTenants = await this.prisma.patient_tenant.findMany({
    where: {
      patient: {
        user_id: patientId,
      },
      deleted: false,
    },
    select: { tenant_id: true },
  });

  return patientTenants.map((pt) => pt.tenant_id);
}
```

### 2. Consultas Multitenant

**Patr√≥n para buscar datos en todas las organizaciones del paciente**:

```typescript
async findByPatientId(
  patientId: string,
  userTenants?: { id: string; name: string; type: string }[],
) {
  // Obtener tenant IDs del paciente
  const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

  return this.prisma.data_table.findMany({
    where: {
      patient_id: patientId,
      // Buscar en todas las organizaciones del paciente
      tenant_id: { in: tenantIds },
    },
  });
}
```

### 3. Consultas con Datos Auto-asignados

**Para datos que pueden no tener tenant_id (ej: prescripciones auto-asignadas)**:

```typescript
const prescriptions = await this.prisma.prescription.findMany({
  where: {
    patient_id: patientId,
    OR: [
      // Prescripciones de organizaciones del paciente
      { tenant_id: { in: tenantIds } },
      // Prescripciones auto-asignadas (sin tenant_id)
      {
        created_by_patient: true,
        tenant_id: null,
      },
    ],
  },
});
```

### 4. Endpoints de Controlador

**Patr√≥n est√°ndar para endpoints multitenant**:

```typescript
@Get('by-patient/:patient_id')
async findByPatientId(
  @Param('patient_id') patientId: string,
  @Request() req: any,
) {
  const userTenants = req.userTenants || [];
  return this.service.findByPatientId(patientId, userTenants);
}
```

## M√≥dulos Implementados

### ‚úÖ Vital Signs

- **Multitenant**: Implementado desde el inicio
- **Endpoint**: `GET /vital-signs/by-patient/{patient_id}`
- **Funcionalidad**: Incluye tanto datos de organizaciones como auto-evaluaciones

### ‚úÖ Prescriptions (Mobile Functions)

- **Multitenant**: Implementado y corregido
- **Endpoints**:
  - `GET /mobile/prescriptions/tracking`
  - `POST /mobile/prescriptions/activate-tracking`
  - `POST /mobile/prescriptions/toggle-reminder`
- **Funcionalidad**: Incluye prescripciones de organizaciones y auto-asignadas

### ‚úÖ Patient Studies

- **Multitenant**: Implementado recientemente
- **Endpoint**: `GET /patient-studies/by-patient/{patient_id}`
- **Funcionalidad**: Busca estudios en todas las organizaciones del paciente

### ‚úÖ Mobile Appointments

- **Multitenant**: Implementado
- **Endpoints**:
  - `GET /mobile/appointments`
  - `PATCH /mobile/appointments/{id}/cancel`
- **Funcionalidad**: Citas de todas las organizaciones del paciente

## C√≥mo Implementar Multitenant en Nuevos M√≥dulos

### Paso 1: Servicio

1. **Agregar m√©todo `getPatientTenantIds()`**:

```typescript
private async getPatientTenantIds(
  patientId: string,
  userTenants?: { id: string; name: string; type: string }[],
): Promise<string[]> {
  // Copiar implementaci√≥n est√°ndar
}
```

2. **Actualizar m√©todos de consulta**:

```typescript
async findByPatientId(
  patientId: string,
  userTenants?: { id: string; name: string; type: string }[],
) {
  const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

  return this.prisma.your_table.findMany({
    where: {
      patient_id: patientId,
      tenant_id: { in: tenantIds },
    },
  });
}
```

### Paso 2: Controlador

1. **Agregar endpoint multitenant**:

```typescript
@Get('by-patient/:patient_id')
async findByPatientId(
  @Param('patient_id') patientId: string,
  @Request() req: any,
) {
  const userTenants = req.userTenants || [];
  return this.yourService.findByPatientId(patientId, userTenants);
}
```

### Paso 3: Documentaci√≥n

1. **Crear/actualizar documentaci√≥n del m√≥dulo**
2. **Especificar funcionalidad multitenant**
3. **Incluir ejemplos de uso**

## Casos Especiales

### 1. Datos Auto-asignados

Para datos que pueden no tener `tenant_id` (como prescripciones auto-asignadas):

```typescript
OR: [
  { tenant_id: { in: tenantIds } },
  {
    created_by_patient: true,
    tenant_id: null
  },
],
```

### 2. Middleware Prisma y Consultas OR

El middleware autom√°tico de Prisma skip las consultas que usan l√≥gica OR para permitir multitenant:

```typescript
if (params.args.where?.OR) {
  return next(params); // Skip automatic tenant filtering
}
```

### 3. Optimizaci√≥n con JWT

Priorizar tenants del JWT para evitar consultas innecesarias:

```typescript
if (userTenants && userTenants.length > 0) {
  return userTenants.map((tenant) => tenant.id);
}
// Solo si no hay tenants en JWT, consultar DB
```

## Testing Multitenant

### 1. Casos de Prueba Est√°ndar

```typescript
describe('Multitenant functionality', () => {
  it('should get data from all patient organizations', async () => {
    // Setup: paciente en m√∫ltiples organizaciones
    // Test: endpoint devuelve datos de todas las organizaciones
  });

  it('should prioritize JWT tenants over DB query', async () => {
    // Test: cuando hay tenants en JWT, no consulta DB
  });

  it('should handle patients with no organizations', async () => {
    // Test: manejo correcto cuando paciente no tiene organizaciones
  });
});
```

### 2. Test de Integraci√≥n

```bash
# Test con paciente en m√∫ltiples organizaciones
GET /api/your-endpoint/by-patient/patient-id
Authorization: Bearer jwt-with-tenants

# Verificar que devuelve datos de todas las organizaciones
```

## Mejores Pr√°cticas

### 1. Performance

- ‚úÖ **Usar tenants del JWT** cuando est√©n disponibles
- ‚úÖ **Consultas batch** para datos relacionados
- ‚úÖ **Filtros a nivel DB** en lugar de filtros en aplicaci√≥n
- ‚úÖ **Mapas para relacionar datos** en lugar de nested loops

### 2. Seguridad

- ‚úÖ **Validar pertenencia** del paciente a organizaciones
- ‚úÖ **Filtrar por tenant_id** en todas las consultas
- ‚úÖ **No exponer datos** de organizaciones no autorizadas
- ‚úÖ **Logs de auditor√≠a** para accesos multitenant

### 3. Compatibilidad

- ‚úÖ **Par√°metros opcionales** para mantener retrocompatibilidad
- ‚úÖ **Fallback a comportamiento anterior** cuando no hay userTenants
- ‚úÖ **Endpoints existentes** siguen funcionando sin cambios

## Troubleshooting

### Problema: Middleware bloquea consultas multitenant

**Soluci√≥n**: Verificar que el middleware skip consultas con l√≥gica OR

```typescript
if (params.args.where?.OR) {
  return next(params);
}
```

### Problema: No devuelve datos de todas las organizaciones

**Soluci√≥n**: Verificar que `tenant_id: { in: tenantIds }` est√© en el WHERE

```typescript
where: {
  patient_id: patientId,
  tenant_id: { in: tenantIds }, // ‚Üê Importante
}
```

### Problema: Performance lenta

**Soluci√≥n**: Usar tenants del JWT y optimizar consultas

```typescript
// Priorizar JWT
if (userTenants && userTenants.length > 0) {
  return userTenants.map((t) => t.id);
}
```

## Roadmap

### Pr√≥ximos M√≥dulos a Implementar

- [ ] Medical Events
- [ ] Pharmacy/Medications
- [ ] Lab Results
- [ ] Imaging Studies
- [ ] Clinical Notes

### Mejoras Futuras

- [ ] Cache de tenant IDs por paciente
- [ ] M√©tricas de performance multitenant
- [ ] Testing automatizado de casos multitenant
- [ ] Documentaci√≥n auto-generada de endpoints multitenant

================
File: src/docs/NEW_PERMISSIONS_SUMMARY.md
================
# Resumen de Permisos - Nueva Funcionalidad Multitenant

Este documento describe todos los permisos utilizados en las nuevas funcionalidades implementadas y c√≥mo est√°n configurados en el sistema de actualizaci√≥n de permisos.

## Permisos Utilizados en Nueva Funcionalidad

### Para Patient Studies (Estudios del Paciente)

| Endpoint                               | Permiso Requerido          | Descripci√≥n               | Tipo de Usuario |
| -------------------------------------- | -------------------------- | ------------------------- | --------------- |
| `POST /patient-studies`                | `MANAGE_CATALOGS`          | Crear nuevos estudios     | Profesionales   |
| `GET /patient-studies`                 | `VIEW_PATIENTS_LIST`       | Ver todos los estudios    | Profesionales   |
| `GET /patient-studies/my-studies`      | `VIEW_OWN_MEDICAL_RECORDS` | Ver estudios propios      | **Pacientes**   |
| `GET /patient-studies/by-patient/{id}` | `VIEW_PATIENT_DETAILS`     | Ver estudios de pacientes | Profesionales   |
| `GET /patient-studies/{id}`            | `VIEW_PATIENT_DETAILS`     | Ver estudio espec√≠fico    | Profesionales   |
| `PATCH /patient-studies/{id}`          | `EDIT_PATIENT_INFO`        | Actualizar estudios       | Profesionales   |
| `DELETE /patient-studies/{id}`         | `DELETE_PATIENTS`          | Eliminar estudios         | Profesionales   |

### Para Cat Identification Type (Tipos de Identificaci√≥n)

| Endpoint                               | Permiso Requerido | Descripci√≥n         | Tipo de Usuario |
| -------------------------------------- | ----------------- | ------------------- | --------------- |
| `POST /cat-identification-type`        | `MANAGE_CATALOGS` | Crear tipos de ID   | Administradores |
| `GET /cat-identification-type`         | `MANAGE_CATALOGS` | Ver tipos de ID     | Administradores |
| `GET /cat-identification-type/{id}`    | `MANAGE_CATALOGS` | Ver tipo espec√≠fico | Administradores |
| `PATCH /cat-identification-type/{id}`  | `MANAGE_CATALOGS` | Actualizar tipos    | Administradores |
| `DELETE /cat-identification-type/{id}` | `MANAGE_CATALOGS` | Eliminar tipos      | Administradores |

### Para Mobile Appointments (Citas M√≥viles)

| Endpoint                                 | Permiso Requerido       | Descripci√≥n            | Tipo de Usuario |
| ---------------------------------------- | ----------------------- | ---------------------- | --------------- |
| `GET /mobile/appointments`               | `VIEW_OWN_APPOINTMENTS` | Ver citas propias      | **Pacientes**   |
| `PATCH /mobile/appointments/{id}/cancel` | `VIEW_OWN_APPOINTMENTS` | Cancelar citas propias | **Pacientes**   |

### Para Mobile Self-Evaluation Events (Signos Vitales) üÜï

| Endpoint                                                     | Permiso Requerido          | Descripci√≥n                        | Tipo de Usuario |
| ------------------------------------------------------------ | -------------------------- | ---------------------------------- | --------------- |
| `POST /mobile/self-evaluation-event/vital-signs`             | `REGISTER_OWN_VITAL_SIGNS` | Registrar signos vitales propios   | **Pacientes**   |
| `GET /mobile/self-evaluation-event/latest-vital-signs/all`   | `VIEW_OWN_VITAL_SIGNS`     | Ver √∫ltimos signos vitales propios | **Pacientes**   |
| `GET /mobile/self-evaluation-event/vital-signs/{id}/history` | `VIEW_OWN_VITAL_SIGNS`     | Ver historial de signos vitales    | **Pacientes**   |
| `POST /mobile/self-evaluation-event`                         | `VIEW_PATIENT_DETAILS`     | Crear autoevaluaci√≥n (con evento)  | Profesionales   |

## Configuraci√≥n en Permission Updater

Los permisos est√°n configurados en `src/auth/services/permission-updater.service.ts`:

### Permisos para M√©dicos/Profesionales

```typescript
const physicianPermissions = [
  // ... permisos existentes ...
  Permission.DELETE_PATIENTS, // ‚úÖ AGREGADO - Para gesti√≥n de estudios
  Permission.MANAGE_CATALOGS, // ‚úÖ AGREGADO - Para gesti√≥n de cat√°logos
  // ... otros permisos ...
];
```

### Permisos para Pacientes

```typescript
const patientPermissions = [
  Permission.VIEW_OWN_APPOINTMENTS, // ‚úÖ YA EXIST√çA - Para citas m√≥viles
  Permission.VIEW_OWN_MEDICAL_RECORDS, // ‚úÖ YA EXIST√çA - Para estudios propios
  // ... otros permisos existentes ...
];
```

## Nuevos Permisos Clave

### `VIEW_OWN_MEDICAL_RECORDS` üîë

- **Uso**: Permite a los pacientes ver sus propios estudios m√©dicos
- **Endpoints**: `GET /patient-studies/my-studies`
- **Funcionalidad**: Soporte multitenant autom√°tico
- **Seguridad**: Solo datos del paciente autenticado (ID desde JWT)

### `VIEW_OWN_APPOINTMENTS` üîë

- **Uso**: Permite a los pacientes ver y cancelar sus propias citas
- **Endpoints**:
  - `GET /mobile/appointments`
  - `PATCH /mobile/appointments/{id}/cancel`
- **Funcionalidad**: Soporte multitenant autom√°tico
- **Seguridad**: Solo citas del paciente autenticado (ID desde JWT)

### `MANAGE_CATALOGS` üîë

- **Uso**: Gesti√≥n completa de cat√°logos del sistema
- **Endpoints**: Todos los endpoints de `cat-identification-type`
- **Usuarios**: Administradores y profesionales con permisos
- **Nuevos cat√°logos**: Tipos de identificaci√≥n

## Funcionalidad Multitenant

### Para Pacientes

Los endpoints de pacientes autom√°ticamente:

1. **Extraen patient_id**: Del JWT token (req.user.id)
2. **Obtienen organizaciones**: Del JWT o consultando `patient_tenant`
3. **Buscan datos**: En todas las organizaciones usando `tenant_id: { in: tenantIds }`
4. **Garantizan seguridad**: Solo datos propios del paciente

### Para Profesionales

Los endpoints de profesionales:

1. **Requieren patient_id**: Como par√°metro expl√≠cito
2. **Usan organizaci√≥n actual**: Del header `tenant_id`
3. **Permiten gesti√≥n**: De datos de pacientes bajo su cuidado

## C√≥mo Actualizar Permisos

### Paso 1: Ejecutar Actualizaci√≥n

```bash
POST /auth/permissions/update
Authorization: Bearer <admin-jwt-token>
```

### Paso 2: Verificar Logs

El servicio reportar√°:

```json
{
  "message": "Actualizaci√≥n de permisos completada",
  "stats": {
    "physicians": {
      "processed": 25,
      "updated": 3,
      "rolesUpdated": 2
    },
    "patients": {
      "processed": 150,
      "updated": 12,
      "rolesUpdated": 1
    },
    "errors": 0
  }
}
```

## Validaciones de Seguridad

### Autom√°ticas por JWT

- ‚úÖ **Usuario autenticado**: JWT v√°lido obligatorio
- ‚úÖ **Rol correcto**: Validaci√≥n autom√°tica de rol (patient/physician)
- ‚úÖ **Datos propios**: Pacientes solo ven sus datos
- ‚úÖ **Multitenant**: Acceso a todas las organizaciones del usuario

### Validaciones de Negocio

- ‚úÖ **Estados v√°lidos**: Solo citas pendientes se pueden cancelar
- ‚úÖ **Temporalidad**: No se pueden cancelar citas pasadas
- ‚úÖ **Pertenencia**: Solo recursos del usuario autenticado

## Beneficios de la Implementaci√≥n

### Para Desarrolladores

- **Reutilizaci√≥n**: Mismos patrones en todos los endpoints
- **Consistencia**: Validaciones autom√°ticas uniformes
- **Mantenibilidad**: L√≥gica centralizada de multitenant

### Para Usuarios

- **Seguridad**: No exposici√≥n de IDs de pacientes en URLs
- **Experiencia**: Acceso autom√°tico a datos de todas sus organizaciones
- **Funcionalidad**: Capacidades completas desde m√≥vil

### Para Administradores

- **Control granular**: Permisos espec√≠ficos por funcionalidad
- **Actualizaci√≥n autom√°tica**: Sistema de migraci√≥n de permisos
- **Auditabilidad**: Logs detallados de cambios de permisos

## Pr√≥ximos Pasos

1. **Ejecutar update de permisos** en todos los entornos
2. **Verificar funcionalidad** en aplicaci√≥n m√≥vil
3. **Documentar para frontend** las nuevas capacidades
4. **Monitorear logs** para identificar problemas de permisos

## Contacto

Para dudas sobre permisos o funcionalidad multitenant, consultar:

- `src/auth/services/permission-updater.service.ts`
- `src/docs/MULTITENANT_GUIDE.md`
- Este documento (`NEW_PERMISSIONS_SUMMARY.md`)

================
File: src/docs/notification-service.md
================
# NotificationService - Servicio Centralizado de Notificaciones

## Descripci√≥n General

El `NotificationService` es un servicio centralizado que maneja todas las notificaciones a pacientes en el sistema SEGIMED. Este servicio unifica la l√≥gica de env√≠o de emails y mensajes de WhatsApp, proporcionando una interfaz consistente para diferentes tipos de notificaciones m√©dicas.

## Ubicaci√≥n

- **Servicio**: `src/services/notification/notification.service.ts`
- **M√≥dulo**: `src/services/notification/notification.module.ts`

## Arquitectura

### Dependencias

El `NotificationService` inyecta y utiliza:

- **EmailService**: Para el env√≠o de correos electr√≥nicos con plantillas HTML
- **TwilioService**: Para el env√≠o de mensajes de WhatsApp

### Interfaces

#### `PatientNotificationData`

```typescript
interface PatientNotificationData {
  id: string;
  name: string;
  last_name?: string;
  email?: string;
  phone?: string;
  is_phone_verified?: boolean;
}
```

#### `MedicalOrderData`

```typescript
interface MedicalOrderData {
  id: string;
  url?: string;
  request_date: Date;
  description_type?: string;
}
```

#### `MedicalOrderTypeData`

```typescript
interface MedicalOrderTypeData {
  name: string;
  description: string;
}
```

## M√©todos Principales

### `sendMedicalOrderNotification()`

Env√≠a notificaciones para √≥rdenes m√©dicas de cualquier tipo.

**Firma:**

```typescript
async sendMedicalOrderNotification(
  patient: PatientNotificationData,
  order: MedicalOrderData,
  orderType: MedicalOrderTypeData,
  physicianName?: string,
  medications?: MedicationItemInterface[],
): Promise<void>
```

**Funcionalidades:**

- Determina autom√°ticamente el tipo de plantilla seg√∫n el tipo de orden
- Maneja adjuntos de archivos PDF autom√°ticamente
- Env√≠a por email y WhatsApp cuando est√°n disponibles
- Gesti√≥n robusta de errores sin afectar el flujo principal

**Tipos de Orden Soportados:**

- `medication` / `medication-authorization`: Usa plantilla de medicaci√≥n
- Otros tipos: Usa plantilla de orden m√©dica general

### `sendMedicationUpdateNotification()`

Env√≠a notificaciones espec√≠ficas para actualizaciones de medicaci√≥n (usado principalmente en consultas m√©dicas).

**Firma:**

```typescript
async sendMedicationUpdateNotification(
  patient: PatientNotificationData,
  medications: MedicationItemInterface[],
  physicianName?: string,
  fileUrl?: string,
): Promise<void>
```

**Funcionalidades:**

- Optimizado para notificaciones de medicaci√≥n durante consultas
- Incluye lista detallada de medicamentos prescritos
- Soporte para archivos adjuntos opcionales
- Plantillas espec√≠ficas para medicaci√≥n

## Plantillas de Notificaci√≥n

### Email

El servicio utiliza plantillas HTML predefinidas:

- **medicationHtml**: Para notificaciones de medicaci√≥n
- **medicalOrderHtml**: Para √≥rdenes m√©dicas generales

### WhatsApp

Mensajes de texto formateados con:

- Saludo personalizado con nombre del paciente
- Lista detallada de medicamentos (cuando aplica)
- Informaci√≥n del m√©dico
- Instrucciones de seguimiento
- Firma institucional

## Gesti√≥n de Archivos Adjuntos

### Email

- Descarga autom√°tica de archivos desde URLs p√∫blicas
- Conversi√≥n a formato base64 para adjuntos
- Manejo de errores sin interrumpir el env√≠o

### WhatsApp

- Env√≠o de archivos multimedia usando URLs p√∫blicas
- Fallback a mensaje de texto si falla el env√≠o con archivo

## Gesti√≥n de Errores

El servicio implementa una estrategia de gesti√≥n de errores no bloqueante:

- **Errores de Email**: Se registran pero no interrumpen el flujo
- **Errores de WhatsApp**: Se registran pero no interrumpen el flujo
- **Errores de Adjuntos**: Se contin√∫a sin adjunto si falla la descarga
- **Logging**: Todos los errores se registran en consola para debugging

## Integraci√≥n con Otros M√≥dulos

### MedicalOrderService

```typescript
// Reemplaza el m√©todo _sendNotifications
await this.notificationService.sendMedicalOrderNotification(
  patient,
  order,
  orderType,
  physicianName,
  medications,
);
```

### MedicalEventsService

```typescript
// Reemplaza el m√©todo _sendMedicationNotification
await this.notificationService.sendMedicationUpdateNotification(
  patient,
  medications,
  physicianName,
  fileUrl,
);
```

## Configuraci√≥n de M√≥dulos

### NotificationModule

```typescript
@Module({
  imports: [EmailModule, TwilioModule],
  providers: [NotificationService],
  exports: [NotificationService],
})
export class NotificationModule {}
```

### M√≥dulos que lo Utilizan

- **MedicalOrderModule**: Importa `NotificationModule`
- **MedicalEventsModule**: Importa `NotificationModule`

## Beneficios de la Centralizaci√≥n

### Mantenibilidad

- L√≥gica de notificaci√≥n en un solo lugar
- Cambios en plantillas o l√≥gica se aplican globalmente
- F√°cil testing y debugging

### Consistencia

- Mismo formato y estilo en todas las notificaciones
- Gesti√≥n uniforme de errores
- Comportamiento predecible

### Reutilizaci√≥n

- Mismo servicio para diferentes tipos de notificaciones
- Interfaces bien definidas para diferentes casos de uso
- F√°cil extensi√≥n para nuevos tipos de notificaci√≥n

### Escalabilidad

- F√°cil agregar nuevos canales de notificaci√≥n
- Posibilidad de implementar colas de notificaci√≥n
- M√©tricas centralizadas de env√≠o

## Ejemplos de Uso

### Notificaci√≥n de Orden M√©dica

```typescript
const patient = {
  id: 'patient-uuid',
  name: 'Juan',
  last_name: 'P√©rez',
  email: 'juan.perez@email.com',
  phone: '+1234567890',
  is_phone_verified: true,
};

const order = {
  id: 'order-uuid',
  url: 'https://example.com/order.pdf',
  request_date: new Date(),
  description_type: 'Certificado m√©dico',
};

const orderType = {
  name: 'certification',
  description: 'Certificado',
};

await notificationService.sendMedicalOrderNotification(
  patient,
  order,
  orderType,
  'Dr. Garc√≠a',
);
```

### Notificaci√≥n de Medicaci√≥n

```typescript
const medications = [
  {
    monodrug: 'Paracetamol',
    dose: '500',
    dose_units: 'mg',
    frecuency: 'Cada 8 horas',
    duration: '7',
    duration_units: 'd√≠as',
    observations: 'Tomar con alimentos',
  },
];

await notificationService.sendMedicationUpdateNotification(
  patient,
  medications,
  'Dr. Garc√≠a',
  'https://example.com/prescription.pdf',
);
```

## Consideraciones de Seguridad

- **Datos Sensibles**: No se almacenan datos de pacientes en el servicio
- **URLs Temporales**: Los archivos adjuntos deben ser accesibles p√∫blicamente
- **Validaci√≥n**: Se valida la disponibilidad de email/tel√©fono antes del env√≠o
- **Privacidad**: Los mensajes incluyen solo informaci√≥n m√©dica necesaria

## Monitoreo y Logging

El servicio registra:

- Errores de env√≠o de email
- Errores de env√≠o de WhatsApp
- Errores de descarga de adjuntos
- Informaci√≥n de debugging para troubleshooting

## Futuras Mejoras

- **Colas de Notificaci√≥n**: Para manejo de alto volumen
- **Plantillas Din√°micas**: Sistema de plantillas configurable
- **M√©tricas**: Tracking de tasas de entrega y apertura
- **Notificaciones Push**: Integraci√≥n con aplicaciones m√≥viles
- **Preferencias de Usuario**: Configuraci√≥n de canales preferidos por paciente

================
File: src/docs/order-type.md
================
# API de Cat√°logo de Tipos de Orden

Este m√≥dulo proporciona endpoints para gestionar el cat√°logo de Tipos de Orden en la plataforma SEGIMED. Los tipos de orden se utilizan para categorizar los diferentes tipos de √≥rdenes m√©dicas.

## Requisitos de Seguridad

- **Autenticaci√≥n con Token Bearer**: Todos los endpoints requieren un token JWT v√°lido en el header de Authorization.
- **ID de Tenant**: Todas las peticiones deben incluir el header `tenant_id`.

## Endpoints

### Crear un Tipo de Orden

```http
POST /order-type
```

Crea un nuevo tipo de orden en el cat√°logo.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |
| tenant_id     | S√≠        | ID del tenant         |

#### Cuerpo de la Petici√≥n

```json
{
  "id": "lab-test",
  "name": "Prueba de Laboratorio",
  "description": "Orden m√©dica para pruebas de laboratorio"
}
```

| Campo       | Tipo   | Requerido | Descripci√≥n                    |
| ----------- | ------ | --------- | ------------------------------ |
| id          | string | No        | ID √∫nico para el tipo de orden |
| name        | string | S√≠        | Nombre del tipo de orden       |
| description | string | No        | Descripci√≥n del tipo de orden  |

#### Respuesta

**C√≥digo de Estado**: 201 Created

```json
{
  "id": "lab-test",
  "name": "Prueba de Laboratorio",
  "description": "Orden m√©dica para pruebas de laboratorio"
}
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "Detalles de la solicitud incorrecta",
  "error": "Bad Request"
}
```

### Obtener Todos los Tipos de Orden

```http
GET /order-type
```

Recupera una lista paginada de todos los tipos de orden.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |
| tenant_id     | S√≠        | ID del tenant         |

#### Par√°metros de Consulta

| Par√°metro      | Requerido | Descripci√≥n                                         |
| -------------- | --------- | --------------------------------------------------- |
| page           | No        | N√∫mero de p√°gina a recuperar (predeterminado: 1)    |
| pageSize       | No        | N√∫mero de elementos por p√°gina (predeterminado: 10) |
| orderBy        | No        | Campo por el cual ordenar (predeterminado: "id")    |
| orderDirection | No        | "asc" o "desc" (predeterminado: "asc")              |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "data": [
    {
      "id": "lab-test",
      "name": "Prueba de Laboratorio",
      "description": "Orden m√©dica para pruebas de laboratorio"
    },
    {
      "id": "img-study",
      "name": "Estudio de Imagen",
      "description": "Orden m√©dica para estudios de imagen"
    }
  ],
  "meta": {
    "page": 1,
    "pageSize": 10,
    "totalItems": 2,
    "totalPages": 1
  }
}
```

### Obtener Tipo de Orden por ID

```http
GET /order-type/{id}
```

Recupera un tipo de orden espec√≠fico por su ID.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |
| tenant_id     | S√≠        | ID del tenant         |

#### Par√°metros de Ruta

| Par√°metro | Requerido | Descripci√≥n                      |
| --------- | --------- | -------------------------------- |
| id        | S√≠        | ID del tipo de orden a recuperar |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "id": "lab-test",
  "name": "Prueba de Laboratorio",
  "description": "Orden m√©dica para pruebas de laboratorio"
}
```

**C√≥digo de Estado**: 404 Not Found

```json
{
  "statusCode": 404,
  "message": "Tipo de orden no encontrado",
  "error": "Not Found"
}
```

### Actualizar Tipo de Orden

```http
PATCH /order-type/{id}
```

Actualiza un tipo de orden existente.

#### Headers

| Header        | Requerido | Descripci√≥n           |
| ------------- | --------- | --------------------- |
| Authorization | S√≠        | Bearer {access_token} |
| tenant_id     | S√≠        | ID del tenant         |

#### Par√°metros de Ruta

| Par√°metro | Requerido | Descripci√≥n                       |
| --------- | --------- | --------------------------------- |
| id        | S√≠        | ID del tipo de orden a actualizar |

#### Cuerpo de la Petici√≥n

```json
{
  "name": "Prueba de Laboratorio Actualizada",
  "description": "Descripci√≥n actualizada para pruebas de laboratorio"
}
```

| Campo       | Tipo   | Requerido | Descripci√≥n                             |
| ----------- | ------ | --------- | --------------------------------------- |
| name        | string | No        | Nuevo nombre para el tipo de orden      |
| description | string | No        | Nueva descripci√≥n para el tipo de orden |

#### Respuesta

**C√≥digo de Estado**: 200 OK

```json
{
  "id": "lab-test",
  "name": "Prueba de Laboratorio Actualizada",
  "description": "Descripci√≥n actualizada para pruebas de laboratorio"
}
```

**C√≥digo de Estado**: 400 Bad Request

```json
{
  "statusCode": 400,
  "message": "Detalles de la solicitud incorrecta",
  "error": "Bad Request"
}
```

**C√≥digo de Estado**: 404 Not Found

```json
{
  "statusCode": 404,
  "message": "Tipo de orden no encontrado",
  "error": "Not Found"
}
```

## Notas

- Los tipos de orden se utilizan para categorizar diferentes tipos de √≥rdenes m√©dicas en el sistema SEGIMED
- El ID del tipo de orden es opcional al crear; si no se proporciona, el sistema generar√° uno
- Al solicitar resultados paginados, puede controlar el ordenamiento y el tama√±o de p√°gina
- Todos los campos son opcionales al actualizar un tipo de orden (se admiten actualizaciones parciales)

================
File: src/docs/patient-studies.md
================
# Estudios del Paciente Endpoints

Este documento describe los endpoints para gestionar los estudios de los pacientes.

**Todos los endpoints en este m√≥dulo requieren el header `tenant_id`.**

## Endpoints

### `POST /patient-studies`

Crea un nuevo estudio para un paciente.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Request Body:**

```json
{
  "medicalEventId": "string (ID del evento m√©dico)",
  "study_type": "string (Tipo de estudio)",
  "study_date": "string (Fecha del estudio ISO 8601)",
  "institution": "string (Instituci√≥n, opcional)",
  "study_file": "string (URL/ruta del archivo del estudio, opcional)",
  "user_id": "number (ID del usuario que crea)"
}
```

**Responses:**

- `201 Created`: El estudio del paciente ha sido creado exitosamente.
- `400 Bad Request`: La solicitud es inv√°lida.
- `403 Forbidden`: Acceso denegado.

### `GET /patient-studies`

Obtiene todos los estudios de los pacientes.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Responses:**

- `200 OK`: Lista de todos los estudios de los pacientes.
  ```json
  [
    {
      "id": "string",
      "medicalEventId": "string",
      "study_type": "string",
      "study_date": "string",
      "institution": "string",
      "study_file": "string",
      "user_id": "number",
      "created_at": "string",
      "updated_at": "string",
      "tenant_id": "string"
    }
  ]
  ```
- `403 Forbidden`: Acceso denegado.

### `GET /patient-studies/my-studies` üÜï

**Nuevo endpoint principal con soporte multitenant para pacientes**

Obtiene todos los estudios del paciente autenticado considerando todas las organizaciones asociadas. **El ID del paciente se obtiene autom√°ticamente del JWT token.**

**Headers:**

- `tenant_id` (string, required): ID del tenant.
- `Authorization` (string, required): Bearer token JWT.

**Permisos requeridos:**

- `VIEW_OWN_MEDICAL_RECORDS`: Ver registros m√©dicos propios.

**Funcionalidad Multitenant:**

Este endpoint busca estudios del paciente autenticado en **todas las organizaciones** a las que pertenece:

1. **Extrae el patient_id**: Directamente del JWT token (req.user.id)
2. **Si hay tenants en el JWT**: Usa esos tenant IDs directamente
3. **Si no**: Consulta la tabla `patient_tenant` para obtener todas las organizaciones del paciente
4. **Busca estudios** en todas esas organizaciones usando `tenant_id: { in: tenantIds }`

**Validaciones:**

- ‚úÖ **Usuario autenticado**: Debe tener JWT v√°lido
- ‚úÖ **Solo pacientes**: Solo usuarios con rol 'patient'
- ‚úÖ **Datos propios**: Solo puede ver sus propios estudios

**Responses:**

- `200 OK`: Lista de estudios del paciente de todas sus organizaciones.
  ```json
  [
    {
      "id": "uuid-study",
      "patient_id": "uuid-patient",
      "title": "Radiograf√≠a de T√≥rax",
      "description": "Estudio de rutina",
      "study_type": "Radiolog√≠a",
      "study_date": "2024-01-15T00:00:00Z",
      "institution": "Hospital Central",
      "study_file": "https://example.com/study.pdf",
      "tenant_id": "uuid-organization",
      "created_at": "2024-01-15T10:30:00Z",
      "updated_at": "2024-01-15T10:30:00Z"
    }
  ]
  ```
- `400 Bad Request`: Usuario no es paciente o solicitud inv√°lida.
- `401 Unauthorized`: Token JWT inv√°lido o faltante.
- `403 Forbidden`: Permisos insuficientes.

**Ejemplo de uso:**

```bash
GET /patient-studies/my-studies
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
tenant-id: a6ad57c4-0e0c-4fcd-9aad-ca6bf1ba8796
```

### `GET /patient-studies/by-patient/{patient_id}`

**Endpoint para profesionales de la salud**

Obtiene todos los estudios de un paciente espec√≠fico. Este endpoint est√° destinado a profesionales de la salud que necesitan consultar estudios de sus pacientes.

**Headers:**

- `tenant_id` (string, required): ID del tenant.
- `Authorization` (string, required): Bearer token JWT.

**Permisos requeridos:**

- `VIEW_PATIENT_DETAILS`: Ver detalles de pacientes.

**Path Parameters:**

- `patient_id` (string): ID del paciente.

**Responses:**

- `200 OK`: Lista de estudios del paciente.
- `400 Bad Request`: Solicitud inv√°lida.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Paciente no encontrado.

### `GET /patient-studies/{id}`

Obtiene un estudio de paciente espec√≠fico por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID del estudio del paciente.

**Responses:**

- `200 OK`: Detalles del estudio del paciente.
  ```json
  {
    "id": "string",
    "medicalEventId": "string",
    "study_type": "string",
    "study_date": "string",
    "institution": "string",
    "study_file": "string",
    "user_id": "number",
    "created_at": "string",
    "updated_at": "string",
    "tenant_id": "string"
  }
  ```
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Estudio del paciente no encontrado.

### `PATCH /patient-studies/{id}`

Actualiza un estudio de paciente espec√≠fico por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID del estudio del paciente a actualizar.

**Request Body:**

```json
{
  "study_type": "string (opcional)",
  "study_date": "string (opcional)",
  "institution": "string (opcional)",
  "study_file": "string (opcional)"
}
```

**Responses:**

- `200 OK`: El estudio del paciente ha sido actualizado exitosamente.
- `400 Bad Request`: La solicitud es inv√°lida.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Estudio del paciente no encontrado.

### `DELETE /patient-studies/{id}`

Elimina un estudio de paciente espec√≠fico por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID del estudio del paciente a eliminar.

**Responses:**

- `200 OK`: El estudio del paciente ha sido eliminado exitosamente.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Estudio del paciente no encontrado.

## Cambios de Multitenant

### Mejoras Implementadas

1. **Endpoint principal corregido**: `GET /patient-studies/my-studies` - Usa JWT autom√°ticamente
2. **Endpoint para profesionales**: `GET /patient-studies/by-patient/{patient_id}` - Para m√©dicos
3. **L√≥gica optimizada**: Prioriza tenants del JWT antes que consultar la base de datos
4. **Seguridad mejorada**: Los pacientes solo pueden ver sus propios datos
5. **Consistencia**: Sigue el mismo patr√≥n de multitenant usado en mobile appointments

### Diferencia entre Endpoints

| Endpoint           | Usuario               | Prop√≥sito                 | Requiere patient_id |
| ------------------ | --------------------- | ------------------------- | ------------------- |
| `/my-studies`      | Pacientes             | Ver estudios propios      | ‚ùå (desde JWT)      |
| `/by-patient/{id}` | M√©dicos/Profesionales | Ver estudios de pacientes | ‚úÖ (par√°metro)      |

### M√©todos de Servicio Actualizados

- `findByPatientId()`: Ahora acepta `userTenants` opcional para soporte multitenant
- `getPatientTenantIds()`: Nuevo m√©todo privado para obtener tenant IDs del paciente

### Integraci√≥n con otros m√≥dulos

- **Patient Service**: Actualizado para buscar estudios en todas las organizaciones del paciente
- **Mobile Functions**: Compatible con la arquitectura m√≥vil existente
- **Authentication**: Utiliza tenants del JWT cuando est√°n disponibles
- **Authorization**: Diferentes permisos para pacientes vs profesionales

## Casos de Uso

### Para Pacientes (Aplicaci√≥n M√≥vil)

```bash
# Ver mis estudios de todas las organizaciones
GET /patient-studies/my-studies
Authorization: Bearer <patient-jwt-token>
```

### Para Profesionales de la Salud

```bash
# Ver estudios de un paciente espec√≠fico
GET /patient-studies/by-patient/uuid-paciente
Authorization: Bearer <physician-jwt-token>
```

================
File: src/docs/patients.md
================
# Documentaci√≥n del M√≥dulo de Pacientes (Patients)

## Descripci√≥n

El m√≥dulo de Pacientes proporciona endpoints para la gesti√≥n completa de los pacientes en la plataforma Segimed. Permite realizar operaciones como crear, listar, modificar y eliminar pacientes, as√≠ como gestionar toda la informaci√≥n asociada a ellos.

## Base URL

`/patient`

## Requerimientos de Headers

Todos los endpoints requieren los siguientes headers:

- `Authorization`: Bearer token JWT para autenticaci√≥n
- `X-Tenant-ID`: ID del tenant al que pertenece el usuario y los pacientes

## Permisos Requeridos

Los endpoints del m√≥dulo de pacientes requieren permisos espec√≠ficos:

- `MANAGE_USERS`: Para crear pacientes
- `VIEW_PATIENTS_LIST`: Para listar pacientes
- `VIEW_PATIENT_DETAILS`: Para ver los detalles de un paciente
- `EDIT_PATIENT_INFO`: Para editar la informaci√≥n de un paciente
- `DELETE_PATIENTS`: Para eliminar pacientes

## Endpoints

### Crear Paciente

Crea un nuevo paciente en el sistema, incluyendo la informaci√≥n de usuario asociada.

- **URL**: `/patient`
- **M√©todo**: `POST`
- **Descripci√≥n**: Crea un nuevo paciente en el sistema
- **Permisos**: `MANAGE_USERS`
- **Headers Requeridos**:
  - `Authorization`: Bearer token JWT
  - `X-Tenant-ID`: ID del tenant
- **Request Body**:

```json
{
  "user": {
    "name": "Juan",
    "last_name": "P√©rez",
    "email": "juan.perez@example.com",
    "dni": "12345678",
    "birth_date": "1990-01-01",
    "nationality": "Mexicana",
    "gender": "Masculino",
    "phone_prefix": "+52",
    "phone": "9876543210",
    "image": "https://example.com/profile.jpg"
  },
  "patient": {
    "direction": "Av. Insurgentes Sur",
    "country": "M√©xico",
    "province": "Ciudad de M√©xico",
    "city": "Coyoac√°n",
    "postal_code": "04510",
    "direction_number": "3000",
    "apartment": "42B",
    "health_care_number": "IMSS-12345678"
  }
}
```

- **Respuesta exitosa**:

  - **C√≥digo**: 201 Created
  - **Contenido**: Objeto con los datos del paciente creado

- **Respuestas de error**:
  - **C√≥digo**: 400 Bad Request
    - Datos inv√°lidos
    - El usuario ya existe para esta organizaci√≥n
  - **C√≥digo**: 401 Unauthorized
    - No autenticado
  - **C√≥digo**: 403 Forbidden
    - Permisos insuficientes

### Listar Todos los Pacientes

Obtiene la lista de todos los pacientes registrados en el sistema para el tenant actual.

- **URL**: `/patient`
- **M√©todo**: `GET`
- **Descripci√≥n**: Retorna una lista paginada de todos los pacientes
- **Permisos**: `VIEW_PATIENTS_LIST`
- **Headers Requeridos**:
  - `Authorization`: Bearer token JWT
  - `X-Tenant-ID`: ID del tenant
- **Par√°metros de consulta**:
  - `page` (n√∫mero, opcional): N√∫mero de p√°gina para paginaci√≥n, por defecto 1
  - `limit` (n√∫mero, opcional): Cantidad de registros por p√°gina, por defecto 10
  - `search` (string, opcional): T√©rmino de b√∫squeda
- **Respuesta exitosa**:

  - **C√≥digo**: 200 OK
  - **Contenido**: Array paginado de objetos paciente

  ```json
  {
    "items": [
      {
        "id": "uuid-1",
        "name": "Juan",
        "last_name": "P√©rez",
        "image": "https://example.com/profile.jpg",
        "birth_date": "1990-01-01T00:00:00.000Z",
        "gender": "Masculino",
        "email": "juan.perez@example.com",
        "phone": "9876543210",
        "prefix": "+52",
        "dni": "12345678",
        "health_care_number": "IMSS-12345678"
      }
    ],
    "meta": {
      "totalItems": 50,
      "itemCount": 10,
      "itemsPerPage": 10,
      "totalPages": 5,
      "currentPage": 1
    }
  }
  ```

- **Respuestas de error**:
  - **C√≥digo**: 401 Unauthorized
    - No autenticado
  - **C√≥digo**: 403 Forbidden
    - Permisos insuficientes

### Obtener Paciente por ID

Obtiene los detalles completos de un paciente espec√≠fico.

- **URL**: `/patient/:id`
- **M√©todo**: `GET`
- **Descripci√≥n**: Retorna los detalles de un paciente espec√≠fico
- **Permisos**: `VIEW_PATIENT_DETAILS`
- **Headers Requeridos**:
  - `Authorization`: Bearer token JWT
  - `X-Tenant-ID`: ID del tenant
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del paciente a consultar
- **Respuesta exitosa**:

  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto con los detalles completos del paciente

  ```json
  {
    "id": "uuid-1",
    "name": "Juan",
    "last_name": "P√©rez",
    "image": "https://example.com/profile.jpg",
    "birth_date": "1990-01-01T00:00:00.000Z",
    "email": "juan.perez@example.com",
    "notes": "Observaciones m√©dicas del paciente",
    "vital_signs": [
      {
        "id": "vs-uuid-1",
        "vital_sign_category": "Presi√≥n arterial",
        "measure": 120,
        "vital_sign_measure_unit": "mmHg"
      }
    ],
    "files": [
      {
        "id": "file-uuid-1",
        "name": "Radiograf√≠a",
        "url": "https://example.com/files/radiografia.jpg"
      }
    ],
    "evaluation": {
      "id": "eval-uuid-1",
      "details": "Evaluaci√≥n m√©dica",
      "date": "2025-05-20T10:30:00.000Z"
    },
    "background": {
      "id": "bg-uuid-1",
      "details": "Antecedentes m√©dicos",
      "date": "2025-05-15T14:00:00.000Z"
    },
    "current_medication": [
      {
        "id": "med-uuid-1",
        "name": "Paracetamol",
        "dosage": "500mg",
        "instructions": "Cada 8 horas",
        "active": true
      }
    ],
    "future_medical_events": [
      {
        "id": "event-uuid-1",
        "date": "2025-06-15T00:00:00.000Z",
        "time": "10:00",
        "doctor": "Dr. Garc√≠a",
        "reason": "Revisi√≥n general",
        "status": "Programada"
      }
    ],
    "past_medical_events": [
      {
        "id": "event-uuid-2",
        "date": "2025-05-01T00:00:00.000Z",
        "time": "15:30",
        "doctor": "Dra. Rodr√≠guez",
        "reason": "Consulta inicial",
        "status": "Completada"
      }
    ]
  }
  ```

- **Respuestas de error**:
  - **C√≥digo**: 404 Not Found
    - Paciente no encontrado
  - **C√≥digo**: 401 Unauthorized
    - No autenticado
  - **C√≥digo**: 403 Forbidden
    - Permisos insuficientes

### Actualizar Paciente

Actualiza la informaci√≥n de un paciente existente.

- **URL**: `/patient/:id`
- **M√©todo**: `PATCH`
- **Descripci√≥n**: Actualiza los datos de un paciente
- **Permisos**: `EDIT_PATIENT_INFO`
- **Headers Requeridos**:
  - `Authorization`: Bearer token JWT
  - `X-Tenant-ID`: ID del tenant
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del paciente a actualizar
- **Request Body**: Igual que en la creaci√≥n, pero todos los campos son opcionales

- **Respuesta exitosa**:

  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto con los detalles actualizados del paciente

- **Respuestas de error**:
  - **C√≥digo**: 400 Bad Request
    - Datos inv√°lidos
  - **C√≥digo**: 404 Not Found
    - Paciente no encontrado
  - **C√≥digo**: 401 Unauthorized
    - No autenticado
  - **C√≥digo**: 403 Forbidden
    - Permisos insuficientes

### Eliminar Paciente

Elimina un paciente del sistema.

- **URL**: `/patient/:id`
- **M√©todo**: `DELETE`
- **Descripci√≥n**: Elimina un paciente
- **Permisos**: `DELETE_PATIENTS`
- **Headers Requeridos**:
  - `Authorization`: Bearer token JWT
  - `X-Tenant-ID`: ID del tenant
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del paciente a eliminar
- **Respuesta exitosa**:

  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto confirmando la eliminaci√≥n

- **Respuestas de error**:
  - **C√≥digo**: 404 Not Found
    - Paciente no encontrado
  - **C√≥digo**: 401 Unauthorized
    - No autenticado
  - **C√≥digo**: 403 Forbidden
    - Permisos insuficientes

## Modelos de Datos

### MedicalPatientDto

Combina la informaci√≥n de usuario y paciente para su creaci√≥n o actualizaci√≥n:

```typescript
{
  user: {
    name: string;               // Nombre del usuario
    last_name: string;          // Apellido del usuario
    email: string;              // Correo electr√≥nico
    dni?: string;               // N√∫mero de documento de identidad
    birth_date?: Date;          // Fecha de nacimiento
    nationality?: string;       // Nacionalidad
    gender?: string;            // G√©nero
    phone_prefix?: string;      // Prefijo telef√≥nico
    phone?: string;             // N√∫mero de tel√©fono
    image?: string;             // URL de la imagen de perfil
  };

  patient: {
    direction?: string;         // Direcci√≥n (calle)
    country: string;            // Pa√≠s
    province: string;           // Provincia/Estado
    city: string;               // Ciudad
    postal_code: string;        // C√≥digo postal
    direction_number?: string;  // N√∫mero de direcci√≥n
    apartment?: string;         // Apartamento/Piso
    health_care_number?: string; // N√∫mero de seguro m√©dico
  };
}
```

### GetPatientsDto

Informaci√≥n resumida de pacientes para listados:

```typescript
{
  id: string; // ID del paciente
  name: string; // Nombre
  last_name: string; // Apellido
  image: string; // URL de la imagen de perfil
  birth_date: Date; // Fecha de nacimiento
  gender: string; // G√©nero
  email: string; // Correo electr√≥nico
  phone: string; // N√∫mero de tel√©fono
  prefix: string; // Prefijo telef√≥nico
  dni: string; // N√∫mero de documento de identidad
  health_care_number: string; // N√∫mero de seguro m√©dico
}
```

### GetPatientDto

Informaci√≥n detallada de un paciente incluyendo datos m√©dicos:

```typescript
{
  id: string;                   // ID del paciente
  name: string;                 // Nombre
  last_name: string;            // Apellido
  image: string;                // URL de la imagen de perfil
  birth_date: Date;             // Fecha de nacimiento
  email: string;                // Correo electr√≥nico
  notes: string;                // Notas m√©dicas
  vital_signs: VitalSignDto[];  // Signos vitales
  files: FileDto[];             // Archivos m√©dicos
  evaluation: EvaluationDto;    // Evaluaci√≥n m√©dica
  background: BackgroundDto;    // Antecedentes m√©dicos
  current_medication: MedicationDto[]; // Medicaci√≥n actual
  future_medical_events: MedicalEventDto[]; // Eventos m√©dicos futuros
  past_medical_events: MedicalEventDto[];   // Eventos m√©dicos pasados
}
```

## Notas Adicionales

- Los endpoints de pacientes est√°n etiquetados como `Patients` en la documentaci√≥n Swagger.
- Todas las operaciones requieren autenticaci√≥n mediante JWT.
- El sistema utiliza un modelo multi-tenant, por lo que es necesario especificar el tenant-id en todas las operaciones.
- Al crear un paciente, se genera autom√°ticamente una contrase√±a y se env√≠a por correo electr√≥nico al usuario.
- Los pacientes son usuarios con el rol `patient` en el sistema.
- Cada paciente puede estar asociado a m√∫ltiples tenants a trav√©s de la tabla `patient_tenant`.
- El sistema implementa paginaci√≥n para las consultas de listado de pacientes.

================
File: src/docs/permission-updater.md
================
# Permission Updater API

## Descripci√≥n general

El m√≥dulo Permission Updater proporciona herramientas administrativas para actualizar y gestionar las configuraciones de permisos a nivel de sistema. Est√° dise√±ado principalmente para ser utilizado por superadministradores para mantener actualizados los permisos predeterminados para m√©dicos y pacientes.

## Requisitos

- **Header de Autenticaci√≥n**: Bearer token JWT v√°lido.
- **Nivel de acceso**: Solo accesible para superadministradores.
- **Guardias**: Los endpoints est√°n protegidos por `SuperAdminGuard`.

## Endpoints

### 1. Actualizar permisos predeterminados

```http
POST /permission-updater/update-default-permissions
```

**Descripci√≥n:** Actualiza la configuraci√≥n de permisos predeterminados para m√©dicos y pacientes en el sistema.

**Respuestas:**

- `200 OK`: Permisos predeterminados actualizados exitosamente. Devuelve estad√≠sticas del proceso de actualizaci√≥n.
- `403 Forbidden`: No tiene permisos de superadministrador.

## Proceso de Actualizaci√≥n

Cuando se invoca este endpoint, el sistema realiza las siguientes operaciones:

1. **Verificaci√≥n y actualizaci√≥n de roles por defecto**:

   - Asegura la existencia de los roles predeterminados para m√©dicos y pacientes.
   - Actualiza los permisos de estos roles con la lista m√°s reciente de permisos.

2. **Actualizaci√≥n de asignaciones para m√©dicos**:

   - Verifica todos los usuarios con rol de m√©dico en el sistema.
   - Asegura que cada m√©dico tenga asignado el rol predeterminado de m√©dico.

3. **Actualizaci√≥n de asignaciones para pacientes**:
   - Verifica todos los usuarios con rol de paciente en el sistema.
   - Asegura que cada paciente tenga asignado el rol predeterminado de paciente en todos los tenants a los que pertenece.

## Respuesta de ejemplo

```json
{
  "message": "Actualizaci√≥n de permisos completada",
  "stats": {
    "physicians": {
      "processed": 25,
      "updated": 5,
      "rolesUpdated": 2
    },
    "patients": {
      "processed": 150,
      "updated": 20,
      "rolesUpdated": 2
    },
    "errors": 0
  }
}
```

## Notas Adicionales

- Este endpoint debe utilizarse con precauci√≥n, ya que actualiza los permisos de m√∫ltiples usuarios en el sistema.
- La operaci√≥n se ejecuta de forma sincr√≥nica y puede tardar en completarse si hay muchos usuarios en el sistema.
- Se registran eventos detallados en los logs del sistema durante el proceso de actualizaci√≥n.
- Solo debe ser ejecutado por superadministradores como parte de actualizaciones planificadas del sistema o correcciones de configuraci√≥n.

================
File: src/docs/physical-exploration-area.md
================
# M√≥dulo de √Åreas de Exploraci√≥n F√≠sica

## Descripci√≥n General

El m√≥dulo de √Åreas de Exploraci√≥n F√≠sica es responsable de gestionar el cat√°logo de las diferentes √°reas corporales que pueden ser objeto de una exploraci√≥n f√≠sica (e.g., "Abdomen", "T√≥rax", "Extremidades Superiores", "Cabeza y Cuello"). Estos registros sirven como una lista predefinida o una biblioteca de t√©rminos para asegurar la consistencia en los registros de exploraci√≥n f√≠sica.

Este m√≥dulo permite la creaci√≥n de nuevas √°reas de exploraci√≥n. Actualmente, no expone endpoints para la modificaci√≥n, consulta individual o eliminaci√≥n de estas √°reas a trav√©s de la API, asumiendo que estas operaciones podr√≠an ser manejadas directamente en la base de datos o a trav√©s de herramientas administrativas si fuera necesario.

## Endpoints

### `POST /physical-exploration-areas`

Crea una nueva √°rea de exploraci√≥n f√≠sica en el sistema.

**Cuerpo de la Solicitud (Request Body):**

El cuerpo de la solicitud debe ser un objeto JSON que se ajuste al `CreatePhysicalExplorationAreaDto`.

```json
{
  "name_on_library": "string (max 100 caracteres, identificador √∫nico en la biblioteca)",
  "name": "string (max 100 caracteres, nombre descriptivo)"
}
```

**Ejemplo de Creaci√≥n:**

```json
{
  "name_on_library": "ABDOMEN_CSD",
  "name": "Abdomen - Cuadrante Superior Derecho"
}
```

**Respuestas (Responses):**

- `201 Created` (Creado): El √°rea de exploraci√≥n f√≠sica ha sido creada exitosamente.

  ```json
  {
    // Cuerpo de la respuesta del servidor tras la creaci√≥n exitosa
    // Ejemplo:
    "id": 123, // ID num√©rico del √°rea creada
    "name_on_library": "ABDOMEN_CSD",
    "name": "Abdomen - Cuadrante Superior Derecho",
    "created_at": "2025-05-22T20:00:00.000Z",
    "updated_at": "2025-05-22T20:00:00.000Z"
  }
  ```

- `400 Bad Request` (Solicitud Incorrecta): Entrada inv√°lida. El cuerpo de la solicitud no se ajusta al esquema esperado (e.g., campos faltantes, tipos incorrectos, longitud excedida).

  ```json
  {
    "alert": "Se han detectado los siguientes errores en la petici√≥n: ",
    "errors": [
      {
        "property": "name_on_library",
        "constraints": {
          "isNotEmpty": "name_on_library should not be empty",
          "isString": "name_on_library must be a string",
          "maxLength": "name_on_library must be shorter than or equal to 100 characters"
        }
      }
      // ... otros errores posibles
    ]
  }
  ```

- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `409 Conflict` (Conflicto): Ya existe un √°rea de exploraci√≥n f√≠sica con el mismo `name_on_library` o `name` (dependiendo de las constraints de la base de datos y la l√≥gica del servicio).
  ```json
  {
    "message": "Conflict - An area with the same name or library name already exists.",
    "error": "Detalle del error original si aplica"
  }
  ```
- `500 Internal Server Error` (Error Interno del Servidor): Ocurri√≥ un error inesperado en el servidor.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Opcional, identificador para el tenant si la gesti√≥n de estas √°reas es espec√≠fica por tenant. Ajustar seg√∫n la l√≥gica de negocio.)

**Ejemplo de Uso (cURL):**

```bash
curl -X POST \
  http://localhost:3000/physical-exploration-areas \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -d '{
    "name_on_library": "EXT_INF_IZQ",
    "name": "Extremidad Inferior Izquierda"
  }'
```

## DTOs (Data Transfer Objects)

### `CreatePhysicalExplorationAreaDto`

Define la estructura de datos para crear una nueva √°rea de exploraci√≥n f√≠sica.

| Campo             | Tipo   | Obligatorio | Descripci√≥n                                                                                | Ejemplo                                  | Restricciones                      |
| ----------------- | ------ | ----------- | ------------------------------------------------------------------------------------------ | ---------------------------------------- | ---------------------------------- |
| `name_on_library` | string | S√≠          | Identificador √∫nico para el √°rea en la biblioteca interna (e.g., un c√≥digo o abreviatura). | `"ABDOMEN_CSD"`                          | Longitud entre 1 y 100 caracteres. |
| `name`            | string | S√≠          | Nombre descriptivo y legible por humanos para el √°rea de exploraci√≥n f√≠sica.               | `"Abdomen - Cuadrante Superior Derecho"` | Longitud entre 1 y 100 caracteres. |

================
File: src/docs/physical-exploration.md
================
# M√≥dulo de Exploraci√≥n F√≠sica

## Descripci√≥n General

El m√≥dulo de Exploraci√≥n F√≠sica permite registrar los hallazgos detallados de las exploraciones f√≠sicas realizadas a los pacientes durante eventos m√©dicos. Este m√≥dulo se integra con la informaci√≥n del paciente, el m√©dico tratante y el evento m√©dico espec√≠fico para contextualizar los hallazgos.

Actualmente, el m√≥dulo se centra en la creaci√≥n y actualizaci√≥n de registros de exploraci√≥n f√≠sica.

## Endpoints

### `POST /physical-explorations`

Crea un nuevo registro de exploraci√≥n f√≠sica o actualiza uno existente si se proporciona un `medical_event_id` que ya tiene una exploraci√≥n asociada.

**Cuerpo de la Solicitud (Request Body):**

El cuerpo de la solicitud debe ser un objeto JSON que se ajuste al `CreatePhysicalExplorationDto` para la creaci√≥n, o una estructura similar para la actualizaci√≥n (manejada por el mismo endpoint y DTO en este caso).

**Para Crear:**

```json
{
  "patient_id": "string (UUID)",
  "physician_id": "string (UUID)",
  "medical_event_id": "string (UUID, √∫nico para la creaci√≥n)",
  "description": "string (max 500 caracteres)",
  "physical_exploration_area_id": "number (integer, min 1)",
  "tenant_id": "string (UUID)"
}
```

**Ejemplo de Creaci√≥n:**

```json
{
  "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
  "physician_id": "b1c2d3e4-f5g6-7890-1234-567890abcdef",
  "medical_event_id": "c1d2e3f4-g5h6-7890-1234-567890abcdef",
  "description": "Paciente refiere dolor leve a la palpaci√≥n en el cuadrante superior derecho del abdomen. No se observan masas ni visceromegalias.",
  "physical_exploration_area_id": 1,
  "tenant_id": "tid_abcdef123456"
}
```

**Para Actualizar (usando el mismo endpoint):**
Si se env√≠a un `medical_event_id` que ya existe en la base de datos para una exploraci√≥n f√≠sica, el servicio interpretar√° la solicitud como una actualizaci√≥n de los campos proporcionados. El `UpdatePhysicalExplorationDto` formalmente omite `medical_event_id` del `PartialType` de `CreatePhysicalExplorationDto`, pero luego lo re-declara como obligatorio, lo que implica que el `medical_event_id` es clave para la operaci√≥n de actualizaci√≥n.

**Ejemplo de Actualizaci√≥n:**

```json
{
  "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", // Puede o no ser necesario reenviar si no cambia
  "physician_id": "b1c2d3e4-f5g6-7890-1234-567890abcdef", // Puede o no ser necesario reenviar si no cambia
  "medical_event_id": "c1d2e3f4-g5h6-7890-1234-567890abcdef", // ID del evento m√©dico existente a actualizar
  "description": "Actualizaci√≥n: Paciente refiere dolor moderado a la palpaci√≥n en el cuadrante superior derecho del abdomen. Se ausculta peristalsis normal.",
  "physical_exploration_area_id": 1, // Puede o no ser necesario reenviar si no cambia
  "tenant_id": "tid_abcdef123456" // Puede o no ser necesario reenviar si no cambia
}
```

**Respuestas (Responses):**

- `201 Created` (Creado/Actualizado): Registro de exploraci√≥n f√≠sica creado o actualizado exitosamente.

  ```json
  {
    // Cuerpo de la respuesta del servidor tras la operaci√≥n exitosa
    // Ejemplo:
    "id": "d1e2f3g4-h5i6-7890-1234-567890abcdef", // ID de la exploraci√≥n f√≠sica
    "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "physician_id": "b1c2d3e4-f5g6-7890-1234-567890abcdef",
    "medical_event_id": "c1d2e3f4-g5h6-7890-1234-567890abcdef",
    "description": "...",
    "physical_exploration_area_id": 1,
    "tenant_id": "tid_abcdef123456",
    "created_at": "2025-05-22T19:30:00.000Z",
    "updated_at": "2025-05-22T19:30:00.000Z"
  }
  ```

- `400 Bad Request` (Solicitud Incorrecta): Entrada inv√°lida. El cuerpo de la solicitud no se ajusta al esquema esperado o contiene datos inv√°lidos (e.g., campos faltantes, tipos incorrectos, UUIDs mal formados).

  ```json
  {
    "alert": "Se han detectado los siguientes errores en la petici√≥n: ",
    "errors": [
      {
        "property": "nombreDelCampo",
        "constraints": {
          "nombreDeLaRestriccion": "Mensaje de error detallado"
        }
      }
    ]
  }
  ```

- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `500 Internal Server Error` (Error Interno del Servidor): Ocurri√≥ un error inesperado en el servidor (e.g., fallo al interactuar con la base de datos, violaci√≥n de constraint no manejada expl√≠citamente).

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Opcional, identificador para el tenant si no se provee en el cuerpo y es requerido por la l√≥gica de negocio)

**Ejemplo de Uso (cURL para Crear):**

```bash
curl -X POST \
  http://localhost:3000/physical-explorations \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID_OPCIONAL' \
  -d '{
    "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "physician_id": "b1c2d3e4-f5g6-7890-1234-567890abcdef",
    "medical_event_id": "unique-event-id-for-creation",
    "description": "Exploraci√≥n inicial sin hallazgos patol√≥gicos significativos.",
    "physical_exploration_area_id": 2,
    "tenant_id": "tid_example123"
  }'
```

## DTOs (Data Transfer Objects)

### `CreatePhysicalExplorationDto`

Define la estructura de datos para crear un nuevo registro de exploraci√≥n f√≠sica.

| Campo                          | Tipo             | Obligatorio | Descripci√≥n                                                                | Ejemplo                                     | Restricciones                      |
| ------------------------------ | ---------------- | ----------- | -------------------------------------------------------------------------- | ------------------------------------------- | ---------------------------------- |
| `patient_id`                   | string (UUID)    | S√≠          | Identificador √∫nico del paciente.                                          | `"a1b2c3d4-e5f6-7890-1234-567890abcdef"`    | Debe ser un UUID v√°lido.           |
| `physician_id`                 | string (UUID)    | S√≠          | Identificador √∫nico del m√©dico.                                            | `"b1c2d3e4-f5g6-7890-1234-567890abcdef"`    | Debe ser un UUID v√°lido.           |
| `medical_event_id`             | string (UUID)    | S√≠          | Identificador √∫nico del evento m√©dico asociado.                            | `"c1d2e3f4-g5h6-7890-1234-567890abcdef"`    | Debe ser un UUID v√°lido.           |
| `description`                  | string           | S√≠          | Descripci√≥n detallada de los hallazgos de la exploraci√≥n f√≠sica.           | `"Paciente alerta, orientado, cooperador."` | Longitud entre 1 y 500 caracteres. |
| `physical_exploration_area_id` | number (integer) | S√≠          | Identificador del √°rea de exploraci√≥n f√≠sica (e.g., Abdomen, T√≥rax, etc.). | `1`                                         | Debe ser un entero, m√≠nimo 1.      |
| `tenant_id`                    | string (UUID)    | S√≠          | Identificador √∫nico del tenant.                                            | `"tid_abcdef123456"`                        | Debe ser un UUID v√°lido.           |

### `UpdatePhysicalExplorationDto`

Define la estructura de datos para actualizar un registro de exploraci√≥n f√≠sica existente. Hereda parcialmente de `CreatePhysicalExplorationDto` y hace que todos los campos sean opcionales, excepto `medical_event_id` que se redefine como obligatorio para identificar el registro a actualizar.

| Campo                          | Tipo             | Obligatorio | Descripci√≥n                                                                                                  | Ejemplo                                           | Restricciones                        |
| ------------------------------ | ---------------- | ----------- | ------------------------------------------------------------------------------------------------------------ | ------------------------------------------------- | ------------------------------------ |
| `patient_id`                   | string (UUID)    | No          | Identificador √∫nico del paciente (si se desea cambiar).                                                      | `"a1b2c3d4-e5f6-7890-1234-567890abcdef"`          | Debe ser un UUID v√°lido.             |
| `physician_id`                 | string (UUID)    | No          | Identificador √∫nico del m√©dico (si se desea cambiar).                                                        | `"b1c2d3e4-f5g6-7890-1234-567890abcdef"`          | Debe ser un UUID v√°lido.             |
| `medical_event_id`             | string (UUID)    | **S√≠**      | Identificador √∫nico del evento m√©dico. **Clave para la actualizaci√≥n.**                                      | `"c1d2e3f4-g5h6-7890-1234-567890abcdef"`          | Debe ser un UUID v√°lido y existente. |
| `description`                  | string           | No          | Descripci√≥n detallada de los hallazgos (si se desea cambiar).                                                | `"Actualizaci√≥n: Leve edema en tobillo derecho."` | Longitud entre 1 y 500 caracteres.   |
| `physical_exploration_area_id` | number (integer) | No          | Identificador del √°rea de exploraci√≥n f√≠sica (si se desea cambiar).                                          | `3`                                               | Debe ser un entero, m√≠nimo 1.        |
| `tenant_id`                    | string (UUID)    | No          | Identificador √∫nico del tenant (generalmente no se cambia, pero posible si la l√≥gica de negocio lo permite). | `"tid_abcdef123456"`                              | Debe ser un UUID v√°lido.             |

**Nota sobre la Actualizaci√≥n:** El controlador actual (`PhysicalExplorationController`) utiliza un √∫nico endpoint `POST /physical-explorations` que internamente, a trav√©s del servicio `PhysicalExplorationService`, maneja la l√≥gica de creaci√≥n o actualizaci√≥n. La distinci√≥n se basa en si el `medical_event_id` proporcionado ya existe en la base de datos asociado a una exploraci√≥n f√≠sica. Si bien Swagger muestra `CreatePhysicalExplorationDto` para el cuerpo de la solicitud, la l√≥gica de actualizaci√≥n se activa con un `medical_event_id` existente.

================
File: src/docs/physician-schedule.md
================
# Horario del M√©dico Endpoints

Este documento describe los endpoints para gestionar los horarios y excepciones de los m√©dicos.

**Todos los endpoints en este m√≥dulo requieren el header `tenant_id`.**

## Endpoints

### `GET /physicians/{userId}/schedule`

Obtiene todas las entradas de horario para un m√©dico espec√≠fico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Responses:**

- `200 OK`: Entradas de horario recuperadas exitosamente.
- `403 Forbidden`: Acceso denegado.

### `GET /physicians/schedule/{id}`

Obtiene una entrada de horario espec√≠fica por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID de la entrada de horario.

**Responses:**

- `200 OK`: Entrada de horario recuperada exitosamente.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Entrada de horario no encontrada.

### `POST /physicians/{userId}/schedule`

Crea o actualiza m√∫ltiples entradas de horario para un m√©dico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Request Body:** `BulkCreateScheduleDto`

```json
{
  "schedules": [
    {
      "day_of_week": 1,
      "start_time": "09:00",
      "end_time": "17:00",
      "appointment_length": 30,
      "simultaneous_slots": 1,
      "break_between": 0,
      "rest_start": "12:00",
      "rest_end": "13:00",
      "is_working_day": true,
      "modality": "Presencial",
      "office_id": "string (opcional)"
    }
  ]
}
```

**Responses:**

- `201 Created`: Entradas de horario creadas/actualizadas exitosamente.
- `400 Bad Request`: Solicitud inv√°lida.
- `403 Forbidden`: Acceso denegado.

### `DELETE /physicians/schedule/{id}`

Elimina una entrada de horario por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID de la entrada de horario.

**Responses:**

- `200 OK`: Entrada de horario eliminada exitosamente.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Entrada de horario no encontrada.

### `DELETE /physicians/{userId}/schedule`

Elimina todas las entradas de horario para un m√©dico espec√≠fico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Responses:**

- `200 OK`: Todas las entradas de horario eliminadas exitosamente.
- `403 Forbidden`: Acceso denegado.

### `GET /physicians/{userId}/exceptions`

Obtiene todas las excepciones para un m√©dico espec√≠fico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Responses:**

- `200 OK`: Excepciones recuperadas exitosamente.
- `403 Forbidden`: Acceso denegado.

### `POST /physicians/{userId}/exceptions`

Crea una nueva excepci√≥n para un m√©dico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Request Body:** `CreateExceptionDto`

```json
{
  "date": "2024-12-25",
  "is_available": false,
  "reason": "Christmas Day" // Campo opcional
}
```

O, sin el campo opcional:

```json
{
  "date": "2024-11-01",
  "is_available": false
}
```

**Responses:**

- `201 Created`: Excepci√≥n creada exitosamente.
- `400 Bad Request`: Solicitud inv√°lida.
- `403 Forbidden`: Acceso denegado.

### `DELETE /physicians/exceptions/{id}`

Elimina una excepci√≥n por su ID.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `id` (string): ID de la excepci√≥n.

**Responses:**

- `200 OK`: Excepci√≥n eliminada exitosamente.
- `403 Forbidden`: Acceso denegado.
- `404 Not Found`: Excepci√≥n no encontrada.

### `GET /physicians/{userId}/slots`

Obtiene los horarios disponibles para un m√©dico en una fecha o rango de fechas espec√≠fico.

**Headers:**

- `tenant_id` (string, required): ID del tenant.

**Path Parameters:**

- `userId` (string): ID del usuario m√©dico.

**Query Parameters:**

- `date` (string, required): Fecha para verificar los horarios (YYYY-MM-DD).
- `endDate` (string, optional): Fecha final opcional para un rango (YYYY-MM-DD).

**Responses:**

- `200 OK`: Horarios disponibles recuperados exitosamente.
- `403 Forbidden`: Acceso denegado.

================
File: src/docs/pres-mod-history.md
================
# Historial de Modificaciones de Prescripciones - API Endpoints

## Descripci√≥n

El m√≥dulo de Historial de Modificaciones de Prescripciones (Prescription Modification History) permite registrar y consultar todos los cambios realizados a las prescripciones m√©dicas a lo largo del tiempo. Este historial es esencial para el seguimiento de los tratamientos, la auditor√≠a m√©dica y para garantizar la trazabilidad de las modificaciones realizadas por los m√©dicos a las prescripciones de medicamentos.

## Endpoints

### `POST /pres-mod-history`

Crea un registro de modificaci√≥n de prescripci√≥n.

#### Headers Requeridos

| Header        | Descripci√≥n                                            | Requerido |
| ------------- | ------------------------------------------------------ | --------- |
| tenant_id     | ID del inquilino (tenant) al que pertenece el usuario  | S√≠        |
| Authorization | Token JWT en formato Bearer para autenticar al usuario | S√≠        |

#### Request Body: `CreatePresHistoryDto`

```json
{
  "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
  "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
  "mod_timestamp": "2025-05-22T14:30:00.000Z",
  "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
  "observations": "Se ajust√≥ la dosis debido a efectos secundarios",
  "dose": "500",
  "dose_units": "mg",
  "frecuency": "Cada 8 horas",
  "duration": "7",
  "duration_units": "d√≠as",
  "monodrug": "Paracetamol"
}
```

#### Elementos del Request Body

| Campo            | Tipo   | Descripci√≥n                                | Requerido |
| ---------------- | ------ | ------------------------------------------ | --------- |
| prescription_id  | String | ID de la prescripci√≥n modificada           | S√≠        |
| physician_id     | String | ID del m√©dico que realiz√≥ la modificaci√≥n  | S√≠        |
| mod_timestamp    | Date   | Fecha y hora de la modificaci√≥n            | S√≠        |
| medical_event_id | String | ID del evento m√©dico asociado              | No        |
| observations     | String | Observaciones sobre la modificaci√≥n        | No        |
| dose             | String | Dosis del medicamento                      | S√≠        |
| dose_units       | String | Unidades de la dosis (mg, ml, etc.)        | S√≠        |
| frecuency        | String | Frecuencia de administraci√≥n               | S√≠        |
| duration         | String | Duraci√≥n del tratamiento                   | S√≠        |
| duration_units   | String | Unidades de duraci√≥n (d√≠as, semanas, etc.) | S√≠        |
| monodrug         | String | Monof√°rmaco prescrito                      | No        |

#### Responses

- `201 Created`: La historia de modificaci√≥n ha sido creada exitosamente.

  ```json
  {
    "message": "La historia ha sido creada"
  }
  ```

- `400 Bad Request`: Solicitud inv√°lida (datos faltantes o incorrectos).
  ```json
  {
    "message": "No se ha podido generar la historia [detalles del error]"
  }
  ```

### `GET /pres-mod-history/prescription/{id}`

Obtiene el historial de modificaciones por ID de prescripci√≥n.

#### Path Parameters

- `id` (string, required): ID de la prescripci√≥n.

#### Responses

- `200 OK`: Historial de modificaciones recuperado exitosamente.

  ```json
  [
    {
      "id": 1,
      "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-22T14:30:00.000Z",
      "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
      "observations": "Se ajust√≥ la dosis debido a efectos secundarios",
      "dose": "500",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as"
    },
    {
      "id": 2,
      "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-25T09:15:00.000Z",
      "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
      "observations": "Se aument√≥ la dosis por respuesta insuficiente",
      "dose": "750",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as"
    }
  ]
  ```

- `404 Not Found`: Prescripci√≥n no encontrada.
  ```json
  {
    "message": "No se ha podido consultar por prescripci√≥n [detalles del error]"
  }
  ```

### `GET /pres-mod-history/physician/{id}`

Obtiene el historial de modificaciones por ID de m√©dico.

#### Path Parameters

- `id` (string, required): ID del m√©dico.

#### Responses

- `200 OK`: Historial de modificaciones recuperado exitosamente.

  ```json
  [
    {
      "id": 1,
      "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-22T14:30:00.000Z",
      "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
      "observations": "Se ajust√≥ la dosis debido a efectos secundarios",
      "dose": "500",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as"
    },
    {
      "id": 3,
      "prescription_id": "11223344-5566-7788-99aa-bbccddeeff00",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-20T16:45:00.000Z",
      "medical_event_id": "aabbccdd-eeff-0011-2233-445566778899",
      "observations": "Cambio de medicamento por alergia",
      "dose": "20",
      "dose_units": "mg",
      "frecuency": "Cada 12 horas",
      "duration": "10",
      "duration_units": "d√≠as"
    }
  ]
  ```

- `404 Not Found`: M√©dico no encontrado.
  ```json
  {
    "message": "No se ha podido consultar por m√©dico [detalles del error]"
  }
  ```

### `GET /pres-mod-history/medical_event/{id}`

Obtiene el historial de modificaciones por ID de evento m√©dico.

#### Path Parameters

- `id` (string, required): ID del evento m√©dico.

#### Responses

- `200 OK`: Historial de modificaciones recuperado exitosamente.

  ```json
  [
    {
      "id": 1,
      "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-22T14:30:00.000Z",
      "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
      "observations": "Se ajust√≥ la dosis debido a efectos secundarios",
      "dose": "500",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as"
    },
    {
      "id": 2,
      "prescription_id": "abcdef01-2345-6789-abcd-ef0123456789",
      "physician_id": "fedcba98-7654-3210-fedc-ba9876543210",
      "mod_timestamp": "2025-05-25T09:15:00.000Z",
      "medical_event_id": "456abcde-f789-0123-4567-89abcdef0123",
      "observations": "Se aument√≥ la dosis por respuesta insuficiente",
      "dose": "750",
      "dose_units": "mg",
      "frecuency": "Cada 8 horas",
      "duration": "7",
      "duration_units": "d√≠as"
    }
  ]
  ```

- `404 Not Found`: Evento m√©dico no encontrado.
  ```json
  {
    "message": "No se ha podido consultar por evento m√©dico [detalles del error]"
  }
  ```

## Uso pr√°ctico

Este m√≥dulo se utiliza para:

1. **Registrar cambios en prescripciones**: Cuando un m√©dico modifica la dosis, frecuencia, duraci√≥n u otro aspecto de una prescripci√≥n, se registra autom√°ticamente en el historial.

2. **Auditor√≠a m√©dica**: Permite a los supervisores m√©dicos revisar los cambios realizados en los tratamientos de los pacientes.

3. **Seguimiento de tratamientos**: Facilita a los m√©dicos ver la evoluci√≥n de las prescripciones a lo largo del tiempo para un paciente.

4. **Resoluci√≥n de controversias**: Proporciona un registro detallado y con marca de tiempo para verificar qu√© cambios se hicieron, cu√°ndo y por qui√©n.

## Consideraciones de seguridad

- Se requiere autenticaci√≥n mediante token JWT para acceder a estos endpoints.
- Se requiere el header `tenant_id` para identificar el contexto organizacional.
- El acceso a este m√≥dulo debe estar restringido a personal m√©dico autorizado y administradores del sistema.
- La informaci√≥n de las prescripciones y sus modificaciones es sensible y debe tratarse de acuerdo con las regulaciones de privacidad m√©dica aplicables.

================
File: src/docs/prescription.md
================
# M√≥dulo de Prescripciones

## Descripci√≥n General

El m√≥dulo de Prescripciones se encarga de gestionar las recetas m√©dicas emitidas para los pacientes. Permite crear, consultar y eliminar prescripciones, detallando informaci√≥n como el medicamento (monodroga), las fechas de inicio y fin, la descripci√≥n o indicaciones, y el estado de la prescripci√≥n.

Esta funcionalidad es esencial para el seguimiento del tratamiento farmacol√≥gico de los pacientes.

## Arquitectura Centralizada

### Procesamiento de Medicaciones

El `PrescriptionService` incluye un m√©todo centralizado `processMedications()` que es utilizado por otros m√≥dulos del sistema:

- **√ìrdenes M√©dicas**: Cuando se crean √≥rdenes de tipo `medication` o `medication-authorization`
- **Eventos M√©dicos**: Durante la atenci√≥n de consultas m√©dicas cuando se prescriben medicamentos
- **Prescripciones Directas**: A trav√©s de los endpoints directos del m√≥dulo

### Caracter√≠sticas del Procesamiento Centralizado

- **Transaccional**: Todas las operaciones se ejecutan dentro de transacciones de base de datos
- **Historial Unificado**: Mantiene un historial completo en `pres_mod_history` independientemente del origen
- **Reutilizaci√≥n**: Evita duplicaci√≥n de l√≥gica entre diferentes m√≥dulos
- **Consistencia**: Garantiza el mismo comportamiento en todo el sistema

### Flujo de Procesamiento

1. **Verificaci√≥n**: Se verifica si existe una prescripci√≥n activa para el medicamento y paciente
2. **Actualizaci√≥n**: Si existe, se crea una nueva entrada en el historial de modificaciones
3. **Creaci√≥n**: Si no existe, se crea una nueva prescripci√≥n y su primera entrada en el historial
4. **Asociaci√≥n**: Se vincula con el evento m√©dico o orden m√©dica correspondiente

## Endpoints

### `POST /prescription`

Crea una nueva prescripci√≥n m√©dica.

**Cuerpo de la Solicitud (Request Body):**

El cuerpo de la solicitud debe ser un objeto JSON que se ajuste al `CreatePrescriptionDto`.

```json
{
  "start_timestamp": "string (fecha ISO, opcional)",
  "end_timestamp": "string (fecha ISO, opcional)",
  "description": "string (opcional)",
  "active": "boolean (opcional, default: true)",
  "patient_id": "string (UUID, opcional)",
  "monodrug": "string",
  "tenant_id": "string (UUID, opcional)"
}
```

**Respuestas (Responses):**

- `201 Created` (Creado): Prescripci√≥n creada exitosamente.
  ```json
  {
    // Cuerpo de la respuesta del servidor tras la creaci√≥n exitosa (CreatePrescriptionDto)
  }
  ```
- `400 Bad Request` (Solicitud Incorrecta): Entrada inv√°lida. El cuerpo de la solicitud no se ajusta al esquema esperado o contiene datos inv√°lidos.
- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `403 Forbidden` (Prohibido): El usuario no tiene los permisos necesarios para realizar esta acci√≥n.
- `500 Internal Server Error` (Error Interno del Servidor): Ocurri√≥ un error inesperado en el servidor.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Identificador para el tenant, requerido)

**Ejemplo de Uso (cURL):**

```bash
curl -X POST \
  http://localhost:3000/prescription \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID' \
  -d '{
    "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "monodrug": "Amoxicilina 500mg",
    "description": "Tomar una c√°psula cada 8 horas durante 7 d√≠as.",
    "start_timestamp": "2025-05-23T08:00:00.000Z",
    "end_timestamp": "2025-05-30T08:00:00.000Z",
    "active": true,
    "tenant_id": "tenant_organizacion_xyz"
  }'
```

### `GET /prescription/patient/:id`

Obtiene todas las prescripciones para un paciente espec√≠fico.

**Par√°metros de Ruta (Path Parameters):**

- `id`: UUID del paciente cuyas prescripciones se desean consultar.

**Respuestas (Responses):**

- `200 OK`: Devuelve un array con las prescripciones del paciente.
  ```json
  [
    {
      "id": "string (UUID)",
      "start_timestamp": "string (fecha ISO)",
      "end_timestamp": "string (fecha ISO)",
      "description": "string",
      "active": true,
      "patient_id": "string (UUID)",
      "monodrug": "string",
      "tenant_id": "string (UUID)"
      // ... y otros campos de la prescripci√≥n
    }
  ]
  ```
- `400 Bad Request` (Solicitud Incorrecta): ID de paciente inv√°lido.
- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `403 Forbidden` (Prohibido): El usuario no tiene los permisos necesarios.
- `404 Not Found` (No Encontrado): No se encontr√≥ el paciente especificado.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso`
- `X-Tenant-ID`: `string` (requerido)

**Ejemplo de Uso (cURL):**

```bash
curl -X GET \
  http://localhost:3000/prescription/patient/a1b2c3d4-e5f6-7890-1234-567890abcdef \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID'
```

### `GET /prescription`

Obtiene todas las prescripciones (uso potencial para administradores o sistema).

**Respuestas (Responses):**

- `200 OK`: Devuelve un array con todas las prescripciones.
  ```json
  [
    {
      "id": "string (UUID)",
      "start_timestamp": "string (fecha ISO)"
      // ... m√°s campos
    }
  ]
  ```
- `401 Unauthorized` (No Autorizado).
- `403 Forbidden` (Prohibido).

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso`
- `X-Tenant-ID`: `string` (opcional, dependiendo de la l√≥gica de negocio para acceso global)

**Ejemplo de Uso (cURL):**

```bash
curl -X GET \
  http://localhost:3000/prescription \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  # -H 'X-Tenant-ID: TU_TENANT_ID' # Opcional
```

### `DELETE /prescription/:id`

Elimina una prescripci√≥n espec√≠fica por su ID.

**Par√°metros de Ruta (Path Parameters):**

- `id`: UUID de la prescripci√≥n a eliminar.

**Respuestas (Responses):**

- `200 OK`: Prescripci√≥n eliminada exitosamente.
- `400 Bad Request` (Solicitud Incorrecta): ID de prescripci√≥n inv√°lido.
- `401 Unauthorized` (No Autorizado).
- `403 Forbidden` (Prohibido).
- `404 Not Found` (No Encontrado): No se encontr√≥ la prescripci√≥n especificada.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso`
- `X-Tenant-ID`: `string` (requerido para el contexto de eliminaci√≥n)

**Ejemplo de Uso (cURL):**

```bash
curl -X DELETE \
  http://localhost:3000/prescription/abcdef01-2345-6789-abcd-ef0123456789 \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID'
```

================
File: src/docs/roles.md
================
# Roles API

## Descripci√≥n general

El m√≥dulo de Roles proporciona funcionalidades para la gesti√≥n de roles y permisos en el sistema, permitiendo asignar diferentes niveles de acceso a usuarios seg√∫n sus funciones. Esto incluye la creaci√≥n, actualizaci√≥n, eliminaci√≥n y asignaci√≥n de roles a usuarios, as√≠ como la gesti√≥n de los permisos asociados a cada rol.

## Requisitos

- **Header de Autenticaci√≥n**: Bearer token JWT v√°lido.
- **Header de Tenant**: `tenant-id` requerido para todas las operaciones (excepto seed).
- **Permisos**: Se requiere el permiso `CONFIGURE_USER_PERMISSIONS` para la mayor√≠a de las operaciones.
- **Guardias**: Diferentes endpoints est√°n protegidos por guardias como `TenantAccessGuard`, `TenantAdminGuard` y `SuperAdminGuard`.

## Endpoints

### 1. Gesti√≥n de Roles

#### 1.1. Obtener todos los roles

```http
GET /roles
```

**Par√°metros de consulta:**

- `tenantId` (opcional): ID del tenant para filtrar roles espec√≠ficos.

**Respuestas:**

- `200 OK`: Lista de roles recuperada exitosamente.
- `403 Forbidden`: No tiene permisos para ver roles.

#### 1.2. Obtener un rol espec√≠fico

```http
GET /roles/{id}
```

**Par√°metros de ruta:**

- `id`: ID del rol a consultar.

**Respuestas:**

- `200 OK`: Rol recuperado exitosamente.
- `404 Not Found`: Rol no encontrado.
- `403 Forbidden`: No tiene permisos para ver roles.

#### 1.3. Crear un nuevo rol

```http
POST /roles
```

**Cuerpo de la solicitud:**

```json
{
  "name": "string",
  "description": "string",
  "permissions": ["string"],
  "tenantId": "string"
}
```

**Respuestas:**

- `201 Created`: Rol creado exitosamente.
- `400 Bad Request`: Datos inv√°lidos.
- `403 Forbidden`: No tiene permisos para crear roles.

#### 1.4. Actualizar un rol existente

```http
PUT /roles/{id}
```

**Par√°metros de ruta:**

- `id`: ID del rol a actualizar.

**Cuerpo de la solicitud:**

```json
{
  "name": "string",
  "description": "string",
  "permissions": ["string"]
}
```

**Respuestas:**

- `200 OK`: Rol actualizado exitosamente.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Rol no encontrado.
- `403 Forbidden`: No tiene permisos para actualizar roles.

#### 1.5. Eliminar un rol

```http
DELETE /roles/{id}
```

**Par√°metros de ruta:**

- `id`: ID del rol a eliminar.

**Respuestas:**

- `200 OK`: Rol eliminado exitosamente.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Rol no encontrado.
- `403 Forbidden`: No tiene permisos para eliminar roles.

### 2. Asignaci√≥n de Roles

#### 2.1. Asignar rol a usuario

```http
POST /roles/assign
```

**Cuerpo de la solicitud:**

```json
{
  "userId": "string",
  "roleId": "string"
}
```

**Respuestas:**

- `200 OK`: Rol asignado exitosamente al usuario.
- `400 Bad Request`: Datos inv√°lidos.
- `404 Not Found`: Usuario o rol no encontrado.
- `403 Forbidden`: No tiene permisos para asignar roles.

#### 2.2. Eliminar rol de un usuario

```http
DELETE /roles/assign
```

**Cuerpo de la solicitud:**

```json
{
  "userId": "string",
  "roleId": "string"
}
```

**Respuestas:**

- `200 OK`: Rol eliminado exitosamente del usuario.
- `400 Bad Request`: Datos inv√°lidos o error en la operaci√≥n.
- `404 Not Found`: Usuario o rol no encontrado.

#### 2.3. Obtener roles de un usuario

```http
GET /roles/user/{userId}
```

**Par√°metros de ruta:**

- `userId`: ID del usuario.

**Respuestas:**

- `200 OK`: Roles del usuario recuperados exitosamente.
- `404 Not Found`: Usuario no encontrado.
- `403 Forbidden`: No tiene permisos para ver roles de usuarios.

### 3. Permisos

#### 3.1. Obtener todos los permisos disponibles

```http
GET /roles/permissions
```

**Respuestas:**

- `200 OK`: Lista de permisos recuperada exitosamente.
- `403 Forbidden`: No tiene permisos para ver permisos.

### 4. Inicializaci√≥n del Sistema

#### 4.1. Inicializar roles y permisos predeterminados

```http
POST /roles/seed
```

**Respuestas:**

- `201 Created`: Roles y permisos inicializados exitosamente.
- `400 Bad Request`: Error al crear roles y permisos.
- `403 Forbidden`: No tiene permisos de superadministrador.

## Notas Adicionales

- Las operaciones de creaci√≥n, actualizaci√≥n y eliminaci√≥n de roles solo est√°n disponibles para administradores de tenant.
- La operaci√≥n de seed solo est√° disponible para superadministradores.
- Se recomienda revisar los permisos del sistema antes de crear o actualizar roles.

================
File: src/docs/self-evaluation-event.md
================
# Eventos de Autoevaluaci√≥n (Self-Evaluation Events) - API Endpoints

## Descripci√≥n

El m√≥dulo de Eventos de Autoevaluaci√≥n permite a los pacientes registrar sus signos vitales desde la aplicaci√≥n m√≥vil. Estos eventos est√°n asociados a un evento m√©dico espec√≠fico y al paciente que realiza la autoevaluaci√≥n. La informaci√≥n recolectada puede ser monitoreada por el personal m√©dico para dar seguimiento a la condici√≥n del paciente entre consultas.

## Endpoints

### `POST /mobile/self-evaluation-event`

Crea un nuevo evento de autoevaluaci√≥n con los signos vitales registrados por el paciente.

#### Headers Requeridos

| Header        | Descripci√≥n                                            | Requerido |
| ------------- | ------------------------------------------------------ | --------- |
| tenant_id     | ID del inquilino (tenant) al que pertenece el usuario  | S√≠        |
| Authorization | Token JWT en formato Bearer para autenticar al usuario | S√≠        |

#### Permisos requeridos

- `VIEW_PATIENT_DETAILS`: Permiso necesario para crear eventos de autoevaluaci√≥n.
- El usuario debe ser el mismo paciente, un administrador o un m√©dico con permisos.

#### Request Body: `CreateSelfEvaluationEventDto`

```json
{
  "patient_id": "123e4567-e89b-12d3-a456-426614174000",
  "medical_event_id": "abcdef01-2345-6789-abcd-ef0123456789",
  "tenant_id": "tid_12345-6789-abcd-ef0123456789",
  "vital_signs": [
    {
      "vital_sign_id": 1,
      "measure": 98.6
    },
    {
      "vital_sign_id": 2,
      "measure": 120
    }
  ]
}
```

#### Elementos del Request Body

| Campo                       | Tipo   | Descripci√≥n                                                           | Requerido |
| --------------------------- | ------ | --------------------------------------------------------------------- | --------- |
| patient_id                  | UUID   | ID del paciente que realiza la autoevaluaci√≥n                         | S√≠        |
| medical_event_id            | UUID   | ID del evento m√©dico asociado a esta autoevaluaci√≥n                   | S√≠        |
| tenant_id                   | UUID   | ID del inquilino (tenant) en el sistema                               | S√≠        |
| vital_signs                 | Array  | Lista de signos vitales registrados                                   | S√≠        |
| vital_signs[].vital_sign_id | Number | ID del tipo de signo vital (referencia al cat√°logo de signos vitales) | S√≠        |
| vital_signs[].measure       | Number | Valor medido del signo vital                                          | S√≠        |

#### Responses

- `201 Created`: El evento de autoevaluaci√≥n ha sido creado exitosamente.

  Ejemplo de respuesta:

  ```json
  {
    "id": "fedcba98-7654-3210-fedc-ba9876543210",
    "patient_id": "123e4567-e89b-12d3-a456-426614174000",
    "medical_event_id": "abcdef01-2345-6789-abcd-ef0123456789",
    "tenant_id": "tid_12345-6789-abcd-ef0123456789",
    "created_at": "2025-05-22T10:30:00.000Z",
    "vital_signs": [
      {
        "id": 101,
        "vital_sign_id": 1,
        "measure": 98.6,
        "self_evaluation_event_id": "fedcba98-7654-3210-fedc-ba9876543210"
      },
      {
        "id": 102,
        "vital_sign_id": 2,
        "measure": 120,
        "self_evaluation_event_id": "fedcba98-7654-3210-fedc-ba9876543210"
      }
    ]
  }
  ```

- `400 Bad Request`: Solicitud inv√°lida.

  - El tenant_id en el DTO no coincide con el tenant del request.
  - El patient_id en el DTO no coincide con el usuario autenticado y no tiene permisos suficientes.
  - Datos faltantes o incorrectos.

  Ejemplo de respuesta:

  ```json
  {
    "alert": "Se han detectado los siguientes errores en la petici√≥n: ",
    "errors": [
      {
        "property": "vital_signs",
        "constraints": {
          "arrayNotEmpty": "Debe proporcionar al menos un signo vital"
        }
      }
    ]
  }
  ```

- `403 Forbidden`: No tiene permisos para crear eventos de autoevaluaci√≥n.

## Consideraciones de Seguridad

- Se requiere un header `tenant_id` v√°lido que coincida con el tenant_id proporcionado en el cuerpo de la solicitud.
- Se verifica que el tenant_id en el DTO coincida con el tenant del request.
- Se verifica que el patient_id en el DTO coincida con el usuario autenticado o que el usuario tenga permisos suficientes (superadmin o m√©dico).
- Se requiere el permiso `VIEW_PATIENT_DETAILS` para crear eventos de autoevaluaci√≥n.

## Uso Com√∫n

Este endpoint se utiliza principalmente desde la aplicaci√≥n m√≥vil, donde los pacientes pueden:

1. Registrar sus signos vitales peri√≥dicamente seg√∫n las indicaciones m√©dicas.
2. Enviar estos datos asociados a un evento m√©dico espec√≠fico (como una consulta o tratamiento).
3. Permitir que el personal m√©dico monitoree su progreso entre consultas.

## Integraci√≥n con Otros M√≥dulos

- **M√≥dulo de Eventos M√©dicos**: Los eventos de autoevaluaci√≥n est√°n asociados a eventos m√©dicos espec√≠ficos.
- **M√≥dulo de Signos Vitales**: Utiliza el cat√°logo de signos vitales para identificar los tipos de mediciones que se registran.
- **M√≥dulo de Pacientes**: Verifica la identidad del paciente que realiza la autoevaluaci√≥n.

================
File: src/docs/subcat-cie-diez.md
================
# Subcategor√≠as CIE-10 Endpoints

## Descripci√≥n

El m√≥dulo de Subcategor√≠as CIE-10 proporciona endpoints para gestionar las subcategor√≠as de la Clasificaci√≥n Internacional de Enfermedades, D√©cima Revisi√≥n (CIE-10). Estas subcategor√≠as est√°n asociadas a categor√≠as principales del CIE-10 y permiten una clasificaci√≥n m√°s detallada de las enfermedades y problemas de salud. El m√≥dulo ofrece funcionalidades para crear, consultar, actualizar y eliminar (CRUD) subcategor√≠as, as√≠ como para buscar subcategor√≠as por palabra clave o filtrar por categor√≠a principal.

## Endpoints

A continuaci√≥n, se detallan los endpoints disponibles en el m√≥dulo de Subcategor√≠as CIE-10:

### `POST /subcat-cie-diez`

Crea una nueva subcategor√≠a CIE-10.

**Request Body:** `CreateSubcatCieDiezDto`

```json
{
  "code": "A01.0",
  "description": "Fiebre tifoidea",
  "categoryId": 1
}
```

**Responses:**

- `201 Created`: La subcategor√≠a CIE-10 ha sido creada exitosamente.
- `400 Bad Request`: Solicitud inv√°lida (ej. datos faltantes o incorrectos).

### `GET /subcat-cie-diez`

Obtiene todas las subcategor√≠as CIE-10, con opci√≥n de paginaci√≥n.

**Query Parameters:**

- `page` (number, opcional): N√∫mero de p√°gina para la paginaci√≥n.
- `pageSize` (number, opcional): N√∫mero de √≠tems por p√°gina.
- `orderBy` (string, opcional): Campo por el cual ordenar los resultados (ej. "code", "description").
- `orderDirection` (string, opcional): Direcci√≥n de la ordenaci√≥n ('asc' o 'desc').

**Responses:**

- `200 OK`: Subcategor√≠as CIE-10 recuperadas exitosamente.
  Ejemplo de respuesta:
  ```json
  [
    {
      "id": 1,
      "code": "A01.0",
      "description": "Fiebre tifoidea",
      "categoryId": 1
    },
    {
      "id": 2,
      "code": "A01.1",
      "description": "Paratifoidea A",
      "categoryId": 1
    }
    // ... m√°s subcategor√≠as
  ]
  ```

### `GET /subcat-cie-diez/search`

Busca subcategor√≠as CIE-10 por palabra clave.

**Query Parameters:**

- `searchWord` (string, required): Palabra clave para buscar subcategor√≠as CIE-10.

**Responses:**

- `200 OK`: Subcategor√≠as CIE-10 encontradas.
  Ejemplo de respuesta:
  ```json
  [
    {
      "id": 1,
      "code": "A01.0",
      "description": "Fiebre tifoidea",
      "categoryId": 1
    }
    // ... m√°s subcategor√≠as que coinciden con la b√∫squeda
  ]
  ```

### `GET /subcat-cie-diez/category/{id}`

Obtiene todas las subcategor√≠as asociadas a una categor√≠a CIE-10 espec√≠fica.

**Path Parameters:**

- `id` (number, required): ID de la categor√≠a CIE-10.

**Query Parameters:**

- `page` (number, opcional): N√∫mero de p√°gina para la paginaci√≥n.
- `pageSize` (number, opcional): N√∫mero de √≠tems por p√°gina.
- `orderBy` (string, opcional): Campo por el cual ordenar los resultados.
- `orderDirection` (string, opcional): Direcci√≥n de la ordenaci√≥n ('asc' o 'desc').

**Responses:**

- `200 OK`: Subcategor√≠as CIE-10 de la categor√≠a especificada recuperadas exitosamente.
  Ejemplo de respuesta:
  ```json
  [
    {
      "id": 1,
      "code": "A01.0",
      "description": "Fiebre tifoidea",
      "categoryId": 1
    },
    {
      "id": 2,
      "code": "A01.1",
      "description": "Paratifoidea A",
      "categoryId": 1
    }
    // ... m√°s subcategor√≠as de la categor√≠a especificada
  ]
  ```

### `GET /subcat-cie-diez/{id}`

Obtiene una subcategor√≠a espec√≠fica CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la subcategor√≠a CIE-10.

**Responses:**

- `200 OK`: Subcategor√≠a CIE-10 recuperada exitosamente.
  Ejemplo de respuesta:
  ```json
  {
    "id": 1,
    "code": "A01.0",
    "description": "Fiebre tifoidea",
    "categoryId": 1
  }
  ```
- `404 Not Found`: La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.

### `PATCH /subcat-cie-diez/{id}`

Actualiza una subcategor√≠a existente de CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la subcategor√≠a CIE-10 a actualizar.

**Request Body:** `UpdateSubcatCieDiezDto` (parcial de `CreateSubcatCieDiezDto`)

```json
{
  "description": "Fiebre tifoidea aguda"
}
```

**Responses:**

- `200 OK`: La subcategor√≠a CIE-10 ha sido actualizada exitosamente.
- `404 Not Found`: La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.
- `400 Bad Request`: Solicitud inv√°lida.

### `DELETE /subcat-cie-diez/{id}`

Elimina una subcategor√≠a de CIE-10 por su ID.

**Path Parameters:**

- `id` (number, required): ID de la subcategor√≠a CIE-10 a eliminar.

**Responses:**

- `200 OK`: La subcategor√≠a CIE-10 ha sido eliminada exitosamente.
- `404 Not Found`: La subcategor√≠a CIE-10 con el ID especificado no fue encontrada.

================
File: src/docs/SWAGGER_DOCUMENTATION_REPORT.md
================
# Reporte de Documentaci√≥n Swagger - SEGIMED API

## Estado de la Documentaci√≥n

### ‚úÖ Controladores Completamente Documentados

#### 1. **Main Application** (`main.ts`)
- ‚úÖ Configuraci√≥n completa de Swagger
- ‚úÖ Documentaci√≥n de API traducida al espa√±ol
- ‚úÖ Servidores configurados
- ‚úÖ Autenticaci√≥n Bearer configurada
- ‚úÖ Todos los tags documentados en espa√±ol
- ‚úÖ Mensaje de bienvenida con links a Swagger

#### 2. **Appointments Controller**
- ‚úÖ Tag: "Appointments" 
- ‚úÖ Todas las operaciones documentadas
- ‚úÖ Headers de tenant-id documentados
- ‚úÖ Respuestas de error completas
- ‚úÖ Parcialmente traducido al espa√±ol (en proceso)

#### 3. **Auth Controller**
- ‚úÖ Tag: "Auth"
- ‚úÖ Operaciones de autenticaci√≥n completas
- ‚úÖ Registro, login, Google login documentados
- ‚úÖ Reset de contrase√±a documentado
- ‚úÖ OTP documentado
- ‚úÖ Respuestas HTTP completas

#### 4. **Medical Order Controller**
- ‚úÖ Tag: "Medical Order"
- ‚úÖ CRUD completo documentado
- ‚úÖ Paginaci√≥n documentada
- ‚úÖ Filtros documentados
- ‚úÖ Permisos documentados

#### 5. **Patient Controller**
- ‚úÖ Tag: "Patients"
- ‚úÖ Operaciones CRUD completas
- ‚úÖ B√∫squeda documentada
- ‚úÖ Paginaci√≥n incluida

#### 6. **User Controller**
- ‚úÖ Tag: "Users"
- ‚úÖ Onboarding documentado
- ‚úÖ CRUD completo
- ‚úÖ B√∫squeda por email e ID

#### 7. **Roles Controller**
- ‚úÖ Tag: "Roles"
- ‚úÖ Gesti√≥n de roles completa
- ‚úÖ Asignaci√≥n de roles
- ‚úÖ Permisos documentados

#### 8. **File Upload Controller**
- ‚úÖ Tag: "Upload File"
- ‚úÖ Documentaci√≥n completa en espa√±ol
- ‚úÖ Tipos de archivo especificados
- ‚úÖ Validaciones documentadas

#### 9. **Medical Events Controller**
- ‚úÖ Tag: "Medical Events"
- ‚úÖ CRUD documentado
- ‚úÖ Filtros y paginaci√≥n
- ‚úÖ Operaci√≥n "attend" documentada

#### 10. **Vital Signs Controller**
- ‚úÖ Tag: "Vital Signs"
- ‚úÖ CRUD completo
- ‚úÖ Headers de tenant documentados

#### 11. **Prescriptions Controller**
- ‚úÖ Tag: "Prescriptions"
- ‚úÖ Operaciones completas
- ‚úÖ Filtrado por paciente

#### 12. **Prescription Modification History Controller**
- ‚úÖ Tag: "Prescription Modification History"
- ‚úÖ Documentaci√≥n completa en espa√±ol
- ‚úÖ Historial por m√©dico y evento

#### 13. **Physical Exploration Controllers**
- ‚úÖ Tag: "Physical Exploration"
- ‚úÖ Tag: "Physical Exploration Area"
- ‚úÖ Operaciones completas documentadas

#### 14. **Mood Controller**
- ‚úÖ Tag: "Mood"
- ‚úÖ Documentaci√≥n completa en espa√±ol
- ‚úÖ Limitaciones por d√≠a documentadas

#### 15. **Self-Evaluation Events Controller**
- ‚úÖ Tag: "Mobile - Self-Evaluation Events"
- ‚úÖ Eventos m√≥viles documentados

### üìä **Cat√°logos (Todos completos)**

#### 16. **CIE-10 Controller**
- ‚úÖ Tag: "Catalogs - CIE-10"
- ‚úÖ CRUD completo
- ‚úÖ Paginaci√≥n y filtros

#### 17. **CIE-10 Subcategories Controller**
- ‚úÖ Tag: "Catalogs - CIE-10 Subcategories"
- ‚úÖ Documentaci√≥n en espa√±ol
- ‚úÖ B√∫squeda por palabra clave

#### 18. **Measure Units Controller**
- ‚úÖ Tag: "Catalogs - Measure Units"
- ‚úÖ Filtros por signo vital

#### 19. **Study Types Controller**
- ‚úÖ Tag: "Catalogs - Study Types"
- ‚úÖ CRUD completo

#### 20. **Vital Signs Catalog Controller**
- ‚úÖ Tag: "Catalogs - Vital Signs"
- ‚úÖ Filtros por especialidad

#### 21. **Order Types Controller**
- ‚úÖ Tag: "Catalogs - Order Types"
- ‚úÖ CRUD con paginaci√≥n

#### 22. **Catalog Seed Controller**
- ‚úÖ Tag: "Catalogs - Seed"
- ‚úÖ Documentaci√≥n en espa√±ol
- ‚úÖ Permisos SuperAdmin

#### 23. **Permission Updater Controller**
- ‚úÖ Tag: "Permission Updater"
- ‚úÖ Gesti√≥n de permisos del sistema

### ‚ö†Ô∏è Controladores con Documentaci√≥n M√≠nima

#### 24. **App Controller** 
- ‚ö†Ô∏è Solo tiene el tag base, sin endpoints documentados
- ‚úÖ Es solo el controlador ra√≠z, no requiere documentaci√≥n adicional

## üéØ Resumen de Completitud

### Estad√≠sticas:
- **Total de controladores revisados**: 24
- **Completamente documentados**: 23 (95.8%)
- **Documentaci√≥n m√≠nima aceptable**: 1 (4.2%)
- **Sin documentaci√≥n**: 0 (0%)

### Caracter√≠sticas de la Documentaci√≥n:

‚úÖ **Configuraci√≥n de Swagger**:
- DocumentBuilder configurado correctamente
- Servidores de desarrollo configurados
- Autenticaci√≥n Bearer implementada
- Tags organizados y en espa√±ol

‚úÖ **Decoradores Swagger Utilizados**:
- `@ApiTags()` - Todos los controladores
- `@ApiOperation()` - Todas las operaciones
- `@ApiResponse()` - Respuestas HTTP completas
- `@ApiQuery()` - Par√°metros de consulta
- `@ApiParam()` - Par√°metros de ruta
- `@ApiBody()` - Cuerpos de solicitud
- `@ApiHeader()` - Headers requeridos
- `@ApiBearerAuth()` - Autenticaci√≥n
- `@ApiSecurity()` - Seguridad alternativa

‚úÖ **Aspectos Cubiertos**:
- Operaciones CRUD completas
- Paginaci√≥n documentada
- Filtros y b√∫squedas
- Manejo de errores HTTP
- Permisos y autorizaci√≥n
- Headers de tenant multitenancy
- Validaciones de entrada
- Tipos de respuesta

‚úÖ **Traducciones**:
- Tags principales en espa√±ol
- Descripciones de operaciones traducidas
- Mensajes de respuesta en espa√±ol
- Documentaci√≥n de par√°metros en espa√±ol

## üöÄ Recomendaciones Finales

### La aplicaci√≥n est√° lista para PR con:

1. **Documentaci√≥n Swagger completa** al 95.8%
2. **Est√°ndares de documentaci√≥n consistentes**
3. **Traducciones al espa√±ol implementadas**
4. **Configuraci√≥n de entornos m√∫ltiples**
5. **Autenticaci√≥n y permisos documentados**
6. **Mensajes de bienvenida con links √∫tiles**

### Pr√≥ximos pasos opcionales:

1. **Agregar ejemplos de DTOs** en algunos endpoints
2. **Documentar c√≥digos de respuesta adicionales** para casos edge
3. **Agregar badges de estado** en la documentaci√≥n
4. **Incluir informaci√≥n de rate limiting** si aplica

## ‚úÖ Conclusi√≥n

**La implementaci√≥n de Swagger est√° completa y lista para producci√≥n.** Todos los m√≥dulos cr√≠ticos est√°n correctamente documentados con descripciones en espa√±ol, tipos de datos apropiados, y manejo completo de errores. La documentaci√≥n es consistente, profesional y facilita el uso de la API por parte de los desarrolladores frontend y terceros.

================
File: src/docs/user.md
================
# Documentaci√≥n del M√≥dulo de Usuario

## Descripci√≥n

El m√≥dulo de Usuario proporciona endpoints para la gesti√≥n de usuarios en la plataforma Segimed. Permite realizar operaciones como registro de usuarios, onboarding, y gesti√≥n de perfiles de usuario.

## Base URL

`/user`

## Requerimientos de Headers

La mayor√≠a de los endpoints requieren el siguiente header:

- `tenant-id`: ID del tenant al que pertenece el usuario (string)

**Nota Importante**: El endpoint de onboarding NO requiere el header `tenant-id` ya que es precisamente el endpoint encargado de crear y asignar un nuevo tenant al usuario durante el proceso de registro.

## Endpoints

### Onboarding

Permite a un usuario completar el proceso de onboarding, creando un nuevo tenant y asoci√°ndolo al usuario.

- **URL**: `/user/onboarding`
- **M√©todo**: `POST`
- **Descripci√≥n**: Completa el proceso de onboarding para un usuario registrado, creando y asignando un nuevo tenant
- **Permisos**: No requiere permisos especiales
- **Headers**: No requiere tenant-id (este endpoint crea el tenant)
- **Request Body**:

```json
{
  "user_id": "123e4567-e89b-12d3-a456-426614174000",
  "name": "Cl√≠nica M√©dica Especializada",
  "type": "organization",
  "number_of_employees": 10,
  "number_of_patients": 100,
  "reason_register": "Mejorar la gesti√≥n de pacientes y citas",
  "speciality": [1, 3, 5]
}
```

- **Par√°metros**:

  - `user_id` (string, obligatorio): ID del usuario que completa el onboarding
  - `name` (string, obligatorio): Nombre de la organizaci√≥n o consultorio
  - `type` (enum, obligatorio): Tipo de tenant (individual u organizaci√≥n)
  - `number_of_employees` (number, opcional): N√∫mero de empleados (solo para organizaciones)
  - `number_of_patients` (number, opcional): N√∫mero de pacientes estimados
  - `reason_register` (string, obligatorio): Motivo de registro en la plataforma
  - `speciality` (array, obligatorio): IDs de las especialidades m√©dicas

- **Respuesta exitosa**:

  - **C√≥digo**: 201 Created
  - **Contenido**: Objeto con el resultado del proceso de onboarding

- **Respuestas de error**:
  - **C√≥digo**: 400 Bad Request
    - Usuario no existente
    - El usuario ya es un m√©dico
  - **C√≥digo**: 500 Internal Server Error
    - Error interno del servidor

### Listar Todos los Usuarios

Obtiene la lista de todos los usuarios registrados en el sistema dentro del tenant actual.

- **URL**: `/user`
- **M√©todo**: `GET`
- **Descripci√≥n**: Obtiene todos los usuarios del tenant actual
- **Permisos**: Requiere autenticaci√≥n y permisos administrativos
- **Headers Requeridos**:
  - `tenant-id`: ID del tenant
- **Respuesta exitosa**:
  - **C√≥digo**: 200 OK
  - **Contenido**: Array de objetos de usuarios pertenecientes al tenant

### Buscar Usuario por ID

Obtiene los detalles de un usuario espec√≠fico por su ID dentro del tenant actual.

- **URL**: `/user/:id`
- **M√©todo**: `GET`
- **Descripci√≥n**: Busca un usuario por su ID en el tenant actual
- **Permisos**: Requiere autenticaci√≥n
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del usuario a buscar
- **Headers Requeridos**:
  - `tenant-id`: ID del tenant
- **Respuesta exitosa**:
  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto con los detalles del usuario
- **Respuestas de error**:
  - **C√≥digo**: 404 Not Found
    - Usuario no encontrado en el tenant actual

### Buscar Usuario por Email

Obtiene los detalles de un usuario espec√≠fico por su direcci√≥n de correo electr√≥nico dentro del tenant actual.

- **URL**: `/user/email/:email`
- **M√©todo**: `GET`
- **Descripci√≥n**: Busca un usuario por su direcci√≥n de email en el tenant actual
- **Permisos**: Requiere autenticaci√≥n
- **Par√°metros de ruta**:
  - `email` (string, obligatorio): Email del usuario a buscar
- **Headers Requeridos**:
  - `tenant-id`: ID del tenant
- **Respuesta exitosa**:
  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto con los detalles del usuario
- **Respuestas de error**:
  - **C√≥digo**: 404 Not Found
    - Usuario no encontrado en el tenant actual

### Actualizar Usuario

Actualiza la informaci√≥n de un usuario existente dentro del tenant actual.

- **URL**: `/user/:id`
- **M√©todo**: `PATCH`
- **Descripci√≥n**: Actualiza los datos de un usuario en el tenant actual
- **Permisos**: Requiere autenticaci√≥n
- **Headers Requeridos**:
  - `tenant-id`: ID del tenant
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del usuario a actualizar
- **Request Body**:
  Los campos que se desean actualizar. Todos son opcionales:

```json
{
  "name": "Nuevo Nombre",
  "last_name": "Nuevo Apellido",
  "email": "nuevo.email@example.com",
  "dni": "12345678",
  "birth_date": "1990-01-01",
  "nationality": "Mexicana",
  "gender": "Masculino",
  "phone_prefix": "+52",
  "phone": "9876543210",
  "image": "https://example.com/profile.jpg",
  "role": "patient"
}
```

- **Respuesta exitosa**:
  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto con los detalles actualizados del usuario

### Eliminar Usuario

Elimina un usuario del tenant actual.

- **URL**: `/user/:id`
- **M√©todo**: `DELETE`
- **Descripci√≥n**: Elimina un usuario del tenant actual
- **Permisos**: Requiere autenticaci√≥n y permisos administrativos
- **Headers Requeridos**:
  - `tenant-id`: ID del tenant
- **Par√°metros de ruta**:
  - `id` (string, obligatorio): ID del usuario a eliminar
- **Respuesta exitosa**:
  - **C√≥digo**: 200 OK
  - **Contenido**: Objeto confirmando la eliminaci√≥n
- **Respuestas de error**:
  - **C√≥digo**: 404 Not Found
    - Usuario no encontrado en el tenant actual
  - **C√≥digo**: 403 Forbidden
    - No tiene permisos para eliminar usuarios en este tenant

## Modelos de Datos

### Usuario (User)

```typescript
{
  id?: string;
  name?: string;
  last_name?: string;
  email?: string;
  dni?: string;
  dniType?: string;
  birthdate?: Date;
  nationality?: string;
  gender?: string;
  phone_prefix?: string;
  phone?: string;
  password?: string;
  google_id?: string;
  image?: string;
  role?: role_type;
  tenant_id?: string;
  createdAt?: Date;
  updatedAt?: Date;
}
```

## DTOs (Data Transfer Objects)

### BaseUserDto

Contiene las propiedades b√°sicas para un usuario:

```typescript
{
  name: string;               // Nombre del usuario
  last_name: string;          // Apellido del usuario
  email: string;              // Correo electr√≥nico
  dni?: string;               // N√∫mero de documento de identidad
  birth_date?: Date;          // Fecha de nacimiento
  nationality?: string;       // Nacionalidad
  gender?: string;            // G√©nero
  phone_prefix?: string;      // Prefijo telef√≥nico
  phone?: string;             // N√∫mero de tel√©fono
  image?: string;             // URL de la imagen de perfil
  role?: role_type;           // Rol en el sistema
}
```

### CreateUserDto

Extiende de BaseUserDto y a√±ade:

```typescript
{
  // Todas las propiedades de BaseUserDto
  password?: string;          // Contrase√±a del usuario
}
```

### UpdateUserDto

Versi√≥n parcial de CreateUserDto, donde todos los campos son opcionales.

### OnboardingDto

```typescript
{
  user_id: string;                // ID del usuario que completa el onboarding
  name: string;                   // Nombre de la organizaci√≥n o consultorio
  type: tenant_type;              // Tipo de tenant (individual u organizaci√≥n)
  number_of_employees?: number;   // N√∫mero de empleados (solo para organizaciones)
  number_of_patients?: number;    // N√∫mero de pacientes estimados
  reason_register: string;        // Motivo de registro en la plataforma
  speciality?: number[];          // IDs de las especialidades m√©dicas
}
```

## Notas Adicionales

- Los endpoints de usuario est√°n etiquetados como `User` en la documentaci√≥n Swagger.
- Todas las operaciones requieren autenticaci√≥n mediante JWT.
- El proceso de onboarding es esencial para configurar adecuadamente el perfil de un usuario m√©dico en la plataforma.
- Todos los endpoints, excepto el onboarding, requieren el header `tenant-id` y solo operan sobre usuarios dentro del tenant especificado.
- Los usuarios solo pueden ver y gestionar usuarios que pertenezcan a su mismo tenant.
- El endpoint de onboarding es el √∫nico que no requiere tenant-id ya que es el que crea un nuevo tenant.

================
File: src/docs/vital-signs.md
================
# M√≥dulo de Signos Vitales

## Descripci√≥n General

El m√≥dulo de Signos Vitales es responsable de gestionar el registro y consulta de los signos vitales de los pacientes. Los signos vitales son mediciones fisiol√≥gicas que indican el estado de salud b√°sico de una persona, como la temperatura corporal, el ritmo card√≠aco, la presi√≥n arterial, entre otros.

Este m√≥dulo permite la creaci√≥n, consulta y eliminaci√≥n de registros de signos vitales, ya sea como parte de una consulta m√©dica o a trav√©s de la autoevaluaci√≥n del paciente.

## Endpoints

### `POST /vital-signs`

Crea un nuevo registro de signos vitales para un paciente.

**Cuerpo de la Solicitud (Request Body):**

El cuerpo de la solicitud debe ser un objeto JSON que se ajuste al `CreateVitalSignDto`.

```json
{
  "patient_id": "string (UUID)",
  "tenant_id": "string (UUID, opcional)",
  "medical_event_id": "string (UUID, opcional)",
  "self_evaluation_event_id": "string (UUID, opcional)",
  "vital_signs": [
    {
      "vital_sign_id": 1,
      "measure": 98.6
    },
    {
      "vital_sign_id": 2,
      "measure": 120
    }
  ]
}
```

**Respuestas (Responses):**

- `201 Created` (Creado): Registro de signos vitales creado exitosamente.

  ```json
  {
    // Cuerpo de la respuesta del servidor tras la creaci√≥n exitosa
  }
  ```

- `400 Bad Request` (Solicitud Incorrecta): Entrada inv√°lida. El cuerpo de la solicitud no se ajusta al esquema esperado o contiene datos inv√°lidos.

  ```json
  {
    "alert": "Se han detectado los siguientes errores en la petici√≥n: ",
    "errors": [
      {
        "property": "nombreDelCampo",
        "constraints": {
          "nombreDeLaRestriccion": "Mensaje de error"
        }
      }
    ]
  }
  ```

- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `403 Forbidden` (Prohibido): El usuario no tiene los permisos necesarios para realizar esta acci√≥n.
- `500 Internal Server Error` (Error Interno del Servidor): Ocurri√≥ un error inesperado en el servidor.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Identificador para el tenant)

**Ejemplo de Uso (cURL):**

```bash
curl -X POST \
  http://localhost:3000/vital-signs \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID' \
  -d '{
    "patient_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "vital_signs": [
      {
        "vital_sign_id": 1,
        "measure": 37.5
      },
      {
        "vital_sign_id": 2,
        "measure": 120
      },
      {
        "vital_sign_id": 3,
        "measure": 80
      },
      {
        "vital_sign_id": 4,
        "measure": 20
      }
    ]
  }'
```

### `GET /vital-signs/patient/:patientId`

Obtiene todos los registros de signos vitales para un paciente espec√≠fico.

**Par√°metros de Ruta (Path Parameters):**

- `patientId`: UUID del paciente cuyos signos vitales se desean consultar.

**Respuestas (Responses):**

- `200 OK`: Devuelve un array con los registros de signos vitales del paciente.

  ```json
  [
    {
      "id": "string (UUID)",
      "created_at": "string (fecha ISO)",
      "patient_id": "string (UUID)",
      "vital_signs": [
        {
          "id": "string (UUID)",
          "vital_sign_id": 1,
          "measure": 37.5,
          "name": "Temperatura",
          "unit": "¬∞C"
        }
        // M√°s signos vitales...
      ]
    }
    // M√°s registros de signos vitales...
  ]
  ```

- `400 Bad Request` (Solicitud Incorrecta): ID de paciente inv√°lido.
- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `403 Forbidden` (Prohibido): El usuario no tiene los permisos necesarios para realizar esta acci√≥n.
- `404 Not Found` (No Encontrado): No se encontr√≥ el paciente especificado.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Identificador para el tenant)

**Ejemplo de Uso (cURL):**

```bash
curl -X GET \
  http://localhost:3000/vital-signs/patient/a1b2c3d4-e5f6-7890-1234-567890abcdef \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID'
```

### `DELETE /vital-signs/:id`

Elimina un registro de signos vitales espec√≠fico.

**Par√°metros de Ruta (Path Parameters):**

- `id`: UUID del registro de signos vitales a eliminar.

**Respuestas (Responses):**

- `200 OK`: Registro de signos vitales eliminado exitosamente.

  ```json
  {
    // Confirmaci√≥n de eliminaci√≥n
  }
  ```

- `400 Bad Request` (Solicitud Incorrecta): ID de registro inv√°lido.
- `401 Unauthorized` (No Autorizado): El token de autenticaci√≥n falta o es inv√°lido.
- `403 Forbidden` (Prohibido): El usuario no tiene los permisos necesarios para realizar esta acci√≥n.
- `404 Not Found` (No Encontrado): No se encontr√≥ el registro de signos vitales especificado.

**Encabezados (Headers):**

- `Authorization`: Bearer `token-de-acceso` (Token JWT para autenticaci√≥n)
- `X-Tenant-ID`: `string` (Identificador para el tenant)

**Ejemplo de Uso (cURL):**

```bash
curl -X DELETE \
  http://localhost:3000/vital-signs/a1b2c3d4-e5f6-7890-1234-567890abcdef \
  -H 'Authorization: Bearer TU_TOKEN_DE_ACCESO' \
  -H 'X-Tenant-ID: TU_TENANT_ID'
```

## Tipos de Signos Vitales

Los tipos de signos vitales comunes incluyen:

| vital_sign_id | Nombre                      | Unidad de Medida | Rango Normal Adultos |
| ------------- | --------------------------- | ---------------- | -------------------- |
| 1             | Temperatura                 | ¬∞C               | 36.1 - 37.2          |
| 2             | Presi√≥n Arterial Sist√≥lica  | mmHg             | 90 - 120             |
| 3             | Presi√≥n Arterial Diast√≥lica | mmHg             | 60 - 80              |
| 4             | Frecuencia Respiratoria     | resp/min         | 12 - 20              |
| 5             | Frecuencia Card√≠aca         | lat/min          | 60 - 100             |
| 6             | Saturaci√≥n de Ox√≠geno       | %                | 95 - 100             |
| 7             | Glucemia                    | mg/dL            | 70 - 100 (en ayunas) |

**Nota**: Los rangos normales pueden variar seg√∫n la edad, sexo y condiciones m√©dicas particulares del paciente.

================
File: src/main.ts
================
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { BadRequestException, ValidationPipe } from '@nestjs/common';
import { config } from 'dotenv';
import * as express from 'express';

config({ path: '.env' });

async function bootstrap() {
  const app = await NestFactory.create(AppModule, { bodyParser: false });
  app.use(express.json({ limit: '50mb' }));
  app.use(express.urlencoded({ limit: '50mb', extended: true }));
  app.enableCors({
    origin: '*', // URL del frontend
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE', // M√©todos permitidos
    credentials: true, // Si est√°s usando cookies o autenticaci√≥n basada en sesi√≥n
  });

  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      transform: true,
      exceptionFactory: (errors) => {
        const cleanErrors = errors.map((err) => {
          return {
            property: err.property,
            constraints: err.constraints,
            children: err.children?.map((child) => ({
              property: child.property,
              constraints: child.constraints,
            })),
          };
        });
        console.log('Errores de validaci√≥n detallados:', cleanErrors); // üëà Depuraci√≥n
        return new BadRequestException({
          alert: 'Se han detectado los siguientes errores en la petici√≥n: ',
          errors: cleanErrors,
        });
      },
    }),
  );

  const swaggerConfig = new DocumentBuilder()
    .setTitle('SEGIMED API')
    .setDescription(
      'API documentation for SEGIMED platform - a comprehensive medical management system.',
    )
    .setVersion('1.0')
    .addServer('http://localhost:3000', 'Local Development Server', {
      db_env: {
        default: 'local',
        description: 'Select database environment',
        enum: ['local', 'deployed'],
      },
    })
    .addServer('http://localhost:3000', 'Local Server - Deployed DB', {
      db_env: {
        default: 'deployed',
        description: 'Select database environment (API runs locally)',
        enum: ['local', 'deployed'],
      },
    })
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'Authorization',
        description: 'Enter JWT token',
        in: 'header',
      },
      'access-token',
    )
    .addTag('Auth', 'Authentication operations')
    .addTag(
      'Users',
      'User management operations including registration, onboarding, and user profile management',
    )
    .addTag('Patients', 'Patient management operations')
    .addTag('Appointments', 'Appointment scheduling operations')
    .addTag(
      'Medical Order',
      'Medical order management including prescriptions, study authorizations, certifications, hospitalization requests, appointment requests, and medication authorizations',
    )
    .addTag('Medical Events', 'Medical events management')
    .addTag('Medicine', 'Medicine management operations')
    .addTag('Background', 'Background management operations')
    .addTag('Vital Signs', 'Vital signs management operations')
    .addTag('Studies', 'Patient studies and results')
    .addTag('Prescriptions', 'Prescription management')
    .addTag(
      'Prescription Modification History',
      'History of prescription modifications',
    )
    .addTag('Physical Exploration', 'Physical exploration data management')
    .addTag(
      'Physical Exploration Area',
      'Management of physical exploration areas',
    )
    .addTag('Patient Studies', 'Management of patient studies and results')
    .addTag('Physician Schedule', 'Physician schedule management operations')
    .addTag('Mood', 'Patient mood tracking')
    .addTag(
      'Mobile - Self-Evaluation Events',
      'Patient self-evaluation events from mobile app',
    )
    .addTag(
      'Catalogs - CIE-10',
      'Management of CIE-10 catalog codes and descriptions',
    )
    .addTag(
      'Catalogs - CIE-10 Subcategories',
      'Management of CIE-10 subcategories associated with main categories',
    )
    .addTag(
      'Catalogs - Measure Units',
      'Management of measure units for vital signs',
    )
    .addTag('Catalogs - Study Types', 'Management of study types')
    .addTag(
      'Catalogs - Vital Signs',
      'Management of vital signs for medical specialties',
    )
    .addTag('Catalogs - Order Types', 'Management of medical order types')
    .addTag('Catalogs - Seed', 'Initialize catalog data with predefined values')
    .addTag(
      'Upload File',
      'Utilities for uploading and storing files (images and PDF documents) using Cloudinary service',
    )
    .addTag(
      'Roles',
      'Role management and assignment operations for users, including permission management',
    )
    .addTag(
      'Permission Updater',
      'Utilities for updating and managing system-wide permission configurations',
    )
    .setContact('SEGIMED Support', 'https://segimed.com', 'support@segimed.com')
    .setLicense('Private', '')
    .build();

  const document = SwaggerModule.createDocument(app, swaggerConfig, {
    deepScanRoutes: true,
    operationIdFactory: (controllerKey: string, methodKey: string) => methodKey,
  });
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      tagsSorter: 'alpha',
      operationsSorter: 'alpha',
      docExpansion: 'none',
      defaultModelsExpandDepth: -1,
      displayRequestDuration: true,
      tryItOutEnabled: true,
      withCredentials: true,
      requestInterceptor: (req) => {
        // Asegurarse de que todas las peticiones incluyan el token de autorizaci√≥n si existe
        const token = localStorage.getItem('access_token');
        if (token) {
          req.headers.Authorization = `Bearer ${token}`;
        }
        return req;
      },
    },
    customSiteTitle: 'SEGIMED API Documentation',
    customCss: '.swagger-ui .topbar { display: none }',
    swaggerUrl: '/api-json',
  });

  const port = process.env.PORT ?? 3000;
  await app.listen(port);

  // Mensaje de bienvenida con link a Swagger
  console.log('\nüéâ ¬°Bienvenido a SEGIMED API!');
  console.log('üìã Sistema integral de gesti√≥n m√©dica');
  console.log(`üöÄ Servidor iniciado en: http://localhost:${port}`);
  console.log(`üìñ Documentaci√≥n Swagger: http://localhost:${port}/api`);
  console.log(`üìä API JSON: http://localhost:${port}/api-json`);
  console.log('üè• ¬°Listo para gestionar datos m√©dicos de forma segura!\n');
}

bootstrap();

================
File: src/management/auth/auth.controller.ts
================
import { Controller, Post, Body, Req, HttpStatus } from '@nestjs/common';
import { AuthService } from './auth.service';
import { CreateAuthDto } from './dto/create-auth.dto';
import { ApiOperation, ApiResponse, ApiTags, ApiBody } from '@nestjs/swagger';
import {
  CreateUserDto,
  GoogleUserDto,
} from 'src/management/user/dto/create-user.dto';
import { RequestPasswordDto, ResetPasswordDto } from './dto/password-auth.dto';
import { Request } from 'express';
import { CreateSuperAdminDto } from './dto/create-superadmin.dto';

@ApiTags('Auth')
@Controller('auth')
export class AuthController {
  constructor(private readonly authService: AuthService) {}

  @Post('register')
  @ApiOperation({
    summary: 'Register a new user',
    description: 'Creates a new user in the system',
  })
  @ApiResponse({
    status: HttpStatus.CREATED,
    description: 'User successfully registered',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid user data',
  })
  @ApiResponse({
    status: HttpStatus.CONFLICT,
    description: 'Email already in use',
  })
  register(@Body() createUserDto: CreateUserDto) {
    return this.authService.create(createUserDto);
  }

  @Post('create-superadmin')
  @ApiOperation({
    summary: 'Create a super admin user',
    description: 'Creates a super admin user with full privileges',
  })
  @ApiResponse({
    status: HttpStatus.CREATED,
    description: 'Super admin successfully created',
  })
  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Invalid data' })
  createSuperAdmin(@Body() createSuperAdminDto: CreateSuperAdminDto) {
    return this.authService.createSuperAdmin(createSuperAdminDto);
  }

  @Post()
  @ApiOperation({
    summary: 'User login',
    description: 'Authenticates a user and returns a JWT token',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Successfully authenticated',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'Invalid credentials',
  })
  login(@Body() createAuthDto: CreateAuthDto) {
    return this.authService.login(createAuthDto);
  }

  @Post('google')
  @ApiOperation({
    summary: 'Google login',
    description: 'Authenticates a user with Google credentials',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Successfully authenticated with Google',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'Invalid Google credentials',
  })
  googleLogin(@Body() GoogleUserDto: GoogleUserDto) {
    return this.authService.googleLogin(GoogleUserDto);
  }

  @Post('request-password')
  @ApiOperation({
    summary: 'Request password reset',
    description: 'Sends a password reset email to the user',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Password reset email sent',
  })
  @ApiResponse({ status: HttpStatus.NOT_FOUND, description: 'User not found' })
  requestPasswordReset(
    @Body() RequestPasswordDto: RequestPasswordDto,
    @Req() req: Request,
  ): Promise<object> {
    return this.authService.requestPasswordReset(RequestPasswordDto, req);
  }

  @Post('reset-password')
  @ApiOperation({
    summary: 'Reset password',
    description: 'Resets the user password using a token',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Password successfully reset',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid or expired token',
  })
  resetPassword(@Body() ResetPasswordDto: ResetPasswordDto): Promise<object> {
    return this.authService.resetPassword(
      ResetPasswordDto.token,
      ResetPasswordDto.password,
    );
  }

  @Post('send-otp')
  @ApiOperation({
    summary: 'Send OTP code',
    description: 'Sends a verification code to the user phone',
  })
  @ApiResponse({ status: HttpStatus.OK, description: 'Verification code sent' })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid user ID or phone number',
  })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        user_id: { type: 'string', description: 'User ID' },
        phone_prefix: {
          type: 'string',
          description: 'Phone prefix (e.g. +1, +52)',
        },
        phone: { type: 'string', description: 'Phone number' },
      },
      required: ['user_id', 'phone_prefix', 'phone'],
    },
  })
  async sendVerificationCodePhone(
    @Body('user_id') user_id: string,
    @Body('phone_prefix') phone_prefix: string,
    @Body('phone') phone: string,
  ): Promise<object> {
    return this.authService.sendVerificationCodePhone(
      user_id,
      phone_prefix,
      phone,
    );
  }

  @Post('verify-otp')
  @ApiOperation({
    summary: 'Verify OTP',
    description: 'Verifies the OTP code sent to the user',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'OTP verified successfully',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid OTP code',
  })
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        user_id: { type: 'string', description: 'User ID' },
        code: { type: 'string', description: 'Verification code' },
      },
      required: ['user_id', 'code'],
    },
  })
  async verifyPhoneCode(
    @Body('user_id') user_id: string,
    @Body('code') code: string,
  ): Promise<object> {
    return this.authService.verifyPhoneCode(user_id, code);
  }
}

================
File: src/management/auth/auth.module.ts
================
import { Module } from '@nestjs/common';
import { AuthService } from './auth.service';
import { AuthController } from './auth.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [AuthController],
  providers: [AuthService, PrismaService],
})
export class AuthModule {}

================
File: src/management/auth/auth.service.ts
================
import { BadRequestException, Injectable } from '@nestjs/common';
import { CreateAuthDto } from './dto/create-auth.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import { AuthHelper } from 'src/utils/auth.helper';
import {
  CreateUserDto,
  GoogleUserDto,
} from 'src/management/user/dto/create-user.dto';
import { RequestPasswordDto } from './dto/password-auth.dto';
import { EmailService } from 'src/services/email/email.service';
import { Request } from 'express';
import { recoverPasswordHtml } from 'src/services/email/templates/recoverPasswordHtml';
import { ConfigService } from '@nestjs/config';
import welcomeEmailHtml from 'src/services/email/templates/welcomeEmailHtml';
import { TwilioService } from 'src/services/twilio/twilio.service';
import {
  JwtPayloadDto,
  LoginResponseDto,
  TenantDto,
} from './dto/login-response.dto';

@Injectable()
export class AuthService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly configService: ConfigService,
    private readonly emailService: EmailService,
    private readonly otpService: TwilioService,
  ) {}
  async create(data: CreateUserDto): Promise<object> {
    try {
      const saltRounds = parseInt(
        this.configService.get<string>('BCRYPT_SALT_ROUNDS'),
      );
      data.password = await AuthHelper.hashPassword(data.password, saltRounds);

      const user = await this.prisma.user.create({
        data: data,
      });

      const htmlContent = welcomeEmailHtml(data.name);
      await this.emailService.sendMail(
        data.email,
        htmlContent,
        'Bienvenido a Segimed',
      );
      return {
        id: user.id,
        name: user.name,
        last_name: user.last_name,
      };
    } catch (error) {
      if (error.code === 'P2002') {
        throw new BadRequestException(
          'El correo electr√≥nico ya est√° registrado.',
        );
      }
      console.log(error);
      throw new BadRequestException('No se pudo crear el usuario.');
    }
  }
  async login(createAuthDto: CreateAuthDto): Promise<LoginResponseDto> {
    try {
      const user = await this.prisma.user.findUnique({
        where: { email: createAuthDto.email },
      });

      if (!user) {
        throw new BadRequestException('El email no est√° registrado');
      }

      const isPasswordValid = await AuthHelper.comparePasswords(
        createAuthDto.password,
        user.password,
      );

      if (!isPasswordValid) {
        throw new BadRequestException('La contrase√±a es incorrecta');
      }

      // Create the JWT payload
      const jwtPayload: JwtPayloadDto = {
        email: user.email,
        id: user.id,
        name: user.name,
        last_name: user.last_name || '',
        role: user.role,
        image: user.image,
      };

      // Check if the user is a patient
      if (user.role === 'patient') {
        // Get the associated patient record
        const patient = await this.prisma.patient.findUnique({
          where: { user_id: user.id },
        });

        if (patient) {
          // Get all tenants associated with this patient
          const patientTenants = await this.prisma.patient_tenant.findMany({
            where: {
              patient_id: patient.id,
              deleted: false,
            },
            include: {
              tenant: {
                include: {
                  organizations: true,
                },
              },
            },
          });

          // Format tenant information
          if (patientTenants.length > 0) {
            const tenants: TenantDto[] = patientTenants.map((pt) => ({
              id: pt.tenant_id,
              name:
                pt.tenant.organizations.length > 0
                  ? pt.tenant.organizations[0].name
                  : 'Organizaci√≥n',
              type: pt.tenant.type,
            }));

            // Add tenants to the JWT payload
            jwtPayload.tenants = tenants;
          }
        }
      } else {
        // For non-patient users, just add the tenant_id as before
        jwtPayload.tenant_id = user.tenant_id || '';
      }

      const jwt = AuthHelper.generateToken(jwtPayload);

      return {
        message: 'Login exitoso',
        jwt: jwt,
        user: jwtPayload,
      };
    } catch (error) {
      console.log(error);
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new Error('Error al procesar la solicitud de login');
    }
  }

  async googleLogin(GoogleUserDto: GoogleUserDto): Promise<LoginResponseDto> {
    try {
      let user = await this.prisma.user.findUnique({
        where: { email: GoogleUserDto.email },
      });

      if (!user) {
        user = await this.prisma.user.create({
          data: {
            email: GoogleUserDto.email,
            name: GoogleUserDto.name ?? '',
            image: GoogleUserDto.image ?? '',
            tenant_id: null,
            password: '',
          },
        });
      }

      if (!user) {
        throw new Error('Error al crear el usuario o el usuario no existe');
      }

      // Create the JWT payload
      const jwtPayload: JwtPayloadDto = {
        email: user.email,
        id: user.id,
        name: user.name,
        last_name: user.last_name || '',
        role: user.role,
        image: user.image,
      };

      // Check if the user is a patient
      if (user.role === 'patient') {
        // Get the associated patient record
        const patient = await this.prisma.patient.findUnique({
          where: { user_id: user.id },
        });

        if (patient) {
          // Get all tenants associated with this patient
          const patientTenants = await this.prisma.patient_tenant.findMany({
            where: {
              patient_id: patient.id,
              deleted: false,
            },
            include: {
              tenant: {
                include: {
                  organizations: true,
                },
              },
            },
          });

          // Format tenant information
          if (patientTenants.length > 0) {
            const tenants: TenantDto[] = patientTenants.map((pt) => ({
              id: pt.tenant_id,
              name:
                pt.tenant.organizations.length > 0
                  ? pt.tenant.organizations[0].name
                  : 'Organizaci√≥n',
              type: pt.tenant.type,
            }));

            // Add tenants to the JWT payload
            jwtPayload.tenants = tenants;
          }
        }
      } else {
        // For non-patient users, just add the tenant_id as before
        jwtPayload.tenant_id = user.tenant_id || '';
      }

      const jwt = AuthHelper.generateToken(jwtPayload);

      return {
        message: 'Login exitoso',
        jwt: jwt,
        user: jwtPayload,
      };
    } catch (error) {
      console.log(error);
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new Error('Error al procesar la solicitud de Google Login');
    }
  }

  async requestPasswordReset(
    RequestPasswordDto: RequestPasswordDto,
    req: Request,
  ): Promise<object> {
    try {
      const user = await this.prisma.user.findUnique({
        where: { email: RequestPasswordDto.email },
      });

      if (!user) {
        throw new BadRequestException('El email no est√° registrado');
      }
      const origin =
        req.headers.origin || req.protocol + '://' + req.headers.host;

      const jwtPayload = {
        email: user.email,
      };

      const token = AuthHelper.generateToken(jwtPayload, '1h');

      await this.prisma.password_reset.create({
        data: {
          email: user.email,
          token: token,
        },
      });

      const resetUrl = `${origin}/reset-password?token=${token}`;

      this.emailService.sendMail(
        RequestPasswordDto.email,
        recoverPasswordHtml(resetUrl),
        'Recuperar contrase√±a',
      );

      return {
        message:
          'Se ha enviado un correo electr√≥nico para restablecer la contrase√±a',
      };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new Error(
        'Error al procesar la solicitud de restablecimiento de contrase√±a',
      );
    }
  }

  async resetPassword(token: string, password: string): Promise<object> {
    try {
      const jwtVerification = AuthHelper.verifyToken(token);
      if (!jwtVerification || typeof jwtVerification === 'string') {
        throw new BadRequestException('El token no es v√°lido');
      }
      const validToken = await this.prisma.password_reset.findUnique({
        where: { token: token, email: jwtVerification.email },
      });
      if (!validToken) {
        throw new BadRequestException('El token no es v√°lido');
      }
      const saltRounds = parseInt(
        this.configService.get<string>('BCRYPT_SALT_ROUNDS'),
      );
      const hashPassword = await AuthHelper.hashPassword(password, saltRounds);
      await this.prisma.user.update({
        where: { email: jwtVerification.email },
        data: { password: hashPassword },
      });
      return { message: 'Contrase√±a restablecida con √©xito.' };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException('El token no es v√°lido o ha expirado.');
    }
  }

  async sendVerificationCodePhone(
    user_id: string,
    phone_prefix: string,
    phone: string,
  ): Promise<object> {
    try {
      const verification_code = this.otpService.generateOtp();
      const phoneNumber = phone_prefix + phone;
      const code_expires_at = new Date(Date.now() + 5 * 60 * 1000);

      await this.prisma.$transaction(async (transaction) => {
        await transaction.otp_code.upsert({
          where: { id: user_id },
          create: {
            id: user_id,
            code: verification_code,
            code_expires_at: code_expires_at,
          },
          update: {
            code: verification_code,
            code_expires_at: code_expires_at,
          },
        });

        await transaction.user.update({
          where: { id: user_id },
          data: {
            phone_prefix,
            phone,
          },
        });

        await this.otpService.sendOtp(phoneNumber, verification_code);
      });

      return { message: 'C√≥digo de verificaci√≥n enviado.' };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      console.log(error);
      throw new BadRequestException(
        'Error al enviar el c√≥digo de verificaci√≥n.',
      );
    }
  }

  async verifyPhoneCode(user_id: string, code: string): Promise<object> {
    try {
      const user = await this.prisma.user.findUnique({
        where: { id: user_id },
      });
      const otp_exists = await this.prisma.otp_code.findUnique({
        where: {
          id: user_id,
        },
      });
      if (!user) {
        throw new BadRequestException('El usuario no existe');
      }
      if (!otp_exists) {
        throw new BadRequestException(
          'El usuario no tiene un c√≥digo de verificaci√≥n',
        );
      }
      if (otp_exists.code !== code) {
        throw new BadRequestException(
          'El c√≥digo de verificaci√≥n es incorrecto',
        );
      }
      if (otp_exists.code_expires_at < new Date()) {
        throw new BadRequestException('El c√≥digo de verificaci√≥n ha expirado');
      }
      await this.prisma.user.update({
        where: { id: user_id },
        data: {
          is_phone_verified: true,
        },
      });
      return {
        message: 'N√∫mero de tel√©fono verificado.',
      };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      console.log(error);
      throw new BadRequestException(
        'Error al verificar el c√≥digo de verificaci√≥n.',
      );
    }
  }

  async createSuperAdmin(createSuperAdminDto: any): Promise<object> {
    try {
      const expectedSecretKey = this.configService.get<string>(
        'SUPER_ADMIN_SECRET_KEY',
      );
      if (!expectedSecretKey) {
        throw new BadRequestException(
          'La clave secreta no est√° configurada en el servidor',
        );
      }

      const superAdminTenantId = this.configService.get<string>(
        'SUPER_ADMIN_TENANT_ID',
      );
      if (!superAdminTenantId) {
        throw new BadRequestException(
          'El ID del tenant del superadmin no est√° configurado en el servidor',
        );
      }

      if (createSuperAdminDto.secret_key !== expectedSecretKey) {
        throw new BadRequestException('Clave secreta incorrecta');
      }

      const saltRounds = parseInt(
        this.configService.get<string>('BCRYPT_SALT_ROUNDS'),
      );
      const hashedPassword = await AuthHelper.hashPassword(
        createSuperAdminDto.password,
        saltRounds,
      );

      const user = await this.prisma.user.create({
        data: {
          name: createSuperAdminDto.name,
          last_name: createSuperAdminDto.last_name,
          email: createSuperAdminDto.email,
          password: hashedPassword,
          role: 'superadmin',
          tenant_id: superAdminTenantId,
          is_superadmin: true,
        },
      });

      await this.setupSuperAdminRolesAndPermissions(
        user.id,
        createSuperAdminDto.tenant_id,
      );

      return {
        message: 'Superadmin creado exitosamente',
        user: {
          id: user.id,
          email: user.email,
          name: user.name,
          last_name: user.last_name,
          role: user.role,
        },
      };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al crear el superadmin: ${error.message}`,
      );
    }
  }

  private async setupSuperAdminRolesAndPermissions(
    userId: string,
    tenantId?: string,
  ): Promise<void> {
    try {
      let superadminRole = await this.prisma.role.findFirst({
        where: {
          name: 'superadmin',
          tenant_id: tenantId || null,
        },
      });

      if (!superadminRole) {
        superadminRole = await this.prisma.role.create({
          data: {
            name: 'superadmin',
            description: 'Administrador del sistema con acceso total',
            tenant_id: tenantId || null,
          },
        });
      }

      await this.prisma.user_role.create({
        data: {
          user_id: userId,
          role_id: superadminRole.id,
        },
      });

      const permissions = await this.prisma.permission.findMany();

      for (const permission of permissions) {
        const existingPermission = await this.prisma.role_permission.findFirst({
          where: {
            role_id: superadminRole.id,
            permission_id: permission.id,
          },
        });

        if (!existingPermission) {
          await this.prisma.role_permission.create({
            data: {
              role_id: superadminRole.id,
              permission_id: permission.id,
            },
          });
        }
      }
    } catch (error) {
      console.error('Error al configurar roles y permisos:', error);
      throw new Error('Error al configurar roles y permisos de superadmin');
    }
  }
}

================
File: src/management/auth/dto/create-auth.dto.ts
================
import { PickType } from '@nestjs/swagger';
import { CreateUserDto } from 'src/management/user/dto/create-user.dto';

export class CreateAuthDto extends PickType(CreateUserDto, [
  'email',
  'password',
]) {}

================
File: src/management/auth/dto/create-superadmin.dto.ts
================
import {
  IsString,
  IsEmail,
  IsNotEmpty,
  MinLength,
  IsUUID,
  IsOptional,
} from 'class-validator';

export class CreateSuperAdminDto {
  @IsString()
  @IsNotEmpty({ message: 'El nombre es obligatorio' })
  name: string;

  @IsString()
  @IsNotEmpty({ message: 'El apellido es obligatorio' })
  last_name: string;

  @IsEmail(
    {},
    { message: 'El correo electr√≥nico debe tener un formato v√°lido' },
  )
  @IsNotEmpty({ message: 'El correo electr√≥nico es obligatorio' })
  email: string;

  @IsString()
  @MinLength(8, { message: 'La contrase√±a debe tener al menos 8 caracteres' })
  @IsNotEmpty({ message: 'La contrase√±a es obligatoria' })
  password: string;

  @IsUUID('4', { message: 'El ID del tenant debe ser un UUID v√°lido' })
  @IsOptional()
  tenant_id?: string;

  @IsString()
  @IsNotEmpty({ message: 'La clave secreta es obligatoria' })
  secret_key: string;
}

================
File: src/management/auth/dto/login-response.dto.ts
================
export class JwtPayloadDto {
  email: string;
  id: string;
  name: string;
  last_name: string;
  role: string;
  image: string;
  tenant_id?: string;
  tenants?: TenantDto[];
}

export class TenantDto {
  id: string;
  name: string;
  type: string;
}

export class LoginResponseDto {
  message: string;
  jwt: string;
  user: JwtPayloadDto;
}

================
File: src/management/auth/dto/password-auth.dto.ts
================
import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class RequestPasswordDto {
  @ApiProperty({
    description: 'Email address of the user requesting password reset',
    example: 'user@example.com',
    required: true,
  })
  @IsEmail({}, { message: 'El correo electr√≥nico no tiene un formato v√°lido.' })
  email: string;
}

export class ResetPasswordDto {
  @ApiProperty({
    description: 'New password for the user',
    example: 'StrongP@ss123',
    required: true,
    minLength: 8,
  })
  @IsNotEmpty({ message: 'La contrase√±a es obligatoria.' })
  @IsStrongPassword(
    {
      minLength: 8,
      minNumbers: 1,
      minLowercase: 1,
      minUppercase: 1,
      minSymbols: 1,
    },
    {
      message:
        'La contrase√±a debe tener al menos 8 caracteres, incluyendo 1 n√∫mero, 1 letra min√∫scula, 1 letra may√∫scula y 1 s√≠mbolo.',
    },
  )
  password: string;

  @ApiProperty({
    description: 'Token received via email for password reset',
    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',
    required: true,
  })
  @IsNotEmpty({ message: 'El token es obligatorio.' })
  token: string;
}

================
File: src/management/auth/dto/update-auth.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreateAuthDto } from './create-auth.dto';

export class UpdateAuthDto extends PartialType(CreateAuthDto) {}

================
File: src/management/auth/entities/auth.entity.ts
================
export class Auth {}

================
File: src/management/patient/dto/create-patient.dto.ts
================
import { IsOptional, IsString, Length } from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';

export class CreatePatientDto {
  @ApiPropertyOptional({
    description: "Patient's street address",
    example: 'Av. Insurgentes Sur',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'La direcci√≥n debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'La direcci√≥n debe tener entre 3 y 50 caracteres.',
  })
  @IsOptional()
  direction?: string;

  @ApiProperty({
    description: "Patient's country",
    example: 'M√©xico',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'El pa√≠s debe ser un texto v√°lido.' })
  @Length(3, 50, { message: 'El pa√≠s debe tener entre 3 y 50 caracteres.' })
  country: string;

  @ApiProperty({
    description: "Patient's state/province",
    example: 'Ciudad de M√©xico',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'La provincia debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'La provincia debe tener entre 3 y 50 caracteres.',
  })
  province: string;

  @ApiProperty({
    description: "Patient's city",
    example: 'Coyoac√°n',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'La ciudad debe ser un texto v√°lido.' })
  @Length(3, 50, { message: 'La ciudad debe tener entre 3 y 50 caracteres.' })
  city: string;

  @ApiProperty({
    description: "Patient's postal code",
    example: '04510',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'El c√≥digo postal debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'El c√≥digo postal debe tener entre 3 y 50 caracteres.',
  })
  postal_code: string;

  @ApiPropertyOptional({
    description: "Patient's address number",
    example: '3000',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'El n√∫mero de direcci√≥n debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'El n√∫mero de direcci√≥n debe tener entre 3 y 50 caracteres.',
  })
  @IsOptional()
  direction_number?: string;

  @ApiPropertyOptional({
    description: "Patient's apartment number",
    example: '42B',
    minLength: 1,
    maxLength: 50,
  })
  @IsString({ message: 'El apartamento debe ser un texto v√°lido.' })
  @Length(1, 50, {
    message: 'El apartamento debe tener entre 3 y 50 caracteres.',
  })
  @IsOptional()
  apartment?: string;

  @ApiPropertyOptional({
    description: "Patient's health insurance number",
    example: 'IMSS-12345678',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'El n√∫mero de seguro m√©dico debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'El n√∫mero de seguro m√©dico debe tener entre 3 y 50 caracteres.',
  })
  @IsOptional()
  health_care_number?: string;
}

================
File: src/management/patient/dto/get-patient.dto.ts
================
export class GetPatientsDto {
  id: string;
  name: string;
  last_name: string;
  image: string;
  age: number;
  gender: string;
  email: string;
  phone: string;
  prefix: string;
  identification_number: string;
  identification_type: string;
  health_care_number: string;
  main_diagnostic_cie: string;
}

export class GetPatientDto {
  id: string;
  name: string;
  last_name: string;
  image: string;
  birth_date: Date;
  age: number;
  email: string;
  notes: string;
  vital_signs: VitalSignDto[];
  files: FileDto[];
  evaluation: EvaluationDto;
  background: BackgroundDto;
  current_medication: MedicationDto[];
  future_medical_events: MedicalEventDto[];
  past_medical_events: MedicalEventDto[];
}

export class VitalSignDto {
  id: string;
  vital_sign_category: string;
  measure: number;
  vital_sign_measure_unit: string;
}

export class FileDto {
  id: string;
  name: string;
  url: string;
}

export class EvaluationDto {
  id: string;
  details: string;
  date: Date;
}

export class BackgroundDto {
  id: string;
  details: string;
  date: Date;
}

export class MedicationDto {
  id: string;
  name: string;
  dosage: string;
  instructions: string;
  active: boolean;
}

export class MedicalEventDto {
  id: string;
  date: Date;
  time: string;
  doctor: string;
  reason: string;
  status: string;
}

================
File: src/management/patient/dto/medical-patient.dto.ts
================
import { Type } from 'class-transformer';
import { IsNotEmpty, ValidateNested } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

import { CreatePatientDto } from './create-patient.dto';
import { BaseUserDto } from 'src/management/user/dto/create-user.dto';

export class MedicalPatientDto {
  @ApiProperty({
    description: 'User information for the patient',
    type: () => BaseUserDto,
  })
  @ValidateNested()
  @Type(() => BaseUserDto)
  @IsNotEmpty({ message: 'El objeto user no puede estar vac√≠o' })
  user: Omit<BaseUserDto, 'role' | 'password'>;

  @ApiProperty({
    description: 'Patient specific information',
    type: () => CreatePatientDto,
  })
  @ValidateNested()
  @Type(() => CreatePatientDto)
  @IsNotEmpty({ message: 'El objeto patient no puede estar vac√≠o' })
  patient: CreatePatientDto;
}

================
File: src/management/patient/dto/update-patient.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreatePatientDto } from './create-patient.dto';

export class UpdatePatientDto extends PartialType(CreatePatientDto) {}

================
File: src/management/patient/entities/patient.interface.ts
================
export interface Patient {
  id?: string;
  direction?: string;
  country?: string;
  province?: string;
  city?: string;
  postal_code?: string;
  direction_number?: string;
  apparment?: string;
  health_care_number?: string;
  userId?: string;
  appointments?: any[];
  medical_events?: any[];
}

================
File: src/management/patient/patient.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  Query,
  UseGuards,
  HttpStatus,
} from '@nestjs/common';
import { PatientService } from './patient.service';
import { MedicalPatientDto } from './dto/medical-patient.dto';
import { PaginationParams } from 'src/utils/pagination.helper';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiQuery,
  ApiParam,
} from '@nestjs/swagger';

@ApiTags('Patients')
@ApiBearerAuth('access-token')
@Controller('patient')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class PatientController {
  constructor(private readonly patientService: PatientService) {}

  @Post()
  @ApiOperation({
    summary: 'Create patient',
    description: 'Creates a new patient in the system',
  })
  @ApiResponse({
    status: HttpStatus.CREATED,
    description: 'Patient successfully created',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid patient data',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.MANAGE_USERS)
  create(@Body() medicalPatientDto: MedicalPatientDto): Promise<object> {
    return this.patientService.create(medicalPatientDto);
  }
  @Get()
  @ApiOperation({
    summary: 'Get all patients',
    description: 'Returns a list of all patients with pagination',
  })
  @ApiQuery({
    name: 'page',
    required: false,
    description: 'Page number for pagination',
    type: Number,
  })
  @ApiQuery({
    name: 'limit',
    required: false,
    description: 'Number of records per page',
    type: Number,
  })
  @ApiQuery({
    name: 'search',
    required: false,
    description: 'Search query to filter patients',
    type: String,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'List of patients returned successfully',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.VIEW_PATIENTS_LIST)
  findAll(
    @Query() pagination?: PaginationParams,
    @Query('search') searchQuery?: string,
  ) {
    return this.patientService.findAll(pagination, searchQuery);
  }
  @Get(':id')
  @ApiOperation({
    summary: 'Get patient by ID',
    description: 'Returns a single patient by ID',
  })
  @ApiParam({
    name: 'id',
    description: 'ID of the patient to retrieve',
    type: String,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Patient found and returned successfully',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'Patient not found',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS)
  findOne(@Param('id') id: string) {
    return this.patientService.findOne(id);
  }
  @Patch(':id')
  @ApiOperation({
    summary: 'Update patient',
    description: 'Updates an existing patient by ID',
  })
  @ApiParam({
    name: 'id',
    description: 'ID of the patient to update',
    type: String,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Patient successfully updated',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Invalid patient data',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'Patient not found',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.EDIT_PATIENT_INFO)
  update(
    @Param('id') id: string,
    @Body() medicalPatientDto: MedicalPatientDto,
  ) {
    return this.patientService.update(id, medicalPatientDto);
  }
  @Delete(':id')
  @ApiOperation({
    summary: 'Delete patient',
    description: 'Deletes a patient by ID',
  })
  @ApiParam({
    name: 'id',
    description: 'ID of the patient to delete',
    type: String,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Patient successfully deleted',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'Patient not found',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.DELETE_PATIENTS)
  remove(@Param('id') id: string) {
    return this.patientService.remove(id);
  }
}

================
File: src/management/patient/patient.module.ts
================
import { Module } from '@nestjs/common';
import { PatientService } from './patient.service';
import { PatientController } from './patient.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { UserService } from 'src/management/user/user.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [PatientController],
  providers: [PatientService, PrismaService, UserService],
})
export class PatientModule {}

================
File: src/management/patient/patient.service.ts
================
import {
  BadRequestException,
  Injectable,
  NotFoundException,
  ForbiddenException,
} from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { EmailService } from 'src/services/email/email.service';
import { MedicalPatientDto } from './dto/medical-patient.dto';
import { sendCredentialsHtml } from 'src/services/email/templates/credentialsHtml';
import { GetPatientDto, GetPatientsDto } from './dto/get-patient.dto';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';
import { UserRoleManagerService } from '../../auth/roles/user-role-manager.service';
import { Prisma } from '@prisma/client';
import { AuthHelper } from 'src/utils/auth.helper';
import { ConfigService } from '@nestjs/config';
import { calculateAge } from 'src/utils/fuctions';
import { RequestContextService } from 'src/auth/services/request-context.service';
import { VitalSignsOptimizationService } from 'src/auth/services/vital-signs-optimization.service';

@Injectable()
export class PatientService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly configService: ConfigService,
    private readonly emailService: EmailService,
    private readonly userRoleManager: UserRoleManagerService,
    private readonly requestContext: RequestContextService,
    private readonly vitalSignsOptimization: VitalSignsOptimizationService,
  ) {}

  async create(medicalPatientDto: MedicalPatientDto): Promise<object> {
    try {
      const { patient, user } = medicalPatientDto;

      const tenant_id = global.tenant_id;

      if (!tenant_id) {
        throw new BadRequestException('No se ha especificado un tenant v√°lido');
      }

      const newPassword = `${user.name.charAt(0).toUpperCase() + user.name.slice(1) + '.' + user.dni}`;

      // Buscar si ya existe un usuario con ese email
      const existingUser = await this.prisma.user.findFirst({
        where: {
          email: user.email,
        },
        include: {
          patient: {
            include: {
              patient_tenant: {
                where: {
                  tenant_id: tenant_id,
                  deleted: false,
                },
              },
            },
          },
        },
      });

      // Determinar escenario y ejecutar l√≥gica correspondiente
      if (
        existingUser &&
        existingUser.patient &&
        existingUser.patient.patient_tenant &&
        existingUser.patient.patient_tenant.length > 0
      ) {
        // Caso 1: Usuario existe y ya est√° asociado a este tenant -> Error
        throw new BadRequestException(
          'El usuario ya existe para esta organizaci√≥n',
        );
      } else if (existingUser && existingUser.patient) {
        // Caso 2: Usuario existe como paciente pero no asociado a este tenant -> Asociar
        return await this._handleExistingPatientInTenant(
          existingUser,
          tenant_id,
        );
      } else if (existingUser && !existingUser.patient) {
        // Caso 3: Usuario existe pero no es paciente -> Convertir
        return await this._convertExistingUserToPatient(
          existingUser,
          patient,
          tenant_id,
        );
      } else {
        // Caso 4: Usuario no existe -> Crear nuevo
        return await this._createNewUserAndPatient(
          user,
          patient,
          tenant_id,
          newPassword,
        );
      }
    } catch (error) {
      console.error('Error al crear paciente:', error);
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException(
        'Error al crear el paciente: ' + error.message,
      );
    }
  }

  private async _handleExistingPatientInTenant(
    existingUser: any,
    tenant_id: string,
  ): Promise<object> {
    console.log(
      `üîó Usuario existente encontrado: ${existingUser.email}. Asociando al tenant: ${tenant_id}`,
    );

    await this.prisma.$transaction(async (transaction) => {
      // Crear la asociaci√≥n patient_tenant
      await transaction.patient_tenant.create({
        data: {
          patient_id: existingUser.patient.id,
          tenant_id: tenant_id,
        },
      });
    });

    // Asignar el rol de paciente para este tenant
    await this.userRoleManager.assignDefaultRoleToUser(
      existingUser.id,
      'patient',
      tenant_id,
    );

    return {
      message: 'Paciente asociado exitosamente a la organizaci√≥n',
      userId: existingUser.id,
      action: 'associated',
    };
  }

  private async _convertExistingUserToPatient(
    existingUser: any,
    patientData: any,
    tenant_id: string,
  ): Promise<object> {
    console.log(
      `üîÑ Usuario existente encontrado pero no es paciente: ${existingUser.email}. Creando registro de paciente.`,
    );

    let patientId: string;
    await this.prisma.$transaction(async (transaction) => {
      // Crear el registro de paciente
      const newPatient = await transaction.patient.create({
        data: {
          ...patientData,
          user_id: existingUser.id,
        },
      });

      patientId = newPatient.id;

      // Crear la asociaci√≥n patient_tenant
      await transaction.patient_tenant.create({
        data: {
          patient_id: newPatient.id,
          tenant_id: tenant_id,
        },
      });

      // Actualizar el rol del usuario a paciente si es necesario
      if (existingUser.role !== 'patient') {
        await transaction.user.update({
          where: { id: existingUser.id },
          data: { role: 'patient' },
        });
      }
    });

    // Asignar el rol de paciente para este tenant
    await this.userRoleManager.assignDefaultRoleToUser(
      existingUser.id,
      'patient',
      tenant_id,
    );

    return {
      message: 'Usuario convertido a paciente y asociado exitosamente',
      userId: existingUser.id,
      patientId: patientId,
      action: 'converted',
    };
  }

  private async _createNewUserAndPatient(
    userData: any,
    patientData: any,
    tenant_id: string,
    newPassword: string,
  ): Promise<object> {
    console.log(
      `‚ûï Usuario nuevo: ${userData.email}. Creando usuario y paciente desde cero.`,
    );

    let newUserId: string;
    const saltRounds = parseInt(
      this.configService.get<string>('BCRYPT_SALT_ROUNDS'),
    );

    // Pre-hash the password outside the transaction to avoid CPU-intensive operations within the transaction
    const hashedPassword = await AuthHelper.hashPassword(
      newPassword,
      saltRounds,
    );

    await this.prisma.$transaction(async (transaction) => {
      const newUser = await transaction.user.create({
        data: {
          ...userData,
          role: 'patient',
          password: hashedPassword,
        },
      });

      newUserId = newUser.id;

      const newPatient = await transaction.patient.create({
        data: {
          ...patientData,
          user_id: newUser.id,
        },
      });

      await transaction.patient_tenant.create({
        data: {
          patient_id: newPatient.id,
          tenant_id: tenant_id,
        },
      });
    });

    // Asignar el rol de paciente para este tenant
    await this.userRoleManager.assignDefaultRoleToUser(
      newUserId,
      'patient',
      tenant_id,
    );

    // Enviar credenciales por email para usuarios nuevos
    await this.emailService.sendMail(
      userData.email,
      'Credenciales Segimed',
      sendCredentialsHtml(userData.email, newPassword),
    );

    return {
      message: 'Paciente creado exitosamente',
      userId: newUserId,
      action: 'created',
    };
  }

  async findAll(
    pagination: PaginationParams,
    searchQuery?: string,
  ): Promise<{
    currentPage: number;
    totalPages: number;
    totalItems: number;
    data: GetPatientsDto[];
  }> {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(pagination);

      const page = pagination.page ? parseInt(String(pagination.page), 10) : 1;

      const tenant_id = global.tenant_id;

      if (!tenant_id) {
        throw new BadRequestException('No se ha especificado un tenant v√°lido');
      }

      let searchFilter: Prisma.patientWhereInput = {};
      if (searchQuery) {
        searchFilter = {
          OR: [
            { user: { name: { contains: searchQuery, mode: 'insensitive' } } },
            {
              user: {
                last_name: { contains: searchQuery, mode: 'insensitive' },
              },
            },
            {
              user: {
                identification_number: {
                  contains: searchQuery,
                  mode: 'insensitive',
                },
              },
            },
            {
              health_care_number: {
                contains: searchQuery,
                mode: 'insensitive',
              },
            },
          ],
        };
      }

      const where: Prisma.patientWhereInput = {
        patient_tenant: {
          some: {
            tenant_id: tenant_id,
            deleted: false,
          },
        },
        user: {
          role: 'patient',
        },
        ...searchFilter,
      };

      const [patients, totalItems] = await this.prisma.$transaction([
        this.prisma.patient.findMany({
          where,
          include: {
            user: {
              include: {
                identification_type: true,
                medical_event_patient: {
                  select: {
                    main_diagnostic_cie: true,
                  },
                  where: {
                    deleted: false,
                    appointment: {
                      status: 'atendida',
                    },
                  },
                  orderBy: {
                    updated_at: 'desc',
                  },
                  take: 1,
                },
              },
            },
          },
          skip,
          take,
          orderBy:
            orderBy === 'name' ||
            orderBy === 'last_name' ||
            orderBy === 'email' ||
            orderBy === 'dni'
              ? { user: { [orderBy]: orderDirection } }
              : { [orderBy]: orderDirection },
        }),
        this.prisma.patient.count({
          where,
        }),
      ]);

      const totalPages = Math.ceil(totalItems / take);

      const data = patients.map((patient) => {
        const user = patient.user;
        return {
          id: user.id,
          name: user.name,
          last_name: user.last_name || '',
          image: user.image,
          age: calculateAge(user.birth_date),
          gender: user.gender || '',
          email: user.email,
          phone: user.phone || '',
          prefix: user.phone_prefix || '',
          identification_number: user.identification_number || '',
          identification_type: user.identification_type?.name || '',
          health_care_number: patient.health_care_number || '',
          main_diagnostic_cie:
            user.medical_event_patient[0]?.main_diagnostic_cie.description ||
            '',
        };
      });

      return {
        currentPage: page,
        totalPages,
        totalItems,
        data,
      };
    } catch (error) {
      console.error('Error en findAll:', error);
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException('Error al obtener los pacientes');
    }
  }

  async findOne(id: string): Promise<GetPatientDto> {
    try {
      const tenant_id = this.requestContext.getTenantId();

      if (!tenant_id) {
        throw new BadRequestException('No se ha especificado un tenant v√°lido');
      }

      const patient = await this.prisma.patient.findFirst({
        where: {
          user_id: id,
          patient_tenant: {
            some: {
              tenant_id,
              deleted: false,
            },
          },
        },
        include: {
          user: true,
        },
      });

      if (!patient) {
        throw new NotFoundException('Paciente no encontrado en este tenant');
      }

      // Obtener tenant IDs del paciente
      const patientTenants = await this.prisma.patient_tenant.findMany({
        where: {
          patient: {
            user_id: id,
          },
          deleted: false,
        },
        select: { tenant_id: true },
      });

      const tenantIds = patientTenants.map((pt) => pt.tenant_id);

      // Si no hay organizaciones asociadas, incluir el tenant actual como fallback
      if (!tenantIds.includes(tenant_id)) {
        tenantIds.push(tenant_id);
      }

      // Obtener signos vitales de manera optimizada usando el nuevo servicio
      const vitalSignsData =
        await this.vitalSignsOptimization.getVitalSignsDataForPatientView(
          id,
          tenantIds,
        );

      // Ejecutar todas las queries independientes en paralelo
      const [
        files,
        latestMedicalEvent,
        background,
        medications,
        futureMedicalEvents,
        pastMedicalEvents,
      ] = await Promise.all([
        // Get patient files (studies) - Multitenant support
        this.prisma.patient_study.findMany({
          where: {
            patient_id: id,
            tenant_id: { in: tenantIds }, // Buscar en todas las organizaciones del paciente
            is_deleted: false,
          },
          select: {
            id: true,
            title: true,
            url: true,
          },
        }),

        // Get the latest medical event with status COMPLETED
        this.prisma.medical_event.findFirst({
          where: {
            patient_id: id,
            tenant_id,
            deleted: false,
            appointment: {
              status: 'atendida',
            },
          },
          orderBy: {
            created_at: 'desc',
          },
          include: {
            vital_signs: {
              include: {
                vital_sign: true,
              },
            },
          },
        }),

        // Get the latest patient background
        this.prisma.background.findFirst({
          where: {
            patient_id: id,
            tenant_id,
          },
          orderBy: {
            created_at: 'desc',
          },
        }),

        // Get active medications
        this.prisma.prescription.findMany({
          where: {
            patient_id: id,
            tenant_id,
            active: true,
          },
          include: {
            pres_mod_history: {
              orderBy: {
                mod_timestamp: 'desc',
              },
              take: 1,
            },
          },
        }),

        // Get future medical events (upcoming appointments)
        this.prisma.appointment.findMany({
          where: {
            patient_id: id,
            tenant_id,
            status: {
              in: ['pendiente'],
            },
            deleted: false,
          },
          orderBy: {
            start: 'asc',
          },
          include: {
            physician: true,
          },
        }),

        // Get past medical events (past appointments)
        this.prisma.appointment.findMany({
          where: {
            patient_id: id,
            tenant_id,
            start: {
              lt: new Date(),
            },
            status: {
              in: ['atendida', 'cancelada'],
            },
            deleted: false,
          },
          orderBy: {
            start: 'desc',
          },
          include: {
            physician: true,
          },
        }),
      ]);

      const formattedFiles = files.map((file) => ({
        id: file.id,
        name: file.title,
        url: file.url || '',
      }));

      // Format evaluation from latest medical event
      const evaluation = latestMedicalEvent
        ? {
            id: latestMedicalEvent.id,
            details: latestMedicalEvent.physician_comments || '',
            date: latestMedicalEvent.created_at,
          }
        : null;

      // Format background
      const backgroundData = background
        ? {
            id: background.id,
            details: `
          Vacunas: ${background.vaccinations || ''}
          Alergias: ${background.allergies || ''}
          Antecedentes patol√≥gicos: ${background.pathological_history || ''}
          Antecedentes familiares: ${background.family_medical_history || ''}
          Antecedentes no patol√≥gicos: ${background.non_pathological_history || ''}
          Antecedentes quir√∫rgicos: ${background.surgical_history || ''}
          Antecedentes de infancia: ${background.childhood_medical_history || ''}
          Medicaci√≥n actual: ${background.current_medication || ''}
        `,
            date: background.created_at,
          }
        : null;

      // Format medical events
      const formatMedicalEvents = (events) =>
        events.map((event) => {
          // Extract time from date or use a default time
          const date = new Date(event.start);
          const hours = date.getHours().toString().padStart(2, '0');
          const minutes = date.getMinutes().toString().padStart(2, '0');
          const timeStr = `${hours}:${minutes}`;

          return {
            id: event.id,
            date: date,
            time: timeStr,
            doctor: `${event.physician.name || ''} ${event.physician.last_name || ''}`,
            reason: event.consultation_reason || '',
            status: event.status,
          };
        });

      const user = patient.user;

      return {
        id: user.id,
        name: user.name,
        last_name: user.last_name || '',
        image: user.image,
        age: calculateAge(user.birth_date),
        birth_date: user.birth_date,
        email: user.email,
        notes: patient.notes || '',
        vital_signs: vitalSignsData,
        files: formattedFiles,
        evaluation: evaluation,
        background: backgroundData,
        current_medication: medications.map((med) => {
          const lastModification =
            med.pres_mod_history && med.pres_mod_history.length > 0
              ? med.pres_mod_history[0]
              : null;
          return {
            id: med.id,
            name: med.monodrug,
            dosage: lastModification
              ? `${lastModification.dose} ${lastModification.dose_units}`
              : '',
            instructions: lastModification
              ? `${lastModification.frecuency}, durante ${lastModification.duration} ${lastModification.duration_units}`
              : '',
            active: med.active,
          };
        }),
        future_medical_events: formatMedicalEvents(futureMedicalEvents),
        past_medical_events: formatMedicalEvents(pastMedicalEvents),
      };
    } catch (error) {
      console.error('Error en findOne:', error);
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error al obtener el paciente: ' + error.message,
      );
    }
  }

  async update(id: string, updatePatientDto: MedicalPatientDto) {
    try {
      const tenant_id = global.tenant_id;
      if (!tenant_id) {
        throw new BadRequestException('No se ha especificado un tenant v√°lido');
      }

      const patient = await this.prisma.patient.findFirst({
        where: {
          user_id: id,
          patient_tenant: {
            some: {
              tenant_id,
              deleted: false,
            },
          },
        },
      });

      await this.prisma.user.update({
        where: { id },
        data: {
          ...updatePatientDto.user,
        },
      });

      if (!patient) {
        throw new NotFoundException('Paciente no encontrado en este tenant');
      }

      await this.prisma.patient.update({
        where: { user_id: id },
        data: {
          ...updatePatientDto.patient,
        },
      });

      return { message: 'Paciente actualizado correctamente' };
    } catch (error) {
      console.error('Error en update:', error);
      if (error instanceof NotFoundException) {
        throw error;
      }
      if (error?.code === 'P2025') {
        throw new NotFoundException('Paciente no encontrado');
      }
      throw new BadRequestException('Error al actualizar el paciente');
    }
  }

  async remove(id: string) {
    try {
      const tenant_id = global.tenant_id;

      if (!tenant_id) {
        throw new BadRequestException('No se ha especificado un tenant v√°lido');
      }

      const patient = await this.prisma.patient.findFirst({
        where: {
          user_id: id,
          patient_tenant: {
            some: {
              tenant_id,
              deleted: false,
            },
          },
        },
      });

      if (!patient) {
        throw new NotFoundException('Paciente no encontrado en este tenant');
      }

      const patientTenant = await this.prisma.patient_tenant.findFirst({
        where: {
          patient_id: patient.id,
          tenant_id,
          deleted: false,
        },
      });

      if (!patientTenant) {
        throw new ForbiddenException(
          'No tiene permiso para eliminar este paciente',
        );
      }

      await this.prisma.patient_tenant.update({
        where: {
          id: patientTenant.id,
        },
        data: {
          deleted: true,
          deleted_at: new Date(),
        },
      });

      return { message: 'Paciente eliminado correctamente del tenant' };
    } catch (error) {
      console.error('Error en remove:', error);
      if (
        error instanceof NotFoundException ||
        error instanceof ForbiddenException
      ) {
        throw error;
      }
      throw new BadRequestException('Error al eliminar el paciente');
    }
  }
}

================
File: src/management/suscription/paypal/paypal.controller.ts
================
/* import { Controller, Post, Body, Param } from '@nestjs/common';
import { PayPalService } from './services/paypal.service';
import { TransactionService } from './services/transaction.service';

@Controller('paypal')
export class PayPalController {
  constructor(
    private readonly payPalService: PayPalService,
    private readonly transactionService: TransactionService,
  ) {}

  @Post('capture-order/:orderId')
  async captureOrder(
    @Param('orderId') orderId: string,
    @Body() body: { userId: string },
  ) {
    const captureResult = await this.payPalService.captureOrder(orderId);

    // Guardar la transacci√≥n en la base de datos
    await this.transactionService.createTransaction({
      orderId,
      status: captureResult.status,
      amount: parseFloat(captureResult.purchase_units[0].amount.value),
      currency: captureResult.purchase_units[0].amount.currency_code,
      userId: body.userId,
      tenant_id: body.userId,
    });

    return captureResult;
  }
}
 */

================
File: src/management/suscription/paypal/paypal.module.ts
================
/* import { Module } from '@nestjs/common';
import { PayPalService } from './services/paypal.service';
import { PayPalController } from './paypal.controller';
import { TransactionService } from './services/transaction.service';

@Module({
  controllers: [PayPalController],
  providers: [PayPalService, TransactionService],
})
export class PayPalModule {}
 */

================
File: src/management/suscription/paypal/services/paypal.service.ts
================
import { Injectable } from '@nestjs/common';
import * as paypal from '@paypal/checkout-server-sdk';

@Injectable()
export class PayPalService {
  private environment:
    | paypal.core.SandboxEnvironment
    | paypal.core.LiveEnvironment;
  private client: paypal.core.PayPalHttpClient;

  constructor() {
    const clientId = process.env.PAYPAL_CLIENT_ID;
    const clientSecret = process.env.PAYPAL_CLIENT_SECRET;

    // Configura el entorno (Sandbox o Live)
    this.environment = new paypal.core.SandboxEnvironment(
      clientId,
      clientSecret,
    );
    this.client = new paypal.core.PayPalHttpClient(this.environment);
  }

  async createOrder(total: string, currency: string) {
    const request = new paypal.orders.OrdersCreateRequest();
    request.requestBody({
      intent: 'CAPTURE',
      purchase_units: [
        {
          amount: {
            currency_code: currency,
            value: total,
          },
        },
      ],
    });

    try {
      const response = await this.client.execute(request);
      return response.result;
    } catch (error) {
      throw new Error(`PayPal Order Creation Error: ${error.message}`);
    }
  }

  async captureOrder(orderId: string) {
    const request = new paypal.orders.OrdersCaptureRequest(orderId);
    request.requestBody({});

    try {
      const response = await this.client.execute(request);
      return response.result;
    } catch (error) {
      throw new Error(`PayPal Order Capture Error: ${error.message}`);
    }
  }
}

================
File: src/management/suscription/paypal/services/transaction.service.ts
================
/* import { Injectable } from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';

@Injectable()
export class TransactionService {
  constructor(private readonly prisma: PrismaService) {}

  async createTransaction(data: {
    orderId: string;
    status: string;
    amount: number;
    currency: string;
    userId: string;
    tenant_id: string;
  }) {
    return this.prisma.transaction.create({ data });
  }

  async getTransactionsByUser(userId: string) {
    return this.prisma.transaction.findMany({
      where: { userId },
    });
  }
}
 */

================
File: src/management/user/dto/create-user.dto.ts
================
import {
  IsEmail,
  IsNotEmpty,
  IsOptional,
  IsString,
  IsUrl,
  Length,
} from 'class-validator';
import { role_type } from '@prisma/client';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';

export class BaseUserDto {
  @ApiProperty({
    description: "User's first name",
    example: 'Juan',
    minLength: 2,
    maxLength: 50,
  })
  @IsString({ message: 'El nombre debe ser un texto v√°lido.' })
  @Length(2, 50, { message: 'El nombre debe tener entre 2 y 50 caracteres.' })
  @IsNotEmpty({ message: 'El nombre es obligatorio.' })
  name: string;

  @ApiProperty({
    description: "User's last name",
    example: 'P√©rez',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'El apellido debe ser un texto v√°lido.' })
  @Length(3, 50, { message: 'El apellido debe tener entre 3 y 50 caracteres.' })
  last_name: string;

  @ApiProperty({
    description: "User's email address",
    example: 'juan.perez@example.com',
  })
  @IsEmail({}, { message: 'El correo electr√≥nico no tiene un formato v√°lido.' })
  @IsNotEmpty({ message: 'El correo electr√≥nico es obligatorio.' })
  email: string;

  @ApiPropertyOptional({
    description: "User's national ID number",
    example: '12345678',
    minLength: 7,
    maxLength: 9,
  })
  @IsString({ message: 'El DNI debe ser un texto v√°lido.' })
  @Length(7, 9, { message: 'El DNI debe tener entre 7 y 9 caracteres.' })
  @IsOptional()
  dni?: string;

  @ApiPropertyOptional({
    description: "User's birth date",
    example: '1990-01-01',
  })
  @IsOptional()
  birth_date?: Date;

  @ApiPropertyOptional({
    description: "User's nationality",
    example: 'Mexicana',
    minLength: 3,
    maxLength: 50,
  })
  @IsString({ message: 'La nacionalidad debe ser un texto v√°lido.' })
  @Length(3, 50, {
    message: 'La nacionalidad debe tener entre 3 y 50 caracteres.',
  })
  @IsOptional()
  nationality: string;

  @ApiPropertyOptional({
    description: "User's gender",
    example: 'Masculino',
    minLength: 1,
    maxLength: 14,
  })
  @IsString({ message: 'El g√©nero debe ser un texto v√°lido.' })
  @Length(1, 14, { message: 'El g√©nero debe tener entre 1 y 14 caracteres.' })
  @IsOptional()
  gender: string;

  @ApiPropertyOptional({
    description: 'Phone number prefix (country code)',
    example: '+52',
    minLength: 1,
    maxLength: 4,
  })
  @IsString({ message: 'El prefijo del tel√©fono debe ser un texto v√°lido.' })
  @Length(1, 4, {
    message: 'El prefijo del tel√©fono debe tener entre 1 y 4 caracteres.',
  })
  @IsOptional()
  phone_prefix?: string;

  @ApiPropertyOptional({
    description: "User's phone number",
    example: '9876543210',
    minLength: 4,
    maxLength: 20,
  })
  @IsString({ message: 'El n√∫mero de tel√©fono debe ser un texto v√°lido.' })
  @Length(4, 20, {
    message: 'El n√∫mero de tel√©fono debe tener entre 4 y 20 caracteres.',
  })
  @IsOptional()
  phone?: string;

  @ApiPropertyOptional({
    description: "URL to user's profile image",
    example: 'https://example.com/profile.jpg',
  })
  @IsUrl({}, { message: 'La URL de la imagen no tiene un formato v√°lido.' })
  @IsOptional()
  image: string;

  @ApiPropertyOptional({
    description: "User's role in the system",
    example: 'patient',
    enum: ['patient', 'physician', 'admin', 'secretary'],
  })
  @IsString({ message: 'El rol debe ser un texto v√°lido.' })
  @IsOptional()
  role: role_type;
}

export class CreateUserDto extends BaseUserDto {
  @ApiProperty({
    description: "User's password",
    example: 'StrongP@ss123',
    minLength: 8,
    writeOnly: true,
  })
  @IsNotEmpty({ message: 'La contrase√±a es obligatoria.' })
  password?: string;
}

export class GoogleUserDto {
  @ApiPropertyOptional({
    description: "User's name from Google account",
    example: 'Juan P√©rez',
  })
  @IsOptional()
  name: string;

  @ApiProperty({
    description: "User's email from Google account",
    example: 'juan.perez@gmail.com',
  })
  @IsEmail({}, { message: 'El correo electr√≥nico no tiene un formato v√°lido.' })
  @IsNotEmpty({ message: 'El correo electr√≥nico es obligatorio.' })
  email: string;

  @ApiPropertyOptional({
    description: "URL to user's Google profile image",
    example: 'https://lh3.googleusercontent.com/a-/profile-picture',
  })
  @IsOptional()
  image: string;
}

================
File: src/management/user/dto/onboarding-user.dto.ts
================
import { tenant_type } from '@prisma/client';
import {
  IsEnum,
  IsNotEmpty,
  IsOptional,
  IsString,
  IsInt,
  Min,
  MaxLength,
} from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';

export class OnboardingDto {
  @ApiProperty({
    description: 'ID del usuario que completa el onboarding',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  @IsNotEmpty({ message: 'El id del usuario es obligatorio' })
  user_id: string;

  @ApiProperty({
    description: 'Nombre de la organizaci√≥n o consultorio',
    example: 'Cl√≠nica M√©dica Especializada',
    maxLength: 50,
  })
  @IsString()
  @IsNotEmpty({ message: 'El nombre es obligatorio' })
  @MaxLength(50, { message: 'El nombre no puede tener m√°s de 50 caracteres' })
  name: string;

  @ApiProperty({
    description: 'Tipo de tenant (individual u organizaci√≥n)',
    enum: tenant_type,
    example: 'organization',
  })
  @IsEnum(tenant_type, {
    message: `El tipo debe ser uno de los siguientes: ${Object.values(tenant_type).join(', ')}`,
  })
  type: tenant_type;

  @ApiPropertyOptional({
    description: 'N√∫mero de empleados (solo para organizaciones)',
    example: 10,
    minimum: 1,
  })
  @IsOptional()
  @IsInt({ message: 'El n√∫mero de empleados debe ser un n√∫mero entero' })
  @Min(1, { message: 'Debe haber al menos 1 empleado' })
  number_of_employees?: number;

  @ApiPropertyOptional({
    description: 'N√∫mero de pacientes estimados',
    example: 100,
    minimum: 1,
  })
  @IsOptional()
  @IsInt({ message: 'El n√∫mero de pacientes debe ser un n√∫mero entero' })
  @Min(1, { message: 'Debe haber al menos 1 paciente' })
  number_of_patients?: number;

  @ApiProperty({
    description: 'Motivo de registro en la plataforma',
    example: 'Mejorar la gesti√≥n de pacientes y citas',
    maxLength: 50,
  })
  @IsString()
  @IsNotEmpty({ message: 'El motivo de registro es obligatorio' })
  @MaxLength(50, {
    message: 'El motivo de registro no puede tener m√°s de 50 caracteres',
  })
  reason_register: string;

  @ApiProperty({
    description: 'IDs de las especialidades m√©dicas',
    example: [1, 3, 5],
    type: [Number],
  })
  @IsNotEmpty({ message: 'La especialidad es obligatoria' })
  speciality?: number[];
}

================
File: src/management/user/dto/update-user.dto.ts
================
import { PartialType } from '@nestjs/mapped-types';
import { CreateUserDto } from './create-user.dto';

export class UpdateUserDto extends PartialType(CreateUserDto) {}

================
File: src/management/user/entities/user.interface.ts
================
import { role_type } from '@prisma/client';
/* import { Tenant } from 'src/tenant/entities/tenant.interface';
 */
export interface User {
  id?: string;
  name?: string;
  last_name?: string;
  email?: string;
  dni?: string;
  dniType?: string;
  birthdate?: Date;
  nationality?: string;
  gender?: string;
  phone_prefix?: string;
  phone?: string;
  password?: string;
  google_id?: string;
  image?: string;
  role?: role_type;
  /*   tenant?: Tenant; */
  tenant_id?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

================
File: src/management/user/roles.enum.ts
================
export enum Rol {
  Patient = 'patient',
  Physician = 'physician',
  Organization_owner = 'organization_owner',
}

================
File: src/management/user/user.controller.ts
================
import {
  Controller,
  Get,
  Body,
  Patch,
  Param,
  Delete,
  Post,
  UseGuards,
} from '@nestjs/common';
import { UserService } from './user.service';
import { UpdateUserDto } from './dto/update-user.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiHeader,
} from '@nestjs/swagger';
import { OnboardingDto } from './dto/onboarding-user.dto';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { GetTenant } from '../../auth/decorators/get-tenant.decorator';

@ApiTags('Users')
@Controller('user')
export class UserController {
  constructor(private readonly userService: UserService) {}

  @Post('onboarding')
  @ApiOperation({
    summary: 'Completa el proceso de onboarding para un usuario',
    description:
      'Completa el registro de un usuario en la plataforma, creando un tenant asociado y configurando detalles espec√≠ficos del m√©dico',
  })
  @ApiResponse({
    status: 201,
    description: 'El proceso de onboarding se ha completado correctamente',
  })
  @ApiResponse({
    status: 400,
    description: 'Error en la solicitud - Usuario inexistente o ya es m√©dico',
  })
  onboarding(@Body() onboardingDto: OnboardingDto) {
    return this.userService.onboarding(onboardingDto);
  }
  @Get()
  @UseGuards(TenantAccessGuard)
  @ApiOperation({ summary: 'Obtiene todos los usuarios del tenant actual' })
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant',
    required: true,
  })
  @ApiResponse({
    status: 200,
    description: 'Lista de todos los usuarios del tenant actual',
  })
  findAll(@GetTenant() tenant_id: string) {
    return this.userService.findAll(tenant_id);
  }

  @Get(':id')
  @ApiOperation({ summary: 'Busca un usuario por su ID' })
  @ApiParam({ name: 'id', description: 'ID del usuario a buscar' })
  @ApiResponse({
    status: 200,
    description: 'Usuario encontrado',
  })
  @ApiResponse({
    status: 404,
    description: 'Usuario no encontrado',
  })
  findOneById(@Param('id') id: string, @GetTenant() tenant_id: string) {
    return this.userService.findOneById(id, tenant_id);
  }
  @Get('email/:email')
  @ApiOperation({ summary: 'Busca un usuario por su direcci√≥n de email' })
  @ApiParam({ name: 'email', description: 'Email del usuario a buscar' })
  @ApiResponse({
    status: 200,
    description: 'Usuario encontrado',
  })
  @ApiResponse({
    status: 404,
    description: 'Usuario no encontrado',
  })
  findOneByEmail(
    @Param('email') email: string,
    @GetTenant() tenant_id: string,
  ) {
    return this.userService.findOneByEmail(email, tenant_id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Actualiza los datos de un usuario' })
  @ApiParam({ name: 'id', description: 'ID del usuario a actualizar' })
  @ApiResponse({
    status: 200,
    description: 'Usuario actualizado correctamente',
  })
  @ApiResponse({
    status: 400,
    description: 'Error en la solicitud',
  })
  @ApiResponse({
    status: 404,
    description: 'Usuario no encontrado',
  })
  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {
    return this.userService.update(+id, updateUserDto);
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Elimina un usuario' })
  @ApiParam({ name: 'id', description: 'ID del usuario a eliminar' })
  @ApiResponse({
    status: 200,
    description: 'Usuario eliminado correctamente',
  })
  @ApiResponse({
    status: 404,
    description: 'Usuario no encontrado',
  })
  remove(@Param('id') id: string) {
    return this.userService.remove(+id);
  }
}

================
File: src/management/user/user.module.ts
================
import { Module } from '@nestjs/common';
import { UserService } from './user.service';
import { UserController } from './user.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [UserController],
  providers: [UserService, PrismaService],
})
export class UserModule {}

================
File: src/management/user/user.service.ts
================
import { BadRequestException, Injectable } from '@nestjs/common';
// import { Tenant } from 'src/tenant/entities/tenant.entity';
import { PrismaService } from 'src/prisma/prisma.service';
import { UpdateUserDto } from './dto/update-user.dto';
import { OnboardingDto } from './dto/onboarding-user.dto';
import { UserRoleManagerService } from '../../auth/roles/user-role-manager.service';

@Injectable()
export class UserService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly userRoleManager: UserRoleManagerService,
  ) {}

  async onboarding(onboardingDto: OnboardingDto): Promise<object> {
    try {
      const { speciality, user_id, ...rest } = onboardingDto;

      const user = await this.prisma.user.findUnique({
        where: { id: user_id },
      });

      if (!user) {
        throw new BadRequestException('El usuario no existe');
      }

      let tenantId: string;

      await this.prisma.$transaction(async (transaction) => {
        const newTenant = await transaction.tenant.create({
          data: {
            type: onboardingDto.type,
          },
        });

        tenantId = newTenant.id;

        const existingPhysician = await transaction.physician.findFirst({
          where: { user_id },
        });
        if (existingPhysician) {
          throw new BadRequestException('El usuario ya es un m√©dico.');
        }

        const newPhysician = await transaction.physician.create({
          data: {
            user_id,
            tenant_id: newTenant.id,
          },
        });
        const newPhysicianSpeciality = speciality.map((speciality) => {
          return {
            physician_id: newPhysician.id,
            speciality_id: speciality,
          };
        });

        await transaction.physician_speciality.createMany({
          data: newPhysicianSpeciality,
          skipDuplicates: true,
        });

        await transaction.user.update({
          where: { id: user_id },
          data: {
            tenant_id: newTenant.id,
          },
        });

        const newOrganization = await transaction.organization.create({
          data: {
            tenant_id: newTenant.id,
            ...rest,
          },
        });

        await transaction.organization_physician.create({
          data: {
            physician_id: newPhysician.id,
            organization_id: newOrganization.id,
            tenant_id: newTenant.id,
          },
        });
      });

      // Asignar rol de Admin al m√©dico
      await this.userRoleManager.assignDefaultRoleToUser(
        user_id,
        'physician',
        tenantId,
      );

      return { message: 'Onboarding completo.' };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      console.log(error);
      throw new BadRequestException('No se pudo guardar la informaci√≥n.');
    }
  }
  async findAll(tenant_id: string): Promise<any[]> {
    const users = await this.prisma.user.findMany({
      where: { tenant_id },
    });
    return users;
  }

  async findOneById(id: string, tenant_id: string) {
    try {
      const user = await this.prisma.user.findFirst({
        where: {
          id,
          tenant_id,
        },
      });
      if (user) {
        return { message: 'Success', user: user };
      } else {
        return { message: 'El usuario no existe' };
      }
    } catch (error) {
      return { message: 'Error en la consulta', Error: error };
    }
  }
  async findOneByEmail(email: string, tenant_id: string) {
    try {
      const user = await this.prisma.user.findFirst({
        where: {
          email,
          tenant_id,
        },
      });
      if (user) {
        return { message: 'Success', user: user };
      } else {
        return { message: 'El usuario no existe' };
      }
    } catch (error) {
      return { message: 'Error en la consulta', Error: error };
    }
  }

  update(id: number, updateUserDto: UpdateUserDto) {
    console.log(updateUserDto);
    return `This action updates a #${id} user`;
  }

  remove(id: number) {
    return `This action removes a #${id} user`;
  }
}

================
File: src/medical_order/dto/create-medical_order.dto.ts
================
import {
  IsDateString,
  IsInt,
  IsOptional,
  IsString,
  IsUUID,
  IsBoolean,
  ValidateNested,
  IsArray,
  Matches,
} from 'class-validator';
import { Type } from 'class-transformer';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';

export class MedicationDto {
  @IsString()
  @ApiProperty({
    description: 'Name of the medicine monodrug',
    example: 'Paracetamol',
  })
  monodrug: string;

  @IsString()
  @ApiProperty({
    description: 'Dose amount',
    example: '500',
  })
  dose: string;

  @IsString()
  @ApiProperty({
    description: 'Units for the dose',
    example: 'mg',
  })
  dose_units: string;

  @IsString()
  @ApiProperty({
    description: 'Frequency of administration',
    example: 'Every 8 hours',
  })
  frecuency: string;

  @IsString()
  @ApiProperty({
    description: 'Duration of treatment',
    example: '7',
  })
  duration: string;

  @IsString()
  @ApiProperty({
    description: 'Units for the duration',
    example: 'days',
  })
  duration_units: string;

  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'Additional observations about the medication',
    example: 'Take with food',
  })
  observations?: string;

  @IsOptional()
  @IsBoolean()
  @ApiPropertyOptional({
    description: 'Indicates if the medication is authorized',
    example: true,
  })
  authorized?: boolean;
}

export class CreateMedicalOrderDto {
  @IsString()
  @IsUUID()
  @ApiProperty({
    description: 'UUID of the patient',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  patient_id: string;

  @IsOptional()
  @IsInt()
  @ApiPropertyOptional({
    description: 'ID of the CIE10 diagnosis category',
    example: 123,
  })
  category_cie_diez_id?: number;

  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'Additional text for the medical order',
    example: 'Patient needs to follow a strict diet',
  })
  additional_text?: string;

  @IsOptional()
  @IsDateString()
  @ApiPropertyOptional({
    description: 'Date when the order should be applied',
    example: '2025-05-20T12:00:00Z',
  })
  application_date?: Date;

  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'Description of the order type',
    example: 'Prescription',
  })
  description_type?: string;

  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'URL to any related document or resource',
    example: 'https://example.com/resources/123',
  })
  url?: string;

  // Campos espec√≠ficos para autorizaci√≥n de estudios
  @IsOptional()
  @IsInt()
  @ApiPropertyOptional({
    description: 'ID of the study type category',
    example: 456,
  })
  cat_study_type_id?: number;

  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'Reason for the request',
    example: 'Monitoring chronic condition',
  })
  request_reason?: string;

  // Campos espec√≠ficos para certificados
  @IsOptional()
  @IsInt()
  @ApiPropertyOptional({
    description: 'ID of certification type category',
    example: 789,
  })
  cat_certification_type_id?: number;

  // Campos espec√≠ficos para hospitalizaci√≥n
  @IsOptional()
  @IsString()
  @ApiPropertyOptional({
    description: 'Reason for hospitalization',
    example: 'Severe dehydration requiring IV fluids',
  })
  hospitalization_reason?: string;

  // Campos espec√≠ficos para solicitud de turno
  @IsOptional()
  @IsInt()
  @ApiPropertyOptional({
    description: 'ID of medical specialty category',
    example: 101,
  })
  cat_speciality_id?: number;

  // Campos para medicaci√≥n
  @IsOptional()
  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => MedicationDto)
  @ApiPropertyOptional({
    description: 'List of medications prescribed',
    type: [MedicationDto],
  })
  medications?: MedicationDto[];

  // Campo para archivo base64
  @IsOptional()
  @IsString({ message: 'El archivo en base64 debe ser una cadena de texto' })
  @Matches(/^data:(image\/[^;]+|application\/pdf);base64,/, {
    message:
      'El formato del archivo base64 no es v√°lido. Debe ser un DATA URI v√°lido (data:mimetype;base64,)',
  })
  @ApiPropertyOptional({
    description: 'Base64 encoded file (image or PDF)',
    example: 'data:application/pdf;base64,JVBERi0xLjYNJeLjz9...',
  })
  file?: string;
}

================
File: src/medical_order/dto/medical-order-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';

export class MedicalOrderBaseResponseDto {
  @ApiProperty({
    description: 'Unique identifier of the medical order',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  id: string;

  @ApiProperty({
    description: 'URL to access the medical order',
    example: 'https://example.com/orders/123',
  })
  url: string;

  @ApiProperty({
    description: 'Date when the order was requested',
    example: '2025-05-20T14:30:00Z',
  })
  request_date: Date;

  @ApiProperty({
    description: 'Name of the organization providing the order',
    example: 'General Hospital',
  })
  organization_name: string;

  @ApiProperty({
    description: 'Full name of the physician who created the order',
    example: 'Dr. Jane Smith',
  })
  physician_name: string;
}

export class MedicalOrderPhysicianResponseDto extends MedicalOrderBaseResponseDto {
  @ApiProperty({
    description: 'Full name of the patient',
    example: 'John Doe',
  })
  patient_name: string;

  @ApiProperty({
    description: 'Type of medical order',
    example: 'Prescription',
  })
  order_type: string;
}

export class MedicalOrderPatientResponseDto extends MedicalOrderBaseResponseDto {
  @ApiProperty({
    description: 'Type of medical order',
    example: 'Prescription',
  })
  order_type: string;

  @ApiProperty({
    description: 'ID of the tenant/organization',
    example: '123e4567-e89b-12d3-a456-426614174001',
  })
  tenant_id: string;
}

export class MedicalOrderPaginatedResponseDto {
  @ApiProperty({
    description: 'Array of medical orders',
    type: [MedicalOrderBaseResponseDto],
  })
  data: MedicalOrderBaseResponseDto[];

  @ApiProperty({
    description: 'Total number of records',
    example: 42,
  })
  total: number;

  @ApiProperty({
    description: 'Current page number',
    example: 1,
  })
  page: number;

  @ApiProperty({
    description: 'Number of records per page',
    example: 10,
  })
  limit: number;

  @ApiProperty({
    description: 'Total number of pages',
    example: 5,
  })
  totalPages: number;
}

================
File: src/medical_order/dto/update-medical_order.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreateMedicalOrderDto } from './create-medical_order.dto';
import { IsOptional, IsString, Matches } from 'class-validator';
import { ApiPropertyOptional } from '@nestjs/swagger';

export class UpdateMedicalOrderDto extends PartialType(CreateMedicalOrderDto) {
  @IsOptional()
  @IsString({ message: 'El archivo en base64 debe ser una cadena de texto' })
  @Matches(/^data:(image\/[^;]+|application\/pdf);base64,/, {
    message:
      'El formato del archivo base64 no es v√°lido. Debe ser un DATA URI v√°lido (data:mimetype;base64,)',
  })
  @ApiPropertyOptional({
    description: 'Base64 encoded file (image or PDF)',
    example: 'data:application/pdf;base64,JVBERi0xLjYNJeLjz9...',
  })
  file?: string;
}

================
File: src/medical_order/entities/medical_order.entity.ts
================
export class MedicalOrder {}

================
File: src/medical_order/medical_order.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  Query,
  UseGuards,
  Req,
  Headers,
} from '@nestjs/common';
import { MedicalOrderService } from './medical_order.service';
import { CreateMedicalOrderDto } from './dto/create-medical_order.dto';
import { UpdateMedicalOrderDto } from './dto/update-medical_order.dto';
import { PaginationParams } from 'src/utils/pagination.helper';
import { GetTenant } from 'src/auth/decorators/get-tenant.decorator';
import { GetUser } from 'src/auth/decorators/get-user.decorator';
import { TenantAccessGuard } from 'src/auth/guards/tenant-access.guard';
import { PermissionGuard } from 'src/auth/guards/permission.guard';
import { RequirePermission } from 'src/auth/decorators/require-permission.decorator';
import { Permission } from 'src/auth/permissions/permission.enum';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiQuery,
  ApiParam,
  ApiBearerAuth,
  ApiHeader,
} from '@nestjs/swagger';
import { MedicalOrderPaginatedResponseDto } from './dto/medical-order-response.dto';

@ApiTags('Medical Order')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant-id',
  description: 'ID del tenant al que pertenecen las √≥rdenes m√©dicas',
  required: true,
})
@Controller('medical-order')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class MedicalOrderController {
  constructor(private readonly medicalOrderService: MedicalOrderService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new medical order' })
  @ApiQuery({
    name: 'type',
    description: 'Type of medical order',
    required: true,
  })
  @ApiBody({ type: CreateMedicalOrderDto })
  @ApiResponse({
    status: 201,
    description: 'The medical order has been successfully created.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.CREATE_MEDICAL_ORDERS)
  create(
    @Body() createMedicalOrderDto: CreateMedicalOrderDto,
    @Query('type') orderType: string,
    @GetTenant() tenant,
    @GetUser() user,
  ) {
    return this.medicalOrderService.create(
      createMedicalOrderDto,
      orderType,
      tenant.id,
      user.id,
    );
  }

  @Get()
  @ApiOperation({ summary: 'Retrieve all medical orders with pagination' })
  @ApiQuery({
    name: 'page',
    required: false,
    type: Number,
    description: 'Page number for pagination',
  })
  @ApiQuery({
    name: 'limit',
    required: false,
    type: Number,
    description: 'Number of items per page',
  })
  @ApiQuery({
    name: 'type',
    required: false,
    description: 'Filter by order type',
  })
  @ApiQuery({
    name: 'patient_id',
    required: false,
    description: 'Filter by patient ID',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved medical orders.',
    type: MedicalOrderPaginatedResponseDto,
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.VIEW_MEDICAL_ORDERS)
  findAll(
    @Query() paginationParams: PaginationParams,
    @GetTenant() tenant,
    @Query('type') orderType?: string,
    @Query('patient_id') patientId?: string,
  ) {
    return this.medicalOrderService.findAll(
      paginationParams,
      tenant.id,
      orderType,
      patientId,
    );
  }

  @Get('physician')
  @ApiOperation({
    summary: 'Retrieve all medical orders for a physician with pagination',
  })
  @ApiQuery({
    name: 'page',
    required: false,
    type: Number,
    description: 'Page number for pagination',
  })
  @ApiQuery({
    name: 'limit',
    required: false,
    type: Number,
    description: 'Number of items per page',
  })
  @ApiQuery({
    name: 'patient_id',
    required: false,
    description: 'Filter by patient ID',
  })
  @ApiQuery({
    name: 'type',
    required: false,
    description: 'Filter by order type',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved medical orders for physician.',
    type: MedicalOrderPaginatedResponseDto,
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.VIEW_MEDICAL_ORDERS)
  findAllForPhysician(
    @Query() paginationParams: PaginationParams,
    @GetTenant() tenant,
    @GetUser() user,
    @Query('patient_id') patientId?: string,
    @Query('type') orderType?: string,
  ): Promise<MedicalOrderPaginatedResponseDto> {
    return this.medicalOrderService.findAllForPhysician(
      paginationParams,
      tenant.id,
      user.id,
      patientId,
      orderType,
    );
  }

  @Get('patient')
  @ApiOperation({
    summary: 'Retrieve all medical orders for a patient with pagination',
  })
  @ApiQuery({
    name: 'page',
    required: false,
    type: Number,
    description: 'Page number for pagination',
  })
  @ApiQuery({
    name: 'limit',
    required: false,
    type: Number,
    description: 'Number of items per page',
  })
  @ApiQuery({
    name: 'physician_id',
    required: false,
    description: 'Filter by physician ID',
  })
  @ApiQuery({
    name: 'type',
    required: false,
    description: 'Filter by order type',
  })
  @ApiQuery({
    name: 'tenant_id',
    required: false,
    description: 'Filter by tenant ID',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved medical orders for patient.',
    type: MedicalOrderPaginatedResponseDto,
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.VIEW_MEDICAL_ORDERS)
  findAllForPatient(
    @Query() paginationParams: PaginationParams,
    @GetUser() user,
    @Query('physician_id') physicianId?: string,
    @Query('type') orderType?: string,
    @Query('tenant_id') tenantId?: string,
    @Req() req?: any,
  ): Promise<MedicalOrderPaginatedResponseDto> {
    // Get the tenants array from the request
    const userTenants = req?.userTenants || [];

    return this.medicalOrderService.findAllForPatient(
      paginationParams,
      user.id,
      physicianId,
      orderType,
      tenantId,
      userTenants,
    );
  }

  @Get(':id')
  @ApiOperation({ summary: 'Retrieve a specific medical order by ID' })
  @ApiParam({ name: 'id', description: 'ID of the medical order' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved medical order.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Medical order not found.' })
  @RequirePermission(Permission.VIEW_MEDICAL_ORDERS)
  findOne(@Param('id') id: string, @GetTenant() tenant) {
    return this.medicalOrderService.findOne(id, tenant.id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Update a specific medical order by ID' })
  @ApiParam({ name: 'id', description: 'ID of the medical order to update' })
  @ApiBody({ type: UpdateMedicalOrderDto })
  @ApiResponse({
    status: 200,
    description: 'The medical order has been successfully updated.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Medical order not found.' })
  @RequirePermission(Permission.UPDATE_MEDICAL_ORDERS)
  update(
    @Param('id') id: string,
    @Body() updateMedicalOrderDto: UpdateMedicalOrderDto,
    @GetTenant() tenant,
  ) {
    return this.medicalOrderService.update(
      id,
      updateMedicalOrderDto,
      tenant.id,
    );
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Delete a specific medical order by ID' })
  @ApiParam({ name: 'id', description: 'ID of the medical order to delete' })
  @ApiResponse({
    status: 200,
    description: 'The medical order has been successfully deleted.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Medical order not found.' })
  @RequirePermission(Permission.DELETE_MEDICAL_ORDERS)
  remove(@Param('id') id: string, @GetTenant() tenant) {
    return this.medicalOrderService.remove(id, tenant.id);
  }
}

================
File: src/medical_order/medical_order.module.ts
================
import { Module } from '@nestjs/common';
import { MedicalOrderService } from './medical_order.service';
import { MedicalOrderController } from './medical_order.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { PermissionCheckerService } from 'src/auth/permissions/permission-checker.service';
import { FileUploadService } from 'src/utils/file_upload/file_upload.service';
import { FileUploadRepository } from 'src/utils/file_upload/file_upload.repository';
import { CloudinaryConfig } from 'src/utils/cloudinary';
import { PrescriptionModule } from 'src/medical-scheduling/modules/prescription/prescription.module';
import { NotificationModule } from 'src/services/notification/notification.module';

@Module({
  imports: [PrescriptionModule, NotificationModule],
  controllers: [MedicalOrderController],
  providers: [
    MedicalOrderService,
    PrismaService,
    PermissionCheckerService,
    FileUploadService,
    FileUploadRepository,
    CloudinaryConfig,
  ],
})
export class MedicalOrderModule {}

================
File: src/medical_order/medical_order.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
  InternalServerErrorException,
} from '@nestjs/common';
import { CreateMedicalOrderDto } from './dto/create-medical_order.dto';
import { UpdateMedicalOrderDto } from './dto/update-medical_order.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';
import { FileUploadService } from 'src/utils/file_upload/file_upload.service';
import {
  MedicalOrderPaginatedResponseDto,
  MedicalOrderPhysicianResponseDto,
  MedicalOrderPatientResponseDto,
} from './dto/medical-order-response.dto';
import { PrescriptionService } from 'src/medical-scheduling/modules/prescription/prescription.service';
import { NotificationService } from 'src/services/notification/notification.service';

@Injectable()
export class MedicalOrderService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly fileUploadService: FileUploadService,
    private readonly prescriptionService: PrescriptionService,
    private readonly notificationService: NotificationService,
  ) {}

  async create(
    createMedicalOrderDto: CreateMedicalOrderDto,
    orderType: string,
    tenantId: string,
    physicianId: string,
  ) {
    try {
      // Validar que el tipo de orden m√©dica existe
      const orderTypeObj = await this.prisma.medical_order_type.findFirst({
        where: { name: orderType },
      });

      if (!orderTypeObj) {
        throw new BadRequestException(
          `Tipo de orden m√©dica "${orderType}" no v√°lido`,
        );
      }

      // Validar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: createMedicalOrderDto.patient_id },
      });

      if (!patient) {
        throw new BadRequestException('Paciente no encontrado');
      }

      // Si hay archivo en base64, subirlo a Cloudinary
      let fileUrl = createMedicalOrderDto.url;
      if (createMedicalOrderDto.file) {
        try {
          const uploadResult = await this.fileUploadService.uploadBase64File(
            createMedicalOrderDto.file,
            `medical-order-${orderType}-${createMedicalOrderDto.patient_id}-${Date.now()}`,
          );
          fileUrl = uploadResult.url;
          // Eliminar la propiedad file para evitar errores con Prisma
          delete createMedicalOrderDto.file;
        } catch (uploadError) {
          console.error('Error al subir archivo a Cloudinary:', uploadError);
          throw new BadRequestException('Error al procesar el archivo adjunto');
        }
      }

      // Establecer los campos comunes
      const commonData = {
        medical_order_type_id: orderTypeObj.id,
        patient_id: createMedicalOrderDto.patient_id,
        tenant_id: tenantId,
        url: fileUrl,
        request_date: new Date(),
        additional_text: createMedicalOrderDto.additional_text,
        description_type: createMedicalOrderDto.description_type,
        physician_id: physicianId,
      };

      // Determinar campos espec√≠ficos seg√∫n el tipo de orden
      let specificData = {};

      switch (orderTypeObj.name) {
        case 'study-authorization':
          if (!createMedicalOrderDto.cat_study_type_id) {
            throw new BadRequestException('El tipo de estudio es requerido');
          }

          // Validar que el tipo de estudio existe
          const studyType = await this.prisma.cat_study_type.findUnique({
            where: { id: createMedicalOrderDto.cat_study_type_id },
          });

          if (!studyType) {
            throw new BadRequestException('Tipo de estudio no encontrado');
          }

          specificData = {
            cat_study_type_id: createMedicalOrderDto.cat_study_type_id,
            request_reason: createMedicalOrderDto.request_reason,
          };
          break;

        case 'certification':
          if (!createMedicalOrderDto.cat_certification_type_id) {
            throw new BadRequestException(
              'El tipo de certificado es requerido',
            );
          }

          // Si es "otros" (id = 1), crear un nuevo tipo de certificado personalizado
          if (
            createMedicalOrderDto.cat_certification_type_id === 1 &&
            createMedicalOrderDto.description_type
          ) {
            const newCertType = await this.prisma.cat_certification_type.create(
              {
                data: {
                  name: createMedicalOrderDto.description_type,
                  tenant_id: tenantId,
                  custom: true,
                },
              },
            );

            specificData = {
              cat_certification_type_id: newCertType.id,
              category_cie_diez_id: createMedicalOrderDto.category_cie_diez_id,
            };
          } else {
            // Validar que el tipo de certificado existe
            const certType =
              await this.prisma.cat_certification_type.findUnique({
                where: { id: createMedicalOrderDto.cat_certification_type_id },
              });

            if (!certType) {
              throw new BadRequestException(
                'Tipo de certificado no encontrado',
              );
            }

            specificData = {
              cat_certification_type_id:
                createMedicalOrderDto.cat_certification_type_id,
              category_cie_diez_id: createMedicalOrderDto.category_cie_diez_id,
            };
          }
          break;

        case 'hospitalization-request':
          if (!createMedicalOrderDto.hospitalization_reason) {
            throw new BadRequestException(
              'El motivo de hospitalizaci√≥n es requerido',
            );
          }

          specificData = {
            hospitalization_reason:
              createMedicalOrderDto.hospitalization_reason,
            category_cie_diez_id: createMedicalOrderDto.category_cie_diez_id,
            request_reason: createMedicalOrderDto.request_reason,
          };
          break;

        case 'appointment-request':
          if (!createMedicalOrderDto.cat_speciality_id) {
            throw new BadRequestException('La especialidad es requerida');
          }

          // Validar que la especialidad existe
          const speciality = await this.prisma.cat_speciality.findUnique({
            where: { id: createMedicalOrderDto.cat_speciality_id },
          });

          if (!speciality) {
            throw new BadRequestException('Especialidad no encontrada');
          }

          specificData = {
            cat_speciality_id: createMedicalOrderDto.cat_speciality_id,
            category_cie_diez_id: createMedicalOrderDto.category_cie_diez_id,
          };
          break;

        case 'medication':
        case 'medication-authorization':
          // Verificar que hay medicaciones en el DTO
          if (
            !createMedicalOrderDto.medications ||
            createMedicalOrderDto.medications.length === 0
          ) {
            throw new BadRequestException('Se deben especificar medicamentos');
          }
          break;

        default:
          throw new BadRequestException(
            `Tipo de orden m√©dica "${orderTypeObj.description}" no implementado`,
          );
      }

      // Crear la orden m√©dica combinando los datos comunes y espec√≠ficos
      const newOrder = await this.prisma.$transaction(async (tx) => {
        const order = await tx.medical_order.create({
          data: {
            ...commonData,
            ...specificData,
          },
        });

        // Procesar medicaciones si existe
        if (
          (orderTypeObj.name === 'medication' ||
            orderTypeObj.name === 'medication-authorization') &&
          createMedicalOrderDto.medications &&
          createMedicalOrderDto.medications.length > 0
        ) {
          await this.prescriptionService.processMedications(
            tx,
            createMedicalOrderDto.medications,
            createMedicalOrderDto.patient_id,
            physicianId,
            tenantId,
            undefined, // No hay medical_event_id en este caso
            order.id,
            orderTypeObj.name === 'medication', // true si es prescripci√≥n, false si es autorizaci√≥n
          );
        }

        return order;
      });

      // Obtener el m√©dico para el correo
      const physician = await this.prisma.user.findUnique({
        where: { id: physicianId },
      });

      // Enviar notificaciones por correo y WhatsApp
      await this._sendNotifications(
        patient,
        newOrder,
        orderTypeObj,
        physician?.last_name,
        createMedicalOrderDto.medications,
      );

      return {
        message: 'Se ha creado correctamente la orden m√©dica',
        order_id: newOrder.id,
      };
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      console.error('Error creating medical order:', error);
      throw new InternalServerErrorException(
        `No se ha podido generar la orden m√©dica: ${error.message}`,
      );
    }
  }

  async findAll(
    paginationParams: PaginationParams,
    tenantId: string,
    orderType?: string,
    patientId?: string,
  ) {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      const whereClause: any = { tenant_id: tenantId };

      // Filtrar por tipo de orden si se proporciona
      if (orderType) {
        const typeObj = await this.prisma.medical_order_type.findFirst({
          where: { name: orderType },
        });

        if (typeObj) {
          whereClause.medical_order_type_id = typeObj.id;
        }
      }

      // Filtrar por paciente si se proporciona
      if (patientId) {
        whereClause.patient_id = patientId;
      }

      const orders = await this.prisma.medical_order.findMany({
        where: whereClause,
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
        include: {
          patient: {
            select: {
              name: true,
              last_name: true,
              email: true,
              phone: true,
            },
          },
          medical_order_type: true,
          cat_study_type: true,
          cat_certification_type: true,
          cat_speciality: true,
          category_cie_diez: true,
        },
      });

      return orders;
    } catch (error) {
      console.error('Error fetching medical orders:', error);
      throw new InternalServerErrorException(
        `No se ha podido consultar las ordenes m√©dicas: ${error.message}`,
      );
    }
  }

  async findOne(id: string, tenantId: string) {
    try {
      const medicalOrder = await this.prisma.medical_order.findFirst({
        where: {
          id: id,
          tenant_id: tenantId,
        },
        include: {
          patient: {
            select: {
              name: true,
              last_name: true,
              email: true,
              phone: true,
            },
          },
          medical_order_type: true,
          cat_study_type: true,
          cat_certification_type: true,
          cat_speciality: true,
          category_cie_diez: true,
        },
      });

      if (!medicalOrder) {
        throw new NotFoundException(
          'No se ha podido encontrar la orden m√©dica',
        );
      }

      return medicalOrder;
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new InternalServerErrorException(
        `No se ha podido consultar la orden m√©dica: ${error.message}`,
      );
    }
  }

  async update(
    id: string,
    updateMedicalOrderDto: UpdateMedicalOrderDto,
    tenantId: string,
  ) {
    try {
      // Verificar si la orden existe
      const existingOrder = await this.prisma.medical_order.findFirst({
        where: {
          id: id,
          tenant_id: tenantId,
        },
      });

      if (!existingOrder) {
        throw new NotFoundException(
          'No se ha podido encontrar la orden m√©dica',
        );
      }

      // Si hay archivo en base64, subirlo a Cloudinary
      if (updateMedicalOrderDto.file) {
        try {
          const orderType = await this.prisma.medical_order_type.findUnique({
            where: { id: existingOrder.medical_order_type_id },
          });

          const uploadResult = await this.fileUploadService.uploadBase64File(
            updateMedicalOrderDto.file,
            `medical-order-${orderType?.name || 'update'}-${existingOrder.patient_id}-${Date.now()}`,
          );
          updateMedicalOrderDto.url = uploadResult.url;
          // Eliminar la propiedad file para evitar errores con Prisma
          delete updateMedicalOrderDto.file;
        } catch (uploadError) {
          console.error('Error al subir archivo a Cloudinary:', uploadError);
          throw new BadRequestException('Error al procesar el archivo adjunto');
        }
      }

      await this.prisma.medical_order.update({
        where: { id: id },
        data: { ...updateMedicalOrderDto },
      });

      return { message: 'Se ha actualizado correctamente la orden' };
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new InternalServerErrorException(
        `No se ha podido actualizar la orden m√©dica: ${error.message}`,
      );
    }
  }

  async remove(id: string, tenantId: string) {
    try {
      // Verificar si la orden existe
      const existingOrder = await this.prisma.medical_order.findFirst({
        where: {
          id: id,
          tenant_id: tenantId,
        },
      });

      if (!existingOrder) {
        throw new NotFoundException(
          'No se ha podido encontrar la orden m√©dica',
        );
      }

      await this.prisma.medical_order.delete({
        where: { id: id },
      });

      return { message: 'Se ha eliminado correctamente la orden m√©dica' };
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new InternalServerErrorException(
        `No se ha podido eliminar la orden m√©dica: ${error.message}`,
      );
    }
  }

  private async _sendNotifications(
    patient,
    order,
    orderType: { description: string; name: string },
    physicianName: string,
    medications?: any[],
  ) {
    await this.notificationService.sendMedicalOrderNotification(
      patient,
      order,
      orderType,
      physicianName,
      medications,
    );
  }

  async findAllForPhysician(
    paginationParams: PaginationParams,
    tenantId: string,
    physicianId: string,
    patientId?: string,
    orderType?: string,
  ): Promise<MedicalOrderPaginatedResponseDto> {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      // Default page size to 10 if not specified
      const limit = take || 10;
      const page = Math.floor(skip / limit) + 1 || 1;

      // Build the where clause for filtering
      const whereClause: any = {
        tenant_id: tenantId,
        physician_id: physicianId,
      };

      // Filter by order type if provided
      if (orderType) {
        const typeObj = await this.prisma.medical_order_type.findFirst({
          where: { name: orderType },
        });

        if (typeObj) {
          whereClause.medical_order_type_id = typeObj.id;
        }
      }

      // Filter by patient if provided
      if (patientId) {
        whereClause.patient_id = patientId;
      }

      // Get total count for pagination
      const totalCount = await this.prisma.medical_order.count({
        where: whereClause,
      });

      const totalPages = Math.ceil(totalCount / limit);

      // Get the actual orders with all necessary data preloaded
      const orders = await this.prisma.medical_order.findMany({
        where: whereClause,
        skip,
        take: limit,
        orderBy: { [orderBy]: orderDirection },
        include: {
          patient: {
            select: {
              name: true,
              last_name: true,
            },
          },
          physician: {
            select: {
              name: true,
              last_name: true,
            },
          },
          medical_order_type: {
            select: {
              name: true,
            },
          },
          tenant: {
            include: {
              organizations: {
                select: {
                  name: true,
                },
              },
            },
          },
        },
      });

      // Format the response using preloaded data
      const formattedOrders = orders.map((order) => {
        // Get organization name from preloaded tenant data
        const organizationName =
          order.tenant?.organizations?.[0]?.name || 'N/A';

        // Get physician name from preloaded data
        const physicianName = order.physician
          ? `${order.physician.name || ''} ${order.physician.last_name || ''}`.trim()
          : 'N/A';

        // Get patient name from preloaded data
        const patientName = order.patient
          ? `${order.patient.name || ''} ${order.patient.last_name || ''}`.trim()
          : 'N/A';

        // Get order type name from preloaded data
        const orderTypeName = order.medical_order_type?.name || '';

        return {
          id: order.id,
          url: order.url || '',
          request_date: order.request_date,
          organization_name: organizationName,
          physician_name: physicianName,
          patient_name: patientName,
          order_type: orderTypeName,
        } as MedicalOrderPhysicianResponseDto;
      });

      return {
        data: formattedOrders,
        total: totalCount,
        page,
        limit,
        totalPages,
      };
    } catch (error) {
      console.error('Error fetching medical orders for physician:', error);
      throw new InternalServerErrorException(
        `No se ha podido consultar las ordenes m√©dicas: ${error.message}`,
      );
    }
  }

  async findAllForPatient(
    paginationParams: PaginationParams,
    patientId: string,
    physicianId?: string,
    orderType?: string,
    specificTenantId?: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<MedicalOrderPaginatedResponseDto> {
    try {
      const { skip, take, orderBy, orderDirection } =
        parsePaginationAndSorting(paginationParams);

      // Default page size to 10 if not specified
      const limit = take || 10;
      const page = Math.floor(skip / limit) + 1 || 1;

      // Get tenant IDs from JWT or query them if not provided
      let tenantIds: string[] = [];

      const patient = await this.prisma.user.findUnique({
        where: { id: patientId },
        include: {
          patient: true,
        },
      });
      console.log(patient);
      if (userTenants && userTenants.length > 0) {
        tenantIds = userTenants.map((tenant) => tenant.id);
      } else {
        // Fallback to querying the database (old method)
        const patientTenants = await this.prisma.patient_tenant.findMany({
          where: {
            patient_id: patient.patient.id,
            deleted: false,
          },
          select: {
            tenant_id: true,
          },
        });
        console.log(patientTenants);
        tenantIds = patientTenants.map((pt) => pt.tenant_id);
      }

      if (tenantIds.length === 0) {
        return {
          data: [],
          total: 0,
          page,
          limit,
          totalPages: 0,
        };
      }

      // Build the where clause for filtering
      const whereClause: any = {
        patient_id: patient.id,
      };

      // Use specific tenant if provided, otherwise use all tenants
      if (specificTenantId) {
        // Verify that the specified tenant is in the patient's list
        if (tenantIds.includes(specificTenantId)) {
          whereClause.tenant_id = specificTenantId;
        } else {
          // If not in the patient's list, return empty result
          return {
            data: [],
            total: 0,
            page,
            limit,
            totalPages: 0,
          };
        }
      } else {
        // Use all patient's tenants
        whereClause.tenant_id = { in: tenantIds };
      }

      // Filter by physician if provided
      if (physicianId) {
        whereClause.physician_id = physicianId;
      }

      // Filter by order type if provided
      if (orderType) {
        const typeObj = await this.prisma.medical_order_type.findFirst({
          where: { name: orderType },
        });

        if (typeObj) {
          whereClause.medical_order_type_id = typeObj.id;
        }
      }

      // Get total count for pagination
      const totalCount = await this.prisma.medical_order.count({
        where: whereClause,
      });

      const totalPages = Math.ceil(totalCount / limit);
      console.log(whereClause);
      // Get the actual orders with all necessary data preloaded
      const orders = await this.prisma.medical_order.findMany({
        where: whereClause,
        skip,
        take: limit,
        orderBy: { [orderBy]: orderDirection },
        include: {
          physician: {
            select: {
              name: true,
              last_name: true,
            },
          },
          medical_order_type: {
            select: {
              name: true,
            },
          },
          tenant: {
            include: {
              organizations: {
                select: {
                  name: true,
                },
              },
            },
          },
        },
      });

      // Format the response using preloaded data
      const formattedOrders = orders.map((order) => {
        // Get organization name from preloaded tenant data or JWT data
        let organizationName = 'N/A';

        // Try to find the tenant info in the JWT first for performance
        if (userTenants && order.tenant_id) {
          const matchingTenant = userTenants.find(
            (t) => t.id === order.tenant_id,
          );
          if (matchingTenant) {
            organizationName = matchingTenant.name;
          }
        }

        // If not found in JWT, use preloaded data
        if (organizationName === 'N/A') {
          organizationName = order.tenant?.organizations?.[0]?.name || 'N/A';
        }

        // Get physician name from preloaded data
        const physicianName = order.physician
          ? `${order.physician.name || ''} ${order.physician.last_name || ''}`.trim()
          : 'N/A';

        // Get order type name from preloaded data
        const orderTypeName = order.medical_order_type?.name || '';

        return {
          id: order.id,
          url: order.url || '',
          request_date: order.request_date,
          organization_name: organizationName,
          physician_name: physicianName,
          order_type: orderTypeName,
          tenant_id: order.tenant_id, // Add tenant_id to help frontend display organization info
        } as MedicalOrderPatientResponseDto;
      });

      return {
        data: formattedOrders,
        total: totalCount,
        page,
        limit,
        totalPages,
      };
    } catch (error) {
      console.error('Error fetching medical orders for patient:', error);
      throw new InternalServerErrorException(
        `No se ha podido consultar las ordenes m√©dicas: ${error.message}`,
      );
    }
  }
}

================
File: src/medical-scheduling/appointments/appointments.controller.ts
================
import {
  Body,
  Controller,
  Get,
  Param,
  Patch,
  Post,
  Query,
  UseGuards,
  HttpStatus,
} from '@nestjs/common';
import { CreateAppointmentDto } from './dto/create-appointment.dto';
import { AppointmentsService } from './appointments.service';
import { status_type } from '@prisma/client';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { GetTenant } from '../../auth/decorators/get-tenant.decorator';
import { GetUser } from '../../auth/decorators/get-user.decorator';
import { PaginationParams } from 'src/utils/pagination.helper';
import { GetAppointmentsCalendarDto } from './dto/get-appointments-calendar.dto';
import { GetStatisticsDto } from './dto/get-statistics.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiHeader,
  ApiBody,
  ApiQuery,
  ApiParam,
} from '@nestjs/swagger';

@ApiTags('Appointments')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant-id',
  description: 'ID del tenant al que pertenecen las citas',
  required: true,
})
@Controller('appointments')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class AppointmentsController {
  constructor(private readonly appointmentsService: AppointmentsService) {}
  @Post()
  @ApiOperation({
    summary: 'Crear cita',
    description: 'Crea una nueva cita en el sistema',
  })
  @ApiBody({
    description: 'Datos para crear la cita',
    type: CreateAppointmentDto,
  })
  @ApiResponse({
    status: HttpStatus.CREATED,
    description: 'Cita creada exitosamente',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Datos de cita inv√°lidos',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'No autorizado',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Prohibido - Permisos insuficientes',
  })
  @RequirePermission(Permission.SCHEDULE_APPOINTMENTS)
  async create(
    @Body() createAppointmentDto: CreateAppointmentDto,
    @GetTenant() tenant: { id: string },
  ) {
    console.log('Creating appointment with dates:');
    console.log('Start:', createAppointmentDto.start);
    console.log('End:', createAppointmentDto.end);

    return this.appointmentsService.createAppointment(
      createAppointmentDto,
      tenant.id,
    );
  }
  @Get('user')
  @ApiOperation({
    summary: 'Obtener citas del usuario',
    description: 'Devuelve las citas del usuario actual',
  })
  @ApiQuery({
    name: 'status',
    description: 'Filtrar por estado de la cita',
    required: false,
    enum: ['atendida', 'cancelada', 'pendiente'],
  })
  @ApiQuery({
    name: 'page',
    description: 'N√∫mero de p√°gina para paginaci√≥n',
    required: false,
    type: Number,
  })
  @ApiQuery({
    name: 'limit',
    description: 'N√∫mero de elementos por p√°gina',
    required: false,
    type: Number,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Citas del usuario devueltas exitosamente',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'No autorizado',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Prohibido - Permisos insuficientes',
  })
  @RequirePermission(Permission.SCHEDULE_APPOINTMENTS)
  async getAppointmentsByUser(
    @GetUser() user,
    @GetTenant() tenant,
    @Query() params: { status?: status_type } & PaginationParams,
  ) {
    return this.appointmentsService.getAppointmentsByUser(user.id, params);
  }
  @Patch(':id/status')
  @ApiOperation({
    summary: 'Actualizar estado de cita',
    description: 'Actualiza el estado de una cita existente',
  })
  @ApiParam({
    name: 'id',
    description: 'ID de la cita a actualizar',
    type: String,
  })
  @ApiBody({
    description: 'Datos para actualizar el estado',
    schema: {
      type: 'object',
      properties: {
        status: {
          type: 'string',
          enum: ['atendida', 'cancelada', 'pendiente'],
          description: 'Nuevo estado para la cita',
        },
        reason: {
          type: 'string',
          description: 'Raz√≥n para el cambio de estado (opcional)',
        },
      },
      required: ['status'],
    },
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Estado de cita actualizado exitosamente',
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Datos de estado inv√°lidos',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'Cita no encontrada',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'No autorizado',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Prohibido - Permisos insuficientes',
  })
  @RequirePermission(Permission.SCHEDULE_APPOINTMENTS)
  async updateStatus(
    @Param('id') id: string,
    @Body() updateStatusDto: { status: status_type; reason?: string },
    @GetTenant() tenant,
  ) {
    return this.appointmentsService.updateAppointmentStatus(
      id,
      updateStatusDto.status,
      updateStatusDto.reason,
      tenant,
    );
  }
  @Get('physician-calendar')
  @ApiOperation({
    summary: 'Obtener calendario del m√©dico',
    description: 'Devuelve los datos del calendario para el m√©dico actual',
  })
  @ApiQuery({
    name: 'startDate',
    description: 'Fecha de inicio para la vista del calendario (formato ISO)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'endDate',
    description: 'Fecha de fin para la vista del calendario (formato ISO)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'status',
    description: 'Filtrar por estado de la cita',
    required: false,
    enum: ['atendida', 'cancelada', 'pendiente'],
  })
  @ApiQuery({
    name: 'month',
    description: 'Mes para el calendario (1-12)',
    required: false,
    type: Number,
  })
  @ApiQuery({
    name: 'year',
    description: 'A√±o para el calendario',
    required: false,
    type: Number,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Calendario del m√©dico devuelto exitosamente',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'No autorizado',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Prohibido - Permisos insuficientes',
  })
  @RequirePermission(Permission.VIEW_DOCTOR_DETAILS)
  async getPhysicianCalendar(
    @GetUser() user,
    @GetTenant() tenant,
    @Query() params: GetAppointmentsCalendarDto,
  ) {
    return this.appointmentsService.getPhysicianCalendar(
      user.id,
      params.startDate,
      params.endDate,
      params.status,
      tenant.id,
      params.month,
      params.year,
    );
  }
  @Get('physician/:physicianId/calendar')
  @ApiOperation({
    summary: 'Get specific physician calendar',
    description: 'Returns calendar data for a specific physician',
  })
  @ApiParam({
    name: 'physicianId',
    description: 'ID of the physician',
    type: String,
  })
  @ApiQuery({
    name: 'startDate',
    description: 'Start date for calendar view (ISO format)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'endDate',
    description: 'End date for calendar view (ISO format)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'status',
    description: 'Filter by appointment status',
    required: false,
    enum: ['atendida', 'cancelada', 'pendiente'],
  })
  @ApiQuery({
    name: 'month',
    description: 'Month for calendar (1-12)',
    required: false,
    type: Number,
  })
  @ApiQuery({
    name: 'year',
    description: 'Year for calendar',
    required: false,
    type: Number,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Physician calendar returned successfully',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'Physician not found',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.VIEW_DOCTOR_DETAILS)
  async getSpecificPhysicianCalendar(
    @Param('physicianId') physicianId: string,
    @GetTenant() tenant,
    @Query() params: GetAppointmentsCalendarDto,
  ) {
    return this.appointmentsService.getPhysicianCalendar(
      physicianId,
      params.startDate,
      params.endDate,
      params.status,
      tenant.id,
      params.month,
      params.year,
    );
  }
  @Get('statistics')
  @ApiOperation({
    summary: 'Get appointment statistics',
    description: 'Returns statistics about appointments',
  })
  @ApiQuery({
    name: 'type',
    description: 'Type of statistics to retrieve',
    required: true,
    enum: [
      'appointments_by_status',
      'appointments_by_day',
      'appointments_by_month',
      'appointments_by_physician',
      'diagnoses_distribution',
      'consultations_count',
      'patient_demographics',
      'attendance_rate',
      'physician_workload',
      'scheduling_trends',
    ],
  })
  @ApiQuery({
    name: 'startDate',
    description: 'Start date for statistics (ISO format)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'endDate',
    description: 'End date for statistics (ISO format)',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'groupBy',
    description: 'How to group statistics',
    required: false,
    enum: [
      'day',
      'week',
      'month',
      'quarter',
      'year',
      'physician',
      'patient',
      'status',
      'specialty',
      'diagnosis',
    ],
  })
  @ApiQuery({
    name: 'physicianId',
    description: 'Filter by physician ID',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'patientId',
    description: 'Filter by patient ID',
    required: false,
    type: String,
  })
  @ApiQuery({
    name: 'specialtyId',
    description: 'Filter by specialty ID',
    required: false,
    type: Number,
  })
  @ApiQuery({
    name: 'limit',
    description: 'Limit number of results',
    required: false,
    type: Number,
  })
  @ApiQuery({
    name: 'filter',
    description: 'Additional filter criteria',
    required: false,
    type: String,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Statistics returned successfully',
  })
  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions',
  })
  @RequirePermission(Permission.VIEW_STATISTICS)
  async getStatistics(@GetTenant() tenant, @Query() params: GetStatisticsDto) {
    // Convertir fechas de string a Date si se proporcionan
    const options = {
      startDate: params.startDate ? new Date(params.startDate) : undefined,
      endDate: params.endDate ? new Date(params.endDate) : undefined,
      groupBy: params.groupBy,
      physicianId: params.physicianId,
      patientId: params.patientId,
      specialtyId: params.specialtyId,
      limit: params.limit,
      filter: params.filter,
    };

    return this.appointmentsService.getStatistics(
      params.type,
      tenant.id,
      options,
    );
  }
}

================
File: src/medical-scheduling/appointments/appointments.module.ts
================
import { Module } from '@nestjs/common';
import { AppointmentsController } from './appointments.controller';
import { AppointmentsService } from './appointments.service';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [AppointmentsController],
  providers: [AppointmentsService, PrismaService],
  exports: [AppointmentsService],
})
export class AppointmentsModule {}

================
File: src/medical-scheduling/appointments/appointments.service.ts
================
import {
  Injectable,
  BadRequestException,
  InternalServerErrorException,
} from '@nestjs/common';
import { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';
import { CreateAppointmentDto } from './dto/create-appointment.dto';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';
import { PrismaService } from 'src/prisma/prisma.service';
import { appointment, status_type } from '@prisma/client';
import * as moment from 'moment';
import { GroupBy, StatisticsType } from './dto/get-statistics.dto';

@Injectable()
export class AppointmentsService {
  constructor(private prisma: PrismaService) {}

  // Helper method to convert HH:MM to minutes since midnight
  private timeToMinutes(time: string): number {
    const [hours, minutes] = time.split(':').map(Number);
    return hours * 60 + minutes;
  }

  // Method to check if the appointment is within physician's schedule
  private async isAppointmentInPhysicianSchedule(
    physicianId: string,
    startDate: Date,
    endDate: Date,
    tenantId: string,
  ): Promise<{ isAvailable: boolean; reason?: string }> {
    try {
      // Get the physician by user_id
      const physician = await this.prisma.physician.findFirst({
        where: {
          user_id: physicianId,
          tenant_id: tenantId,
          deleted: false,
        },
      });

      if (!physician) {
        return { isAvailable: false, reason: 'M√©dico no encontrado' };
      }

      const appointmentDate = moment(startDate).startOf('day');
      const dayOfWeek = appointmentDate.day(); // 0 = Sunday, 1 = Monday, etc.

      // Check if there's an exception for this date
      const exception =
        await this.prisma.physician_schedule_exception.findFirst({
          where: {
            physician_id: physician.id,
            date: {
              gte: appointmentDate.toDate(),
              lt: appointmentDate.clone().add(1, 'day').toDate(),
            },
            tenant_id: tenantId,
            deleted: false,
          },
        });

      // If there's an exception and the physician is not available, return false
      if (exception && !exception.is_available) {
        return {
          isAvailable: false,
          reason:
            exception.reason || 'El m√©dico no est√° disponible en esta fecha',
        };
      }

      // Get the schedule for this day of the week
      const schedule = await this.prisma.physician_schedule.findFirst({
        where: {
          physician_id: physician.id,
          day_of_week: dayOfWeek,
          tenant_id: tenantId,
          deleted: false,
        },
      });

      // If there's no schedule for this day or it's marked as not a working day
      if (!schedule || !schedule.is_working_day) {
        return {
          isAvailable: false,
          reason: 'El m√©dico no tiene horarios configurados para este d√≠a',
        };
      }

      // Check if appointment is within physician's working hours
      const startTime = moment(startDate);
      const endTime = moment(endDate);

      // Convert times to minutes for easier comparison
      const apptStartMinutes = startTime.hours() * 60 + startTime.minutes();
      const apptEndMinutes = endTime.hours() * 60 + endTime.minutes();
      const scheduleStartMinutes = this.timeToMinutes(schedule.start_time);
      const scheduleEndMinutes = this.timeToMinutes(schedule.end_time);

      // Check if appointment is within working hours
      if (
        apptStartMinutes < scheduleStartMinutes ||
        apptEndMinutes > scheduleEndMinutes
      ) {
        return {
          isAvailable: false,
          reason: 'La cita est√° fuera del horario de atenci√≥n del m√©dico',
        };
      }

      // Check if appointment is during rest period
      if (schedule.rest_start && schedule.rest_end) {
        const restStartMinutes = this.timeToMinutes(schedule.rest_start);
        const restEndMinutes = this.timeToMinutes(schedule.rest_end);

        // If appointment overlaps with rest period
        if (
          (apptStartMinutes >= restStartMinutes &&
            apptStartMinutes < restEndMinutes) ||
          (apptEndMinutes > restStartMinutes &&
            apptEndMinutes <= restEndMinutes) ||
          (apptStartMinutes < restStartMinutes &&
            apptEndMinutes > restEndMinutes)
        ) {
          return {
            isAvailable: false,
            reason: 'La cita coincide con el periodo de descanso del m√©dico',
          };
        }
      }

      // Check appointment length
      const appointmentLengthMinutes = apptEndMinutes - apptStartMinutes;
      if (appointmentLengthMinutes !== schedule.appointment_length) {
        return {
          isAvailable: false,
          reason: `La duraci√≥n de la cita debe ser de ${schedule.appointment_length} minutos`,
        };
      }

      // Check if there are too many simultaneous appointments
      if (schedule.simultaneous_slots > 1) {
        const existingAppointments = await this.prisma.appointment.count({
          where: {
            physician_id: physicianId,
            tenant_id: tenantId,
            deleted: false,
            status: { not: 'cancelada' },
            AND: [{ start: { lte: endDate } }, { end: { gte: startDate } }],
          },
        });

        if (existingAppointments >= schedule.simultaneous_slots) {
          return {
            isAvailable: false,
            reason:
              'El m√©dico ya tiene el m√°ximo de citas simult√°neas para este horario',
          };
        }
      }

      return { isAvailable: true };
    } catch (error) {
      console.error('Error checking physician schedule:', error);
      return {
        isAvailable: false,
        reason: 'Error al verificar disponibilidad del m√©dico',
      };
    }
  }

  async createAppointment(
    data: CreateAppointmentDto,
    tenant: string,
  ): Promise<{ message: string }> {
    // Validaciones iniciales (fechas, paciente, m√©dico, etc.)
    if (!data.start || !data.end || data.start >= data.end) {
      throw new BadRequestException(
        'La fecha de inicio debe ser anterior a la fecha de fin',
      );
    }

    try {
      // Asegurarnos de que las fechas se manejan correctamente
      // Guardamos expl√≠citamente la fecha sin ajuste de zona horaria
      const startDate = moment(data.start).toDate();
      const endDate = moment(data.end).toDate();

      // Verificar existencia de entidades relacionadas
      const [patientExists, physicianExists, tenantExists] = await Promise.all([
        this.prisma.patient.findUnique({ where: { user_id: data.patient_id } }),
        this.prisma.physician.findUnique({
          where: { user_id: data.physician_id },
        }),
        this.prisma.tenant.findUnique({ where: { id: tenant } }),
      ]);

      if (!patientExists)
        throw new BadRequestException('El paciente no existe');
      if (!physicianExists)
        throw new BadRequestException('El m√©dico no existe');
      if (!tenantExists) throw new BadRequestException('El tenant no existe');

      // Verificar si la cita est√° dentro del horario del m√©dico
      const scheduleCheck = await this.isAppointmentInPhysicianSchedule(
        data.physician_id,
        startDate,
        endDate,
        tenant,
      );

      if (!scheduleCheck.isAvailable) {
        throw new BadRequestException(
          scheduleCheck.reason || 'El horario no est√° disponible',
        );
      }

      // Verificar conflicto de horarios con otras citas
      const conflict = await this.prisma.appointment.findFirst({
        where: {
          physician_id: data.physician_id,
          tenant_id: tenant,
          deleted: false,
          status: { not: 'cancelada' },
          AND: [{ start: { lt: endDate } }, { end: { gt: startDate } }],
        },
      });

      if (conflict) {
        throw new BadRequestException(
          'El m√©dico ya tiene una cita en ese horario',
        );
      }

      // Transacci√≥n optimizada
      const result = await this.prisma.$transaction(async (prisma) => {
        // 1. Crear cita m√©dica
        const appointment = await prisma.appointment.create({
          data: {
            consultation_reason: data.consultation_reason,
            start: startDate,
            end: endDate,
            comments: data.comments,
            status: data.status || 'pendiente',
            tenant_id: tenant,
            patient_id: data.patient_id,
            physician_id: data.physician_id,
          },
        });

        // 2. Crear evento m√©dico
        await prisma.medical_event.create({
          data: {
            appointment_id: appointment.id,
            patient_id: appointment.patient_id,
            physician_id: appointment.physician_id,
            tenant_id: appointment.tenant_id,
          },
        });

        return { message: 'Cita creada exitosamente' };
      });

      return result;
    } catch (error) {
      console.error('Error creating appointment:', error);
      throw error;
    }
  }

  async getAppointmentsByUser(
    userId: string,
    params: { status?: status_type } & PaginationParams,
  ): Promise<appointment[]> {
    // Desestructurar los par√°metros de paginaci√≥n y ordenaci√≥n
    const { skip, take, orderBy, orderDirection } =
      parsePaginationAndSorting(params);

    try {
      const appointments = await this.prisma.appointment.findMany({
        where: {
          OR: [{ patient_id: userId }, { physician_id: userId }],
          ...(params.status && { status: params.status }),
        },
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });

      return appointments;
    } catch (error) {
      throw new InternalServerErrorException(
        `Error al obtener las citas: ${error.message}`,
      );
    }
  }

  async updateAppointmentStatus(
    id: string,
    status: status_type,
    reason?: string,
    tenant?: string,
  ): Promise<{ message: string }> {
    const appointment = await this.prisma.appointment.findUnique({
      where: { id, tenant_id: tenant },
    });

    if (!appointment) {
      throw new Error('Cita no encontrada');
    }
    if (status === 'cancelada' && !reason) {
      throw new Error('Se requiere una raz√≥n para cancelar la cita');
    }
    if (
      (appointment.status === 'pendiente' &&
        !['atendida', 'cancelada'].includes(status)) ||
      (appointment.status === 'atendida' && status !== 'cancelada') ||
      appointment.status === 'cancelada'
    ) {
      throw new Error(
        `Transici√≥n no permitida desde el estado ${appointment.status} a ${status}`,
      );
    }

    try {
      await this.prisma.appointment.update({
        where: { id },
        data: { status, cancelation_reason: reason || null },
      });

      return { message: `Estado de la cita actualizado a "${status}"` };
    } catch (error) {
      if (
        error instanceof PrismaClientKnownRequestError &&
        error.code === 'P2025'
      ) {
        throw new Error('Cita no encontrada');
      }
      throw new Error(`Error al actualizar la cita: ${error.message}`);
    }
  }

  async getPhysicianCalendar(
    physicianId: string,
    startDate?: string,
    endDate?: string,
    status?: status_type,
    tenantId?: string,
    month?: number,
    year?: number,
  ) {
    try {
      let start: Date;
      let end: Date;

      // Si se proporcionan mes y a√±o, configurar rango para ese mes
      if (month !== undefined && year !== undefined) {
        // Meses en JavaScript son 0-indexados (0-11), pero recibimos 1-12
        start = moment()
          .year(year)
          .month(month - 1)
          .startOf('month')
          .toDate();
        end = moment()
          .year(year)
          .month(month - 1)
          .endOf('month')
          .toDate();
      } else {
        // Usar fechas proporcionadas o valores predeterminados
        start = startDate
          ? new Date(startDate)
          : moment().startOf('week').toDate();

        end = endDate
          ? new Date(endDate)
          : moment(start).add(6, 'days').endOf('day').toDate();
      }

      // Obtener el m√©dico correspondiente
      const physician = await this.prisma.physician.findFirst({
        where: {
          user_id: physicianId,
          tenant_id: tenantId,
          deleted: false,
        },
      });

      if (!physician) {
        throw new BadRequestException('M√©dico no encontrado');
      }

      // Buscar las citas del m√©dico en el rango de fechas
      const appointments = await this.prisma.appointment.findMany({
        where: {
          physician_id: physicianId,
          tenant_id: tenantId,
          deleted: false,
          ...(status && { status }),
          start: { gte: start },
          end: { lte: end },
        },
        orderBy: { start: 'asc' },
      });

      // Obtener informaci√≥n de pacientes
      const patientIds = appointments.map((a) => a.patient_id);
      const patients = await this.prisma.user.findMany({
        where: {
          id: { in: patientIds },
        },
        select: {
          id: true,
          name: true,
          last_name: true,
        },
      });

      // Crear un mapa para acceso r√°pido a la informaci√≥n del paciente
      const patientMap = new Map();
      patients.forEach((patient) => {
        patientMap.set(patient.id, patient);
      });

      // Transformar datos para el calendario
      const calendarAppointments = appointments.map((appointment) => {
        const patient = patientMap.get(appointment.patient_id);
        const patientName = patient
          ? `${patient.name} ${patient.last_name || ''}`
          : 'Paciente';

        return {
          id: appointment.id,
          title: patientName,
          description: appointment.consultation_reason,
          start: appointment.start,
          end: appointment.end,
          status: appointment.status,
          comments: appointment.comments,
        };
      });

      // Obtener las excepciones en el mismo rango de fechas
      const exceptions =
        await this.prisma.physician_schedule_exception.findMany({
          where: {
            physician_id: physician.id,
            tenant_id: tenantId,
            deleted: false,
            date: {
              gte: start,
              lte: end,
            },
            is_available: false,
          },
        });

      // Agregar excepciones como eventos bloqueados
      const blockedEvents = exceptions.map((exception) => {
        const exceptionDate = moment(exception.date);
        return {
          id: `exception-${exception.id}`,
          title: 'No disponible',
          description: exception.reason || 'D√≠a bloqueado',
          start: exceptionDate.startOf('day').toDate(),
          end: exceptionDate.endOf('day').toDate(),
          isException: true,
        };
      });

      return {
        appointments: calendarAppointments,
        blockedDays: blockedEvents,
        range: {
          start,
          end,
        },
      };
    } catch (error) {
      console.error('Error fetching physician calendar:', error);
      throw new InternalServerErrorException(
        `Error al obtener el calendario: ${error.message}`,
      );
    }
  }

  async getStatistics(
    type: StatisticsType,
    tenantId: string,
    options: {
      startDate?: Date;
      endDate?: Date;
      groupBy?: GroupBy;
      physicianId?: string;
      patientId?: string;
      specialtyId?: number;
      limit?: number;
      filter?: string;
    },
  ) {
    try {
      // Establecer fechas predeterminadas si no se proporcionan
      const start = options.startDate || moment().subtract(1, 'year').toDate();
      const end = options.endDate || moment().toDate();

      // Configurar un l√≠mite predeterminado
      const limit = options.limit || 10;

      // Configurar filtros base que se aplicar√°n a todas las consultas
      const baseFilters = {
        tenant_id: tenantId,
        deleted: false,
        ...(options.startDate && { start: { gte: start } }),
        ...(options.endDate && { end: { lte: end } }),
      };

      // Realizar diferentes consultas seg√∫n el tipo de estad√≠stica solicitada
      switch (type) {
        case StatisticsType.APPOINTMENTS_BY_STATUS:
          return this.getAppointmentsByStatus(baseFilters);

        case StatisticsType.APPOINTMENTS_BY_DAY:
          return this.getAppointmentsByTimeUnit(baseFilters, 'day');

        case StatisticsType.APPOINTMENTS_BY_MONTH:
          return this.getAppointmentsByTimeUnit(baseFilters, 'month');

        case StatisticsType.APPOINTMENTS_BY_PHYSICIAN:
          return this.getAppointmentsByPhysician(baseFilters, limit);

        case StatisticsType.DIAGNOSES_DISTRIBUTION:
          return this.getDiagnosesDistribution(baseFilters, limit);

        case StatisticsType.CONSULTATIONS_COUNT:
          return this.getConsultationsCount(
            baseFilters,
            options.groupBy || GroupBy.MONTH,
          );

        case StatisticsType.PATIENT_DEMOGRAPHICS:
          return this.getPatientDemographics(tenantId);

        case StatisticsType.ATTENDANCE_RATE:
          return this.getAttendanceRate(
            baseFilters,
            options.groupBy || GroupBy.MONTH,
          );

        case StatisticsType.PHYSICIAN_WORKLOAD:
          return this.getPhysicianWorkload(baseFilters, options.physicianId);

        case StatisticsType.SCHEDULING_TRENDS:
          return this.getSchedulingTrends(
            baseFilters,
            options.groupBy || GroupBy.MONTH,
          );

        default:
          throw new BadRequestException(
            `Tipo de estad√≠stica no soportado: ${type}`,
          );
      }
    } catch (error) {
      console.error('Error obteniendo estad√≠sticas:', error);
      throw new InternalServerErrorException(
        `Error al obtener estad√≠sticas: ${error.message}`,
      );
    }
  }

  // M√©todos auxiliares para cada tipo de estad√≠stica

  private async getAppointmentsByStatus(filters: any) {
    const statusCounts = await this.prisma.appointment.groupBy({
      by: ['status'],
      where: filters,
      _count: true,
    });

    return {
      data: statusCounts.map((item) => ({
        name: item.status,
        value: item._count,
      })),
      total: statusCounts.reduce((acc, curr) => acc + curr._count, 0),
    };
  }

  private async getAppointmentsByTimeUnit(filters: any, unit: 'day' | 'month') {
    // Obtener todas las citas que cumplen con los filtros
    const appointments = await this.prisma.appointment.findMany({
      where: filters,
      select: {
        start: true,
        status: true,
      },
      orderBy: {
        start: 'asc',
      },
    });

    // Agrupar citas por unidad de tiempo
    const groupedAppointments = {};

    appointments.forEach((appointment) => {
      const date = moment(appointment.start);
      let key;

      if (unit === 'day') {
        key = date.format('YYYY-MM-DD');
      } else if (unit === 'month') {
        key = date.format('YYYY-MM');
      }

      if (!groupedAppointments[key]) {
        groupedAppointments[key] = {
          period: key,
          total: 0,
          atendida: 0,
          pendiente: 0,
          cancelada: 0,
        };
      }

      groupedAppointments[key].total += 1;
      groupedAppointments[key][appointment.status] += 1;
    });

    // Convertir objeto a array para la respuesta
    const result = Object.values(groupedAppointments);

    return {
      data: result,
      unit,
      total: appointments.length,
    };
  }

  private async getAppointmentsByPhysician(filters: any, limit: number) {
    const physicianResults = await this.prisma.$queryRaw`
      SELECT 
        u.id as physician_id, 
        u.name, 
        u.last_name, 
        COUNT(a.id) as total_appointments,
        COUNT(CASE WHEN a.status = 'atendida' THEN 1 END) as completed_appointments,
        COUNT(CASE WHEN a.status = 'cancelada' THEN 1 END) as cancelled_appointments
      FROM appointment a
      JOIN "user" u ON a.physician_id = u.id
      WHERE a.tenant_id = ${filters.tenant_id}
        AND a.deleted = false
        AND (${filters.start?.gte || null} IS NULL OR a.start >= ${filters.start?.gte || null})
        AND (${filters.end?.lte || null} IS NULL OR a.end <= ${filters.end?.lte || null})
      GROUP BY u.id, u.name, u.last_name
      ORDER BY total_appointments DESC
      LIMIT ${limit}
    `;

    // Convertir valores BigInt a Number
    const formattedResults = Array.isArray(physicianResults)
      ? physicianResults.map((item) => ({
          physician_id: item.physician_id,
          name: item.name,
          last_name: item.last_name,
          total_appointments: Number(item.total_appointments),
          completed_appointments: Number(item.completed_appointments),
          cancelled_appointments: Number(item.cancelled_appointments),
        }))
      : [];

    return {
      data: formattedResults,
      total: formattedResults.length,
    };
  }

  private async getDiagnosesDistribution(filters: any, limit: number) {
    // Usar una subconsulta m√°s eficiente en lugar de IN con lista larga
    const diagnosesData = await this.prisma.$queryRaw`
      SELECT 
        s.code,
        s.description,
        COUNT(sme.id) as count
      FROM medical_event me
      JOIN subcategory_medical_event sme ON me.id = sme."medical_eventId"
      JOIN subcategories_cie_diez s ON sme."subCategoryId" = s.id
      WHERE me.appointment_id IN (
        SELECT a.id 
        FROM appointment a 
        WHERE a.tenant_id = ${filters.tenant_id}
          AND a.deleted = false
          AND (${filters.start?.gte || null} IS NULL OR a.start >= ${filters.start?.gte || null})
          AND (${filters.end?.lte || null} IS NULL OR a.end <= ${filters.end?.lte || null})
          AND (${filters.physician_id || null} IS NULL OR a.physician_id = ${filters.physician_id || null})
          AND (${filters.patient_id || null} IS NULL OR a.patient_id = ${filters.patient_id || null})
          AND (${filters.status || null} IS NULL OR a.status = ${filters.status || null})
      )
      GROUP BY s.code, s.description
      ORDER BY count DESC
      LIMIT ${limit}
    `;

    // Convertir BigInt a Number en los resultados
    const formattedData = Array.isArray(diagnosesData)
      ? diagnosesData.map((item) => ({
          code: item.code,
          description: item.description,
          count: Number(item.count), // Convertir expl√≠citamente BigInt a Number
        }))
      : [];

    return {
      data: formattedData,
      total: formattedData.reduce((acc, curr) => acc + curr.count, 0),
    };
  }

  private async getConsultationsCount(filters: any, groupBy: GroupBy) {
    let format: string;
    let groupField: string;

    switch (groupBy) {
      case GroupBy.DAY:
        format = 'YYYY-MM-DD';
        groupField = 'date';
        break;
      case GroupBy.WEEK:
        format = 'YYYY-[W]WW';
        groupField = 'week';
        break;
      case GroupBy.MONTH:
        format = 'YYYY-MM';
        groupField = 'month';
        break;
      case GroupBy.QUARTER:
        format = 'YYYY-[Q]Q';
        groupField = 'quarter';
        break;
      case GroupBy.YEAR:
        format = 'YYYY';
        groupField = 'year';
        break;
      default:
        format = 'YYYY-MM';
        groupField = 'month';
    }

    // Obtener citas
    const appointments = await this.prisma.appointment.findMany({
      where: {
        ...filters,
        status: 'atendida', // Solo citas completadas
      },
      select: {
        start: true,
      },
      orderBy: {
        start: 'asc',
      },
    });

    // Agrupar por la unidad de tiempo seleccionada
    const grouped = {};

    appointments.forEach((appointment) => {
      const date = moment(appointment.start);
      const key = date.format(format);

      if (!grouped[key]) {
        grouped[key] = {
          period: key,
          count: 0,
        };
      }

      grouped[key].count += 1;
    });

    // Convertir a array y ordenar por per√≠odo
    const result = Object.values(grouped).sort((a: any, b: any) =>
      a.period.localeCompare(b.period),
    );

    return {
      data: result,
      groupBy: groupField,
      total: appointments.length,
    };
  }

  private async getPatientDemographics(tenantId: string) {
    // Obtener distribuci√≥n por g√©nero
    const genderDistribution = await this.prisma.$queryRaw`
      SELECT 
        COALESCE(u.gender, 'No especificado') as gender,
        COUNT(u.id) as count
      FROM "user" u
      WHERE u.tenant_id = ${tenantId}
        AND u.deleted = false
        AND u.role = 'patient'
      GROUP BY u.gender
    `;

    // Obtener distribuci√≥n por edad
    const ageDistribution = await this.prisma.$queryRaw`
      SELECT 
        CASE
          WHEN EXTRACT(YEAR FROM AGE(NOW(), u.birth_date)) < 18 THEN '0-17'
          WHEN EXTRACT(YEAR FROM AGE(NOW(), u.birth_date)) BETWEEN 18 AND 30 THEN '18-30'
          WHEN EXTRACT(YEAR FROM AGE(NOW(), u.birth_date)) BETWEEN 31 AND 45 THEN '31-45'
          WHEN EXTRACT(YEAR FROM AGE(NOW(), u.birth_date)) BETWEEN 46 AND 60 THEN '46-60'
          WHEN EXTRACT(YEAR FROM AGE(NOW(), u.birth_date)) > 60 THEN '60+'
          ELSE 'Sin datos'
        END as age_group,
        COUNT(u.id) as count
      FROM "user" u
      WHERE u.tenant_id = ${tenantId}
        AND u.deleted = false
        AND u.role = 'patient'
      GROUP BY age_group
      ORDER BY age_group
    `;

    // Convertir valores BigInt a Number
    const formattedGenderDistribution = Array.isArray(genderDistribution)
      ? genderDistribution.map((item) => ({
          gender: item.gender,
          count: Number(item.count),
        }))
      : [];

    const formattedAgeDistribution = Array.isArray(ageDistribution)
      ? ageDistribution.map((item) => ({
          age_group: item.age_group,
          count: Number(item.count),
        }))
      : [];

    return {
      gender: formattedGenderDistribution,
      age: formattedAgeDistribution,
    };
  }

  private async getAttendanceRate(filters: any, groupBy: GroupBy) {
    let format: string;

    switch (groupBy) {
      case GroupBy.DAY:
        format = 'YYYY-MM-DD';
        break;
      case GroupBy.WEEK:
        format = 'YYYY-[W]WW';
        break;
      case GroupBy.MONTH:
        format = 'YYYY-MM';
        break;
      case GroupBy.QUARTER:
        format = 'YYYY-[Q]Q';
        break;
      case GroupBy.YEAR:
        format = 'YYYY';
        break;
      default:
        format = 'YYYY-MM';
    }

    // Obtener citas
    const appointments = await this.prisma.appointment.findMany({
      where: filters,
      select: {
        start: true,
        status: true,
      },
      orderBy: {
        start: 'asc',
      },
    });

    // Agrupar por la unidad de tiempo seleccionada
    const grouped = {};

    appointments.forEach((appointment) => {
      const date = moment(appointment.start);
      const key = date.format(format);

      if (!grouped[key]) {
        grouped[key] = {
          period: key,
          total: 0,
          attended: 0,
          cancelled: 0,
          pending: 0,
          attendanceRate: 0,
        };
      }

      grouped[key].total += 1;

      if (appointment.status === 'atendida') {
        grouped[key].attended += 1;
      } else if (appointment.status === 'cancelada') {
        grouped[key].cancelled += 1;
      } else if (appointment.status === 'pendiente') {
        grouped[key].pending += 1;
      }
    });

    // Calcular tasas de asistencia
    Object.values(grouped).forEach((period: any) => {
      // Excluir pendientes del c√°lculo de tasa
      const completedAppointments = period.attended + period.cancelled;
      period.attendanceRate =
        completedAppointments > 0
          ? (period.attended / completedAppointments) * 100
          : 0;
    });

    // Convertir a array y ordenar por per√≠odo
    const result = Object.values(grouped).sort((a: any, b: any) =>
      a.period.localeCompare(b.period),
    );

    return {
      data: result,
      groupBy,
      total: appointments.length,
    };
  }

  private async getPhysicianWorkload(filters: any, physicianId?: string) {
    // Si se proporciona un m√©dico espec√≠fico, agregar al filtro
    if (physicianId) {
      filters = {
        ...filters,
        physician_id: physicianId,
      };
    }

    // Obtener estad√≠sticas de carga de trabajo por d√≠a de la semana
    const appointments = await this.prisma.appointment.findMany({
      where: filters,
      select: {
        start: true,
        end: true,
        status: true,
        physician_id: true,
      },
    });

    // Organizar datos por d√≠a de la semana y por m√©dico
    const workloadByDayOfWeek = {
      0: { day: 'Domingo', count: 0, minutes: 0 },
      1: { day: 'Lunes', count: 0, minutes: 0 },
      2: { day: 'Martes', count: 0, minutes: 0 },
      3: { day: 'Mi√©rcoles', count: 0, minutes: 0 },
      4: { day: 'Jueves', count: 0, minutes: 0 },
      5: { day: 'Viernes', count: 0, minutes: 0 },
      6: { day: 'S√°bado', count: 0, minutes: 0 },
    };

    const workloadByPhysician = {};

    appointments.forEach((appointment) => {
      // Solo considerar citas atendidas para los c√°lculos de carga
      if (appointment.status === 'atendida') {
        const dayOfWeek = moment(appointment.start).day();
        const duration = moment(appointment.end).diff(
          moment(appointment.start),
          'minutes',
        );

        // Acumular por d√≠a de semana
        workloadByDayOfWeek[dayOfWeek].count += 1;
        workloadByDayOfWeek[dayOfWeek].minutes += duration;

        // Acumular por m√©dico
        if (!workloadByPhysician[appointment.physician_id]) {
          workloadByPhysician[appointment.physician_id] = {
            physician_id: appointment.physician_id,
            count: 0,
            minutes: 0,
          };
        }

        workloadByPhysician[appointment.physician_id].count += 1;
        workloadByPhysician[appointment.physician_id].minutes += duration;
      }
    });

    // Convertir a arrays
    const daysOfWeek = Object.values(workloadByDayOfWeek);
    const physicians = Object.values(workloadByPhysician);

    // Obtener informaci√≥n adicional de los m√©dicos
    if (physicians.length > 0) {
      const physicianIds = physicians.map((p: any) => p.physician_id);
      const physicianData = await this.prisma.user.findMany({
        where: {
          id: { in: physicianIds },
        },
        select: {
          id: true,
          name: true,
          last_name: true,
        },
      });

      // Agregar nombres a los resultados
      physicians.forEach((physician: any) => {
        const data = physicianData.find((p) => p.id === physician.physician_id);
        if (data) {
          physician.name = `${data.name} ${data.last_name || ''}`;
        }
      });
    }

    return {
      byDayOfWeek: daysOfWeek,
      byPhysician: physicians,
      total: {
        appointments: appointments.filter((a) => a.status === 'atendida')
          .length,
        minutes: appointments
          .filter((a) => a.status === 'atendida')
          .reduce(
            (acc, curr) =>
              acc + moment(curr.end).diff(moment(curr.start), 'minutes'),
            0,
          ),
      },
    };
  }

  private async getSchedulingTrends(filters: any, groupBy: GroupBy) {
    let format: string;

    switch (groupBy) {
      case GroupBy.DAY:
        format = 'YYYY-MM-DD';
        break;
      case GroupBy.WEEK:
        format = 'YYYY-[W]WW';
        break;
      case GroupBy.MONTH:
        format = 'YYYY-MM';
        break;
      default:
        format = 'YYYY-MM';
    }

    // Obtener citas con su fecha de creaci√≥n
    const appointments = await this.prisma.appointment.findMany({
      where: filters,
      select: {
        created_at: true,
        start: true,
      },
      orderBy: {
        created_at: 'asc',
      },
    });

    // Agrupar por la unidad de tiempo seleccionada
    const grouped = {};

    appointments.forEach((appointment) => {
      const creationDate = moment(appointment.created_at);
      const key = creationDate.format(format);

      if (!grouped[key]) {
        grouped[key] = {
          period: key,
          count: 0,
          advanceBookingDays: 0, // D√≠as promedio de anticipaci√≥n en la reserva
        };
      }

      // Contar cita
      grouped[key].count += 1;

      // Calcular d√≠as de anticipaci√≥n
      const appointmentDate = moment(appointment.start);
      const daysInAdvance = appointmentDate.diff(creationDate, 'days');
      grouped[key].advanceBookingDays += daysInAdvance;
    });

    // Calcular promedios
    Object.values(grouped).forEach((period: any) => {
      if (period.count > 0) {
        period.advanceBookingDays =
          Math.round((period.advanceBookingDays / period.count) * 10) / 10;
      }
    });

    // Convertir a array y ordenar por per√≠odo
    const result = Object.values(grouped).sort((a: any, b: any) =>
      a.period.localeCompare(b.period),
    );

    return {
      data: result,
      groupBy,
      total: appointments.length,
    };
  }
}

================
File: src/medical-scheduling/appointments/dto/create-appointment.dto.ts
================
import {
  IsUUID,
  IsString,
  IsDate,
  IsEnum,
  IsOptional,
  IsNotEmpty,
} from 'class-validator';
import { Transform } from 'class-transformer';
import { status_type } from '@prisma/client';
import { ApiProperty } from '@nestjs/swagger';

export class CreateAppointmentDto {
  @ApiProperty({
    description: 'Raz√≥n o motivo de la consulta',
    example: 'Consulta de control',
    type: String,
    required: true,
  })
  @IsString()
  @IsNotEmpty()
  consultation_reason: string;

  @ApiProperty({
    description: 'Fecha y hora de inicio de la cita (formato ISO)',
    example: '2025-05-23T10:00:00Z',
    type: Date,
    required: true,
  })
  @IsDate()
  @IsNotEmpty()
  @Transform(({ value }) => new Date(value))
  start: Date;

  @ApiProperty({
    description: 'Fecha y hora de fin de la cita (formato ISO)',
    example: '2025-05-23T11:00:00Z',
    type: Date,
    required: true,
  })
  @IsDate()
  @IsNotEmpty()
  @Transform(({ value }) => new Date(value))
  end: Date;

  @ApiProperty({
    description: 'ID del paciente',
    example: '123e4567-e89b-12d3-a456-426614174000',
    type: String,
    required: true,
  })
  @IsUUID()
  @IsNotEmpty()
  patient_id: string;

  @ApiProperty({
    description: 'ID del m√©dico',
    example: '123e4567-e89b-12d3-a456-426614174001',
    type: String,
    required: true,
  })
  @IsUUID()
  @IsNotEmpty()
  physician_id: string;

  @ApiProperty({
    description: 'Estado de la cita',
    enum: ['atendida', 'cancelada', 'pendiente'],
    default: 'pendiente',
    required: false,
  })
  @IsEnum(['atendida', 'cancelada', 'pendiente'])
  @IsOptional()
  status?: status_type;

  @ApiProperty({
    description: 'Comentarios adicionales sobre la cita',
    example: 'Paciente con antecedentes de hipertensi√≥n',
    type: String,
    required: false,
  })
  @IsString()
  @IsOptional()
  comments?: string;

  @ApiProperty({
    description: 'ID del tenant al que pertenece la cita',
    example: '123e4567-e89b-12d3-a456-426614174002',
    type: String,
    required: false,
  })
  @IsOptional()
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  tenant_id?: string;
}

================
File: src/medical-scheduling/appointments/dto/get-appointments-calendar.dto.ts
================
import { IsDateString, IsEnum, IsNumber, IsOptional } from 'class-validator';
import { status_type } from '@prisma/client';
import { Transform } from 'class-transformer';
import { ApiProperty } from '@nestjs/swagger';

export class GetAppointmentsCalendarDto {
  @ApiProperty({
    description: 'Fecha de inicio para filtrar citas (formato ISO)',
    example: '2025-05-01T00:00:00Z',
    required: false,
  })
  @IsDateString()
  @IsOptional()
  startDate?: string;

  @ApiProperty({
    description: 'Fecha de fin para filtrar citas (formato ISO)',
    example: '2025-05-31T23:59:59Z',
    required: false,
  })
  @IsDateString()
  @IsOptional()
  endDate?: string;

  @ApiProperty({
    description: 'Vista del calendario',
    enum: ['dia', 'semana', 'mes'],
    default: 'semana',
    required: false,
  })
  @IsEnum(['dia', 'semana', 'mes'])
  @IsOptional()
  view?: 'dia' | 'semana' | 'mes' = 'semana';

  @ApiProperty({
    description: 'Estado de las citas a filtrar',
    enum: ['atendida', 'cancelada', 'pendiente'],
    required: false,
  })
  @IsEnum(['atendida', 'cancelada', 'pendiente'])
  @IsOptional()
  status?: status_type;

  @ApiProperty({
    description: 'Mes para filtrar (1-12)',
    example: 5,
    type: Number,
    required: false,
  })
  @IsNumber()
  @IsOptional()
  @Transform(({ value }) => parseInt(value, 10))
  month?: number;

  @ApiProperty({
    description: 'A√±o para filtrar',
    example: 2025,
    type: Number,
    required: false,
  })
  @IsNumber()
  @IsOptional()
  @Transform(({ value }) => parseInt(value, 10))
  year?: number;
}

================
File: src/medical-scheduling/appointments/dto/get-statistics.dto.ts
================
import {
  IsDateString,
  IsEnum,
  IsNumber,
  IsOptional,
  IsString,
  IsUUID,
} from 'class-validator';
import { Transform } from 'class-transformer';
import { ApiProperty } from '@nestjs/swagger';

export enum StatisticsType {
  APPOINTMENTS_BY_STATUS = 'appointments_by_status',
  APPOINTMENTS_BY_DAY = 'appointments_by_day',
  APPOINTMENTS_BY_MONTH = 'appointments_by_month',
  APPOINTMENTS_BY_PHYSICIAN = 'appointments_by_physician',
  DIAGNOSES_DISTRIBUTION = 'diagnoses_distribution',
  CONSULTATIONS_COUNT = 'consultations_count',
  PATIENT_DEMOGRAPHICS = 'patient_demographics',
  ATTENDANCE_RATE = 'attendance_rate',
  PHYSICIAN_WORKLOAD = 'physician_workload',
  SCHEDULING_TRENDS = 'scheduling_trends',
}

export enum GroupBy {
  DAY = 'day',
  WEEK = 'week',
  MONTH = 'month',
  QUARTER = 'quarter',
  YEAR = 'year',
  PHYSICIAN = 'physician',
  PATIENT = 'patient',
  STATUS = 'status',
  SPECIALTY = 'specialty',
  DIAGNOSIS = 'diagnosis',
}

export class GetStatisticsDto {
  @ApiProperty({
    description: 'Tipo de estad√≠sticas a recuperar',
    enum: StatisticsType,
    enumName: 'StatisticsType',
    example: 'appointments_by_status',
    required: true,
  })
  @IsEnum(StatisticsType)
  type: StatisticsType;

  @ApiProperty({
    description: 'Fecha de inicio para las estad√≠sticas (formato ISO)',
    example: '2025-01-01T00:00:00Z',
    required: false,
  })
  @IsOptional()
  @IsDateString()
  startDate?: string;

  @ApiProperty({
    description: 'Fecha de fin para las estad√≠sticas (formato ISO)',
    example: '2025-05-23T23:59:59Z',
    required: false,
  })
  @IsOptional()
  @IsDateString()
  endDate?: string;

  @ApiProperty({
    description: 'C√≥mo agrupar las estad√≠sticas',
    enum: GroupBy,
    enumName: 'GroupBy',
    example: 'month',
    required: false,
  })
  @IsOptional()
  @IsEnum(GroupBy)
  groupBy?: GroupBy;

  @ApiProperty({
    description: 'L√≠mite de resultados a devolver',
    example: 10,
    type: Number,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  @Transform(({ value }) => parseInt(value, 10))
  limit?: number;

  @ApiProperty({
    description: 'Filtrar por ID de m√©dico',
    example: '123e4567-e89b-12d3-a456-426614174000',
    required: false,
  })
  @IsOptional()
  @IsUUID()
  physicianId?: string;

  @ApiProperty({
    description: 'Filtrar por ID de paciente',
    example: '123e4567-e89b-12d3-a456-426614174001',
    required: false,
  })
  @IsOptional()
  @IsUUID()
  patientId?: string;

  @ApiProperty({
    description: 'Filtrar por ID de especialidad',
    example: 1,
    type: Number,
    required: false,
  })
  @IsOptional()
  @IsNumber()
  @Transform(({ value }) => parseInt(value, 10))
  specialtyId?: number;

  @ApiProperty({
    description: 'Criterios de filtro adicionales',
    example: 'consulta',
    required: false,
  })
  @IsOptional()
  @IsString()
  filter?: string;
}

================
File: src/medical-scheduling/medical-events/dto/attend-medical-event.dto.ts
================
import { Type } from 'class-transformer';
import {
  IsArray,
  IsBoolean,
  IsInt,
  IsNotEmpty,
  IsNumber,
  IsOptional,
  IsString,
  IsUUID,
  ValidateNested,
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class VitalSignItemDto {
  @ApiProperty({ description: 'ID of the vital sign', example: 1 })
  @IsInt()
  @IsNotEmpty()
  vital_sign_id: number;

  @ApiProperty({ description: 'Measurement of the vital sign', example: 98 })
  @IsInt()
  @IsNotEmpty()
  measure: number;
}

export class PhysicalExplorationItemDto {
  @ApiProperty({
    description: 'ID of the physical exploration area',
    example: 1,
  })
  @IsInt()
  @IsNotEmpty()
  physical_exploration_area_id: number;

  @ApiProperty({
    description: 'Description of the physical exploration',
    example: 'No abnormalities found',
  })
  @IsString()
  @IsNotEmpty()
  description: string;
}

export class PhysicalExaminationItemDto {
  @ApiProperty({
    description: 'ID of the physical subsystem (optional)',
    example: 1,
    required: false,
  })
  @IsInt()
  @IsOptional()
  physical_subsystem_id?: number;

  @ApiProperty({
    description: 'Description of the physical examination',
    example: 'Lungs clear to auscultation',
  })
  @IsString()
  @IsNotEmpty()
  description: string;
}

export class MedicationItemDto {
  @ApiProperty({ description: 'Monodrug name', example: 'Amoxicillin' })
  @IsString()
  @IsNotEmpty()
  monodrug: string;

  @ApiProperty({ description: 'Dosage of the medication', example: '500' })
  @IsString()
  @IsNotEmpty()
  dose: string;

  @ApiProperty({ description: 'Units for the dosage', example: 'mg' })
  @IsString()
  @IsNotEmpty()
  dose_units: string;

  @ApiProperty({
    description: 'Frequency of administration',
    example: 'Every 8 hours',
  })
  @IsString()
  @IsNotEmpty()
  frecuency: string;

  @ApiProperty({ description: 'Duration of the treatment', example: '7' })
  @IsString()
  @IsNotEmpty()
  duration: string;

  @ApiProperty({ description: 'Units for the duration', example: 'days' })
  @IsString()
  @IsNotEmpty()
  duration_units: string;

  @ApiProperty({
    description: 'Additional observations for the medication (optional)',
    example: 'Take with food',
    required: false,
  })
  @IsOptional()
  @IsString()
  observations?: string;
}

export class AttendMedicalEventDto {
  @ApiProperty({
    description: 'ID of the medical event to attend',
    example: 'a1b2c3d4-e5f6-7890-1234-567890abcdef',
  })
  @IsUUID()
  @IsNotEmpty()
  id: string;

  @ApiProperty({
    description: 'Optional comments from the physician',
    example: 'Patient is recovering well.',
    required: false,
  })
  @IsString()
  @IsOptional()
  physician_comments?: string;

  @ApiProperty({
    description: 'Optional main diagnostic CIE code',
    example: 'J00',
    required: false,
  })
  @IsNumber()
  @IsOptional()
  main_diagnostic_cie_id?: number;

  @ApiProperty({
    description: 'Optional description of the patient_s evolution',
    example: 'Symptoms have subsided.',
    required: false,
  })
  @IsString()
  @IsOptional()
  evolution?: string;

  @ApiProperty({
    description: 'Optional description of any procedures performed',
    example: 'Blood sample taken for analysis.',
    required: false,
  })
  @IsString()
  @IsOptional()
  procedure?: string;

  @ApiProperty({
    description: 'Optional description of the treatment provided',
    example: 'Continue current medication.',
    required: false,
  })
  @IsString()
  @IsOptional()
  treatment?: string;

  @ApiProperty({
    type: () => [VitalSignItemDto],
    description: 'Optional list of vital signs recorded',
    required: false,
  })
  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => VitalSignItemDto)
  @IsOptional()
  vital_signs?: VitalSignItemDto[];

  @ApiProperty({
    type: [Number],
    description: 'Optional list of subcategory CIE IDs',
    example: [101, 102],
    required: false,
  })
  @IsArray()
  @IsInt({ each: true })
  @IsOptional()
  subcategory_cie_ids?: number[];

  @ApiProperty({
    type: () => [PhysicalExplorationItemDto],
    description: 'Optional list of physical explorations',
    required: false,
  })
  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => PhysicalExplorationItemDto)
  @IsOptional()
  physical_explorations?: PhysicalExplorationItemDto[];

  @ApiProperty({
    type: () => [PhysicalExaminationItemDto],
    description: 'Optional list of physical examinations',
    required: false,
  })
  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => PhysicalExaminationItemDto)
  @IsOptional()
  physical_examinations?: PhysicalExaminationItemDto[];

  @ApiProperty({
    type: () => [MedicationItemDto],
    description: 'Optional list of prescribed medications',
    required: false,
  })
  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => MedicationItemDto)
  @IsOptional()
  medications?: MedicationItemDto[];

  @ApiProperty({
    description: 'Optional flag indicating if the consultation has ended',
    example: true,
    required: false,
  })
  @IsBoolean()
  @IsOptional()
  consultation_ended?: boolean;
}

================
File: src/medical-scheduling/medical-events/dto/create-medical-event.dto.ts
================
import {
  IsUUID,
  IsString,
  IsNotEmpty,
  IsOptional,
  IsNumber,
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreateMedicalEventDto {
  @ApiProperty({
    description: 'The ID of the appointment related to this medical event',
    example: 'a1b2c3d4-e5f6-7890-1234-567890abcdef',
  })
  @IsUUID()
  @IsNotEmpty()
  appointment_id: string;

  @ApiProperty({
    description: 'The ID of the patient involved in this medical event',
    example: 'b2c3d4e5-f6g7-8901-2345-67890abcdef0',
  })
  @IsUUID()
  @IsNotEmpty()
  patient_id: string;

  @ApiProperty({
    description: 'The ID of the physician attending this medical event',
    example: 'c3d4e5f6-g7h8-9012-3456-7890abcdef01',
  })
  @IsUUID()
  @IsNotEmpty()
  physician_id: string;

  @ApiProperty({
    description: 'Optional comments from the physician',
    example: 'Patient reports feeling better after medication.',
    required: false,
  })
  @IsString()
  @IsOptional()
  physician_comments?: string;

  @ApiProperty({
    description: 'Optional main diagnostic CIE code',
    example: 'A001',
    required: false,
  })
  @IsNumber()
  @IsOptional()
  main_diagnostic_cie?: number;

  @ApiProperty({
    description: 'Optional description of the patient_s evolution',
    example: 'Steady improvement over the last 24 hours.',
    required: false,
  })
  @IsString()
  @IsOptional()
  evolution?: string;

  @ApiProperty({
    description: 'Optional description of any procedures performed',
    example: 'Minor suture applied to laceration.',
    required: false,
  })
  @IsString()
  @IsOptional()
  procedure?: string;

  @ApiProperty({
    description: 'Optional description of the treatment provided',
    example: 'Prescribed Amoxicillin 500mg every 8 hours for 7 days.',
    required: false,
  })
  @IsString()
  @IsOptional()
  treatment?: string;
}

================
File: src/medical-scheduling/medical-events/medical-events.controller.ts
================
import { Body, Controller, Get, Post, Query, UseGuards } from '@nestjs/common';
import { CreateMedicalEventDto } from './dto/create-medical-event.dto';
import { MedicalEventsService } from './medical-events.service';
import { AttendMedicalEventDto } from './dto/attend-medical-event.dto';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { GetUser } from '../../auth/decorators/get-user.decorator';
import { GetTenant } from '../../auth/decorators/get-tenant.decorator';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiQuery,
} from '@nestjs/swagger';

@ApiTags('Medical Events')
@ApiBearerAuth('access-token')
@Controller('medical-events')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class MedicalEventsController {
  constructor(private readonly medicalEventsService: MedicalEventsService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new medical event' })
  @ApiResponse({
    status: 201,
    description: 'The medical event has been successfully created.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  async createMedicalEvent(
    @Body() createMedicalEventDto: CreateMedicalEventDto,
    @GetTenant() tenant,
  ) {
    return this.medicalEventsService.createMedicalEvent(
      createMedicalEventDto,
      tenant.id,
    );
  }

  @Get()
  @ApiOperation({ summary: 'Get a list of medical events' })
  @ApiQuery({
    name: 'patient_id',
    required: false,
    type: String,
    description: 'Filter by patient ID',
  })
  @ApiQuery({
    name: 'physician_id',
    required: false,
    type: String,
    description: 'Filter by physician ID',
  })
  @ApiQuery({
    name: 'page',
    required: false,
    type: Number,
    description: 'Page number for pagination',
  })
  @ApiQuery({
    name: 'pageSize',
    required: false,
    type: Number,
    description: 'Number of items per page',
  })
  @ApiQuery({
    name: 'orderBy',
    required: false,
    type: String,
    description: 'Field to order by',
  })
  @ApiQuery({
    name: 'orderDirection',
    required: false,
    enum: ['asc', 'desc'],
    description: 'Order direction',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved medical events.',
  })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  async getMedicalEvents(
    @Query('patient_id') patient_id?: string,
    @Query('physician_id') physician_id?: string,
    @Query('page') page?: number,
    @Query('pageSize') pageSize?: number,
    @Query('orderBy') orderBy?: string,
    @Query('orderDirection') orderDirection?: 'asc' | 'desc',
  ) {
    const filters = {
      patient_id,
      physician_id,
      page,
      pageSize,
      orderBy,
      orderDirection,
    };
    return this.medicalEventsService.getMedicalEvents(filters);
  }

  @Post('attend')
  @ApiOperation({ summary: 'Attend a medical event' })
  @ApiResponse({
    status: 201,
    description: 'The medical event has been successfully attended.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @RequirePermission(Permission.ASSIGN_TREATMENTS)
  async attendMedicalEvent(
    @Body() attendMedicalEventDto: AttendMedicalEventDto,
    @GetUser() user,
    @GetTenant() tenant,
  ) {
    return this.medicalEventsService.attendMedicalEvent(
      attendMedicalEventDto,
      user.id,
      tenant.id,
    );
  }
}

================
File: src/medical-scheduling/medical-events/medical-events.module.ts
================
import { Module } from '@nestjs/common';
import { MedicalEventsController } from './medical-events.controller';
import { MedicalEventsService } from './medical-events.service';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';
import { VitalSignsModule } from '../modules/vital-signs/vital-signs.module';
import { PhysicalExplorationModule } from '../modules/physical-exploration-data/physical-exploration/physical-exploration.module';
import { PhysicalExaminationModule } from '../modules/physical-examination-data/physical-examination/physical_examination.module';
import { FileUploadService } from 'src/utils/file_upload/file_upload.service';
import { FileUploadRepository } from 'src/utils/file_upload/file_upload.repository';
import { CloudinaryConfig } from 'src/utils/cloudinary';
import { PrescriptionModule } from '../modules/prescription/prescription.module';
import { NotificationModule } from 'src/services/notification/notification.module';

@Module({
  imports: [
    GuardAuthModule,
    VitalSignsModule,
    PhysicalExplorationModule,
    PhysicalExaminationModule,
    PrescriptionModule,
    NotificationModule,
  ],
  controllers: [MedicalEventsController],
  providers: [
    MedicalEventsService,
    PrismaService,
    FileUploadService,
    FileUploadRepository,
    CloudinaryConfig,
  ],
  exports: [MedicalEventsService],
})
export class MedicalEventsModule {}

================
File: src/medical-scheduling/medical-events/medical-events.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
  ForbiddenException,
  InternalServerErrorException,
} from '@nestjs/common';
import { parsePaginationAndSorting } from 'src/utils/pagination.helper';
import { CreateMedicalEventDto } from './dto/create-medical-event.dto';
import { medical_event } from '@prisma/client';
import { PrismaService } from 'src/prisma/prisma.service';
import { AttendMedicalEventDto } from './dto/attend-medical-event.dto';
import { VitalSignsService } from '../modules/vital-signs/vital-signs.service';
import { PhysicalExplorationService } from '../modules/physical-exploration-data/physical-exploration/physical-exploration.service';
import { PhysicalExaminationService } from '../modules/physical-examination-data/physical-examination/physical-examination.service';
import { PrescriptionService } from '../modules/prescription/prescription.service';
import { NotificationService } from 'src/services/notification/notification.service';

@Injectable()
export class MedicalEventsService {
  constructor(
    private prisma: PrismaService,
    private vitalSignsService: VitalSignsService,
    private physicalExplorationService: PhysicalExplorationService,
    private physicalExaminationService: PhysicalExaminationService,
    private prescriptionService: PrescriptionService,
    private notificationService: NotificationService,
  ) {}

  async createMedicalEvent(
    data: CreateMedicalEventDto,
    tenant_id: string,
  ): Promise<{ message: string }> {
    try {
      await this.prisma.medical_event.create({
        data: {
          appointment_id: data.appointment_id,
          patient_id: data.patient_id,
          physician_id: data.physician_id,
          physician_comments: data.physician_comments ?? '',
          main_diagnostic_cie_id: data.main_diagnostic_cie,
          evolution: data.evolution ?? '',
          procedure: data.procedure ?? '',
          treatment: data.treatment ?? '',
          tenant_id: tenant_id,
        },
      });

      return { message: `Evento m√©dico creado exitosamente` };
    } catch (error) {
      throw new InternalServerErrorException(
        `Error al crear el evento m√©dico: ${error.message}`,
      );
    }
  }

  async getMedicalEvents(filters?: {
    patient_id?: string;
    physician_id?: string;
    page?: number;
    pageSize?: number;
    orderBy?: string;
    orderDirection?: 'asc' | 'desc';
  }): Promise<medical_event[]> {
    const { skip, take, orderBy, orderDirection } =
      parsePaginationAndSorting(filters);

    try {
      const medicalEvents = await this.prisma.medical_event.findMany({
        where: {
          ...(filters?.patient_id && { patient_id: filters.patient_id }),
          ...(filters?.physician_id && { physician_id: filters.physician_id }),
        },
        skip,
        take,
        orderBy: { [orderBy]: orderDirection },
      });

      return medicalEvents;
    } catch (error) {
      throw new InternalServerErrorException(
        'Error al obtener los eventos m√©dicos',
        error.message,
      );
    }
  }

  async attendMedicalEvent(
    attendMedicalEventDto: AttendMedicalEventDto,
    userId: string,
    tenant_id: string,
  ) {
    try {
      const {
        id,
        vital_signs,
        physical_explorations,
        physical_examinations,
        subcategory_cie_ids,
        main_diagnostic_cie_id,
        consultation_ended,
        medications,
        ...basicData
      } = attendMedicalEventDto;

      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new NotFoundException('Usuario no encontrado');
      }

      const medicalEvent = await this.prisma.medical_event.findUnique({
        where: {
          id,
          deleted: false,
        },
        include: {
          appointment: true,
          physician: true,
          subcategory_medical_event: {
            include: {
              subcategories_cie_diez: true,
            },
          },
        },
      });

      if (!medicalEvent) {
        throw new NotFoundException('Evento m√©dico no encontrado');
      }

      const isSuperAdmin = user.is_superadmin;
      const isAssignedPhysician = medicalEvent.physician.id === userId;

      if (!isSuperAdmin && !isAssignedPhysician) {
        throw new ForbiddenException(
          'No tiene permisos para atender esta consulta',
        );
      }

      const appointmentFinished =
        medicalEvent.appointment.status === 'atendida';
      const gracePeriodValid = this._isWithinGracePeriod(
        medicalEvent.updated_at,
      );

      if (appointmentFinished && !gracePeriodValid && !isSuperAdmin) {
        throw new ForbiddenException(
          'La consulta ya fue atendida y ha pasado el per√≠odo de gracia de 24 horas para modificarla',
        );
      }

      if (main_diagnostic_cie_id) {
        const subcategoryCodes = medicalEvent.subcategory_medical_event.map(
          (subCat) => subCat.subcategories_cie_diez.code,
        );

        if (
          subcategoryCodes.length > 0 &&
          !subcategoryCodes.includes(main_diagnostic_cie_id.toString())
        ) {
          throw new BadRequestException(
            'El diagn√≥stico principal debe ser una de las subcategor√≠as CIE-10 asociadas al evento',
          );
        }
      }

      await this.prisma.$transaction(
        async (tx) => {
          await tx.medical_event.update({
            where: { id },
            data: {
              ...basicData,
              main_diagnostic_cie_id,
              updated_at: new Date(),
            },
          });

          if (vital_signs && vital_signs.length > 0) {
            await this.vitalSignsService.create({
              patient_id: medicalEvent.patient_id,
              tenant_id,
              medical_event_id: id,
              vital_signs,
            });
          }

          if (subcategory_cie_ids && subcategory_cie_ids.length > 0) {
            const currentSubcategories =
              await tx.subcategory_medical_event.findMany({
                where: { medical_eventId: id },
              });
            const currentSubcategoryIds = currentSubcategories.map(
              (sub) => sub.subCategoryId,
            );
            const subcategoryIdsToDelete = currentSubcategoryIds.filter(
              (currentId) => !subcategory_cie_ids.includes(currentId),
            );
            const subcategoryIdsToCreate = subcategory_cie_ids.filter(
              (newId) => !currentSubcategoryIds.includes(newId),
            );

            if (subcategoryIdsToDelete.length > 0) {
              await tx.subcategory_medical_event.deleteMany({
                where: {
                  medical_eventId: id,
                  subCategoryId: { in: subcategoryIdsToDelete },
                },
              });
            }
            for (const subCategoryId of subcategoryIdsToCreate) {
              await tx.subcategory_medical_event.create({
                data: { medical_eventId: id, subCategoryId },
              });
            }
          }

          if (physical_explorations && physical_explorations.length > 0) {
            const exploration = physical_explorations[0];
            await this.physicalExplorationService.createPhysicalExploration({
              patient_id: medicalEvent.patient_id,
              physician_id: userId,
              medical_event_id: id,
              tenant_id,
              description: exploration.description,
              physical_exploration_area_id:
                exploration.physical_exploration_area_id,
            });
          }

          if (physical_examinations && physical_examinations.length > 0) {
            const formattedExaminations = physical_examinations.map((exam) => ({
              patient_id: medicalEvent.patient_id,
              description: exam.description,
              medical_event_id: id,
              tenant_id,
              physical_subsystem_id: exam.physical_subsystem_id,
              createdAt: new Date(),
              updatedAt: new Date(),
            }));
            console.log('formattedExaminations', formattedExaminations);
            await this.physicalExaminationService.create(formattedExaminations);
          }

          if (medications && medications.length > 0) {
            await this.prescriptionService.processMedications(
              tx,
              medications,
              medicalEvent.patient_id,
              userId,
              tenant_id,
              id,
              undefined,
              true,
            );
          }

          if (consultation_ended) {
            await tx.appointment.update({
              where: { id: medicalEvent.appointment_id },
              data: {
                status: 'atendida',
                updated_at: new Date(),
              },
            });
          }
        },
        {
          maxWait: 15000,
          timeout: 30000,
        },
      );

      if (consultation_ended && medications && medications.length > 0) {
        const patientForNotification = await this.prisma.user.findUnique({
          where: { id: medicalEvent.patient_id },
          select: {
            id: true,
            name: true,
            last_name: true,
            email: true,
            phone: true,
            is_phone_verified: true,
          },
        });

        const physicianNameForNotification = user.name
          ? `${user.name} ${user.last_name || ''}`.trim()
          : user.email;

        let prescriptionFileUrl: string | undefined;
        try {
          const relatedMedicalOrder = await this.prisma.medical_order.findFirst(
            {
              where: {
                patient_id: medicalEvent.patient_id,
                physician_id: userId,
                medical_order_type: {
                  name: { in: ['medication', 'medication-authorization'] },
                },
              },
              orderBy: { request_date: 'desc' },
              select: { url: true },
            },
          );
          if (relatedMedicalOrder?.url) {
            prescriptionFileUrl = relatedMedicalOrder.url;
          }
        } catch (error) {
          console.error(
            'Error al buscar orden m√©dica para URL de notificaci√≥n:',
            error,
          );
        }

        if (patientForNotification) {
          await this._sendMedicationNotification(
            patientForNotification,
            medications,
            physicianNameForNotification,
            prescriptionFileUrl,
          );
        }
      }

      return { message: 'Consulta m√©dica actualizada exitosamente' };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException ||
        error instanceof ForbiddenException
      ) {
        throw error;
      }
      console.error('Error completo al atender consulta:', error);
      throw new BadRequestException(
        `Error al atender consulta: ${error.message}`,
      );
    }
  }

  private _isWithinGracePeriod(date: Date): boolean {
    const gracePeriodHours = 24;
    const now = new Date();
    const gracePeriodMs = gracePeriodHours * 60 * 60 * 1000;

    return now.getTime() - date.getTime() <= gracePeriodMs;
  }

  private async _sendMedicationNotification(
    patient,
    medications,
    physicianName,
    fileUrl?: string,
  ) {
    await this.notificationService.sendMedicationUpdateNotification(
      patient,
      medications,
      physicianName,
      fileUrl,
    );
  }
}

================
File: src/medical-scheduling/modules/background/background.controller.ts
================
import {
  Controller,
  Post,
  Body,
  HttpException,
  HttpStatus,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
} from '@nestjs/swagger';
import { BackgroundService } from './background.service';
import { CreateBackgroundDto } from './dto/create-background.dto';

@ApiTags('Background')
@Controller('background')
export class BackgroundController {
  constructor(private readonly backgroundService: BackgroundService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new background record for a patient' })
  @ApiResponse({
    status: 201,
    description: 'Background record created successfully.',
  })
  @ApiResponse({ status: 400, description: 'Invalid input.' })
  @ApiResponse({ status: 500, description: 'Internal server error.' })
  @ApiBearerAuth('access-token')
  async createBackground(@Body() data: CreateBackgroundDto) {
    try {
      return await this.backgroundService.createBackground(data);
    } catch (error) {
      throw new HttpException(
        {
          message: 'Error creating background',
          error: error.message,
        },
        HttpStatus.INTERNAL_SERVER_ERROR,
      );
    }
  }
}

================
File: src/medical-scheduling/modules/background/background.module.ts
================
import { Module } from '@nestjs/common';
import { BackgroundController } from './background.controller';
import { BackgroundService } from './background.service';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [BackgroundController],
  providers: [BackgroundService, PrismaService],
})
export class BackgroundModule {}

================
File: src/medical-scheduling/modules/background/background.service.ts
================
import {
  Injectable,
  BadRequestException,
  InternalServerErrorException,
} from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreateBackgroundDto } from './dto/create-background.dto';
import { Prisma } from '@prisma/client';

@Injectable()
export class BackgroundService {
  constructor(private prisma: PrismaService) {}

  async createBackground(data: CreateBackgroundDto) {
    try {
      const backgroundCount = await this.prisma.background.count({
        where: {
          patient_id: data.patient_id,
        },
      });

      if (backgroundCount > 0) {
        throw new BadRequestException(
          'Background already exists for this patient',
        );
      }

      await this.prisma.background.create({
        data: {
          ...data,
        },
      });

      return { message: 'Background created successfully' };
    } catch (error) {
      if (error instanceof Prisma.PrismaClientKnownRequestError) {
        throw new InternalServerErrorException(
          `Database error: ${error.message}`,
        );
      }
      throw new InternalServerErrorException(
        error.message || 'Error creating background',
      );
    }
  }
}

================
File: src/medical-scheduling/modules/background/dto/create-background.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsNotEmpty, IsString, MaxLength } from 'class-validator';

export class CreateBackgroundDto {
  @ApiProperty({
    description: "Patient's unique identifier",
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  patient_id: string;

  @ApiProperty({
    description: 'Vaccination history',
    example: 'BCG, DTP, Polio',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  vaccinations: string;

  @ApiProperty({
    description: 'Known allergies',
    example: 'Penicillin, Peanuts',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  allergies: string;

  @ApiProperty({
    description: 'Pathological history',
    example: 'Hypertension since 2010',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  pathological_history: string;

  @ApiProperty({
    description: 'Family medical history',
    example: 'Father with diabetes',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  family_medical_history: string;

  @ApiProperty({
    description: 'Non-pathological history',
    example: 'Smokes 10 cigarettes/day',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  non_pathological_history: string;

  @ApiProperty({
    description: 'Surgical history',
    example: 'Appendectomy in 2005',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  surgical_history: string;

  @ApiProperty({
    description: 'Childhood medical history',
    example: 'Chickenpox at age 5',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  childhood_medical_history: string;

  @ApiProperty({
    description: 'Current medication',
    example: 'Lisinopril 10mg daily',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  current_medication: string;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_12345',
  })
  @IsString()
  @IsNotEmpty()
  @MaxLength(255)
  tenant_id: string;
}

================
File: src/medical-scheduling/modules/medicine/medicine.controller.ts
================
import { Controller, Get, Query } from '@nestjs/common';
import { MedicineService } from './medicine.service';
import { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';

@ApiTags('Medicine')
@Controller('medicine')
export class MedicineController {
  constructor(private readonly medicineService: MedicineService) {}

  @Get('searchMedicine')
  @ApiOperation({
    summary: 'Buscar medicamentos por texto',
    description:
      'Busca medicamentos utilizando un texto que se aplicar√° tanto al principio activo como al nombre del producto.',
  })
  @ApiQuery({
    name: 'query',
    required: true,
    description: 'Texto a buscar en principio activo y producto',
    example: 'clon',
  })
  searchMedicine(@Query('query') query: string) {
    return this.medicineService.searchMedicine(query);
  }
}

================
File: src/medical-scheduling/modules/medicine/medicine.module.ts
================
import { Module } from '@nestjs/common';
import { MedicineService } from './medicine.service';
import { MedicineController } from './medicine.controller';
import { HttpModule } from '@nestjs/axios';

@Module({
  imports: [HttpModule],
  controllers: [MedicineController],
  providers: [MedicineService],
})
export class MedicineModule {}

================
File: src/medical-scheduling/modules/medicine/medicine.service.ts
================
import { HttpException, Injectable } from '@nestjs/common';
import { HttpService } from '@nestjs/axios';
import { firstValueFrom } from 'rxjs';

@Injectable()
export class MedicineService {
  private readonly apiUrl = 'https://www.datos.gov.co/resource/i7cb-raxc.json';

  constructor(private readonly httpService: HttpService) {}

  /**
   * Determina si un medicamento es gen√©rico bas√°ndose en patrones del nombre
   */
  private isGenericMedicine(
    producto: string,
    principioActivo: string,
  ): boolean {
    const productLower = producto.toLowerCase();
    const principleWords = principioActivo.toLowerCase().split(' ');

    // Si el producto contiene s√≠mbolos de marca registrada, es comercial
    if (producto.includes('¬Æ') || producto.includes('‚Ñ¢')) {
      return false;
    }

    // Si el producto es muy similar al principio activo, probablemente es gen√©rico
    const similarity = this.calculateNameSimilarity(
      productLower,
      principleWords,
    );

    // Si la similitud es alta (>70%), considerarlo gen√©rico
    return similarity > 0.7;
  }

  /**
   * Calcula la similitud entre el nombre del producto y el principio activo
   */
  private calculateNameSimilarity(
    producto: string,
    principleWords: string[],
  ): number {
    let matchingWords = 0;

    for (const word of principleWords) {
      if (word.length > 3 && producto.includes(word)) {
        matchingWords++;
      }
    }

    return principleWords.length > 0
      ? matchingWords / principleWords.length
      : 0;
  }

  async searchMedicine(query: string) {
    if (!query || query.trim() === '') {
      throw new HttpException('El par√°metro de b√∫squeda es requerido', 400);
    }

    const searchTerm = query.toUpperCase();
    const principioActivoQuery = `principioactivo%20like%20%27%25${searchTerm}%25%27`;
    const productoQuery = `producto%20like%20%27%25${searchTerm}%25%27`;

    // B√∫squeda que incluye tanto principio activo como producto
    const apiQuery = `${this.apiUrl}?$where=${principioActivoQuery}%20OR%20${productoQuery}`;

    try {
      const medicines = await firstValueFrom(this.httpService.get(apiQuery));

      return medicines.data.map((medicine) => {
        // Determinar si el producto es un nombre comercial distintivo o gen√©rico
        const isGenericName = this.isGenericMedicine(
          medicine.producto,
          medicine.principioactivo,
        );

        return {
          id: medicine.expediente,
          active_principle: medicine.principioactivo,
          product: medicine.producto,
          commercial_name: isGenericName ? null : medicine.producto,
          presentation: medicine.formafarmaceutica,
          administration_route: medicine.viaadministracion,
          quantity: medicine.cantidad,
          measurement_unit: medicine.unidadmedida,
          laboratory: medicine.titular,
          commercial_description: medicine.descripcioncomercial,
        };
      });
    } catch (error) {
      console.log(error);
      throw new HttpException('La medicina no ha podido ser consultada', 500);
    }
  }
}

================
File: src/medical-scheduling/modules/patient-studies/dto/create-patient-study.dto.ts
================
import {
  IsString,
  IsOptional,
  Length,
  IsBoolean,
  IsUUID,
  IsNotEmpty,
  Matches,
  IsNumber,
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreatePatientStudyDto {
  @ApiProperty({
    description: 'The ID of the medical event associated with this study',
    example: 'clx0k2q00000008l0e1g2h3i4',
  })
  @IsNotEmpty()
  @IsString()
  medicalEventId: string;

  @ApiProperty({
    description: 'The type of study performed',
    example: 'Blood Test',
  })
  @IsNotEmpty()
  @IsString()
  study_type: string;

  @ApiProperty({
    description: 'The date the study was performed',
    example: '2024-07-15T10:00:00.000Z',
    type: String,
    format: 'date-time',
  })
  @IsNotEmpty()
  @IsString() // Assuming date is handled as string, adjust if it's a Date object
  study_date: string;

  @ApiProperty({
    description: 'The institution where the study was performed',
    example: 'General Hospital',
    required: false,
  })
  @IsOptional()
  @IsString()
  institution?: string;

  @ApiProperty({
    description: 'The URL or path to the study file',
    example: 'https://example.com/study.pdf',
    required: false,
  })
  @IsOptional()
  @IsString()
  study_file?: string;

  @ApiProperty({
    description: 'The ID of the user who created the study record',
    example: 1,
  })
  @IsNotEmpty()
  @IsNumber()
  user_id: number;

  @IsUUID('4', { message: 'El ID del paciente debe ser un UUID v√°lido' })
  patient_id: string;

  @IsUUID('4', { message: 'El ID del m√©dico debe ser un UUID v√°lido' })
  physician_id: string;

  @IsOptional()
  @IsString({ message: 'La URL debe ser una cadena de texto v√°lida' })
  url?: string;

  @IsString({ message: 'El t√≠tulo debe ser una cadena de texto' })
  @Length(3, 100, { message: 'El t√≠tulo debe tener entre 3 y 100 caracteres' })
  title: string;

  @IsString({ message: 'La descripci√≥n debe ser una cadena de texto' })
  @Length(3, 500, {
    message: 'La descripci√≥n debe tener entre 3 y 500 caracteres',
  })
  description: string;
  /* 
  @IsInt({ message: 'El ID del tipo de estudio debe ser un n√∫mero entero' }) */
  @IsNotEmpty()
  cat_study_type_id: number;

  @IsBoolean({ message: 'El campo is_deleted debe ser un valor booleano' })
  is_deleted: boolean = false;

  @IsOptional()
  @IsString({ message: 'El archivo en base64 debe ser una cadena de texto' })
  @Matches(/^data:(image\/[^;]+|application\/pdf);base64,/, {
    message:
      'El formato del archivo base64 no es v√°lido. Debe ser un DATA URI v√°lido (data:mimetype;base64,)',
  })
  file?: string;
}

/**
 * DTO para pacientes que crean sus propios estudios
 * Solo requiere campos m√≠nimos, el patient_id y physician_id se toman del token
 */
export class CreatePatientOwnStudyDto {
  @ApiProperty({
    description: 'T√≠tulo del estudio',
    example: 'Radiograf√≠a de T√≥rax',
  })
  @IsString({ message: 'El t√≠tulo debe ser una cadena de texto' })
  @Length(3, 100, { message: 'El t√≠tulo debe tener entre 3 y 100 caracteres' })
  title: string;

  @ApiProperty({
    description: 'Descripci√≥n del estudio',
    example: 'Estudio de rutina para control general',
  })
  @IsString({ message: 'La descripci√≥n debe ser una cadena de texto' })
  @Length(3, 500, {
    message: 'La descripci√≥n debe tener entre 3 y 500 caracteres',
  })
  description: string;

  @ApiProperty({
    description: 'Tipo de estudio del cat√°logo',
    example: 1,
  })
  @IsNotEmpty()
  @IsNumber({}, { message: 'El ID del tipo de estudio debe ser un n√∫mero' })
  cat_study_type_id: number;

  @ApiProperty({
    description: 'URL del archivo del estudio (opcional)',
    example: 'https://example.com/mi-estudio.pdf',
    required: false,
  })
  @IsOptional()
  @IsString({ message: 'La URL debe ser una cadena de texto v√°lida' })
  url?: string;

  @ApiProperty({
    description: 'Archivo del estudio en formato base64 (opcional)',
    example: 'data:application/pdf;base64,JVBERi0xLjQKJ...',
    required: false,
  })
  @IsOptional()
  @IsString({ message: 'El archivo debe ser una cadena de texto' })
  study_file?: string;
}

================
File: src/medical-scheduling/modules/patient-studies/dto/update-patient-study.dto.ts
================
import { PartialType } from '@nestjs/mapped-types';
import { CreatePatientStudyDto } from './create-patient-study.dto';
import { ApiProperty } from '@nestjs/swagger';
import { IsOptional, IsString, Matches } from 'class-validator';

export class UpdatePatientStudyDto extends PartialType(CreatePatientStudyDto) {
  @ApiProperty({
    description: 'The type of study performed',
    example: 'X-Ray',
    required: false,
  })
  @IsOptional()
  @IsString()
  study_type?: string;

  @ApiProperty({
    description: 'The date the study was performed',
    example: '2024-07-16T11:00:00.000Z',
    type: String,
    format: 'date-time',
    required: false,
  })
  @IsOptional()
  @IsString() // Assuming date is handled as string, adjust if it's a Date object
  study_date?: string;

  @ApiProperty({
    description: 'The institution where the study was performed',
    example: 'City Clinic',
    required: false,
  })
  @IsOptional()
  @IsString()
  institution?: string;

  @ApiProperty({
    description: 'The URL or path to the study file',
    example: 'https://example.com/xray.jpg',
    required: false,
  })
  @IsOptional()
  @IsString()
  study_file?: string;

  @IsOptional()
  @IsString({ message: 'El archivo en base64 debe ser una cadena de texto' })
  @Matches(/^data:(image\/[^;]+|application\/pdf);base64,/, {
    message:
      'El formato del archivo base64 no es v√°lido. Debe ser un DATA URI v√°lido (data:mimetype;base64,)',
  })
  file?: string;
}

================
File: src/medical-scheduling/modules/patient-studies/entities/patient-study.interface.ts
================
export interface PatientStudy {
  id?: string;
  patient_id: string;
  physician_id: string;
  url?: string;
  title: string;
  description: string;
  cat_study_type_id: number;
  cat_study_type?: {
    id: number;
    name: string;
  };
  tenant_id: string;
  is_deleted: boolean;
  createdAt?: Date;
  updatedAt?: Date;
}

================
File: src/medical-scheduling/modules/patient-studies/patient-studies.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  BadRequestException,
  ParseUUIDPipe,
  HttpStatus,
  Request,
  UseGuards,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiBody,
  ApiHeader,
  ApiBearerAuth,
} from '@nestjs/swagger';
import { PatientStudiesService } from './patient-studies.service';
import {
  CreatePatientStudyDto,
  CreatePatientOwnStudyDto,
} from './dto/create-patient-study.dto';
import { UpdatePatientStudyDto } from './dto/update-patient-study.dto';
import { FileUploadService } from 'src/utils/file_upload/file_upload.service'; // Corrected import path
import { GetTenant } from 'src/auth/decorators/get-tenant.decorator';
import { TenantAccessGuard } from '../../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../../auth/guards/permission.guard';
import { RequirePermission } from '../../../auth/decorators/require-permission.decorator';
import { Permission } from '../../../auth/permissions/permission.enum';

@ApiTags('Patient Studies')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'Tenant ID',
  required: true,
})
@Controller('patient-studies')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class PatientStudiesController {
  constructor(
    private readonly patientStudiesService: PatientStudiesService,
    private readonly fileUploadService: FileUploadService,
  ) {}

  @Post()
  @ApiOperation({
    summary: 'Create a new patient study',
    description:
      'Creates a patient study. Behavior depends on user role:\n\n' +
      '**For Patients**: Creates their own study without tenant association. Patient ID and physician ID are taken from JWT token. Only requires basic study information. Requires `REGISTER_OWN_VITAL_SIGNS` permission.\n\n' +
      '**For Physicians**: Creates a study for a patient. Physician ID is taken from JWT token, but patient ID and tenant ID must be provided. Requires `MANAGE_CATALOGS` permission.',
  })
  @ApiResponse({
    status: 201,
    description: 'The patient study has been successfully created.',
    content: {
      'application/json': {
        examples: {
          'patient-study': {
            summary: 'Study created by patient',
            value: {
              id: 'uuid-study',
              patient_id: 'uuid-patient',
              physician_id: 'uuid-patient',
              title: 'Mi Radiograf√≠a de T√≥rax',
              description: 'Estudio personal de rutina',
              cat_study_type_id: 1,
              tenant_id: null,
              url: 'https://example.com/mi-estudio.pdf',
              is_deleted: false,
              createdAt: '2024-01-15T10:30:00Z',
              updatedAt: '2024-01-15T10:30:00Z',
            },
          },
          'physician-study': {
            summary: 'Study created by physician',
            value: {
              id: 'uuid-study',
              patient_id: 'uuid-patient',
              physician_id: 'uuid-physician',
              title: 'An√°lisis de Sangre',
              description: 'Estudio solicitado por m√©dico',
              cat_study_type_id: 2,
              tenant_id: 'uuid-organization',
              url: 'https://example.com/estudio.pdf',
              is_deleted: false,
              createdAt: '2024-01-15T10:30:00Z',
              updatedAt: '2024-01-15T10:30:00Z',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid data or missing required fields.',
  })
  @ApiResponse({
    status: 401,
    description: 'Unauthorized - Invalid JWT token.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  @ApiBody({
    description: 'Study data. Required fields depend on user role.',
    schema: {
      oneOf: [
        {
          title: 'Patient Study Creation',
          allOf: [{ $ref: '#/components/schemas/CreatePatientOwnStudyDto' }],
          description: 'For patients creating their own studies',
        },
        {
          title: 'Physician Study Creation',
          allOf: [{ $ref: '#/components/schemas/CreatePatientStudyDto' }],
          description: 'For physicians creating studies for patients',
        },
      ],
    },
  })
  async create(
    @Body() createStudyDto: CreatePatientOwnStudyDto | CreatePatientStudyDto,
    @Request() req: any,
    @GetTenant('tenant_id') tenant_id?: string,
  ) {
    // Verificar que el usuario est√© autenticado
    if (!req.user || !req.user.id) {
      throw new BadRequestException('Usuario no autenticado');
    }

    const userId = req.user.id;
    const userRole = req.user.role;

    // Manejar archivos si existen
    if ('study_file' in createStudyDto && createStudyDto.study_file) {
      try {
        const filename = `patient-studies/${tenant_id || 'patient-own'}/${Date.now()}`;
        const data = await this.fileUploadService.uploadBase64File(
          createStudyDto.study_file,
          filename,
        );
        createStudyDto.study_file = data.url;
      } catch (error) {
        throw new BadRequestException(
          `Error al subir archivo: ${error.message}`,
        );
      }
    }

    // Comportamiento seg√∫n el rol del usuario
    if (userRole === 'patient') {
      // Para pacientes: crear estudio propio sin tenant
      const patientDto = createStudyDto as CreatePatientOwnStudyDto;

      // Verificar que los campos requeridos est√©n presentes
      if (
        !patientDto.title ||
        !patientDto.description ||
        !patientDto.cat_study_type_id
      ) {
        throw new BadRequestException(
          'Para pacientes se requieren: title, description, cat_study_type_id',
        );
      }

      return this.patientStudiesService.createPatientOwnStudy(
        patientDto,
        userId, // patient_id del token
      );
    } else if (userRole === 'physician') {
      // Para m√©dicos: crear estudio para paciente con tenant
      const physicianDto = createStudyDto as CreatePatientStudyDto;

      // Verificar que los campos requeridos est√©n presentes
      if (
        !physicianDto.patient_id ||
        !physicianDto.title ||
        !physicianDto.description ||
        !physicianDto.cat_study_type_id
      ) {
        throw new BadRequestException(
          'Para m√©dicos se requieren: patient_id, title, description, cat_study_type_id',
        );
      }

      if (!tenant_id) {
        throw new BadRequestException(
          'Se requiere tenant_id en el header para m√©dicos',
        );
      }

      return this.patientStudiesService.createByPhysician(
        physicianDto,
        userId, // physician_id del token
        tenant_id,
      );
    } else {
      throw new BadRequestException(
        'Solo pacientes y m√©dicos pueden crear estudios',
      );
    }
  }

  @Get()
  @RequirePermission(Permission.VIEW_PATIENTS_LIST)
  @ApiOperation({ summary: 'Get all patient studies' })
  @ApiResponse({
    status: 200,
    description: 'List of all patient studies.',
    type: [CreatePatientStudyDto], // Assuming it returns an array of patient studies
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  findAll() {
    return this.patientStudiesService.findAll();
  }

  @Get('my-studies')
  @RequirePermission(Permission.VIEW_OWN_MEDICAL_RECORDS)
  @ApiOperation({
    summary: 'Get my patient studies with multitenant support',
    description:
      'Gets all studies for the authenticated patient across all their associated organizations. Uses patient ID from JWT token.',
  })
  @ApiResponse({
    status: 200,
    description: 'List of patient studies from all organizations.',
    content: {
      'application/json': {
        example: [
          {
            id: 'uuid-study',
            patient_id: 'uuid-patient',
            title: 'Radiograf√≠a de T√≥rax',
            description: 'Estudio de rutina',
            study_type: 'Radiolog√≠a',
            study_date: '2024-01-15T00:00:00Z',
            institution: 'Hospital Central',
            study_file: 'https://example.com/study.pdf',
            tenant_id: 'uuid-organization',
            created_at: '2024-01-15T10:30:00Z',
            updated_at: '2024-01-15T10:30:00Z',
          },
        ],
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - User is not a patient or request is invalid.',
  })
  @ApiResponse({
    status: 401,
    description: 'Unauthorized - Invalid JWT token.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - Insufficient permissions.',
  })
  async getMyStudies(@Request() req: any) {
    // Verificar que el usuario est√© autenticado
    if (!req.user || !req.user.id) {
      throw new BadRequestException('Usuario no autenticado');
    }

    // Verificar que sea un paciente
    if (req.user.role !== 'patient') {
      throw new BadRequestException(
        'Esta funcionalidad es solo para pacientes',
      );
    }

    const patientId = req.user.id;
    const userTenants = req.userTenants || [];

    return this.patientStudiesService.findByPatientId(patientId, userTenants);
  }

  @Get('by-patient/:patient_id')
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS)
  @ApiOperation({
    summary: 'Get patient studies by patient ID (for healthcare providers)',
    description:
      'Gets all studies for a specific patient across all their associated organizations. This endpoint is for healthcare providers to view patient studies.',
  })
  @ApiParam({ name: 'patient_id', description: 'ID of the patient' })
  @ApiResponse({
    status: 200,
    description: 'List of patient studies.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  async findByPatientId(
    @Param('patient_id') patientId: string,
    @Request() req: any,
  ) {
    const userTenants = req.userTenants || [];
    return this.patientStudiesService.findByPatientId(patientId, userTenants);
  }

  @Get(':id')
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS)
  @ApiOperation({ summary: 'Get a patient study by ID' })
  @ApiParam({ name: 'id', description: 'ID of the patient study' })
  @ApiResponse({
    status: 200,
    description: 'The patient study.',
    type: CreatePatientStudyDto, // Assuming it returns a single patient study
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Patient study not found.' })
  findOne(
    @Param(
      'id',
      new ParseUUIDPipe({ errorHttpStatusCode: HttpStatus.NOT_FOUND }),
    )
    id: string,
  ) {
    return this.patientStudiesService.findOne(id);
  }

  @Patch(':id')
  @RequirePermission(Permission.EDIT_PATIENT_INFO)
  @ApiOperation({ summary: 'Update a patient study by ID' })
  @ApiParam({ name: 'id', description: 'ID of the patient study to update' })
  @ApiBody({ type: UpdatePatientStudyDto })
  @ApiResponse({
    status: 200,
    description: 'The patient study has been successfully updated.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Patient study not found.' })
  async update(
    @Param(
      'id',
      new ParseUUIDPipe({ errorHttpStatusCode: HttpStatus.NOT_FOUND }),
    )
    id: string,
    @Body() updatePatientStudyDto: UpdatePatientStudyDto,
    @GetTenant('tenant_id') tenant_id: string,
  ) {
    if (updatePatientStudyDto.study_file) {
      try {
        // Assuming study_file is a base64 data URI
        const filename = `patient-studies/${tenant_id}/${Date.now()}`;
        const data = await this.fileUploadService.uploadBase64File(
          updatePatientStudyDto.study_file,
          filename,
        );
        updatePatientStudyDto.study_file = data.url; // Use data.url
      } catch (error) {
        throw new BadRequestException(error.message);
      }
    }
    return this.patientStudiesService.update(id, updatePatientStudyDto);
  }

  @Delete(':id')
  @RequirePermission(Permission.DELETE_PATIENTS)
  @ApiOperation({ summary: 'Delete a patient study by ID' })
  @ApiParam({ name: 'id', description: 'ID of the patient study to delete' })
  @ApiResponse({
    status: 200,
    description: 'The patient study has been successfully deleted.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Patient study not found.' })
  remove(
    @Param(
      'id',
      new ParseUUIDPipe({ errorHttpStatusCode: HttpStatus.NOT_FOUND }),
    )
    id: string,
  ) {
    return this.patientStudiesService.remove(id);
  }
}

================
File: src/medical-scheduling/modules/patient-studies/patient-studies.module.ts
================
import { Module } from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';
import { PatientStudiesService } from './patient-studies.service';
import { PatientStudiesController } from './patient-studies.controller';
import { FileUploadService } from '../../../utils/file_upload/file_upload.service';
import { FileUploadRepository } from 'src/utils/file_upload/file_upload.repository';
import { CatStudyTypeService } from '../../../catalogs/cat-study-type/cat-study-type.service';
import { GuardAuthModule } from '../../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [PatientStudiesController],
  providers: [
    PatientStudiesService,
    CatStudyTypeService,
    PrismaService,
    FileUploadService,
    FileUploadRepository,
  ],
})
export class PatientStudiesModule {}

================
File: src/medical-scheduling/modules/patient-studies/patient-studies.service.ts
================
import { BadRequestException, Injectable } from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';
import {
  CreatePatientStudyDto,
  CreatePatientOwnStudyDto,
} from './dto/create-patient-study.dto';
import { UpdatePatientStudyDto } from './dto/update-patient-study.dto';
import { PatientStudy } from './entities/patient-study.interface';

@Injectable()
export class PatientStudiesService {
  constructor(private prisma: PrismaService) {}

  /**
   * Obtiene los tenant IDs del paciente de forma optimizada
   */
  private async getPatientTenantIds(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<string[]> {
    // Si los tenants vienen del JWT, usarlos directamente
    if (userTenants && userTenants.length > 0) {
      return userTenants.map((tenant) => tenant.id);
    }

    // Sino, buscar en la DB con el patient_id directamente
    const patientTenants = await this.prisma.patient_tenant.findMany({
      where: {
        patient: {
          user_id: patientId,
        },
        deleted: false,
      },
      select: { tenant_id: true },
    });

    return patientTenants.map((pt) => pt.tenant_id);
  }

  /**
   * Crea un estudio de paciente (m√©todo original para m√©dicos)
   */
  async create(
    createPatientStudyDto: CreatePatientStudyDto,
    tenantId: string,
  ): Promise<PatientStudy> {
    createPatientStudyDto.cat_study_type_id = Number(
      createPatientStudyDto.cat_study_type_id,
    );
    return await this.prisma.patient_study.create({
      data: {
        ...createPatientStudyDto,
        is_deleted: false,
        tenant_id: tenantId,
      },
    });
  }

  /**
   * Crea un estudio propio del paciente (sin tenant, sin m√©dico)
   */
  async createPatientOwnStudy(
    createPatientOwnStudyDto: CreatePatientOwnStudyDto,
    patientId: string,
  ): Promise<PatientStudy> {
    return await this.prisma.patient_study.create({
      data: {
        patient_id: patientId,
        physician_id: null, // No hay m√©dico asignado para estudios propios
        title: createPatientOwnStudyDto.title,
        description: createPatientOwnStudyDto.description,
        cat_study_type_id: Number(createPatientOwnStudyDto.cat_study_type_id),
        url: createPatientOwnStudyDto.url || '',
        tenant_id: null, // Expl√≠citamente null para estudios propios del paciente
        is_deleted: false,
      },
    });
  }

  /**
   * Crea un estudio de paciente por parte de un m√©dico (physician_id del token)
   */
  async createByPhysician(
    createPatientStudyDto: CreatePatientStudyDto,
    physicianId: string, // ID del m√©dico extra√≠do del token
    tenantId: string,
  ): Promise<PatientStudy> {
    return await this.prisma.patient_study.create({
      data: {
        patient_id: createPatientStudyDto.patient_id,
        physician_id: physicianId, // Del token
        title: createPatientStudyDto.title,
        description: createPatientStudyDto.description,
        cat_study_type_id: Number(createPatientStudyDto.cat_study_type_id),
        url: createPatientStudyDto.url || '',
        tenant_id: tenantId,
        is_deleted: false,
      },
    });
  }

  async findAll(): Promise<PatientStudy[]> {
    return this.prisma.patient_study.findMany({
      where: { is_deleted: false },
    });
  }

  async findOne(id: string): Promise<PatientStudy> {
    return this.prisma.patient_study.findFirst({
      where: { id, is_deleted: false },
    });
  }

  async findByPatientId(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<PatientStudy[]> {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      return this.prisma.patient_study.findMany({
        where: {
          patient_id: patientId,
          is_deleted: false,
          OR: [
            // Estudios de organizaciones del paciente
            { tenant_id: { in: tenantIds } },
            // Estudios propios del paciente (sin tenant)
            { tenant_id: null },
          ],
        },
        include: {
          cat_study_type: {
            select: {
              id: true,
              name: true,
            },
          },
        },
        orderBy: {
          createdAt: 'desc',
        },
      });
    } catch (error) {
      throw new BadRequestException('Ocurrio un error: ' + error.message);
    }
  }

  async update(
    id: string,
    updatePatientStudyDto: UpdatePatientStudyDto,
  ): Promise<PatientStudy> {
    return this.prisma.patient_study.update({
      where: { id },
      data: updatePatientStudyDto,
    });
  }

  async remove(id: string): Promise<PatientStudy> {
    return this.prisma.patient_study.update({
      where: { id },
      data: { is_deleted: true },
    });
  }
}

================
File: src/medical-scheduling/modules/physical-examination-data/physical_subsystem/physical_subsystem.interface.ts
================
export interface physicalSubsystem {
  id?: number;
  name: string;
}

================
File: src/medical-scheduling/modules/physical-examination-data/physical_subsystem/physical_subsystem.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { physicalSubsystem } from './physical_subsystem.interface';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';

@Injectable()
export class PhysicalSubsystemService {
  constructor(private readonly prisma: PrismaService) {}

  async create(physicalSubsystem: physicalSubsystem) {
    try {
      await this.prisma.cat_physical_subsystem.create({
        data: physicalSubsystem,
      });
      return { message: 'El subsistema f√≠sico ha sido creado' };
    } catch (error) {
      return { message: 'Error al crear el subsistema', Error: error };
    }
  }

  async findOneById(id: string) {
    try {
      const phy_sub = await this.prisma.cat_physical_subsystem.findUnique({
        where: { id: parseInt(id) },
      });
      if (phy_sub) {
        return phy_sub;
      } else {
        return { message: 'El valor solicitado no existe' };
      }
    } catch (error) {
      return { message: 'Error al buscar el subsistema', Error: error };
    }
  }

  async findAll(pagination: PaginationParams) {
    const { skip, take, orderBy, orderDirection } =
      parsePaginationAndSorting(pagination);
    try {
      const phy_subs = await this.prisma.cat_physical_subsystem.findMany({
        take,
        skip,
        orderBy: { [orderBy]: orderDirection },
      });
      if (phy_subs.length > 0) {
        return phy_subs;
      } else {
        return { message: 'No existen datos' };
      }
    } catch (error) {
      return { message: 'Error al buscar los subsistemas', Error: error };
    }
  }
}

================
File: src/medical-scheduling/modules/physical-examination-data/physical-examination/physical_examination.interface.ts
================
import {
  IsUUID,
  IsString,
  IsNotEmpty,
  IsOptional,
  IsDate,
} from 'class-validator';

export class physicalExaminationDto {
  @IsUUID(undefined, { message: 'ID debe ser un UUID v√°lido' })
  @IsOptional()
  id?: string;

  @IsOptional()
  physical_subsystem_id?: number;

  @IsUUID(undefined, { message: 'El ID del paciente debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del paciente no puede estar vac√≠o' })
  patient_id: string;

  @IsString({ message: 'La descripci√≥n debe ser una cadena de texto' })
  @IsNotEmpty({ message: 'La descripci√≥n no puede estar vac√≠a' })
  description: string;

  @IsUUID(undefined, {
    message: 'El ID del evento m√©dico debe ser un UUID v√°lido',
  })
  @IsNotEmpty({ message: 'El ID del evento m√©dico no puede estar vac√≠o' })
  medical_event_id: string;

  @IsUUID(undefined, { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del inquilino no puede estar vac√≠o' })
  tenant_id: string;

  @IsDate({ message: 'La fecha de creaci√≥n debe ser una fecha v√°lida' })
  @IsNotEmpty({ message: 'La fecha de creaci√≥n no puede estar vac√≠a' })
  createdAt: Date;

  @IsDate({ message: 'La fecha de actualizaci√≥n debe ser una fecha v√°lida' })
  @IsNotEmpty({ message: 'La fecha de actualizaci√≥n no puede estar vac√≠a' })
  updatedAt: Date;
}

================
File: src/medical-scheduling/modules/physical-examination-data/physical-examination/physical_examination.module.ts
================
import { Module } from '@nestjs/common';
import { PhysicalExaminationService } from './physical-examination.service';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  providers: [PhysicalExaminationService, PrismaService],
  exports: [PhysicalExaminationService],
})
export class PhysicalExaminationModule {}

================
File: src/medical-scheduling/modules/physical-examination-data/physical-examination/physical-examination.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import {
  PaginationParams,
  parsePaginationAndSorting,
} from 'src/utils/pagination.helper';
import { physicalExaminationDto } from './physical_examination.interface';

@Injectable()
export class PhysicalExaminationService {
  constructor(private readonly prisma: PrismaService) {}

  async create(
    physical_examinations: physicalExaminationDto[],
  ): Promise<object> {
    try {
      const result = [];
      for (const physical_examination of physical_examinations) {
        const { physical_subsystem_id, medical_event_id, patient_id, ...rest } =
          physical_examination;

        const patient = await this.prisma.patient.findUnique({
          where: { id: patient_id },
        });
        if (!patient) {
          result.push({
            patient_id,
            message: 'El paciente no existe',
          });
          continue;
        }

        if (physical_subsystem_id) {
          const existingRelation =
            await this.prisma.physical_examination.findFirst({
              where: {
                medical_event_id,
                physical_subsystem_id,
              },
            });

          if (existingRelation) {
            result.push({
              patient_id,
              message:
                'Ya existe un examen f√≠sico con el mismo subsistema y evento m√©dico',
            });
            continue;
          }
        }

        const phy_exa = await this.prisma.physical_examination.create({
          data: {
            ...rest,
            medical_event: { connect: { id: medical_event_id } },
            user: { connect: { id: patient_id } },
            ...(physical_subsystem_id && {
              physical_subsystem: { connect: { id: physical_subsystem_id } },
            }),
          },
        });

        if (phy_exa.id) {
          result.push({
            patient_id,
            message: 'El examen f√≠sico ha sido correctamente generado',
          });
        } else {
          result.push({
            patient_id,
            message: 'Error al crear el Examen F√≠sico',
          });
        }
      }
      return result;
    } catch (error) {
      return {
        message: 'Error al crear los Ex√°menes F√≠sicos',
        error: error.message || error,
      };
    }
  }

  async findOneById(id: string) {
    try {
      const phy_exa = await this.prisma.physical_examination.findUnique({
        where: { id: id },
      });

      if (!phy_exa) throw new Error('El examen f√≠sico no existe');

      return phy_exa;
    } catch (error) {
      return { message: 'Error al buscar el ex√°men', Error: error };
    }
  }

  async findAll(pagination: PaginationParams, patient_id: string) {
    const { skip, take, orderBy, orderDirection } =
      parsePaginationAndSorting(pagination);
    try {
      const phy_exas = await this.prisma.physical_examination.findMany({
        where: { patient_id: patient_id },
        take,
        skip,
        orderBy: { [orderBy]: orderDirection },
      });
      if (phy_exas.length > 0) {
        return phy_exas;
      } else {
        return { message: 'No existen datos' };
      }
    } catch (error) {
      return { message: 'Error al buscar los ex√°menes', Error: error };
    }
  }

  async update(physicalExaminations: physicalExaminationDto[]) {
    const failedExams = [];

    try {
      await this.prisma.$transaction(async (prisma) => {
        for (const exam of physicalExaminations) {
          const phy_exa = await prisma.physical_examination.findUnique({
            where: { id: exam.id },
          });

          if (!phy_exa) {
            failedExams.push({
              id: exam.id,
              message: 'El examen f√≠sico no existe',
            });
            continue;
          }

          await prisma.physical_examination.update({
            where: { id: exam.id },
            data: exam,
          });
        }
      });

      if (failedExams.length === 0) {
        return {
          message: 'Todos los ex√°menes fueron actualizados correctamente',
        };
      } else {
        return {
          message:
            'Algunos ex√°menes no pudieron ser actualizados. Vuelva a intentarlo',
          failedExams,
        };
      }
    } catch (error) {
      return { message: 'Error al actualizar los ex√°menes', Error: error };
    }
  }

  async delete(id: string) {
    try {
      const phy_exa = await this.prisma.physical_examination.findUnique({
        where: { id },
      });

      if (!phy_exa) {
        return { message: 'El examen f√≠sico no existe' };
      }

      await this.prisma.physical_examination.delete({
        where: { id },
      });

      return { message: 'El examen f√≠sico ha sido eliminado' };
    } catch (error) {
      return { message: 'Error al eliminar el examen', error };
    }
  }
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/dto/create-physical-exploration-area.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsNotEmpty, IsString, Length } from 'class-validator';

export class CreatePhysicalExplorationAreaDto {
  @ApiProperty({
    description:
      'A unique library identifier for the physical exploration area (e.g., a code or standardized abbreviation).',
    example: 'ABDOMEN_RUQ',
    maxLength: 100,
  })
  @IsString()
  @IsNotEmpty()
  @Length(1, 100)
  name_on_library: string;

  @ApiProperty({
    description: 'The human-readable name of the physical exploration area.',
    example: 'Abdomen - Right Upper Quadrant',
    maxLength: 100,
  })
  @IsString()
  @IsNotEmpty()
  @Length(1, 100)
  name: string;
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.controller.ts
================
import {
  Body,
  Controller,
  HttpException,
  HttpStatus,
  Post,
} from '@nestjs/common';
import { PhysicalExplorationAreaService } from './physical-exploration-area.service';
import { CreatePhysicalExplorationAreaDto } from './dto/create-physical-exploration-area.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiBody,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Physical Exploration Area')
@ApiBearerAuth('access-token')
@Controller('physical-exploration-areas')
export class PhysicalExplorationAreaController {
  constructor(
    private readonly physicalExplorationAreaService: PhysicalExplorationAreaService,
  ) {}

  @Post()
  @ApiOperation({ summary: 'Create a new physical exploration area' })
  @ApiBody({
    description: 'Data for creating a new physical exploration area.',
    type: CreatePhysicalExplorationAreaDto,
    examples: {
      default: {
        summary: 'Example of creating a new area',
        value: {
          name_on_library: 'ABDOMEN_RUQ',
          name: 'Abdomen - Right Upper Quadrant',
        },
      },
    },
  })
  @ApiResponse({
    status: 201,
    description: 'The physical exploration area has been successfully created.',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data.',
  })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({
    status: 409,
    description:
      'Conflict - An area with the same name or library name already exists.',
  })
  @ApiResponse({ status: 500, description: 'Internal server error.' })
  @ApiHeader({
    name: 'x-tenant-id',
    description:
      'Tenant ID for multi-tenant support (if applicable to this resource)',
    required: false, // Adjust if tenant context is strictly required
  })
  async createPhysicalExplorationArea(
    @Body() data: CreatePhysicalExplorationAreaDto,
  ) {
    try {
      return await this.physicalExplorationAreaService.createPhysicalExplorationArea(
        data,
      );
    } catch (error) {
      // Consider more specific error handling, e.g., for unique constraint violations (409 Conflict)
      if (error.code === 'P2002') {
        // Example for Prisma unique constraint error
        throw new HttpException(
          {
            message:
              'Conflict - An area with the same name or library name already exists.',
            error: error.message,
          },
          HttpStatus.CONFLICT,
        );
      }
      throw new HttpException(
        {
          message: 'Error creating physical exploration area',
          error: error.message,
        },
        HttpStatus.INTERNAL_SERVER_ERROR,
      );
    }
  }
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.module.ts
================
import { Module } from '@nestjs/common';
import { PhysicalExplorationAreaController } from './physical-exploration-area.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { PhysicalExplorationAreaService } from './physical-exploration-area.service';

@Module({
  controllers: [PhysicalExplorationAreaController],
  providers: [PrismaService, PhysicalExplorationAreaService],
})
export class PhysicalExplorationAreaModule {}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration-area/physical-exploration-area.service.ts
================
import {
  Injectable,
  BadRequestException,
  InternalServerErrorException,
} from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreatePhysicalExplorationAreaDto } from './dto/create-physical-exploration-area.dto';
import { Prisma } from '@prisma/client';

@Injectable()
export class PhysicalExplorationAreaService {
  constructor(private prisma: PrismaService) {}

  async createPhysicalExplorationArea(
    data: CreatePhysicalExplorationAreaDto,
  ): Promise<{ message: string }> {
    try {
      const existingCount = await this.prisma.physical_exploration_area.count({
        where: {
          OR: [{ name_on_library: data.name_on_library }, { name: data.name }],
        },
      });

      if (existingCount > 0) {
        throw new BadRequestException(
          'A physical exploration area with the same name or name_on_library already exist',
        );
      }

      await this.prisma.physical_exploration_area.create({
        data,
      });

      return { message: 'Physical exploration area created successfully' };
    } catch (error) {
      if (error instanceof Prisma.PrismaClientKnownRequestError) {
        throw new InternalServerErrorException(
          `Database error: ${error.message}`,
        );
      }

      throw new InternalServerErrorException(
        error.message || 'Error creating physical exploration area',
      );
    }
  }
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration/dto/create-physical-exploration.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsUUID,
  IsString,
  IsInt,
  Min,
  IsNotEmpty,
  Length,
} from 'class-validator';

export class CreatePhysicalExplorationDto {
  @ApiProperty({
    description: "Patient's unique identifier",
    example: 'uuid-patient-123',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  patient_id: string;

  @ApiProperty({
    description: "Physician's unique identifier",
    example: 'uuid-physician-456',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  physician_id: string;

  @ApiProperty({
    description: "Medical event's unique identifier",
    example: 'uuid-event-789',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  medical_event_id: string;

  @ApiProperty({
    description: 'Detailed description of the physical exploration findings',
    example: 'Patient reports mild tenderness in the abdominal area.',
    maxLength: 500,
  })
  @IsString()
  @IsNotEmpty()
  @Length(1, 500)
  description: string;

  @ApiProperty({
    description: 'Identifier for the physical exploration area',
    example: 1,
    minimum: 1,
    type: 'integer',
  })
  @IsInt()
  @IsNotEmpty()
  @Min(1)
  physical_exploration_area_id: number;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_abc123',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  tenant_id: string;
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration/dto/update-physical-exploration.dto.ts
================
import { OmitType, PartialType } from '@nestjs/mapped-types';
import { ApiProperty } from '@nestjs/swagger'; // Corrected import for ApiProperty
import { CreatePhysicalExplorationDto } from './create-physical-exploration.dto';
import { IsUUID, IsNotEmpty } from 'class-validator';

export class UpdatePhysicalExplorationDto extends PartialType(
  OmitType(CreatePhysicalExplorationDto, ['medical_event_id'] as const),
) {
  @ApiProperty({
    description:
      "Medical event's unique identifier. This is required for an update operation to identify the record.",
    example: 'uuid-event-789-existing',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  medical_event_id: string;
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.controller.ts
================
import { Body, Controller, HttpException, Post } from '@nestjs/common';
import { PhysicalExplorationService } from './physical-exploration.service';
import { CreatePhysicalExplorationDto } from './dto/create-physical-exploration.dto';
import { UpdatePhysicalExplorationDto } from './dto/update-physical-exploration.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiBody,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Physical Exploration')
@ApiBearerAuth('access-token')
@Controller('physical-explorations')
export class PhysicalExplorationController {
  constructor(
    private readonly physicalExplorationService: PhysicalExplorationService,
  ) {}

  @Post()
  @ApiOperation({ summary: 'Create or update a physical exploration record' })
  @ApiBody({
    description:
      'Data for creating or updating a physical exploration. If medical_event_id is provided and exists, it updates; otherwise, it creates.',
    type: CreatePhysicalExplorationDto,
    examples: {
      create: {
        summary: 'Create new physical exploration',
        value: {
          patient_id: 'uuid-patient-123',
          physician_id: 'uuid-physician-456',
          medical_event_id: 'uuid-event-789',
          description: 'Patient reports mild tenderness in the abdominal area.',
          physical_exploration_area_id: 1,
          tenant_id: 'tid_abc123',
        },
      },
      update: {
        summary: 'Update existing physical exploration',
        value: {
          patient_id: 'uuid-patient-123',
          physician_id: 'uuid-physician-456',
          medical_event_id: 'uuid-event-789-existing',
          description:
            'Updated: Patient reports moderate tenderness in the abdominal area, no rebound.',
          physical_exploration_area_id: 1,
          tenant_id: 'tid_abc123',
        },
      },
    },
  })
  @ApiResponse({
    status: 201,
    description:
      'The physical exploration record has been successfully created/updated.',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data.',
  })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 500, description: 'Internal server error.' })
  @ApiHeader({
    name: 'x-tenant-id',
    description: 'Tenant ID for multi-tenant support',
    required: false,
  })
  async createPhysicalExploration(
    @Body() data: CreatePhysicalExplorationDto | UpdatePhysicalExplorationDto,
  ) {
    try {
      return this.physicalExplorationService.createPhysicalExploration(data);
    } catch (error) {
      throw new HttpException(
        error.message || 'Error creating/updating physical exploration',
        error.status || 500,
      );
    }
  }
}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.module.ts
================
import { Module } from '@nestjs/common';
import { PhysicalExplorationController } from './physical-exploration.controller';
import { PrismaService } from 'src/prisma/prisma.service';
import { PhysicalExplorationService } from './physical-exploration.service';

@Module({
  controllers: [PhysicalExplorationController],
  providers: [PrismaService, PhysicalExplorationService],
  exports: [PhysicalExplorationService],
})
export class PhysicalExplorationModule {}

================
File: src/medical-scheduling/modules/physical-exploration-data/physical-exploration/physical-exploration.service.ts
================
import { Injectable, HttpException } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreatePhysicalExplorationDto } from './dto/create-physical-exploration.dto';
import { UpdatePhysicalExplorationDto } from './dto/update-physical-exploration.dto';

@Injectable()
export class PhysicalExplorationService {
  constructor(private prisma: PrismaService) {}

  async createPhysicalExploration(
    data: CreatePhysicalExplorationDto | UpdatePhysicalExplorationDto,
  ): Promise<{ message: string }> {
    try {
      const existingExploration =
        await this.prisma.physical_exploration.findFirst({
          where: {
            medical_event_id: data.medical_event_id,
          },
        });

      if (existingExploration) {
        const hasChanges = Object.keys(data).some(
          (key) =>
            data[key] !== undefined && data[key] !== existingExploration[key],
        );

        if (!hasChanges) {
          return {
            message:
              'No changes detected. Existing physical exploration remains unchanged',
          };
        }

        await this.prisma.physical_exploration.update({
          where: {
            id: existingExploration.id,
          },
          data: {
            ...existingExploration,
            ...Object.fromEntries(
              // eslint-disable-next-line @typescript-eslint/no-unused-vars
              Object.entries(data).filter(([_, value]) => value !== undefined),
            ),
          },
        });
        return { message: 'Physical exploration updated successfully' };
      }

      const createData = data as CreatePhysicalExplorationDto;
      await this.prisma.physical_exploration.create({ data: createData });

      return { message: 'Physical exploration created successfully' };
    } catch (error) {
      throw new HttpException(
        'Error creating physical exploration',
        error.message,
      );
    }
  }
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/bulk-create-schedule.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { Type } from 'class-transformer';
import { ArrayMinSize, IsArray, ValidateNested } from 'class-validator';
import { CreateScheduleDto } from './create-schedule.dto';

export class BulkCreateScheduleDto {
  @ApiProperty({
    description: 'Array of schedule entries to create or update',
    type: [CreateScheduleDto],
  })
  @IsArray()
  @ArrayMinSize(1)
  @ValidateNested({ each: true })
  @Type(() => CreateScheduleDto)
  schedules: CreateScheduleDto[];
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/bulk-update-schedule.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { Type } from 'class-transformer';
import {
  ArrayMinSize,
  IsArray,
  IsString,
  ValidateNested,
} from 'class-validator';
import { UpdateScheduleDto } from './update-schedule.dto';

export class ScheduleUpdateItem {
  @ApiProperty({
    description: 'The ID of the schedule to update.',
    example: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',
  })
  @IsString()
  id: string;

  @ApiProperty({
    description: 'The data to update the schedule with.',
    type: () => UpdateScheduleDto,
  })
  @ValidateNested()
  @Type(() => UpdateScheduleDto)
  data: UpdateScheduleDto;
}

export class BulkUpdateScheduleDto {
  @ApiProperty({
    description: 'An array of schedule updates.',
    type: [ScheduleUpdateItem],
  })
  @IsArray()
  @ArrayMinSize(1)
  @ValidateNested({ each: true })
  @Type(() => ScheduleUpdateItem)
  schedules: ScheduleUpdateItem[];
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/create-exception.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsBoolean,
  IsDateString,
  IsNotEmpty,
  IsOptional,
  IsString,
} from 'class-validator';

export class CreateExceptionDto {
  @ApiProperty({
    description: 'Date of the exception (YYYY-MM-DD)',
    example: '2024-12-25',
  })
  @IsDateString()
  @IsNotEmpty()
  date: string;

  @ApiProperty({
    description: 'Whether the physician is available on this exception date',
    example: false,
  })
  @IsBoolean()
  @IsNotEmpty()
  is_available: boolean;

  @ApiProperty({
    description: 'Reason for the exception (e.g., holiday, vacation)',
    example: 'Christmas Day',
    required: false,
  })
  @IsString()
  @IsOptional()
  reason?: string;
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/create-schedule.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsBoolean,
  IsIn,
  IsInt,
  IsNotEmpty,
  IsOptional,
  IsString,
  Matches,
  Max,
  Min,
} from 'class-validator';

export class CreateScheduleDto {
  @ApiProperty({
    description:
      'Day of the week (0 for Sunday, 1 for Monday, ..., 6 for Saturday)',
    example: 1,
    minimum: 0,
    maximum: 6,
  })
  @IsInt()
  @Min(0)
  @Max(6)
  @IsNotEmpty()
  day_of_week: number;

  @ApiProperty({
    description: 'Start time in HH:MM format (24-hour)',
    example: '09:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
  })
  @IsString()
  @IsNotEmpty()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Start time must be in format HH:MM (24-hour)',
  })
  start_time: string;

  @ApiProperty({
    description: 'End time in HH:MM format (24-hour)',
    example: '17:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
  })
  @IsString()
  @IsNotEmpty()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'End time must be in format HH:MM (24-hour)',
  })
  end_time: string;

  @ApiProperty({
    description: 'Duration of each appointment in minutes',
    example: 30,
    minimum: 5,
  })
  @IsInt()
  @Min(5)
  @IsNotEmpty()
  appointment_length: number;

  @ApiProperty({
    description: 'Number of simultaneous appointments allowed',
    example: 1,
    minimum: 1,
  })
  @IsInt()
  @Min(1)
  @IsNotEmpty()
  simultaneous_slots: number;

  @ApiProperty({
    description: 'Break time between appointments in minutes',
    example: 0,
    minimum: 0,
    required: false,
  })
  @IsInt()
  @Min(0)
  @IsOptional()
  break_between: number;

  @ApiProperty({
    description: 'Start time of the rest period in HH:MM format (24-hour)',
    example: '12:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Rest start time must be in format HH:MM (24-hour)',
  })
  rest_start?: string;

  @ApiProperty({
    description: 'End time of the rest period in HH:MM format (24-hour)',
    example: '13:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Rest end time must be in format HH:MM (24-hour)',
  })
  rest_end?: string;

  @ApiProperty({
    description: 'Indicates if it is a working day',
    example: true,
  })
  @IsBoolean()
  @IsNotEmpty()
  is_working_day: boolean;

  @ApiProperty({
    description: 'Modality of the schedule',
    example: 'Presencial',
    enum: ['Presencial', 'Virtual'],
  })
  @IsString()
  @IsNotEmpty()
  @IsIn(['Presencial', 'Virtual'])
  modality: string;

  @ApiProperty({
    description: 'ID of the office (if modality is Presencial)',
    example: 'clx0k2q00000008l0e1g2h3i4',
    required: false,
  })
  @IsString()
  @IsOptional()
  office_id?: string;
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/get-slots.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsDateString, IsNotEmpty, IsOptional } from 'class-validator';

export class GetSlotsDto {
  @ApiProperty({
    description: 'Date to check for available slots (YYYY-MM-DD)',
    example: '2024-07-20',
  })
  @IsDateString()
  @IsNotEmpty()
  date: string;

  @ApiProperty({
    description:
      'Optional end date to check for available slots in a range (YYYY-MM-DD)',
    example: '2024-07-27',
    required: false,
  })
  @IsOptional()
  @IsDateString()
  endDate?: string;
}

================
File: src/medical-scheduling/modules/physician-schedule/dto/index.ts
================
export * from './create-schedule.dto';
export * from './update-schedule.dto';
export * from './create-exception.dto';
export * from './get-slots.dto';
export * from './bulk-create-schedule.dto';
export * from './bulk-update-schedule.dto';

================
File: src/medical-scheduling/modules/physician-schedule/dto/update-schedule.dto.ts
================
import { ApiProperty, PartialType } from '@nestjs/swagger';
import {
  IsBoolean,
  IsIn,
  IsInt,
  IsOptional,
  IsString,
  Matches,
  Max,
  Min,
} from 'class-validator';
import { CreateScheduleDto } from './create-schedule.dto';

export class UpdateScheduleDto extends PartialType(CreateScheduleDto) {
  @ApiProperty({
    description:
      'Day of the week (0 for Sunday, 1 for Monday, ..., 6 for Saturday)',
    example: 1,
    minimum: 0,
    maximum: 6,
    required: false,
  })
  @IsInt()
  @Min(0)
  @Max(6)
  @IsOptional()
  day_of_week?: number;

  @ApiProperty({
    description: 'Start time in HH:MM format (24-hour)',
    example: '09:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Start time must be in format HH:MM (24-hour)',
  })
  start_time?: string;

  @ApiProperty({
    description: 'End time in HH:MM format (24-hour)',
    example: '17:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'End time must be in format HH:MM (24-hour)',
  })
  end_time?: string;

  @ApiProperty({
    description: 'Duration of each appointment in minutes',
    example: 30,
    minimum: 5,
    required: false,
  })
  @IsInt()
  @Min(5)
  @IsOptional()
  appointment_length?: number;

  @ApiProperty({
    description: 'Number of simultaneous appointments allowed',
    example: 1,
    minimum: 1,
    required: false,
  })
  @IsInt()
  @Min(1)
  @IsOptional()
  simultaneous_slots?: number;

  @ApiProperty({
    description: 'Break time between appointments in minutes',
    example: 0,
    minimum: 0,
    required: false,
  })
  @IsInt()
  @Min(0)
  @IsOptional()
  break_between?: number;

  @ApiProperty({
    description: 'Start time of the rest period in HH:MM format (24-hour)',
    example: '12:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Rest start time must be in format HH:MM (24-hour)',
  })
  rest_start?: string;

  @ApiProperty({
    description: 'End time of the rest period in HH:MM format (24-hour)',
    example: '13:00',
    pattern: '^([01]\\d|2[0-3]):([0-5]\\d)$',
    required: false,
  })
  @IsString()
  @IsOptional()
  @Matches(/^([01]\d|2[0-3]):([0-5]\d)$/, {
    message: 'Rest end time must be in format HH:MM (24-hour)',
  })
  rest_end?: string;

  @ApiProperty({
    description: 'Indicates if it is a working day',
    example: true,
    required: false,
  })
  @IsBoolean()
  @IsOptional()
  is_working_day?: boolean;

  @ApiProperty({
    description: 'Modality of the schedule',
    example: 'Presencial',
    enum: ['Presencial', 'Virtual'],
    required: false,
  })
  @IsString()
  @IsOptional()
  @IsIn(['Presencial', 'Virtual'])
  modality?: string;

  @ApiProperty({
    description: 'ID of the office (if modality is Presencial)',
    example: 'clx0k2q00000008l0e1g2h3i4',
    required: false,
  })
  @IsString()
  @IsOptional()
  office_id?: string;
}

================
File: src/medical-scheduling/modules/physician-schedule/physician-schedule.controller.ts
================
import {
  Body,
  Controller,
  Delete,
  Get,
  Param,
  Post,
  Query,
  UseGuards,
} from '@nestjs/common';
import { PhysicianScheduleService } from './physician-schedule.service';
import { CreateExceptionDto, GetSlotsDto, BulkCreateScheduleDto } from './dto';
import { TenantAccessGuard } from '../../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../../auth/guards/permission.guard';
import { RequirePermission } from '../../../auth/decorators/require-permission.decorator';
import { Permission } from '../../../auth/permissions/permission.enum';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiBody,
  ApiQuery,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Physician Schedule')
@ApiHeader({
  name: 'tenant_id',
  description: 'Tenant ID',
  required: true,
})
@UseGuards(TenantAccessGuard, PermissionGuard)
@Controller('physicians')
export class PhysicianScheduleController {
  constructor(
    private readonly physicianScheduleService: PhysicianScheduleService,
  ) {}

  @Get(':userId/schedule')
  @ApiOperation({ summary: 'Get all schedule entries for a physician' })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved schedule entries.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.VIEW_DOCTOR_DETAILS)
  getSchedule(@Param('userId') userId: string) {
    return this.physicianScheduleService.getSchedule(userId);
  }

  @Get('schedule/:id')
  @ApiOperation({ summary: 'Get a specific schedule entry by ID' })
  @ApiParam({ name: 'id', description: 'Schedule Entry ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved schedule entry.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Schedule entry not found.' })
  @RequirePermission(Permission.VIEW_DOCTOR_DETAILS)
  getScheduleEntry(@Param('id') id: string) {
    return this.physicianScheduleService.getScheduleEntry(id);
  }

  @Post(':userId/schedule')
  @ApiOperation({
    summary: 'Create or update multiple schedule entries for a physician',
  })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiBody({ type: BulkCreateScheduleDto })
  @ApiResponse({
    status: 201,
    description: 'Successfully created/updated schedule entries.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.BLOCK_SCHEDULE)
  upsertSchedules(
    @Param('userId') userId: string,
    @Body() scheduleDto: BulkCreateScheduleDto,
  ) {
    return this.physicianScheduleService.upsertSchedules(userId, scheduleDto);
  }

  @Delete('schedule/:id')
  @ApiOperation({ summary: 'Delete a schedule entry by ID' })
  @ApiParam({ name: 'id', description: 'Schedule Entry ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully deleted schedule entry.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Schedule entry not found.' })
  @RequirePermission(Permission.BLOCK_SCHEDULE)
  deleteSchedule(@Param('id') id: string) {
    return this.physicianScheduleService.deleteSchedule(id);
  }

  @Delete(':userId/schedule')
  @ApiOperation({ summary: 'Delete all schedule entries for a physician' })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully deleted all schedule entries.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.BLOCK_SCHEDULE)
  deleteAllSchedules(@Param('userId') userId: string) {
    return this.physicianScheduleService.deleteAllSchedules(userId);
  }

  @Get(':userId/exceptions')
  @ApiOperation({ summary: 'Get all exceptions for a physician' })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved exceptions.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.VIEW_DOCTOR_DETAILS)
  getExceptions(@Param('userId') userId: string) {
    return this.physicianScheduleService.getExceptions(userId);
  }

  @Post(':userId/exceptions')
  @ApiOperation({ summary: 'Create a new exception for a physician' })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiBody({
    type: CreateExceptionDto,
    examples: {
      a: {
        summary: 'Exception with reason',
        value: {
          date: '2024-12-25',
          is_available: false,
          reason: 'Christmas Day',
        },
      },
      b: {
        summary: 'Exception without reason',
        value: { date: '2024-11-01', is_available: false },
      },
    },
  })
  @ApiResponse({
    status: 201,
    description: 'Successfully created exception.',
  })
  @ApiResponse({ status: 400, description: 'Bad Request.' })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.BLOCK_SCHEDULE)
  createException(
    @Param('userId') userId: string,
    @Body() createExceptionDto: CreateExceptionDto,
  ) {
    return this.physicianScheduleService.createException(
      userId,
      createExceptionDto,
    );
  }

  @Delete('exceptions/:id')
  @ApiOperation({ summary: 'Delete an exception by ID' })
  @ApiParam({ name: 'id', description: 'Exception ID' })
  @ApiResponse({
    status: 200,
    description: 'Successfully deleted exception.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @ApiResponse({ status: 404, description: 'Exception not found.' })
  @RequirePermission(Permission.BLOCK_SCHEDULE)
  deleteException(@Param('id') id: string) {
    return this.physicianScheduleService.deleteException(id);
  }

  @Get(':userId/slots')
  @ApiOperation({ summary: 'Get available slots for a physician' })
  @ApiParam({ name: 'userId', description: 'Physician User ID' })
  @ApiQuery({
    name: 'date',
    required: true,
    type: String,
    description: 'Date to check slots (YYYY-MM-DD)',
  })
  @ApiQuery({
    name: 'endDate',
    required: false,
    type: String,
    description: 'Optional end date for a range (YYYY-MM-DD)',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved available slots.',
  })
  @ApiResponse({ status: 403, description: 'Forbidden.' })
  @RequirePermission(Permission.SCHEDULE_APPOINTMENTS)
  getAvailableSlots(
    @Param('userId') userId: string,
    @Query() getSlotsDto: GetSlotsDto,
  ) {
    console.log('Getting slots for date:', getSlotsDto.date);
    return this.physicianScheduleService.getAvailableSlots(userId, getSlotsDto);
  }
}

================
File: src/medical-scheduling/modules/physician-schedule/physician-schedule.module.ts
================
import { Module } from '@nestjs/common';
import { PhysicianScheduleService } from './physician-schedule.service';
import { PhysicianScheduleController } from './physician-schedule.controller';
import { PrismaService } from '../../../prisma/prisma.service';
import { PermissionCheckerService } from 'src/auth/permissions/permission-checker.service';

@Module({
  controllers: [PhysicianScheduleController],
  providers: [
    PhysicianScheduleService,
    PrismaService,
    PermissionCheckerService,
  ],
  exports: [PhysicianScheduleService],
})
export class PhysicianScheduleModule {}

================
File: src/medical-scheduling/modules/physician-schedule/physician-schedule.service.ts
================
import {
  BadRequestException,
  Injectable,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';
import {
  CreateScheduleDto,
  UpdateScheduleDto,
  CreateExceptionDto,
  GetSlotsDto,
  BulkCreateScheduleDto,
  BulkUpdateScheduleDto,
} from './dto';
import * as moment from 'moment';

@Injectable()
export class PhysicianScheduleService {
  constructor(private readonly prisma: PrismaService) {}

  // Helper method to convert HH:MM to minutes since midnight
  private timeToMinutes(time: string): number {
    const [hours, minutes] = time.split(':').map(Number);
    return hours * 60 + minutes;
  }

  // Helper method to validate time range
  private validateTimeRange(startTime: string, endTime: string): boolean {
    const startMinutes = this.timeToMinutes(startTime);
    const endMinutes = this.timeToMinutes(endTime);
    return startMinutes < endMinutes;
  }

  // Helper method to get physician by user_id
  private async getPhysicianByUserId(userId: string) {
    const tenant_id = global.tenant_id;

    const physician = await this.prisma.physician.findFirst({
      where: {
        user_id: userId,
        tenant_id,
        deleted: false,
      },
    });

    if (!physician) {
      throw new NotFoundException(`Physician with user_id ${userId} not found`);
    }

    return physician;
  }

  // Get all schedule entries for a physician
  async getSchedule(userId: string) {
    const tenant_id = global.tenant_id;

    const physician = await this.getPhysicianByUserId(userId);

    return this.prisma.physician_schedule.findMany({
      where: {
        physician_id: physician.id,
        tenant_id,
        deleted: false,
      },
      orderBy: {
        day_of_week: 'asc',
      },
    });
  }

  // Get a specific schedule entry
  async getScheduleEntry(id: string) {
    const tenant_id = global.tenant_id;

    const schedule = await this.prisma.physician_schedule.findFirst({
      where: {
        id,
        tenant_id,
        deleted: false,
      },
    });

    if (!schedule) {
      throw new NotFoundException('Schedule entry not found');
    }

    return schedule;
  }

  // Create a new schedule entry
  async createSchedule(userId: string, createScheduleDto: CreateScheduleDto) {
    const tenant_id = global.tenant_id;

    // Validate the physician exists
    const physician = await this.getPhysicianByUserId(userId);

    // Validate time range
    if (
      !this.validateTimeRange(
        createScheduleDto.start_time,
        createScheduleDto.end_time,
      )
    ) {
      throw new BadRequestException('End time must be after start time');
    }

    // Validate rest time if provided
    if (createScheduleDto.rest_start && createScheduleDto.rest_end) {
      if (
        !this.validateTimeRange(
          createScheduleDto.rest_start,
          createScheduleDto.rest_end,
        )
      ) {
        throw new BadRequestException(
          'Rest end time must be after rest start time',
        );
      }

      // Validate rest times are within work hours
      const startMinutes = this.timeToMinutes(createScheduleDto.start_time);
      const endMinutes = this.timeToMinutes(createScheduleDto.end_time);
      const restStartMinutes = this.timeToMinutes(createScheduleDto.rest_start);
      const restEndMinutes = this.timeToMinutes(createScheduleDto.rest_end);

      if (restStartMinutes < startMinutes || restEndMinutes > endMinutes) {
        throw new BadRequestException(
          'Rest period must be within working hours',
        );
      }
    }

    // Check for overlapping schedules for the same day
    const existingSchedule = await this.prisma.physician_schedule.findFirst({
      where: {
        physician_id: physician.id,
        day_of_week: createScheduleDto.day_of_week,
        tenant_id,
        deleted: false,
      },
    });

    if (existingSchedule) {
      throw new BadRequestException(
        `Schedule for day ${createScheduleDto.day_of_week} already exists`,
      );
    }

    return this.prisma.physician_schedule.create({
      data: {
        ...createScheduleDto,
        physician_id: physician.id,
        tenant_id,
      },
    });
  }

  // Bulk create schedule entries
  async bulkCreateSchedule(
    userId: string,
    bulkCreateDto: BulkCreateScheduleDto,
  ) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    // First, validate all entries
    const existingSchedules = await this.prisma.physician_schedule.findMany({
      where: {
        physician_id: physician.id,
        tenant_id,
        deleted: false,
      },
      select: {
        day_of_week: true,
      },
    });

    const existingDays = new Set(existingSchedules.map((s) => s.day_of_week));
    const daysInPayload = new Set<number>();

    // Check for duplicates within the payload
    for (const schedule of bulkCreateDto.schedules) {
      if (daysInPayload.has(schedule.day_of_week)) {
        throw new BadRequestException(
          `Duplicate day of week ${schedule.day_of_week} in request`,
        );
      }
      daysInPayload.add(schedule.day_of_week);

      // Check if entry already exists in database
      if (existingDays.has(schedule.day_of_week)) {
        throw new BadRequestException(
          `Schedule for day ${schedule.day_of_week} already exists`,
        );
      }

      // Validate time range
      if (!this.validateTimeRange(schedule.start_time, schedule.end_time)) {
        throw new BadRequestException(
          `For day ${schedule.day_of_week}: End time must be after start time`,
        );
      }

      // Validate rest time if provided
      if (schedule.rest_start && schedule.rest_end) {
        if (!this.validateTimeRange(schedule.rest_start, schedule.rest_end)) {
          throw new BadRequestException(
            `For day ${schedule.day_of_week}: Rest end time must be after rest start time`,
          );
        }

        const startMinutes = this.timeToMinutes(schedule.start_time);
        const endMinutes = this.timeToMinutes(schedule.end_time);
        const restStartMinutes = this.timeToMinutes(schedule.rest_start);
        const restEndMinutes = this.timeToMinutes(schedule.rest_end);

        if (restStartMinutes < startMinutes || restEndMinutes > endMinutes) {
          throw new BadRequestException(
            `For day ${schedule.day_of_week}: Rest period must be within working hours`,
          );
        }
      }
    }

    // All validations passed, create entries
    const createdSchedules = await Promise.all(
      bulkCreateDto.schedules.map((schedule) =>
        this.prisma.physician_schedule.create({
          data: {
            ...schedule,
            physician_id: physician.id,
            tenant_id,
          },
        }),
      ),
    );

    return createdSchedules;
  }

  // Update a schedule entry
  async updateSchedule(id: string, updateScheduleDto: UpdateScheduleDto) {
    const tenant_id = global.tenant_id;

    // Verify the schedule entry exists
    const existingSchedule = await this.prisma.physician_schedule.findFirst({
      where: {
        id,
        tenant_id,
        deleted: false,
      },
    });

    if (!existingSchedule) {
      throw new NotFoundException('Schedule entry not found');
    }

    // Validate time range if both times are provided
    if (updateScheduleDto.start_time && updateScheduleDto.end_time) {
      if (
        !this.validateTimeRange(
          updateScheduleDto.start_time,
          updateScheduleDto.end_time,
        )
      ) {
        throw new BadRequestException('End time must be after start time');
      }
    } else if (updateScheduleDto.start_time && !updateScheduleDto.end_time) {
      // If only start_time is provided, check against existing end_time
      if (
        !this.validateTimeRange(
          updateScheduleDto.start_time,
          existingSchedule.end_time,
        )
      ) {
        throw new BadRequestException('End time must be after start time');
      }
    } else if (!updateScheduleDto.start_time && updateScheduleDto.end_time) {
      // If only end_time is provided, check against existing start_time
      if (
        !this.validateTimeRange(
          existingSchedule.start_time,
          updateScheduleDto.end_time,
        )
      ) {
        throw new BadRequestException('End time must be after start time');
      }
    }

    // Validate rest time if both are provided
    if (updateScheduleDto.rest_start && updateScheduleDto.rest_end) {
      if (
        !this.validateTimeRange(
          updateScheduleDto.rest_start,
          updateScheduleDto.rest_end,
        )
      ) {
        throw new BadRequestException(
          'Rest end time must be after rest start time',
        );
      }

      const startTime =
        updateScheduleDto.start_time || existingSchedule.start_time;
      const endTime = updateScheduleDto.end_time || existingSchedule.end_time;

      // Validate rest times are within work hours
      const startMinutes = this.timeToMinutes(startTime);
      const endMinutes = this.timeToMinutes(endTime);
      const restStartMinutes = this.timeToMinutes(updateScheduleDto.rest_start);
      const restEndMinutes = this.timeToMinutes(updateScheduleDto.rest_end);

      if (restStartMinutes < startMinutes || restEndMinutes > endMinutes) {
        throw new BadRequestException(
          'Rest period must be within working hours',
        );
      }
    }

    // If day_of_week is being updated, check for conflicts
    if (
      updateScheduleDto.day_of_week !== undefined &&
      updateScheduleDto.day_of_week !== existingSchedule.day_of_week
    ) {
      const conflictingSchedule =
        await this.prisma.physician_schedule.findFirst({
          where: {
            physician_id: existingSchedule.physician_id,
            day_of_week: updateScheduleDto.day_of_week,
            tenant_id,
            deleted: false,
            id: { not: id }, // Exclude current record
          },
        });

      if (conflictingSchedule) {
        throw new BadRequestException(
          `Schedule for day ${updateScheduleDto.day_of_week} already exists`,
        );
      }
    }

    return this.prisma.physician_schedule.update({
      where: { id },
      data: updateScheduleDto,
    });
  }

  // Bulk update schedule entries
  async bulkUpdateSchedule(bulkUpdateDto: BulkUpdateScheduleDto) {
    const tenant_id = global.tenant_id;

    // Get all schedule IDs to update
    const scheduleIds = bulkUpdateDto.schedules.map((item) => item.id);

    // Fetch all existing schedules in one query for efficiency
    const existingSchedules = await this.prisma.physician_schedule.findMany({
      where: {
        id: { in: scheduleIds },
        tenant_id,
        deleted: false,
      },
    });

    // Create a map for quick access
    const scheduleMap = new Map(existingSchedules.map((s) => [s.id, s]));

    // Validate all entries first
    for (const item of bulkUpdateDto.schedules) {
      const existingSchedule = scheduleMap.get(item.id);

      if (!existingSchedule) {
        throw new NotFoundException(
          `Schedule entry with ID ${item.id} not found`,
        );
      }

      // Validate time range if both times are provided
      if (item.data.start_time && item.data.end_time) {
        if (!this.validateTimeRange(item.data.start_time, item.data.end_time)) {
          throw new BadRequestException(
            `For schedule ${item.id}: End time must be after start time`,
          );
        }
      } else if (item.data.start_time && !item.data.end_time) {
        // If only start_time is provided, check against existing end_time
        if (
          !this.validateTimeRange(
            item.data.start_time,
            existingSchedule.end_time,
          )
        ) {
          throw new BadRequestException(
            `For schedule ${item.id}: End time must be after start time`,
          );
        }
      } else if (!item.data.start_time && item.data.end_time) {
        // If only end_time is provided, check against existing start_time
        if (
          !this.validateTimeRange(
            existingSchedule.start_time,
            item.data.end_time,
          )
        ) {
          throw new BadRequestException(
            `For schedule ${item.id}: End time must be after start time`,
          );
        }
      }

      // Validate rest time if both are provided
      if (item.data.rest_start && item.data.rest_end) {
        if (!this.validateTimeRange(item.data.rest_start, item.data.rest_end)) {
          throw new BadRequestException(
            `For schedule ${item.id}: Rest end time must be after rest start time`,
          );
        }

        const startTime = item.data.start_time || existingSchedule.start_time;
        const endTime = item.data.end_time || existingSchedule.end_time;

        // Validate rest times are within work hours
        const startMinutes = this.timeToMinutes(startTime);
        const endMinutes = this.timeToMinutes(endTime);
        const restStartMinutes = this.timeToMinutes(item.data.rest_start);
        const restEndMinutes = this.timeToMinutes(item.data.rest_end);

        if (restStartMinutes < startMinutes || restEndMinutes > endMinutes) {
          throw new BadRequestException(
            `For schedule ${item.id}: Rest period must be within working hours`,
          );
        }
      }

      // If day_of_week is being updated, check for conflicts
      if (
        item.data.day_of_week !== undefined &&
        item.data.day_of_week !== existingSchedule.day_of_week
      ) {
        // Check for conflicts with other existing schedules
        const conflictingSchedule = existingSchedules.find(
          (s) =>
            s.physician_id === existingSchedule.physician_id &&
            s.day_of_week === item.data.day_of_week &&
            s.id !== item.id,
        );

        if (conflictingSchedule) {
          throw new BadRequestException(
            `For schedule ${item.id}: Schedule for day ${item.data.day_of_week} already exists`,
          );
        }

        // Also check for conflicts with other schedules in the update payload
        const conflictInPayload = bulkUpdateDto.schedules.find(
          (other) =>
            other.id !== item.id &&
            scheduleMap.get(other.id)?.physician_id ===
              existingSchedule.physician_id &&
            other.data.day_of_week === item.data.day_of_week,
        );

        if (conflictInPayload) {
          throw new BadRequestException(
            `For schedule ${item.id}: Conflict with another update in the request for day ${item.data.day_of_week}`,
          );
        }
      }
    }

    // Perform all updates in a transaction
    const updatedSchedules = await this.prisma.$transaction(
      bulkUpdateDto.schedules.map((item) =>
        this.prisma.physician_schedule.update({
          where: { id: item.id },
          data: item.data,
        }),
      ),
    );

    return updatedSchedules;
  }

  // Delete a schedule entry (soft delete)
  async deleteSchedule(id: string) {
    const tenant_id = global.tenant_id;

    // Verify the schedule entry exists
    const existingSchedule = await this.prisma.physician_schedule.findFirst({
      where: {
        id,
        tenant_id,
        deleted: false,
      },
    });

    if (!existingSchedule) {
      throw new NotFoundException('Schedule entry not found');
    }

    return this.prisma.physician_schedule.update({
      where: { id },
      data: {
        deleted: true,
        deleted_at: new Date(),
      },
    });
  }

  // Delete all schedule entries for a physician (soft delete)
  async deleteAllSchedules(userId: string) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    // Soft delete all schedules
    await this.prisma.physician_schedule.updateMany({
      where: {
        physician_id: physician.id,
        tenant_id,
        deleted: false,
      },
      data: {
        deleted: true,
        deleted_at: new Date(),
      },
    });

    return {
      message: `All schedules for physician with user_id ${userId} have been deleted`,
    };
  }

  // Get all schedule exceptions for a physician
  async getExceptions(userId: string) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    return this.prisma.physician_schedule_exception.findMany({
      where: {
        physician_id: physician.id,
        tenant_id,
        deleted: false,
      },
      orderBy: {
        date: 'asc',
      },
    });
  }

  // Create a new schedule exception
  async createException(
    userId: string,
    createExceptionDto: CreateExceptionDto,
  ) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    // Check if there's already an exception for this date
    const existingException =
      await this.prisma.physician_schedule_exception.findFirst({
        where: {
          physician_id: physician.id,
          date: new Date(createExceptionDto.date),
          tenant_id,
          deleted: false,
        },
      });

    if (existingException) {
      throw new BadRequestException(`Exception for this date already exists`);
    }

    return this.prisma.physician_schedule_exception.create({
      data: {
        physician_id: physician.id,
        date: new Date(createExceptionDto.date),
        is_available: createExceptionDto.is_available,
        reason: createExceptionDto.reason,
        tenant_id,
      },
    });
  }

  // Delete a schedule exception
  async deleteException(id: string) {
    const tenant_id = global.tenant_id;

    // Verify the exception exists
    const existingException =
      await this.prisma.physician_schedule_exception.findFirst({
        where: {
          id,
          tenant_id,
          deleted: false,
        },
      });

    if (!existingException) {
      throw new NotFoundException('Schedule exception not found');
    }

    return this.prisma.physician_schedule_exception.update({
      where: { id },
      data: {
        deleted: true,
        deleted_at: new Date(),
      },
    });
  }

  // Get available time slots for a physician on a given date
  async getAvailableSlots(userId: string, getSlotsDto: GetSlotsDto) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    // Include user information
    const user = await this.prisma.user.findUnique({
      where: { id: userId },
    });

    if (!user) {
      throw new NotFoundException(`User with id ${userId} not found`);
    }

    // Asegurarnos de que trabajamos con la fecha exacta proporcionada, sin ajustes
    const requestedDate = moment(getSlotsDto.date).startOf('day');
    const dayOfWeek = requestedDate.day(); // 0 = Sunday, 1 = Monday, etc.

    // Loguear informaci√≥n para debugging
    console.log(
      `Getting slots for date: ${requestedDate.format('YYYY-MM-DD')}, day of week: ${dayOfWeek}`,
    );

    // Check if there's an exception for this date
    const exception = await this.prisma.physician_schedule_exception.findFirst({
      where: {
        physician_id: physician.id,
        date: {
          gte: requestedDate.toDate(),
          lt: requestedDate.clone().add(1, 'day').toDate(),
        },
        tenant_id,
        deleted: false,
      },
    });
    // If there's an exception and the physician is not available, return empty array
    if (exception && !exception.is_available) {
      return {
        slots: [],
        physicianName: `${user.name} ${user.last_name || ''}`,
        date: requestedDate.format('YYYY-MM-DD'),
      };
    }
    // Get the schedule for this day of the week
    const schedule = await this.prisma.physician_schedule.findFirst({
      where: {
        physician_id: physician.id,
        day_of_week: dayOfWeek,
        tenant_id,
        deleted: false,
      },
    });
    // If there's no schedule for this day or it's marked as not a working day
    if (!schedule || !schedule.is_working_day) {
      return {
        slots: [],
        physicianName: `${user.name} ${user.last_name || ''}`,
        date: requestedDate.format('YYYY-MM-DD'),
      };
    }

    // Calculate available time slots
    const startTime = this.timeToMinutes(schedule.start_time);
    const endTime = this.timeToMinutes(schedule.end_time);
    const appointmentLength = schedule.appointment_length;
    const simultaneousSlots = schedule.simultaneous_slots;
    const breakBetween = schedule.break_between || 0;

    // If rest period is defined, account for that
    let restStartMinutes = null;
    let restEndMinutes = null;
    if (schedule.rest_start && schedule.rest_end) {
      restStartMinutes = this.timeToMinutes(schedule.rest_start);
      restEndMinutes = this.timeToMinutes(schedule.rest_end);
    }

    // Get existing appointments for this day
    const existingAppointments = await this.prisma.appointment.findMany({
      where: {
        physician_id: userId,
        tenant_id,
        deleted: false,
        start: {
          gte: requestedDate.toDate(),
          lt: requestedDate.clone().add(1, 'day').toDate(),
        },
        status: {
          not: 'cancelada',
        },
      },
      select: {
        start: true,
        end: true,
      },
    });

    // Convert existing appointments to blocked time slots
    const blockedSlots = existingAppointments.map((appointment) => {
      const apptStart = moment(appointment.start);
      const apptEnd = moment(appointment.end);
      return {
        start: apptStart.hours() * 60 + apptStart.minutes(),
        end: apptEnd.hours() * 60 + apptEnd.minutes(),
      };
    });

    // Generate all possible time slots
    const allSlots = [];
    for (
      let time = startTime;
      time <= endTime - appointmentLength;
      time += appointmentLength + breakBetween
    ) {
      // Skip slots during rest period
      if (
        restStartMinutes !== null &&
        time >= restStartMinutes &&
        time < restEndMinutes
      ) {
        continue;
      }

      // Skip slots that would end during or after rest period but start before it
      if (
        restStartMinutes !== null &&
        time < restStartMinutes &&
        time + appointmentLength > restStartMinutes
      ) {
        continue;
      }

      const slotStart = moment(requestedDate)
        .add(Math.floor(time / 60), 'hours')
        .add(time % 60, 'minutes');
      const slotEnd = moment(slotStart).add(appointmentLength, 'minutes');

      // Para debugging
      console.log(
        `Evaluating slot: ${slotStart.format('HH:mm')} - ${slotEnd.format('HH:mm')}`,
      );

      // Skip if this slot is in the past
      if (slotStart.isBefore(moment())) {
        continue;
      }

      // Count how many appointments overlap with this slot
      let overlappingAppointments = 0;
      for (const blocked of blockedSlots) {
        // Check if the slot overlaps with a blocked slot
        // Fix the overlap condition to properly exclude slots that overlap with existing appointments
        if (
          (time < blocked.end && time + appointmentLength > blocked.start) ||
          // This handles the edge case where one appointment ends exactly when another begins
          time === blocked.end ||
          time + appointmentLength === blocked.start
        ) {
          overlappingAppointments++;
          console.log(
            `Slot overlaps with existing appointment: ${blocked.start / 60}:${blocked.start % 60} - ${blocked.end / 60}:${blocked.end % 60}`,
          );
        }
      }

      // Add the slot if there's capacity available
      if (overlappingAppointments < simultaneousSlots) {
        allSlots.push({
          start: slotStart.format('YYYY-MM-DDTHH:mm:ss'),
          end: slotEnd.format('YYYY-MM-DDTHH:mm:ss'),
          available: true,
        });
      }
    }

    return {
      slots: allSlots,
      physicianName: `${user.name} ${user.last_name || ''}`,
      date: requestedDate.format('YYYY-MM-DD'),
      modality: schedule.modality,
    };
  }

  // Upsert schedules in bulk (create new ones, update existing ones, and delete ones not in the payload)
  async upsertSchedules(userId: string, bulkCreateDto: BulkCreateScheduleDto) {
    const tenant_id = global.tenant_id;

    // Get the physician
    const physician = await this.getPhysicianByUserId(userId);

    // First, validate all entries
    const daysInPayload = new Set<number>();

    // Check for duplicates within the payload
    for (const schedule of bulkCreateDto.schedules) {
      if (daysInPayload.has(schedule.day_of_week)) {
        throw new BadRequestException(
          `Duplicate day of week ${schedule.day_of_week} in request`,
        );
      }
      daysInPayload.add(schedule.day_of_week);

      // Validate time range
      if (!this.validateTimeRange(schedule.start_time, schedule.end_time)) {
        throw new BadRequestException(
          `For day ${schedule.day_of_week}: End time must be after start time`,
        );
      }

      // Validate rest time if provided
      if (schedule.rest_start && schedule.rest_end) {
        if (!this.validateTimeRange(schedule.rest_start, schedule.rest_end)) {
          throw new BadRequestException(
            `For day ${schedule.day_of_week}: Rest end time must be after rest start time`,
          );
        }

        const startMinutes = this.timeToMinutes(schedule.start_time);
        const endMinutes = this.timeToMinutes(schedule.end_time);
        const restStartMinutes = this.timeToMinutes(schedule.rest_start);
        const restEndMinutes = this.timeToMinutes(schedule.rest_end);

        if (restStartMinutes < startMinutes || restEndMinutes > endMinutes) {
          throw new BadRequestException(
            `For day ${schedule.day_of_week}: Rest period must be within working hours`,
          );
        }
      }
    }

    // Get existing schedules for this physician
    const existingSchedules = await this.prisma.physician_schedule.findMany({
      where: {
        physician_id: physician.id,
        tenant_id,
        deleted: false,
      },
    });

    // Create a map of day_of_week -> schedule for existing schedules
    const existingScheduleMap = new Map();
    for (const schedule of existingSchedules) {
      existingScheduleMap.set(schedule.day_of_week, schedule);
    }

    // Prepare transactions for upsert operations
    const upsertTransactions = [];
    const processedDays = new Set<number>();

    // Process each schedule in the payload
    for (const schedule of bulkCreateDto.schedules) {
      const existingSchedule = existingScheduleMap.get(schedule.day_of_week);
      processedDays.add(schedule.day_of_week);

      if (existingSchedule) {
        // Update existing schedule
        upsertTransactions.push(
          this.prisma.physician_schedule.update({
            where: { id: existingSchedule.id },
            data: {
              ...schedule,
              physician_id: physician.id,
              tenant_id,
            },
          }),
        );
      } else {
        // Create new schedule
        upsertTransactions.push(
          this.prisma.physician_schedule.create({
            data: {
              ...schedule,
              physician_id: physician.id,
              tenant_id,
            },
          }),
        );
      }
    }

    // Soft delete schedules that are not in the payload
    for (const [day, schedule] of existingScheduleMap.entries()) {
      if (!processedDays.has(day)) {
        upsertTransactions.push(
          this.prisma.physician_schedule.update({
            where: { id: schedule.id },
            data: {
              deleted: true,
              deleted_at: new Date(),
            },
          }),
        );
      }
    }

    // Execute all transactions
    const results = await this.prisma.$transaction(upsertTransactions);

    // Filter out deleted schedules from the response
    return results.filter((schedule) => !schedule.deleted);
  }
}

================
File: src/medical-scheduling/modules/pres_mod_history/dto/create-pres-history.dto.ts
================
import { IsBoolean, IsDate, IsOptional, IsString } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreatePresHistoryDto {
  // Prescription - information
  @ApiProperty({
    description: 'Fecha de inicio de la prescripci√≥n',
    type: Date,
    required: false,
    example: '2025-05-01T10:30:00.000Z',
  })
  @IsDate()
  @IsOptional()
  start_timestamp?: Date;

  @ApiProperty({
    description: 'Fecha de finalizaci√≥n de la prescripci√≥n',
    type: Date,
    required: false,
    example: '2025-06-01T10:30:00.000Z',
  })
  @IsDate()
  @IsOptional()
  end_timestamp?: Date;

  @ApiProperty({
    description: 'Descripci√≥n de la prescripci√≥n',
    type: String,
    required: false,
    example: 'Tratamiento para hipertensi√≥n',
  })
  @IsString()
  @IsOptional()
  description?: string;

  @ApiProperty({
    description: 'Indica si la prescripci√≥n est√° activa',
    type: Boolean,
    required: false,
    example: true,
  })
  @IsBoolean()
  @IsOptional()
  active?: boolean;

  @ApiProperty({
    description: 'ID del paciente',
    type: String,
    required: false,
    format: 'uuid',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  @IsString()
  @IsOptional()
  patient_id?: string;

  @ApiProperty({
    description: 'Monof√°rmaco prescrito',
    type: String,
    required: false,
    example: 'Paracetamol',
  })
  @IsString()
  @IsOptional()
  monodrug?: string;

  @ApiProperty({
    description: 'ID del tenant',
    type: String,
    required: false,
    format: 'uuid',
    example: 'tid_12345-6789-abcd-ef0123456789',
  })
  @IsString()
  @IsOptional()
  tenant_id?: string;

  // Prescription modification History

  @ApiProperty({
    description: 'ID de la prescripci√≥n modificada',
    type: String,
    required: true,
    format: 'uuid',
    example: 'abcdef01-2345-6789-abcd-ef0123456789',
  })
  @IsString()
  @IsOptional()
  prescription_id: string;

  @ApiProperty({
    description: 'ID del m√©dico que realiz√≥ la modificaci√≥n',
    type: String,
    required: true,
    format: 'uuid',
    example: 'fedcba98-7654-3210-fedc-ba9876543210',
  })
  @IsString()
  @IsOptional()
  physician_id: string;

  @ApiProperty({
    description: 'Fecha y hora de la modificaci√≥n',
    type: Date,
    required: true,
    example: '2025-05-22T14:30:00.000Z',
  })
  @IsDate()
  @IsOptional()
  mod_timestamp: Date;

  @ApiProperty({
    description: 'ID del evento m√©dico asociado',
    type: String,
    required: false,
    format: 'uuid',
    example: '456abcde-f789-0123-4567-89abcdef0123',
  })
  @IsOptional()
  medical_event_id?: string;

  // @IsOptional()
  // medical_order_id:string?

  @ApiProperty({
    description: 'Observaciones sobre la modificaci√≥n',
    type: String,
    required: false,
    example: 'Se ajust√≥ la dosis debido a efectos secundarios',
  })
  @IsOptional()
  observations?: string;

  @ApiProperty({
    description: 'Dosis del medicamento',
    type: String,
    required: true,
    example: '500',
  })
  @IsString()
  dose: string;

  @ApiProperty({
    description: 'Unidades de la dosis (mg, ml, etc.)',
    type: String,
    required: true,
    example: 'mg',
  })
  @IsString()
  dose_units: string;

  @ApiProperty({
    description: 'Frecuencia de administraci√≥n',
    type: String,
    required: true,
    example: 'Cada 8 horas',
  })
  @IsString()
  frecuency: string;

  @ApiProperty({
    description: 'Duraci√≥n del tratamiento',
    type: String,
    required: true,
    example: '7',
  })
  @IsString()
  duration: string;
  @ApiProperty({
    description: 'Unidades de duraci√≥n (d√≠as, semanas, etc.)',
    type: String,
    required: true,
    example: 'd√≠as',
  })
  @IsString()
  duration_units: string;

  @ApiProperty({
    description: 'Nombre comercial del medicamento',
    type: String,
    required: false,
    example: 'Tylenol',
  })
  @IsString()
  @IsOptional()
  commercial_name?: string;
}

================
File: src/medical-scheduling/modules/pres_mod_history/dto/update-pres_mod_history.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreatePresHistoryDto } from 'src/medical-scheduling/modules/pres_mod_history/dto/create-pres-history.dto';

export class UpdatePresModHistoryDto extends PartialType(
  CreatePresHistoryDto,
) {}

================
File: src/medical-scheduling/modules/pres_mod_history/entities/pres_mod_history.entity.ts
================
export class PresModHistory {}

================
File: src/medical-scheduling/modules/pres_mod_history/pres_mod_history.controller.ts
================
import { Controller, Get, Post, Body, Param } from '@nestjs/common';
import { PresModHistoryService } from './pres_mod_history.service';
import { CreatePresHistoryDto } from './dto/create-pres-history.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiParam,
  ApiBody,
  ApiSecurity,
  ApiHeader,
} from '@nestjs/swagger';

@ApiTags('Prescription Modification History')
@ApiSecurity('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'ID del tenant',
  required: true,
})
@Controller('pres-mod-history')
export class PresModHistoryController {
  constructor(private readonly presModHistoryService: PresModHistoryService) {}

  @Post()
  @ApiOperation({
    summary: 'Crear un registro de modificaci√≥n de prescripci√≥n',
    description:
      'Registra los cambios realizados a una prescripci√≥n m√©dica, incluyendo el m√©dico responsable y la fecha de modificaci√≥n.',
  })
  @ApiBody({ type: CreatePresHistoryDto })
  @ApiResponse({
    status: 201,
    description: 'La historia de modificaci√≥n ha sido creada exitosamente.',
  })
  @ApiResponse({
    status: 400,
    description: 'Solicitud inv√°lida (datos faltantes o incorrectos).',
  })
  create(@Body() createPresHistoryDto: CreatePresHistoryDto) {
    return this.presModHistoryService.create(createPresHistoryDto);
  }

  @Get('prescription/:id')
  @ApiOperation({
    summary: 'Obtener historial de modificaciones por ID de prescripci√≥n',
    description:
      'Consulta el historial de todas las modificaciones realizadas a una prescripci√≥n espec√≠fica.',
  })
  @ApiParam({
    name: 'id',
    description: 'ID de la prescripci√≥n',
    type: 'string',
    format: 'uuid',
  })
  @ApiResponse({
    status: 200,
    description: 'Historial de modificaciones recuperado exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description: 'Prescripci√≥n no encontrada.',
  })
  findByPrescription_id(@Param('id') id: string) {
    return this.presModHistoryService.findByPrescription_id(id);
  }

  @Get('physician/:id')
  @ApiOperation({
    summary: 'Obtener historial de modificaciones por ID de m√©dico',
    description:
      'Consulta todas las modificaciones de prescripciones realizadas por un m√©dico espec√≠fico.',
  })
  @ApiParam({
    name: 'id',
    description: 'ID del m√©dico',
    type: 'string',
    format: 'uuid',
  })
  @ApiResponse({
    status: 200,
    description: 'Historial de modificaciones recuperado exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description: 'M√©dico no encontrado.',
  })
  findByPhysician_id(@Param('id') id: string) {
    return this.presModHistoryService.findByPhysician_id(id);
  }

  @Get('medical_event/:id')
  @ApiOperation({
    summary: 'Obtener historial de modificaciones por ID de evento m√©dico',
    description:
      'Consulta todas las modificaciones de prescripciones asociadas a un evento m√©dico espec√≠fico.',
  })
  @ApiParam({
    name: 'id',
    description: 'ID del evento m√©dico',
    type: 'string',
    format: 'uuid',
  })
  @ApiResponse({
    status: 200,
    description: 'Historial de modificaciones recuperado exitosamente.',
  })
  @ApiResponse({
    status: 404,
    description: 'Evento m√©dico no encontrado.',
  })
  findByMedical_event_id(@Param('id') id: string) {
    return this.presModHistoryService.findByMedical_event_id(id);
  }
}

================
File: src/medical-scheduling/modules/pres_mod_history/pres_mod_history.module.ts
================
import { Module } from '@nestjs/common';
import { PresModHistoryService } from './pres_mod_history.service';
import { PresModHistoryController } from './pres_mod_history.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [PresModHistoryController],
  providers: [PresModHistoryService, PrismaService],
})
export class PresModHistoryModule {}

================
File: src/medical-scheduling/modules/pres_mod_history/pres_mod_history.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreatePresHistoryDto } from './dto/create-pres-history.dto';

@Injectable()
export class PresModHistoryService {
  constructor(private readonly prisma: PrismaService) {}

  // Implementar transactions
  async create(createPresHistoryDto: CreatePresHistoryDto) {
    try {
      await this.prisma.$transaction(async (op) => {
        let prescription = await op.prescription.findFirst({
          where: {
            AND: [
              { monodrug: createPresHistoryDto.monodrug },
              { active: true },
            ],
          },
        });

        if (!prescription) {
          prescription = await op.prescription.create({
            data: { monodrug: createPresHistoryDto.monodrug },
          });
        }

        delete createPresHistoryDto.start_timestamp;
        delete createPresHistoryDto.end_timestamp;
        delete createPresHistoryDto.description;
        delete createPresHistoryDto.active;
        delete createPresHistoryDto.patient_id;
        delete createPresHistoryDto.monodrug;
        delete createPresHistoryDto.tenant_id; // Corrected typo here
        // Note: commercial_name is preserved and will be saved to pres_mod_history

        createPresHistoryDto.prescription_id = prescription.id;

        await op.pres_mod_history.create({
          data: { ...createPresHistoryDto },
        });
      });
      return { message: 'La historia ha sido creada' };
    } catch (error) {
      throw new Error(`No se ha podido generar la historia ${error.message}`);
    }
  }

  async findByPrescription_id(id: string) {
    try {
      const search = await this.prisma.pres_mod_history.findMany({
        where: { prescription_id: id },
      });
      return search;
    } catch (error) {
      throw new Error(
        `No se ha podido consultar por prescripci√≥n ${error.message}`,
      );
    }
  }

  async findByPhysician_id(id: string) {
    try {
      const search = await this.prisma.pres_mod_history.findMany({
        where: { physician_id: id },
      });
      return search;
    } catch (error) {
      throw new Error(`No se ha podido consultar por m√©dico ${error.message}`);
    }
  }

  async findByMedical_event_id(id: string) {
    try {
      const search = await this.prisma.pres_mod_history.findMany({
        where: { medical_event_id: id },
      });
      return search;
    } catch (error) {
      throw new Error(
        `No se ha podido consultar por evento m√©dico ${error.message}`,
      );
    }
  }
}

================
File: src/medical-scheduling/modules/prescription/dto/create-prescription.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsBoolean,
  IsDate,
  IsOptional,
  IsString,
  IsNumber,
  IsArray,
} from 'class-validator';
import { Type } from 'class-transformer';

export class CreatePrescriptionDto {
  @ApiProperty({
    description: 'Start date and time of the prescription',
    example: '2025-05-22T10:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date) // Add Type decorator
  @IsOptional()
  start_timestamp?: Date;

  @ApiProperty({
    description: 'End date and time of the prescription',
    example: '2025-06-22T10:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date) // Add Type decorator
  @IsOptional()
  end_timestamp?: Date;

  @ApiProperty({
    description: 'Detailed description or instructions for the prescription',
    example: 'Take one tablet daily with food.',
    required: false,
  })
  @IsString()
  @IsOptional()
  description?: string;

  @ApiProperty({
    description: 'Indicates if the prescription is currently active',
    example: true,
    required: false,
    default: true,
  })
  @IsBoolean()
  @IsOptional()
  active?: boolean;

  @ApiProperty({
    description: "Patient's unique identifier",
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
    required: false, // Assuming this can be linked via medical_order_id as well or is context-dependent
  })
  @IsString()
  @IsOptional()
  patient_id?: string;

  @ApiProperty({
    description: 'Name or identifier of the monodrug prescribed',
    example: 'Amoxicillin 500mg',
  })
  @IsString()
  monodrug: string;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_12345',
    format: 'uuid',
    required: false, // Assuming this is often derived from the authenticated user/header
  })
  @IsString()
  @IsOptional()
  tenant_id?: string;

  // New medication tracking fields
  @ApiProperty({
    description:
      'Indicates if this prescription was created by the patient (patient-initiated tracking)',
    example: false,
    required: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  created_by_patient?: boolean;

  @ApiProperty({
    description:
      'Indicates if medication tracking is currently active for this prescription',
    example: true,
    required: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  is_tracking_active?: boolean;

  @ApiProperty({
    description:
      'Indicates if medication reminders are enabled for this prescription',
    example: true,
    required: false,
    default: true,
  })
  @IsBoolean()
  @IsOptional()
  reminder_enabled?: boolean;

  @ApiProperty({
    description:
      'Timestamp when the first dose was taken (if tracking has started)',
    example: '2025-05-29T08:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  first_dose_taken_at?: Date;

  @ApiProperty({
    description:
      'Array of preferred time slots for taking medication (e.g., ["08:00", "20:00"])',
    example: ['08:00', '14:00', '20:00'],
    required: false,
    type: [String],
  })
  @IsArray()
  @IsString({ each: true })
  @IsOptional()
  time_of_day_slots?: string[];

  @ApiProperty({
    description: 'Timestamp of the last reminder sent',
    example: '2025-05-29T08:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  last_reminder_sent_at?: Date;

  @ApiProperty({
    description: 'Count of reminders sent for this prescription',
    example: 5,
    required: false,
    default: 0,
  })
  @IsNumber()
  @IsOptional()
  reminders_sent_count?: number;

  @ApiProperty({
    description: 'Reference to skip reason catalog if prescription was skipped',
    example: 1,
    required: false,
  })
  @IsNumber()
  @IsOptional()
  skip_reason_id?: number;

  @ApiProperty({
    description: 'Additional details about why the prescription was skipped',
    example: 'Patient reported nausea after taking the medication',
    required: false,
  })
  @IsString()
  @IsOptional()
  skip_reason_details?: string;

  // Missing fields from prescription table
  @ApiProperty({
    description: 'Whether prescription shows in patient calendar',
    example: false,
    required: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  show_in_calendar?: boolean;

  @ApiProperty({
    description: 'Whether prescription is authorized by physician',
    example: true,
    required: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  authorized?: boolean;

  @ApiProperty({
    description: 'Whether patient has stopped the treatment',
    example: false,
    required: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  patient_stopped_treatment?: boolean;

  @ApiProperty({
    description: 'Date when patient stopped the treatment',
    example: '2025-05-29T10:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  patient_stopped_treatment_date?: Date;

  @ApiProperty({
    description: 'Reason why patient stopped the treatment',
    example: 'Side effects were too severe',
    required: false,
  })
  @IsString()
  @IsOptional()
  patient_stopped_treatment_reason?: string;
}

================
File: src/medical-scheduling/modules/prescription/dto/index.ts
================
// Core DTOs
export { CreatePrescriptionDto } from './create-prescription.dto';
export { UpdatePrescriptionDto } from './update-prescription.dto';

// Medication Tracking DTOs
export {
  ActivateMedicationTrackingDto,
  UpdateMedicationTrackingDto,
  UpdatePatientReminderSettingsDto,
} from './medication-tracking.dto';

// Medication Dose DTOs
export {
  MedicationDoseStatus,
  RecordMedicationDoseDto,
  MedicationDoseHistoryQueryDto,
  MedicationDoseLogResponseDto,
} from './medication-dose.dto';

// Skip Reason DTOs (catalog with full CRUD)
export {
  CreateMedicationSkipReasonDto,
  UpdateMedicationSkipReasonDto,
  MedicationSkipReasonResponseDto,
  MedicationSkipReasonQueryDto,
  MedicationSkipReasonCategoriesDto,
} from './medication-skip-reason.dto';

// Response DTOs
export {
  PrescriptionWithTrackingResponseDto,
  MedicationAdherenceStatsDto,
  ActiveTrackingMedicationsDto,
} from './medication-tracking-response.dto';

================
File: src/medical-scheduling/modules/prescription/dto/medication-dose.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsDate,
  IsOptional,
  IsString,
  IsNumber,
  IsEnum,
  IsUUID,
  IsNotEmpty,
} from 'class-validator';
import { Type } from 'class-transformer';

// Enum para el estado de la dosis
export enum MedicationDoseStatus {
  TAKEN = 'TAKEN',
  MISSED_AUTOMATIC = 'MISSED_AUTOMATIC',
  MISSED_REPORTED = 'MISSED_REPORTED',
  SKIPPED_BY_USER = 'SKIPPED_BY_USER',
}

// DTO para registrar una dosis tomada
export class RecordMedicationDoseDto {
  @ApiProperty({
    description: 'Prescription ID for which the dose is being recorded',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  prescription_id: string;

  @ApiProperty({
    description: 'Status of the medication dose',
    enum: MedicationDoseStatus,
    example: MedicationDoseStatus.TAKEN,
  })
  @IsEnum(MedicationDoseStatus)
  @IsNotEmpty()
  dose_status: MedicationDoseStatus;

  @ApiProperty({
    description: 'Timestamp when the dose was scheduled',
    example: '2025-05-29T08:00:00.000Z',
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsNotEmpty()
  scheduled_time: Date;

  @ApiProperty({
    description: 'User ID who is recording the dose',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  user_id: string;

  @ApiProperty({
    description: 'Timestamp when the dose was actually taken (if taken)',
    example: '2025-05-29T08:05:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  actual_taken_time?: Date;

  @ApiProperty({
    description: 'Reference to skip reason catalog if dose was skipped',
    example: 1,
    required: false,
  })
  @IsNumber()
  @IsOptional()
  skip_reason_id?: number;

  @ApiProperty({
    description:
      'Additional details about why the dose was skipped (maps to skip_reason_details in table)',
    example: 'Patient reported nausea after taking the medication',
    required: false,
  })
  @IsString()
  @IsOptional()
  skip_reason_details?: string;
}

// DTO para consultar historial de dosis
export class MedicationDoseHistoryQueryDto {
  @ApiProperty({
    description: 'Prescription ID to get dose history for',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
    required: false,
  })
  @IsUUID()
  @IsOptional()
  prescription_id?: string;

  @ApiProperty({
    description: 'Patient ID to get dose history for',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
    required: false,
  })
  @IsUUID()
  @IsOptional()
  patient_id?: string;

  @ApiProperty({
    description: 'Start date for dose history query',
    example: '2025-05-01T00:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  start_date?: Date;

  @ApiProperty({
    description: 'End date for dose history query',
    example: '2025-05-31T23:59:59.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  end_date?: Date;

  @ApiProperty({
    description: 'Filter by dose status',
    enum: MedicationDoseStatus,
    required: false,
  })
  @IsEnum(MedicationDoseStatus)
  @IsOptional()
  dose_status?: MedicationDoseStatus;

  @ApiProperty({
    description: 'Number of records per page',
    example: 50,
    required: false,
    default: 50,
  })
  @IsNumber()
  @IsOptional()
  limit?: number;

  @ApiProperty({
    description: 'Page offset for pagination',
    example: 0,
    required: false,
    default: 0,
  })
  @IsNumber()
  @IsOptional()
  offset?: number;
}

// DTO para respuesta del historial de dosis
export class MedicationDoseLogResponseDto {
  @ApiProperty({
    description: 'Unique identifier for the dose log entry',
    example: 123,
  })
  id: number;

  @ApiProperty({
    description: 'Prescription ID',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  prescription_id: string;

  @ApiProperty({
    description: 'User ID who recorded the dose',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  user_id: string;

  @ApiProperty({
    description: 'Status of the medication dose',
    enum: MedicationDoseStatus,
  })
  dose_status: MedicationDoseStatus;

  @ApiProperty({
    description: 'Timestamp when the dose was scheduled',
    type: Date,
  })
  scheduled_time: Date;

  @ApiProperty({
    description: 'Timestamp when the dose was actually taken',
    type: Date,
    required: false,
  })
  actual_taken_time?: Date;

  @ApiProperty({
    description: 'Timestamp when the dose was reported',
    type: Date,
  })
  reported_at: Date;

  @ApiProperty({
    description: 'Skip reason information',
    required: false,
  })
  skip_reason?: {
    id: number;
    reason_text: string;
    category: string;
  };

  @ApiProperty({
    description: 'Additional details about why the dose was skipped',
    required: false,
  })
  skip_reason_details?: string;

  @ApiProperty({
    description: 'Timestamp when the record was created',
    type: Date,
  })
  created_at: Date;

  @ApiProperty({
    description: 'Timestamp when the record was last updated',
    type: Date,
  })
  updated_at: Date;
}

================
File: src/medical-scheduling/modules/prescription/dto/medication-skip-reason.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsString, IsNumber, IsOptional, IsNotEmpty } from 'class-validator';

// NOTA: Esta tabla es un CAT√ÅLOGO con CRUD completo
// Los motivos de omisi√≥n pueden ser gestionados por administradores del sistema

// DTO para crear nuevos motivos de omisi√≥n
export class CreateMedicationSkipReasonDto {
  @ApiProperty({
    description: 'Text description of the skip reason',
    example: 'Se me olvid√≥ tomar el medicamento',
  })
  @IsString()
  @IsNotEmpty()
  reason_text: string;

  @ApiProperty({
    description: 'Category of the skip reason',
    example: 'Olvido',
  })
  @IsString()
  @IsNotEmpty()
  category: string;
}

// DTO para actualizar motivos de omisi√≥n
export class UpdateMedicationSkipReasonDto {
  @ApiProperty({
    description: 'Text description of the skip reason',
    example: 'Se me olvid√≥ tomar el medicamento',
    required: false,
  })
  @IsString()
  @IsOptional()
  reason_text?: string;

  @ApiProperty({
    description: 'Category of the skip reason',
    example: 'Olvido',
    required: false,
  })
  @IsString()
  @IsOptional()
  category?: string;
}

// DTO para respuesta de motivos de omisi√≥n (cat√°logo est√°tico)
export class MedicationSkipReasonResponseDto {
  @ApiProperty({
    description: 'Unique identifier for the skip reason',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Text description of the skip reason',
    example: 'Se me olvid√≥ tomar el medicamento',
  })
  reason_text: string;

  @ApiProperty({
    description: 'Category of the skip reason',
    example: 'Olvido',
  })
  category: string;

  @ApiProperty({
    description: 'Creation timestamp',
    example: '2025-05-29T15:10:09.000Z',
  })
  created_at: Date;

  @ApiProperty({
    description: 'Last update timestamp',
    example: '2025-05-29T15:10:09.000Z',
  })
  updated_at: Date;
}

// DTO para consultar motivos de omisi√≥n por categor√≠a (solo lectura)
export class MedicationSkipReasonQueryDto {
  @ApiProperty({
    description: 'Filter by category',
    example: 'Olvido',
    required: false,
  })
  @IsString()
  @IsOptional()
  category?: string;

  @ApiProperty({
    description: 'Number of records per page',
    example: 50,
    required: false,
    default: 50,
  })
  @IsNumber()
  @IsOptional()
  limit?: number;

  @ApiProperty({
    description: 'Page offset for pagination',
    example: 0,
    required: false,
    default: 0,
  })
  @IsNumber()
  @IsOptional()
  offset?: number;
}

// DTO para obtener categor√≠as √∫nicas de motivos de omisi√≥n
export class MedicationSkipReasonCategoriesDto {
  @ApiProperty({
    description: 'List of unique categories available in the catalog',
    example: [
      'No necesito medicamento',
      'Problemas de cobertura',
      'Efectos adversos',
      'Olvido',
      'Problemas log√≠sticos',
      'Preocupaciones',
      'Otros',
    ],
    type: [String],
  })
  categories: string[];
}

================
File: src/medical-scheduling/modules/prescription/dto/medication-tracking-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';

// DTO para respuesta de prescripci√≥n con informaci√≥n de tracking
export class PrescriptionWithTrackingResponseDto {
  @ApiProperty({
    description: 'Prescription unique identifier',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  id: string;

  @ApiProperty({
    description: 'Start date and time of the prescription',
    type: Date,
  })
  start_timestamp: Date;

  @ApiProperty({
    description: 'End date and time of the prescription',
    type: Date,
    required: false,
  })
  end_timestamp?: Date;

  @ApiProperty({
    description: 'Prescription description or instructions',
    required: false,
  })
  description?: string;

  @ApiProperty({
    description: 'Whether the prescription is active',
  })
  active: boolean;

  @ApiProperty({
    description: 'Name of the monodrug prescribed',
  })
  monodrug: string;

  @ApiProperty({
    description: 'Patient ID',
  })
  patient_id: string;

  // Tracking fields
  @ApiProperty({
    description: 'Whether this prescription was created by the patient',
  })
  created_by_patient: boolean;

  @ApiProperty({
    description: 'Whether medication tracking is currently active',
  })
  is_tracking_active: boolean;

  @ApiProperty({
    description: 'Whether medication reminders are enabled',
  })
  reminder_enabled: boolean;

  @ApiProperty({
    description: 'Timestamp when the first dose was taken',
    type: Date,
    required: false,
  })
  first_dose_taken_at?: Date;

  @ApiProperty({
    description: 'Array of preferred time slots for taking medication',
    type: [String],
    required: false,
  })
  time_of_day_slots?: string[];

  @ApiProperty({
    description: 'Timestamp of the last reminder sent',
    type: Date,
    required: false,
  })
  last_reminder_sent_at?: Date;

  @ApiProperty({
    description: 'Count of reminders sent for this prescription',
  })
  reminders_sent_count: number;

  @ApiProperty({
    description: 'Skip reason information',
    required: false,
  })
  skip_reason?: {
    id: number;
    reason_text: string;
    category: string;
  };

  @ApiProperty({
    description: 'Additional details about why the prescription was skipped',
    required: false,
  })
  skip_reason_details?: string;

  @ApiProperty({
    description: 'Timestamps',
  })
  created_at: Date;

  @ApiProperty({
    description: 'Last update timestamp',
  })
  updated_at: Date;
}

// DTO para estad√≠sticas de adherencia del paciente
export class MedicationAdherenceStatsDto {
  @ApiProperty({
    description: 'Patient ID',
  })
  patient_id: string;

  @ApiProperty({
    description: 'Prescription ID (if specific to one prescription)',
    required: false,
  })
  prescription_id?: string;

  @ApiProperty({
    description: 'Total number of scheduled doses in the period',
  })
  total_scheduled_doses: number;

  @ApiProperty({
    description: 'Number of doses actually taken',
  })
  doses_taken: number;

  @ApiProperty({
    description: 'Number of doses missed automatically (no user input)',
  })
  doses_missed_automatic: number;

  @ApiProperty({
    description: 'Number of doses missed and reported by user',
  })
  doses_missed_reported: number;

  @ApiProperty({
    description: 'Number of doses intentionally skipped by user',
  })
  doses_skipped_by_user: number;

  @ApiProperty({
    description: 'Adherence percentage (doses_taken / total_scheduled_doses)',
  })
  adherence_percentage: number;

  @ApiProperty({
    description: 'Period start date for the statistics',
    type: Date,
  })
  period_start: Date;

  @ApiProperty({
    description: 'Period end date for the statistics',
    type: Date,
  })
  period_end: Date;
  @ApiProperty({
    description: 'Breakdown by skip reasons',
    additionalProperties: true,
  })
  skip_reasons_breakdown: {
    [category: string]: {
      count: number;
      reasons: Array<{
        reason_text: string;
        count: number;
      }>;
    };
  };
}

// DTO para resumen de tracking activo
export class ActiveTrackingMedicationsDto {
  @ApiProperty({
    description: 'Patient ID',
  })
  patient_id: string;

  @ApiProperty({
    description: 'List of active prescriptions with tracking enabled',
    type: [PrescriptionWithTrackingResponseDto],
  })
  active_prescriptions: PrescriptionWithTrackingResponseDto[];

  @ApiProperty({
    description: 'Next scheduled doses across all active prescriptions',
  })
  next_scheduled_doses: Array<{
    prescription_id: string;
    monodrug: string;
    scheduled_time: Date;
    time_slot: string;
  }>;

  @ApiProperty({
    description: 'Patient reminder settings',
  })
  reminder_settings: {
    medication_reminder_interval_minutes: number;
    medication_reminder_max_retries: number;
  };

  @ApiProperty({
    description: 'Overall adherence summary for the current period',
  })
  adherence_summary: {
    total_prescriptions_with_tracking: number;
    average_adherence_percentage: number;
    last_30_days_adherence: number;
  };
}

================
File: src/medical-scheduling/modules/prescription/dto/medication-tracking.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsBoolean,
  IsDate,
  IsOptional,
  IsString,
  IsNumber,
  IsArray,
  IsUUID,
} from 'class-validator';
import { Type } from 'class-transformer';

// DTO para activar tracking de medicaci√≥n
export class ActivateMedicationTrackingDto {
  @ApiProperty({
    description: 'Prescription ID to activate tracking for',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID()
  prescription_id: string;

  @ApiProperty({
    description: 'Enable medication reminders',
    example: true,
    required: false,
    default: true,
  })
  @IsBoolean()
  @IsOptional()
  reminder_enabled?: boolean;

  @ApiProperty({
    description:
      'Array of preferred time slots for taking medication (e.g., ["08:00", "20:00"])',
    example: ['08:00', '14:00', '20:00'],
    required: false,
    type: [String],
  })
  @IsArray()
  @IsString({ each: true })
  @IsOptional()
  time_of_day_slots?: string[];

  @ApiProperty({
    description: 'Timestamp when the first dose was taken',
    example: '2025-05-29T08:00:00.000Z',
    required: false,
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  first_dose_taken_at?: Date;
}

// DTO para actualizar configuraci√≥n de tracking
export class UpdateMedicationTrackingDto {
  @ApiProperty({
    description: 'Enable or disable medication tracking',
    example: true,
    required: false,
  })
  @IsBoolean()
  @IsOptional()
  is_tracking_active?: boolean;

  @ApiProperty({
    description: 'Enable or disable medication reminders',
    example: true,
    required: false,
  })
  @IsBoolean()
  @IsOptional()
  reminder_enabled?: boolean;

  @ApiProperty({
    description:
      'Array of preferred time slots for taking medication (e.g., ["08:00", "20:00"])',
    example: ['08:00', '14:00', '20:00'],
    required: false,
    type: [String],
  })
  @IsArray()
  @IsString({ each: true })
  @IsOptional()
  time_of_day_slots?: string[];

  @ApiProperty({
    description: 'Reference to skip reason catalog if prescription was skipped',
    example: 1,
    required: false,
  })
  @IsNumber()
  @IsOptional()
  skip_reason_id?: number;

  @ApiProperty({
    description: 'Additional details about why the prescription was skipped',
    example: 'Patient reported nausea after taking the medication',
    required: false,
  })
  @IsString()
  @IsOptional()
  skip_reason_details?: string;
}

// DTO para configuraci√≥n de recordatorios del paciente
export class UpdatePatientReminderSettingsDto {
  @ApiProperty({
    description: 'Interval between medication reminders in minutes',
    example: 30,
    required: false,
    default: 30,
  })
  @IsNumber()
  @IsOptional()
  medication_reminder_interval_minutes?: number;

  @ApiProperty({
    description: 'Maximum number of reminder retries per dose',
    example: 3,
    required: false,
    default: 3,
  })
  @IsNumber()
  @IsOptional()
  medication_reminder_max_retries?: number;
}

================
File: src/medical-scheduling/modules/prescription/dto/README_DTOS.md
================
# Sistema de Seguimiento de Medicaci√≥n - DTOs e Interfaces

## Resumen

Este documento describe los DTOs (Data Transfer Objects) e interfaces implementadas para el sistema completo de seguimiento de medicaci√≥n en el backend de Segimed.

## Estructura de Archivos

```
src/medical-scheduling/modules/prescription/dto/
‚îú‚îÄ‚îÄ create-prescription.dto.ts          # DTO principal actualizado con campos de tracking
‚îú‚îÄ‚îÄ update-prescription.dto.ts          # DTO de actualizaci√≥n (sin cambios)
‚îú‚îÄ‚îÄ medication-tracking.dto.ts          # DTOs para activar/configurar tracking
‚îú‚îÄ‚îÄ medication-dose.dto.ts              # DTOs para registro de dosis
‚îú‚îÄ‚îÄ medication-skip-reason.dto.ts       # DTOs para motivos de omisi√≥n
‚îú‚îÄ‚îÄ medication-tracking-response.dto.ts # DTOs de respuesta con informaci√≥n de tracking
‚îî‚îÄ‚îÄ index.ts                           # Archivo de exportaci√≥n centralizada
```

## DTOs Principales

### 1. CreatePrescriptionDto (Actualizado)

**Archivo:** `create-prescription.dto.ts`

**Campos originales preservados:**

- `start_timestamp`: Fecha/hora de inicio de la prescripci√≥n
- `end_timestamp`: Fecha/hora de fin de la prescripci√≥n
- `description`: Descripci√≥n/instrucciones de la prescripci√≥n
- `active`: Estado activo de la prescripci√≥n
- `patient_id`: ID del paciente
- `monodrug`: Nombre del medicamento
- `tenant_id`: ID del tenant

**Nuevos campos para tracking:**

- `created_by_patient`: Boolean - Indica si fue creada por el paciente
- `is_tracking_active`: Boolean - Indica si el tracking est√° activo
- `reminder_enabled`: Boolean - Indica si los recordatorios est√°n habilitados
- `first_dose_taken_at`: Date - Timestamp de la primera dosis tomada
- `time_of_day_slots`: string[] - Horarios preferidos para tomar medicaci√≥n
- `last_reminder_sent_at`: Date - Timestamp del √∫ltimo recordatorio enviado
- `reminders_sent_count`: number - Contador de recordatorios enviados
- `skip_reason_id`: number - Referencia al cat√°logo de motivos de omisi√≥n
- `skip_reason_details`: string - Detalles adicionales sobre omisi√≥n

### 2. DTOs de Tracking de Medicaci√≥n

**Archivo:** `medication-tracking.dto.ts`

#### ActivateMedicationTrackingDto

Usado para activar el seguimiento de una prescripci√≥n espec√≠fica.

**Campos:**

- `prescription_id`: UUID de la prescripci√≥n
- `reminder_enabled`: Boolean opcional - Habilitar recordatorios
- `time_of_day_slots`: string[] opcional - Horarios preferidos
- `first_dose_taken_at`: Date opcional - Primera dosis tomada

#### UpdateMedicationTrackingDto

Usado para actualizar la configuraci√≥n de tracking.

**Campos:**

- `is_tracking_active`: Boolean opcional
- `reminder_enabled`: Boolean opcional
- `time_of_day_slots`: string[] opcional
- `skip_reason_id`: number opcional
- `skip_reason_details`: string opcional

#### UpdatePatientReminderSettingsDto

Usado para configurar las preferencias globales de recordatorios del paciente.

**Campos:**

- `medication_reminder_interval_minutes`: number - Intervalo entre recordatorios (default: 30)
- `medication_reminder_max_retries`: number - M√°ximo de reintentos (default: 3)

### 3. DTOs de Registro de Dosis

**Archivo:** `medication-dose.dto.ts`

#### MedicationDoseStatus (Enum)

Estados posibles de una dosis:

- `TAKEN`: Dosis tomada
- `MISSED_AUTOMATIC`: Dosis perdida autom√°ticamente
- `MISSED_REPORTED`: Dosis perdida reportada por usuario
- `SKIPPED_BY_USER`: Dosis omitida intencionalmente por usuario

#### RecordMedicationDoseDto

Usado para registrar cuando se toma/omite una dosis.

**Campos:**

- `prescription_id`: UUID de la prescripci√≥n
- `dose_status`: MedicationDoseStatus - Estado de la dosis
- `scheduled_time`: Date - Hora programada
- `taken_time`: Date opcional - Hora real de toma
- `skip_reason_id`: number opcional - Motivo de omisi√≥n
- `notes`: string opcional - Notas adicionales

#### MedicationDoseHistoryQueryDto

Usado para consultar el historial de dosis con filtros.

**Campos:**

- `prescription_id`: UUID opcional - Filtrar por prescripci√≥n
- `patient_id`: UUID opcional - Filtrar por paciente
- `start_date`: Date opcional - Fecha inicio
- `end_date`: Date opcional - Fecha fin
- `dose_status`: MedicationDoseStatus opcional - Filtrar por estado
- `limit`: number opcional - Registros por p√°gina (default: 50)
- `offset`: number opcional - Offset para paginaci√≥n (default: 0)

#### MedicationDoseLogResponseDto

Estructura de respuesta para logs de dosis.

**Campos:**

- `id`: number - ID √∫nico del log
- `prescription_id`: string - ID de la prescripci√≥n
- `user_id`: string - ID del usuario que registr√≥
- `dose_status`: MedicationDoseStatus - Estado de la dosis
- `scheduled_time`: Date - Hora programada
- `taken_time`: Date opcional - Hora real
- `skip_reason`: objeto opcional - Informaci√≥n del motivo de omisi√≥n
- `notes`: string opcional - Notas
- `created_at`: Date - Fecha de creaci√≥n
- `updated_at`: Date - Fecha de actualizaci√≥n

### 4. DTOs de Motivos de Omisi√≥n (Cat√°logo con CRUD)

**Archivo:** `medication-skip-reason.dto.ts`

> **IMPORTANTE:** La tabla `medication_skip_reason_catalog` es un cat√°logo con CRUD completo. Los administradores pueden gestionar los motivos de omisi√≥n seg√∫n las necesidades del sistema.

#### CreateMedicationSkipReasonDto

DTO para crear nuevos motivos de omisi√≥n.

**Campos:**

- `reason_text`: string - Descripci√≥n del motivo (requerido)
- `category`: string - Categor√≠a del motivo (requerido)

#### UpdateMedicationSkipReasonDto

DTO para actualizar motivos de omisi√≥n existentes.

**Campos:**

- `reason_text`: string opcional - Nueva descripci√≥n del motivo
- `category`: string opcional - Nueva categor√≠a del motivo

#### MedicationSkipReasonResponseDto

DTO de respuesta para motivos de omisi√≥n del cat√°logo.

**Campos:**

- `id`: number - Identificador √∫nico autoincrement
- `reason_text`: string - Descripci√≥n del motivo
- `category`: string - Categor√≠a del motivo
- `created_at`: Date - Timestamp de creaci√≥n
- `updated_at`: Date - Timestamp de √∫ltima actualizaci√≥n

#### MedicationSkipReasonQueryDto

DTO para consultar motivos de omisi√≥n con filtros.

**Campos:**

- `category`: string opcional - Filtrar por categor√≠a
- `limit`: number opcional - Registros por p√°gina (default: 50)
- `offset`: number opcional - Offset para paginaci√≥n (default: 0)

#### MedicationSkipReasonCategoriesDto

DTO para obtener lista de categor√≠as √∫nicas disponibles.

**Campos:**

- `categories`: string[] - Array con las 7 categor√≠as √∫nicas del cat√°logo

#### MedicationSkipReasonResponseDto

Estructura de respuesta para motivos de omisi√≥n.

**Campos:**

- `id`: number - ID √∫nico
- `reason_text`: string - Descripci√≥n
- `category`: string - Categor√≠a

#### MedicationSkipReasonQueryDto

Para consultar motivos con filtros.

**Campos:**

- `category`: string opcional - Filtrar por categor√≠a
- `limit`: number opcional - Registros por p√°gina
- `offset`: number opcional - Offset para paginaci√≥n

### 5. DTOs de Respuesta con Tracking

**Archivo:** `medication-tracking-response.dto.ts`

#### PrescriptionWithTrackingResponseDto

Respuesta completa de prescripci√≥n con informaci√≥n de tracking.

**Campos principales:**

- Todos los campos b√°sicos de prescripci√≥n
- Campos de tracking (created_by_patient, is_tracking_active, etc.)
- Informaci√≥n de motivos de omisi√≥n relacionados
- Timestamps de creaci√≥n y actualizaci√≥n

#### MedicationAdherenceStatsDto

Estad√≠sticas de adherencia del paciente.

**Campos:**

- `patient_id`: string - ID del paciente
- `prescription_id`: string opcional - ID espec√≠fico de prescripci√≥n
- `total_scheduled_doses`: number - Total de dosis programadas
- `doses_taken`: number - Dosis tomadas
- `doses_missed_automatic`: number - Dosis perdidas autom√°ticamente
- `doses_missed_reported`: number - Dosis perdidas reportadas
- `doses_skipped_by_user`: number - Dosis omitidas por usuario
- `adherence_percentage`: number - Porcentaje de adherencia
- `period_start`: Date - Inicio del per√≠odo
- `period_end`: Date - Fin del per√≠odo
- `skip_reasons_breakdown`: object - Desglose por motivos de omisi√≥n

#### ActiveTrackingMedicationsDto

Resumen de medicaciones con tracking activo.

**Campos:**

- `patient_id`: string - ID del paciente
- `active_prescriptions`: PrescriptionWithTrackingResponseDto[] - Lista de prescripciones activas
- `next_scheduled_doses`: array - Pr√≥ximas dosis programadas
- `reminder_settings`: object - Configuraci√≥n de recordatorios del paciente
- `adherence_summary`: object - Resumen general de adherencia

## Interfaces Actualizadas

### MedicationItemInterface (Sin cambios)

Interfaz original preservada para compatibilidad:

```typescript
{
  monodrug: string;
  dose: string;
  dose_units: string;
  frecuency: string;
  duration: string;
  duration_units: string;
  observations?: string;
}
```

### MedicationItemWithTrackingInterface (Nueva)

Interfaz extendida para incluir campos de tracking:

```typescript
extends MedicationItemInterface {
  created_by_patient?: boolean;
  is_tracking_active?: boolean;
  reminder_enabled?: boolean;
  first_dose_taken_at?: Date;
  time_of_day_slots?: string[];
  skip_reason_id?: number;
  skip_reason_details?: string;
}
```

## Validaciones Implementadas

### Class Validators Utilizados

- `@IsBoolean()`: Para campos booleanos
- `@IsDate()`: Para fechas con `@Type(() => Date)`
- `@IsString()`: Para campos de texto
- `@IsNumber()`: Para campos num√©ricos
- `@IsArray()`: Para arrays con `@IsString({ each: true })`
- `@IsEnum()`: Para enums como MedicationDoseStatus
- `@IsUUID()`: Para identificadores UUID
- `@IsOptional()`: Para campos opcionales
- `@IsNotEmpty()`: Para campos requeridos

### Documentaci√≥n Swagger

- Todos los DTOs incluyen documentaci√≥n completa con `@ApiProperty()`
- Ejemplos de valores para cada campo
- Indicaci√≥n de campos requeridos/opcionales
- Tipos de datos especificados
- Descripciones detalladas de funcionalidad

## Verificaci√≥n de Consistencia

‚úÖ **FASE 2 COMPLETA - DTOs vs Schema:**

- **Tabla `patient`** ‚Üî `UpdatePatientReminderSettingsDto`: ‚úÖ Perfecta correspondencia
- **Tabla `prescription`** ‚Üî `CreatePrescriptionDto`: ‚úÖ Alineado (corregido default de `reminder_enabled`)
- **Tabla `medication_dose_log`** ‚Üî DTOs de dosis: ‚úÖ Correspondencia exacta
- **Tabla `medication_skip_reason_catalog`** ‚Üî DTOs de motivos: ‚úÖ CRUD completo
- **Enum `medication_dose_status`** ‚Üî `MedicationDoseStatus`: ‚úÖ Correspondencia exacta

**CORRECCI√ìN APLICADA:**

- Campo `reminder_enabled` en CreatePrescriptionDto: default cambiado de `false` a `true` para coincidir con schema.

## Compatibilidad

- **Backward Compatibility**: Todos los DTOs existentes mantienen compatibilidad
- **Progressive Enhancement**: Los nuevos campos son opcionales donde corresponde
- **Type Safety**: Uso extensivo de TypeScript para type safety
- **Validation**: Validaciones robustas en todos los DTOs

## Pr√≥ximos Pasos

Esta implementaci√≥n de DTOs prepara la infraestructura para:

1. **FASE 3**: Implementaci√≥n de servicios (PrescriptionService extensi√≥n, MedicationTrackingService, MedicationReminderService)
2. **FASE 4**: Controladores y endpoints REST
3. **FASE 5**: Testing y validaci√≥n

## Archivo de Exportaci√≥n

Todos los DTOs se exportan centralizadamente desde `index.ts` para facilitar imports:

```typescript
import {
  CreatePrescriptionDto,
  ActivateMedicationTrackingDto,
  MedicationDoseStatus,
  // ... otros DTOs
} from './dto';
```

================
File: src/medical-scheduling/modules/prescription/dto/update-prescription.dto.ts
================
import { PartialType } from '@nestjs/swagger';
import { CreatePrescriptionDto } from './create-prescription.dto';

export class UpdatePrescriptionDto extends PartialType(CreatePrescriptionDto) {}

================
File: src/medical-scheduling/modules/prescription/entities/prescription.entity.ts
================
export class Prescription {}

================
File: src/medical-scheduling/modules/prescription/prescription.controller.ts
================
import { Controller, Get, Post, Body, Param, Delete } from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiParam,
} from '@nestjs/swagger';
import { PrescriptionService } from './prescription.service';
import { CreatePrescriptionDto } from './dto/create-prescription.dto';

@ApiTags('Prescriptions')
@Controller('prescription')
export class PrescriptionController {
  constructor(private readonly prescriptionService: PrescriptionService) {}

  @Post()
  @ApiOperation({ summary: 'Create a new prescription' })
  @ApiResponse({
    status: 201,
    description: 'Prescription created successfully.',
    type: CreatePrescriptionDto,
  })
  @ApiResponse({ status: 400, description: 'Invalid input.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiBearerAuth('access-token')
  create(@Body() createPrescriptionDto: CreatePrescriptionDto) {
    return this.prescriptionService.create(createPrescriptionDto);
  }

  @Get('patient/:id')
  @ApiOperation({ summary: 'Get all prescriptions for a specific patient' })
  @ApiResponse({
    status: 200,
    description: "Successfully retrieved patient's prescriptions.",
    isArray: true,
    type: CreatePrescriptionDto,
  })
  @ApiResponse({ status: 400, description: 'Invalid patient ID.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiResponse({ status: 404, description: 'Patient not found.' })
  @ApiBearerAuth('access-token')
  @ApiParam({
    name: 'id',
    type: 'string',
    format: 'uuid',
    description: "Patient's unique identifier",
  })
  findAllById(@Param('id') id: string) {
    this.prescriptionService.findAllById(id);
  }

  @Get()
  @ApiOperation({
    summary: 'Get all prescriptions (potentially for admin/system use)',
  })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved all prescriptions.',
    isArray: true,
    type: CreatePrescriptionDto,
  })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiBearerAuth('access-token')
  findAll() {
    return this.prescriptionService.findAll();
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Delete a prescription by its ID' })
  @ApiResponse({
    status: 200,
    description: 'Prescription deleted successfully.',
  })
  @ApiResponse({ status: 400, description: 'Invalid ID supplied.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiResponse({ status: 404, description: 'Prescription not found.' })
  @ApiBearerAuth('access-token')
  @ApiParam({
    name: 'id',
    type: 'string',
    format: 'uuid',
    description: 'Prescription unique identifier',
  })
  remove(@Param('id') id: string) {
    return this.prescriptionService.remove(id);
  }

  // @IsOptional()
  // medical_order_id:string?
}

================
File: src/medical-scheduling/modules/prescription/prescription.module.ts
================
import { Module } from '@nestjs/common';
import { PrescriptionService } from './prescription.service';
import { PrescriptionController } from './prescription.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [PrescriptionController],
  providers: [PrescriptionService, PrismaService],
  exports: [PrescriptionService],
})
export class PrescriptionModule {}

================
File: src/medical-scheduling/modules/prescription/prescription.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { CreatePrescriptionDto } from './dto/create-prescription.dto';
import { PrismaService } from 'src/prisma/prisma.service';
import { Prisma } from '@prisma/client';

export interface MedicationItemInterface {
  monodrug: string;
  dose: string;
  dose_units: string;
  frecuency: string;
  duration: string;
  duration_units: string;
  observations?: string;
}

// Extended interface for medication items with tracking capabilities
export interface MedicationItemWithTrackingInterface
  extends MedicationItemInterface {
  // Tracking fields (optional for backward compatibility)
  created_by_patient?: boolean;
  is_tracking_active?: boolean;
  reminder_enabled?: boolean;
  first_dose_taken_at?: Date;
  time_of_day_slots?: string[];
  skip_reason_id?: number;
  skip_reason_details?: string;
}

@Injectable()
export class PrescriptionService {
  constructor(private readonly prisma: PrismaService) {}
  async create(createPrescriptionDto: CreatePrescriptionDto) {
    try {
      // Preparar los datos para la creaci√≥n
      const prescriptionData = { ...createPrescriptionDto };

      // Si es creada por un m√©dico (created_by_patient = false o undefined)
      if (!prescriptionData.created_by_patient) {
        prescriptionData.created_by_patient = false;
        prescriptionData.is_tracking_active = false;
        prescriptionData.reminder_enabled = true;
        prescriptionData.first_dose_taken_at = undefined;
        prescriptionData.time_of_day_slots = [];
      }

      await this.prisma.prescription.create({
        data: prescriptionData,
      });
      return { message: 'La prescripci√≥n ha sido correctamente generada' };
    } catch (error) {
      throw new Error(
        `No se ha podido generar la prescripci√≥n ${error.message}`,
      );
    }
  }

  async findAll() {
    try {
      const prescriptions = await this.prisma.prescription.findMany({
        where: {
          active: true,
        },
      });
      return prescriptions;
    } catch (error) {
      throw new Error(
        `No se ha podido consultar las prescripciones ${error.message}`,
      );
    }
  }

  async findAllById(id: string) {
    try {
      const prescriptions = await this.prisma.prescription.findMany({
        where: {
          AND: [{ active: true }, { patient_id: id }],
        },
      });
      return prescriptions;
    } catch (error) {
      throw new Error(
        `No se ha podido consultar las prescripciones ${error.message}`,
      );
    }
  }

  async remove(id: string) {
    try {
      const prescription = await this.prisma.prescription.update({
        where: { id: id },
        data: { active: false },
      });
      if (!prescription)
        throw new NotFoundException('La prescripci√≥n no ha sido localizada');
      return { message: 'La prescripci√≥n ha sido eliminada' };
    } catch (error) {
      throw new Error(
        `No se ha podido eliminar la prescripci√≥n ${error.message}`,
      );
    }
  }

  /**
   * Procesa las medicaciones para una orden m√©dica o consulta m√©dica
   * @param tx Cliente Prisma transaccional
   * @param medications Lista de medicaciones a procesar
   * @param patientId ID del paciente
   * @param physicianId ID del m√©dico
   * @param tenantId ID del tenant
   * @param medicalEventId ID del evento m√©dico (opcional)
   * @param medicalOrderId ID de la orden m√©dica (opcional)
   * @param isAuthorized Indica si la medicaci√≥n est√° autorizada
   */
  async processMedications(
    tx: Prisma.TransactionClient,
    medications: MedicationItemInterface[],
    patientId: string,
    physicianId: string,
    tenantId: string,
    medicalEventId?: string,
    medicalOrderId?: string,
    isAuthorized: boolean = true,
  ): Promise<void> {
    // Extraer monodrogas √∫nicas del array de medicaciones
    const uniqueMonodrugs = [
      ...new Set(medications.map((med) => med.monodrug)),
    ];

    // Realizar una √∫nica consulta por lotes para todas las prescripciones activas relevantes
    const existingPrescriptions = await tx.prescription.findMany({
      where: {
        patient_id: patientId,
        monodrug: { in: uniqueMonodrugs },
        active: true,
      },
    });

    // Crear un Map para b√∫squeda r√°pida O(1) usando monodrug como clave
    const prescriptionMap = new Map<
      string,
      (typeof existingPrescriptions)[0]
    >();
    existingPrescriptions.forEach((prescription) => {
      prescriptionMap.set(prescription.monodrug, prescription);
    });

    // Procesar cada medicaci√≥n usando el Map para b√∫squedas eficientes
    for (const medication of medications) {
      // Buscar prescripci√≥n existente en el Map (O(1) lookup)
      const existingPrescription = prescriptionMap.get(medication.monodrug);

      if (existingPrescription) {
        // Si ya existe una prescripci√≥n activa, crear una nueva entrada en el historial
        await tx.pres_mod_history.create({
          data: {
            prescription_id: existingPrescription.id,
            physician_id: physicianId,
            medical_order_id: medicalOrderId || null,
            medical_event_id: medicalEventId || null,
            observations: medication.observations,
            dose: medication.dose,
            dose_units: medication.dose_units,
            frecuency: medication.frecuency,
            duration: medication.duration,
            duration_units: medication.duration_units,
          },
        });
      } else {
        // Si no existe, crear nueva prescripci√≥n y su primer entrada en el historial
        const newPrescription = await tx.prescription.create({
          data: {
            patient_id: patientId,
            monodrug: medication.monodrug,
            active: true,
            authorized: isAuthorized,
            tenant_id: tenantId,
            created_by_patient: false,
            is_tracking_active: false,
            reminder_enabled: true,
            time_of_day_slots: [],
          },
        });

        // Crear la primera entrada en el historial
        await tx.pres_mod_history.create({
          data: {
            prescription_id: newPrescription.id,
            physician_id: physicianId,
            medical_order_id: medicalOrderId || null,
            medical_event_id: medicalEventId || null,
            observations: medication.observations,
            dose: medication.dose,
            dose_units: medication.dose_units,
            frecuency: medication.frecuency,
            duration: medication.duration,
            duration_units: medication.duration_units,
          },
        });

        // Agregar la nueva prescripci√≥n al Map para futuras referencias en el mismo lote
        prescriptionMap.set(medication.monodrug, newPrescription);
      }
    }
  }
}

================
File: src/medical-scheduling/modules/settings/modules/patient-reminder-settings/patient-reminder-settings.module.ts
================
import { Module } from '@nestjs/common';
import { PatientReminderSettingsService } from './patient-reminder-settings.service';
import { PrismaService } from '../../../../../prisma/prisma.service';

@Module({
  providers: [PatientReminderSettingsService, PrismaService],
  exports: [PatientReminderSettingsService],
})
export class PatientReminderSettingsModule {}

================
File: src/medical-scheduling/modules/settings/modules/patient-reminder-settings/patient-reminder-settings.service.ts
================
import { Injectable, NotFoundException } from '@nestjs/common';
import { PrismaService } from '../../../../../prisma/prisma.service';

@Injectable()
export class PatientReminderSettingsService {
  constructor(private readonly prisma: PrismaService) {}

  /**
   * Obtiene las configuraciones de recordatorios de medicaci√≥n de un paciente
   */
  async getSettings(patientId: string) {
    // Primero verificamos si el usuario existe
    const user = await this.prisma.user.findUnique({
      where: { id: patientId },
      include: {
        patient: true,
      },
    });

    if (!user) {
      throw new NotFoundException('User not found');
    }

    // Si no tiene registro de paciente, lo creamos con valores por defecto
    if (!user.patient) {
      const newPatient = await this.prisma.patient.create({
        data: {
          user_id: patientId,
          medication_reminder_interval_minutes: 30,
          medication_reminder_max_retries: 3,
        },
      });

      return {
        patient_id: patientId,
        medication_reminder_interval_minutes:
          newPatient.medication_reminder_interval_minutes,
        medication_reminder_max_retries:
          newPatient.medication_reminder_max_retries,
        updated_at: newPatient.updated_at,
      };
    }

    return {
      patient_id: patientId,
      medication_reminder_interval_minutes:
        user.patient.medication_reminder_interval_minutes || 30,
      medication_reminder_max_retries:
        user.patient.medication_reminder_max_retries || 3,
      updated_at: user.patient.updated_at,
    };
  }

  /**
   * Actualiza las configuraciones de recordatorios de medicaci√≥n de un paciente
   */
  async updateSettings(
    patientId: string,
    updateData: {
      medication_reminder_interval_minutes?: number;
      medication_reminder_max_retries?: number;
    },
  ) {
    // Verificar que el usuario existe
    const user = await this.prisma.user.findUnique({
      where: { id: patientId },
      include: {
        patient: true,
      },
    });

    if (!user) {
      throw new NotFoundException('User not found');
    }

    // Validaciones de datos
    if (updateData.medication_reminder_interval_minutes !== undefined) {
      if (
        updateData.medication_reminder_interval_minutes < 1 ||
        updateData.medication_reminder_interval_minutes > 1440
      ) {
        throw new Error(
          'Reminder interval must be between 1 and 1440 minutes (24 hours)',
        );
      }
    }

    if (updateData.medication_reminder_max_retries !== undefined) {
      if (
        updateData.medication_reminder_max_retries < 0 ||
        updateData.medication_reminder_max_retries > 10
      ) {
        throw new Error('Max retries must be between 0 and 10');
      }
    }

    let updatedPatient;

    // Si no existe el registro de paciente, lo creamos
    if (!user.patient) {
      updatedPatient = await this.prisma.patient.create({
        data: {
          user_id: patientId,
          medication_reminder_interval_minutes:
            updateData.medication_reminder_interval_minutes || 30,
          medication_reminder_max_retries:
            updateData.medication_reminder_max_retries || 3,
        },
      });
    } else {
      // Si existe, lo actualizamos
      updatedPatient = await this.prisma.patient.update({
        where: { user_id: patientId },
        data: {
          medication_reminder_interval_minutes:
            updateData.medication_reminder_interval_minutes,
          medication_reminder_max_retries:
            updateData.medication_reminder_max_retries,
        },
      });
    }

    return {
      patient_id: patientId,
      medication_reminder_interval_minutes:
        updatedPatient.medication_reminder_interval_minutes,
      medication_reminder_max_retries:
        updatedPatient.medication_reminder_max_retries,
      updated_at: updatedPatient.updated_at,
      message: 'Reminder settings updated successfully',
    };
  }

  /**
   * Restablece las configuraciones a los valores por defecto
   */
  async resetToDefaults(patientId: string) {
    return this.updateSettings(patientId, {
      medication_reminder_interval_minutes: 30,
      medication_reminder_max_retries: 3,
    });
  }

  /**
   * Verifica si un paciente tiene configuraciones personalizadas
   */
  async hasCustomSettings(patientId: string): Promise<boolean> {
    const settings = await this.getSettings(patientId);

    return (
      settings.medication_reminder_interval_minutes !== 30 ||
      settings.medication_reminder_max_retries !== 3
    );
  }
}

================
File: src/medical-scheduling/modules/settings/settings.controller.ts
================
import {
  Controller,
  Get,
  Patch,
  Param,
  Body,
  UseGuards,
  Request,
} from '@nestjs/common';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiParam,
  ApiBody,
  ApiHeader,
} from '@nestjs/swagger';
import { SettingsService } from './settings.service';
import { UpdatePatientReminderSettingsDto } from '../prescription/dto/medication-tracking.dto';
import { TenantAccessGuard } from '../../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../../auth/guards/permission.guard';
import { RequirePermission } from '../../../auth/decorators/require-permission.decorator';
import { Permission } from '../../../auth/permissions/permission.enum';

@ApiTags('Settings')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant_id',
  description: 'Tenant ID',
  required: true,
})
@Controller('settings')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class SettingsController {
  constructor(private readonly settingsService: SettingsService) {}

  @Get('patient/:patient_id/reminder-settings')
  @ApiOperation({
    summary: 'Get patient reminder settings',
    description: 'Retrieve medication reminder settings for a specific patient',
  })
  @ApiParam({
    name: 'patient_id',
    type: 'string',
    format: 'uuid',
    description: 'Patient unique identifier',
  })
  @ApiResponse({
    status: 200,
    description: 'Patient reminder settings retrieved successfully',
    schema: {
      type: 'object',
      properties: {
        patient_id: { type: 'string', format: 'uuid' },
        medication_reminder_interval_minutes: { type: 'number', default: 30 },
        medication_reminder_max_retries: { type: 'number', default: 3 },
        updated_at: { type: 'string', format: 'date-time' },
      },
    },
  })
  @ApiResponse({ status: 404, description: 'Patient not found' })
  @RequirePermission(Permission.VIEW_PATIENT_SETTINGS)
  async getPatientReminderSettings(@Param('patient_id') patientId: string) {
    return this.settingsService.getPatientReminderSettings(patientId);
  }

  @Patch('patient/:patient_id/reminder-settings')
  @ApiOperation({
    summary: 'Update patient reminder settings',
    description: 'Update medication reminder settings for a specific patient',
  })
  @ApiParam({
    name: 'patient_id',
    type: 'string',
    format: 'uuid',
    description: 'Patient unique identifier',
  })
  @ApiBody({ type: UpdatePatientReminderSettingsDto })
  @ApiResponse({
    status: 200,
    description: 'Patient reminder settings updated successfully',
    schema: {
      type: 'object',
      properties: {
        patient_id: { type: 'string', format: 'uuid' },
        medication_reminder_interval_minutes: { type: 'number' },
        medication_reminder_max_retries: { type: 'number' },
        updated_at: { type: 'string', format: 'date-time' },
        message: { type: 'string' },
      },
    },
  })
  @ApiResponse({ status: 400, description: 'Invalid input data' })
  @ApiResponse({ status: 404, description: 'Patient not found' })
  @RequirePermission(Permission.UPDATE_PATIENT_SETTINGS)
  async updatePatientReminderSettings(
    @Param('patient_id') patientId: string,
    @Body() updateDto: UpdatePatientReminderSettingsDto,
  ) {
    return this.settingsService.updatePatientReminderSettings(
      patientId,
      updateDto,
    );
  }

  @Get('patient/:patient_id/all')
  @ApiOperation({
    summary: 'Get all patient settings',
    description:
      'Retrieve all settings for a specific patient (reminder, notification, etc.)',
  })
  @ApiParam({
    name: 'patient_id',
    type: 'string',
    format: 'uuid',
    description: 'Patient unique identifier',
  })
  @ApiResponse({
    status: 200,
    description: 'All patient settings retrieved successfully',
    schema: {
      type: 'object',
      properties: {
        reminder_settings: {
          type: 'object',
          properties: {
            patient_id: { type: 'string', format: 'uuid' },
            medication_reminder_interval_minutes: { type: 'number' },
            medication_reminder_max_retries: { type: 'number' },
            updated_at: { type: 'string', format: 'date-time' },
          },
        },
        // Espacio para futuras configuraciones
      },
    },
  })
  @ApiResponse({ status: 404, description: 'Patient not found' })
  @RequirePermission(Permission.VIEW_PATIENT_SETTINGS)
  async getAllPatientSettings(@Param('patient_id') patientId: string) {
    return this.settingsService.getAllPatientSettings(patientId);
  }

  // Endpoint para que un paciente actualice sus propias configuraciones
  @Patch('my-reminder-settings')
  @ApiOperation({
    summary: 'Update own reminder settings',
    description:
      'Allow authenticated patient to update their own reminder settings',
  })
  @ApiBody({ type: UpdatePatientReminderSettingsDto })
  @ApiResponse({
    status: 200,
    description: 'Own reminder settings updated successfully',
  })
  @ApiResponse({ status: 400, description: 'Invalid input data' })
  @RequirePermission(Permission.UPDATE_OWN_SETTINGS)
  async updateOwnReminderSettings(
    @Request() req,
    @Body() updateDto: UpdatePatientReminderSettingsDto,
  ) {
    const userId = req.user.id;
    return this.settingsService.updatePatientReminderSettings(
      userId,
      updateDto,
    );
  }

  @Get('my-settings')
  @ApiOperation({
    summary: 'Get own settings',
    description: 'Allow authenticated patient to retrieve their own settings',
  })
  @ApiResponse({
    status: 200,
    description: 'Own settings retrieved successfully',
  })
  @RequirePermission(Permission.VIEW_OWN_SETTINGS)
  async getOwnSettings(@Request() req) {
    const userId = req.user.id;
    return this.settingsService.getAllPatientSettings(userId);
  }
}

================
File: src/medical-scheduling/modules/settings/settings.module.ts
================
import { Module } from '@nestjs/common';
import { SettingsController } from './settings.controller';
import { SettingsService } from './settings.service';
import { PrismaService } from '../../../prisma/prisma.service';
import { PatientReminderSettingsModule } from './modules/patient-reminder-settings/patient-reminder-settings.module';
import { GuardAuthModule } from '../../../auth/guard-auth.module';

@Module({
  imports: [PatientReminderSettingsModule, GuardAuthModule],
  controllers: [SettingsController],
  providers: [SettingsService, PrismaService],
  exports: [SettingsService, PatientReminderSettingsModule],
})
export class SettingsModule {}

================
File: src/medical-scheduling/modules/settings/settings.service.ts
================
import { Injectable } from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';
import { PatientReminderSettingsService } from './modules/patient-reminder-settings/patient-reminder-settings.service';

@Injectable()
export class SettingsService {
  constructor(
    private readonly prisma: PrismaService,
    private readonly patientReminderSettingsService: PatientReminderSettingsService,
  ) {}

  // Delegaci√≥n a subm√≥dulos
  async getPatientReminderSettings(patientId: string) {
    return this.patientReminderSettingsService.getSettings(patientId);
  }

  async updatePatientReminderSettings(
    patientId: string,
    updateData: {
      medication_reminder_interval_minutes?: number;
      medication_reminder_max_retries?: number;
    },
  ) {
    return this.patientReminderSettingsService.updateSettings(
      patientId,
      updateData,
    );
  }

  // M√©todo para obtener todas las configuraciones del paciente (extensible para futuras configuraciones)
  async getAllPatientSettings(patientId: string) {
    const reminderSettings = await this.getPatientReminderSettings(patientId);

    return {
      reminder_settings: reminderSettings,
      // Aqu√≠ se pueden agregar m√°s configuraciones en el futuro
      // notification_settings: await this.getNotificationSettings(patientId),
      // privacy_settings: await this.getPrivacySettings(patientId),
    };
  }
}

================
File: src/medical-scheduling/modules/vital-signs/dto/create-vital-sign.dto.ts
================
import {
  IsNotEmpty,
  IsUUID,
  IsNumber,
  IsOptional,
  IsArray,
  ValidateNested,
  ArrayNotEmpty,
} from 'class-validator';
import { Type } from 'class-transformer';
import { ApiProperty } from '@nestjs/swagger';

export class VitalSignDto {
  @ApiProperty({
    description:
      'Identifier of the vital sign type (e.g., heart rate, temperature)',
    example: 1,
  })
  @IsNumber()
  @IsNotEmpty({ message: 'El ID del signo vital es obligatorio' })
  vital_sign_id: number;

  @ApiProperty({
    description: 'Measured value of the vital sign',
    example: 98.6,
  })
  @IsNumber()
  @IsNotEmpty({ message: 'La medida es obligatoria' })
  measure: number;
}

export class CreateVitalSignDto {
  @ApiProperty({
    description: "Patient's unique identifier",
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del paciente debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del paciente es obligatorio' })
  patient_id: string;

  @ApiProperty({
    description:
      "Tenant's unique identifier (optional, taken from token if not provided)",
    example: 'tid_12345',
    format: 'uuid',
    required: false,
  })
  @IsOptional()
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  tenant_id?: string;

  @ApiProperty({
    description: 'Optional medical event ID associated with these vital signs',
    example: 'abcdef01-2345-6789-abcd-ef0123456789',
    format: 'uuid',
    required: false,
  })
  @IsOptional()
  @IsUUID('4', { message: 'El ID del evento m√©dico debe ser un UUID v√°lido' })
  medical_event_id?: string;

  @ApiProperty({
    description:
      'Optional self-evaluation event ID associated with these vital signs',
    example: 'fedcba98-7654-3210-fedc-ba9876543210',
    format: 'uuid',
    required: false,
  })
  @IsOptional()
  @IsUUID('4', {
    message: 'El ID del evento de autoevaluaci√≥n debe ser un UUID v√°lido',
  })
  self_evaluation_event_id?: string;

  @ApiProperty({
    description: 'Array of vital signs to be recorded',
    type: () => [VitalSignDto],
  })
  @IsArray()
  @ArrayNotEmpty({ message: 'Debe proporcionar al menos un signo vital' })
  @ValidateNested({ each: true })
  @Type(() => VitalSignDto)
  vital_signs: VitalSignDto[];
}

export class CreateMultipleVitalSignsDto {
  @ApiProperty({
    description:
      'Array of vital sign creation requests for multiple patients or instances',
    type: () => [CreateVitalSignDto],
  })
  @IsArray()
  @ArrayNotEmpty({ message: 'Debe proporcionar al menos un signo vital' })
  @ValidateNested({ each: true })
  @Type(() => CreateVitalSignDto)
  vital_signs: CreateVitalSignDto[];
}

================
File: src/medical-scheduling/modules/vital-signs/dto/find-vital-signs.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsUUID, IsNotEmpty } from 'class-validator';

export class FindVitalSignsByPatientDto {
  @ApiProperty({
    description: "Patient's unique identifier",
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del paciente debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del paciente es obligatorio' })
  patient_id: string;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_12345',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del inquilino es obligatorio' })
  tenant_id: string;
}

export class FindVitalSignsByEventDto {
  @ApiProperty({
    description: 'Medical event unique identifier',
    example: 'abcdef01-2345-6789-abcd-ef0123456789',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del evento m√©dico debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del evento m√©dico es obligatorio' })
  medical_event_id: string;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_12345',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del inquilino es obligatorio' })
  tenant_id: string;
}

export class FindVitalSignsBySelfEvaluationDto {
  @ApiProperty({
    description: 'Self-evaluation event unique identifier',
    example: 'fedcba98-7654-3210-fedc-ba9876543210',
    format: 'uuid',
  })
  @IsUUID('4', {
    message: 'El ID del evento de autoevaluaci√≥n debe ser un UUID v√°lido',
  })
  @IsNotEmpty({ message: 'El ID del evento de autoevaluaci√≥n es obligatorio' })
  self_evaluation_event_id: string;

  @ApiProperty({
    description: "Tenant's unique identifier",
    example: 'tid_12345',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del inquilino es obligatorio' })
  tenant_id: string;
}

================
File: src/medical-scheduling/modules/vital-signs/dto/update-vital-sign.dto.ts
================
import { PartialType } from '@nestjs/mapped-types';
import { CreateVitalSignDto } from './create-vital-sign.dto';

export class UpdateVitalSignDto extends PartialType(CreateVitalSignDto) {}

================
File: src/medical-scheduling/modules/vital-signs/vital-signs.controller.ts
================
import {
  Controller,
  Get,
  Post,
  Body,
  Param,
  Delete,
  UseGuards,
  BadRequestException,
} from '@nestjs/common';
import { VitalSignsService } from './vital-signs.service';
import { CreateVitalSignDto } from './dto/create-vital-sign.dto';
import { FindVitalSignsByPatientDto } from './dto/find-vital-signs.dto';
import { RequirePermission } from '../../../auth/decorators/require-permission.decorator';
import { Permission } from '../../../auth/permissions/permission.enum';
import { PermissionGuard } from '../../../auth/guards/permission.guard';
import { TenantAccessGuard } from '../../../auth/guards/tenant-access.guard';
import { GetTenant } from '../../../auth/decorators/get-tenant.decorator';
import { GetUser } from '../../../auth/decorators/get-user.decorator';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiHeader,
  ApiParam,
} from '@nestjs/swagger';

@ApiTags('Vital Signs')
@Controller('vital-signs')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class VitalSignsController {
  constructor(private readonly vitalSignsService: VitalSignsService) {}

  @Post()
  @ApiOperation({ summary: 'Create new vital sign records' })
  @ApiResponse({
    status: 201,
    description: 'Vital signs recorded successfully.',
    type: CreateVitalSignDto, // Assuming this DTO represents the response as well
  })
  @ApiResponse({ status: 400, description: 'Invalid input.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiBearerAuth('access-token')
  @ApiHeader({
    name: 'X-Tenant-ID',
    description: 'Tenant ID',
    required: false,
  })
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS) // Should this be CREATE_VITAL_SIGNS or similar?
  async create(
    @Body() createVitalSignDto: CreateVitalSignDto,
    @GetTenant() tenant,
  ) {
    // Asignar el tenant_id desde el request si no est√° presente en el DTO
    if (!createVitalSignDto.tenant_id) {
      createVitalSignDto.tenant_id = tenant.id;
    } else if (createVitalSignDto.tenant_id !== tenant.id) {
      throw new BadRequestException(
        'El tenant_id no coincide con el tenant del usuario',
      );
    }

    return this.vitalSignsService.create(createVitalSignDto);
  }

  @Get('patient/:patientId')
  @ApiOperation({ summary: 'Get all vital signs for a patient' })
  @ApiResponse({
    status: 200,
    description: 'Successfully retrieved vital signs.',
    isArray: true,
    // type: VitalSignRecordDto, // Define a DTO for the response structure if different from CreateVitalSignDto
  })
  @ApiResponse({ status: 400, description: 'Invalid patient ID.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiResponse({ status: 404, description: 'Patient not found.' })
  @ApiBearerAuth('access-token')
  @ApiHeader({
    name: 'X-Tenant-ID',
    description: 'Tenant ID',
    required: false,
  })
  @ApiParam({
    name: 'patientId',
    type: 'string',
    format: 'uuid',
    description: "Patient's unique identifier",
  })
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS)
  async findAllByPatient(
    @Param('patientId') patientId: string,
    @GetTenant() tenant,
  ) {
    const findDto: FindVitalSignsByPatientDto = {
      patient_id: patientId,
      tenant_id: tenant.id,
    };

    return this.vitalSignsService.findAllByPatient(findDto);
  }

  @Delete(':id')
  @ApiOperation({ summary: 'Delete a vital sign record by its ID' })
  @ApiResponse({
    status: 200,
    description: 'Vital sign record deleted successfully.',
  })
  @ApiResponse({ status: 400, description: 'Invalid ID supplied.' })
  @ApiResponse({ status: 401, description: 'Unauthorized.' })
  @ApiResponse({ status: 403, description: 'Forbidden resource.' })
  @ApiResponse({ status: 404, description: 'Vital sign record not found.' })
  @ApiBearerAuth('access-token')
  @ApiHeader({
    name: 'X-Tenant-ID',
    description: 'Tenant ID',
    required: false,
  })
  @ApiParam({
    name: 'id',
    type: 'string',
    format: 'uuid', // Assuming vital sign record ID is a UUID, adjust if not
    description: 'Vital sign record unique identifier',
  })
  @RequirePermission(Permission.EDIT_PATIENT_INFO) // Should this be DELETE_VITAL_SIGNS or similar?
  async remove(@Param('id') id: string, @GetUser() user, @GetTenant() tenant) {
    return this.vitalSignsService.remove(id, user.id, tenant.id);
  }
}

================
File: src/medical-scheduling/modules/vital-signs/vital-signs.module.ts
================
import { Module } from '@nestjs/common';
import { VitalSignsService } from './vital-signs.service';
import { VitalSignsController } from './vital-signs.controller';
import { PrismaService } from '../../../prisma/prisma.service';
import { GuardAuthModule } from '../../../auth/guard-auth.module';

@Module({
  imports: [GuardAuthModule],
  controllers: [VitalSignsController],
  providers: [VitalSignsService, PrismaService],
  exports: [VitalSignsService],
})
export class VitalSignsModule {}

================
File: src/medical-scheduling/modules/vital-signs/vital-signs.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
  ForbiddenException,
} from '@nestjs/common';
import { PrismaService } from '../../../prisma/prisma.service';
import { CreateVitalSignDto, VitalSignDto } from './dto/create-vital-sign.dto';
import { FindVitalSignsByPatientDto } from './dto/find-vital-signs.dto';

@Injectable()
export class VitalSignsService {
  constructor(private prisma: PrismaService) {}

  async create(createVitalSignDto: CreateVitalSignDto) {
    const {
      patient_id,
      tenant_id,
      medical_event_id,
      self_evaluation_event_id,
      vital_signs,
    } = createVitalSignDto;

    // Validar que se proporciona solo un tipo de evento (medical_event o self_evaluation_event)
    if (medical_event_id && self_evaluation_event_id) {
      throw new BadRequestException(
        'No puede proporcionar ID de evento m√©dico y de autoevaluaci√≥n simult√°neamente',
      );
    }

    if (!medical_event_id && !self_evaluation_event_id) {
      throw new BadRequestException(
        'Debe proporcionar un ID de evento m√©dico o de autoevaluaci√≥n',
      );
    }

    try {
      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patient_id },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      // Si es un evento m√©dico, verificar que el paciente y el tenant coincidan
      if (medical_event_id) {
        const medicalEvent = await this.prisma.medical_event.findUnique({
          where: { id: medical_event_id },
          include: {
            patient: true,
            physician: true,
          },
        });

        if (!medicalEvent) {
          throw new NotFoundException('Evento m√©dico no encontrado');
        }

        // Verificar que el paciente del evento m√©dico coincide con el paciente proporcionado
        if (medicalEvent.patient_id !== patient_id) {
          throw new BadRequestException(
            'El paciente no coincide con el evento m√©dico',
          );
        }

        // Verificar que el tenant del evento m√©dico coincide con el tenant proporcionado
        if (medicalEvent.tenant_id !== tenant_id) {
          throw new BadRequestException(
            'El tenant no coincide con el evento m√©dico',
          );
        }
      }

      // Si es un evento de autoevaluaci√≥n, verificar que el paciente y el tenant coincidan
      if (self_evaluation_event_id) {
        const selfEvaluationEvent =
          await this.prisma.self_evaluation_event.findUnique({
            where: { id: self_evaluation_event_id },
          });

        if (!selfEvaluationEvent) {
          throw new NotFoundException('Evento de autoevaluaci√≥n no encontrado');
        }

        // Verificar que el paciente del evento de autoevaluaci√≥n coincide con el paciente proporcionado
        if (selfEvaluationEvent.patient_id !== patient_id) {
          throw new BadRequestException(
            'El paciente no coincide con el evento de autoevaluaci√≥n',
          );
        }

        // Verificar que el tenant del evento de autoevaluaci√≥n coincide con el tenant proporcionado
        // Solo validar si ambos tienen tenant_id (para signos vitales propios del paciente puede ser null)
        if (
          selfEvaluationEvent.tenant_id &&
          tenant_id &&
          selfEvaluationEvent.tenant_id !== tenant_id
        ) {
          throw new BadRequestException(
            'El tenant no coincide con el evento de autoevaluaci√≥n',
          );
        }
      }

      // Obtener los signos vitales existentes para este evento
      const existingVitalSigns = await this.prisma.vital_signs.findMany({
        where: {
          ...(medical_event_id && { medical_event_id }),
          ...(self_evaluation_event_id && { self_evaluation_event_id }),
          deleted: false,
        },
      });

      // Identificar qu√© signos vitales deben crearse, actualizarse o eliminarse
      const vitalSignsToCreate: VitalSignDto[] = [];
      const vitalSignsToUpdate: { id: string; measure: number }[] = [];
      const vitalSignsToDelete: string[] = [];

      // ID de signos vitales proporcionados en la solicitud
      const providedVitalSignIds = vital_signs.map((vs) => vs.vital_sign_id);

      // Marcar signos vitales para actualizaci√≥n o eliminaci√≥n
      for (const existingVS of existingVitalSigns) {
        const matchingVS = vital_signs.find(
          (vs) => vs.vital_sign_id === existingVS.vital_sign_id,
        );

        if (matchingVS) {
          // Si la medida ha cambiado, actualizar
          if (matchingVS.measure !== existingVS.measure) {
            vitalSignsToUpdate.push({
              id: existingVS.id,
              measure: matchingVS.measure,
            });
          }
        } else {
          // Si el signo vital ya no est√° en la solicitud, eliminarlo (soft delete)
          vitalSignsToDelete.push(existingVS.id);
        }
      }

      // Identificar signos vitales nuevos
      for (const vs of vital_signs) {
        const exists = existingVitalSigns.some(
          (existingVS) => existingVS.vital_sign_id === vs.vital_sign_id,
        );

        if (!exists) {
          vitalSignsToCreate.push(vs);
        }
      }

      // Verificar que no hay signos vitales duplicados
      const uniqueVitalSignIds = new Set(providedVitalSignIds);
      if (uniqueVitalSignIds.size !== providedVitalSignIds.length) {
        throw new BadRequestException(
          'No se permiten signos vitales duplicados para un mismo evento',
        );
      }

      // Ejecutar las operaciones en una transacci√≥n
      return this.prisma.$transaction(async (tx) => {
        // Crear nuevos signos vitales
        const createdVitalSigns = [];
        for (const vs of vitalSignsToCreate) {
          const vitalSignData: any = {
            patient_id,
            ...(medical_event_id && { medical_event_id }),
            ...(self_evaluation_event_id && { self_evaluation_event_id }),
            vital_sign_id: vs.vital_sign_id,
            measure: vs.measure,
          };

          // Solo incluir tenant_id si est√° presente (para signos vitales propios del paciente puede ser undefined)
          if (tenant_id) {
            vitalSignData.tenant_id = tenant_id;
          }

          const newVitalSign = await tx.vital_signs.create({
            data: vitalSignData,
          });
          createdVitalSigns.push(newVitalSign);
        }

        // Actualizar signos vitales existentes
        const updatedVitalSigns = [];
        for (const vs of vitalSignsToUpdate) {
          const updatedVitalSign = await tx.vital_signs.update({
            where: { id: vs.id },
            data: { measure: vs.measure, updated_at: new Date() },
          });
          updatedVitalSigns.push(updatedVitalSign);
        }

        // Eliminar signos vitales que ya no se necesitan (soft delete)
        const deletedVitalSigns = [];
        for (const id of vitalSignsToDelete) {
          const deletedVitalSign = await tx.vital_signs.update({
            where: { id },
            data: { deleted: true, deleted_at: new Date() },
          });
          deletedVitalSigns.push(deletedVitalSign);
        }

        // Obtener todos los signos vitales actualizados
        const allVitalSigns = await tx.vital_signs.findMany({
          where: {
            ...(medical_event_id && { medical_event_id }),
            ...(self_evaluation_event_id && { self_evaluation_event_id }),
            deleted: false,
          },
          include: {
            vital_sign: true,
          },
        });

        return {
          created: createdVitalSigns.length,
          updated: updatedVitalSigns.length,
          deleted: deletedVitalSigns.length,
          vital_signs: allVitalSigns,
        };
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException ||
        error instanceof ForbiddenException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al crear/actualizar signos vitales: ${error.message}`,
      );
    }
  }

  /**
   * Encuentra todos los signos vitales agrupados por evento
   * @param findVitalSignsDto Datos para buscar los signos vitales
   */
  async findAllByPatient(findVitalSignsDto: FindVitalSignsByPatientDto) {
    try {
      const { patient_id, tenant_id } = findVitalSignsDto;

      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patient_id },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      // Obtener todos los eventos m√©dicos del paciente
      const medicalEvents = await this.prisma.medical_event.findMany({
        where: {
          patient_id: patient.patient.id,
          tenant_id,
          deleted: false,
        },
        select: {
          id: true,
          created_at: true,
          updated_at: true,
          physician: {
            select: {
              id: true,
              name: true,
              last_name: true,
            },
          },
          vital_signs: {
            where: { deleted: false },
            include: {
              vital_sign: true,
            },
          },
        },
      });

      // Obtener todos los eventos de autoevaluaci√≥n del paciente
      // NOTA: No filtramos por tenantId porque los eventos de autoevaluaci√≥n
      // pueden no tener tenant asociado cuando son signos vitales propios del paciente
      const selfEvaluationEvents =
        await this.prisma.self_evaluation_event.findMany({
          where: {
            patient_id,
          },
          select: {
            id: true,
            created_at: true,
            updated_at: true,
            vital_signs: {
              where: { deleted: false },
              include: {
                vital_sign: true,
              },
            },
          },
        });

      return {
        medical_events: medicalEvents,
        self_evaluation_events: selfEvaluationEvents,
      };
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener signos vitales: ${error.message}`,
      );
    }
  }

  /**
   * Elimina un signo vital (soft delete)
   * Solo puede ser eliminado por el m√©dico relacionado con el evento o un superadmin
   * @param id ID del signo vital
   * @param userId ID del usuario que realiza la eliminaci√≥n
   * @param tenantId ID del tenant
   */
  async remove(id: string, userId: string, tenantId: string) {
    try {
      // Obtener el signo vital
      const vitalSign = await this.prisma.vital_signs.findUnique({
        where: { id },
        include: {
          medical_event: {
            include: {
              physician: true,
            },
          },
        },
      });

      if (!vitalSign) {
        throw new NotFoundException('Signo vital no encontrado');
      }

      // Verificar que el tenant coincide
      if (vitalSign.tenant_id !== tenantId) {
        throw new ForbiddenException(
          'No tiene permisos para eliminar este signo vital',
        );
      }

      // Verificar que el usuario es el m√©dico relacionado con el evento m√©dico o un superadmin
      const user = await this.prisma.user.findUnique({
        where: { id: userId },
      });

      if (!user) {
        throw new NotFoundException('Usuario no encontrado');
      }

      const isSuperAdmin = user.is_superadmin;
      const isPhysician =
        vitalSign.medical_event &&
        vitalSign.medical_event.physician &&
        vitalSign.medical_event.physician.id === userId;

      if (!isSuperAdmin && !isPhysician) {
        throw new ForbiddenException(
          'No tiene permisos para eliminar este signo vital',
        );
      }

      // Eliminar el signo vital (soft delete)
      return this.prisma.vital_signs.update({
        where: { id },
        data: {
          deleted: true,
          deleted_at: new Date(),
        },
      });
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof ForbiddenException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al eliminar signo vital: ${error.message}`,
      );
    }
  }
}

================
File: src/mobile-functions/appointments/appointments.controller.ts
================
import {
  Controller,
  Get,
  Query,
  UseGuards,
  HttpStatus,
  BadRequestException,
  Request,
  Patch,
  Param,
  Body,
} from '@nestjs/common';
import { MobileAppointmentsService } from './appointments.service';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBearerAuth,
  ApiQuery,
  ApiParam,
  ApiBody,
} from '@nestjs/swagger';
import {
  NextAppointmentResponseDto,
  AllAppointmentsResponseDto,
} from './dto/mobile-appointments-response.dto';
import { CancelAppointmentDto } from './dto/cancel-appointment.dto';

@ApiTags('Mobile - Appointments')
@ApiBearerAuth('access-token')
@Controller('mobile/appointments')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class MobileAppointmentsController {
  constructor(
    private readonly mobileAppointmentsService: MobileAppointmentsService,
  ) {}

  @Get()
  @RequirePermission(Permission.VIEW_OWN_APPOINTMENTS)
  @ApiOperation({
    summary: 'Get patient appointments with multitenant support',
    description:
      'Gets appointments for the authenticated patient across all their associated organizations. Patient ID is extracted from JWT token automatically. Supports two modes: home view (next appointment only) or full view (all appointments grouped by status).',
  })
  @ApiQuery({
    name: 'home',
    required: false,
    type: Boolean,
    description:
      'If true, returns only the next pending appointment. If false or not specified, returns all appointments grouped by status.',
    example: true,
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Appointments retrieved successfully',
    content: {
      'application/json': {
        examples: {
          nextAppointment: {
            summary: 'Next appointment (home=true)',
            description:
              'Response when requesting only the next pending appointment',
            value: {
              next_appointment: {
                id: 'uuid-cita',
                start: '2024-01-15T10:00:00Z',
                status: 'pendiente',
                physician: {
                  id: 'uuid-medico',
                  name: 'Santiago',
                  last_name: 'P√©rez',
                  image: 'https://example.com/doctor.jpg',
                  specialty: 'Cardiolog√≠a',
                },
              },
              message: 'Pr√≥xima cita encontrada exitosamente',
            },
          },
          allAppointments: {
            summary: 'All appointments (home=false)',
            description:
              'Response when requesting all appointments grouped by status',
            value: {
              appointments: {
                pending: [
                  {
                    id: 'uuid-cita-1',
                    start: '2024-01-15T10:00:00Z',
                    status: 'pendiente',
                    physician: {
                      id: 'uuid-medico-1',
                      name: 'Santiago',
                      last_name: 'P√©rez',
                      image: 'https://example.com/doctor1.jpg',
                      specialty: 'Cardiolog√≠a',
                    },
                  },
                ],
                past: [
                  {
                    id: 'uuid-cita-2',
                    start: '2024-01-10T09:00:00Z',
                    status: 'atendida',
                    physician: {
                      id: 'uuid-medico-2',
                      name: 'Mar√≠a',
                      last_name: 'Gonz√°lez',
                      image: 'https://example.com/doctor2.jpg',
                      specialty: 'Neurolog√≠a',
                    },
                  },
                ],
                pending_count: 1,
                past_count: 1,
              },
              message: 'Citas obtenidas exitosamente',
            },
          },
          noAppointments: {
            summary: 'No appointments found',
            description: 'Response when patient has no appointments',
            value: {
              next_appointment: undefined,
              message: 'No se encontraron citas pendientes',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Bad Request - User is not a patient or invalid request',
    content: {
      'application/json': {
        examples: {
          notPatient: {
            summary: 'User is not a patient',
            value: {
              statusCode: 400,
              message: 'Esta funcionalidad es solo para pacientes',
              error: 'Bad Request',
            },
          },
          notAuthenticated: {
            summary: 'User not authenticated',
            value: {
              statusCode: 400,
              message: 'Usuario no autenticado',
              error: 'Bad Request',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'Unauthorized - Invalid or missing JWT token',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions to view appointments',
  })
  async getAppointments(
    @Query('home') home?: string,
    @Request() req?: any,
  ): Promise<NextAppointmentResponseDto | AllAppointmentsResponseDto> {
    try {
      // Verificar que el usuario est√© autenticado
      if (!req.user || !req.user.id) {
        throw new BadRequestException('Usuario no autenticado');
      }

      // Verificar que sea un paciente
      if (req.user.role !== 'patient') {
        throw new BadRequestException(
          'Esta funcionalidad es solo para pacientes',
        );
      }

      const patientId = req.user.id;
      const userTenants = req.userTenants; // Tenants del JWT

      // Determinar si se solicita solo la pr√≥xima cita o todas
      const isHomeRequest = home === 'true';

      if (isHomeRequest) {
        // Obtener solo la pr√≥xima cita pendiente
        return await this.mobileAppointmentsService.getNextAppointment(
          patientId,
          userTenants,
        );
      } else {
        // Obtener todas las citas agrupadas
        return await this.mobileAppointmentsService.getAllAppointments(
          patientId,
          userTenants,
        );
      }
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error.status === HttpStatus.NOT_FOUND
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener los turnos: ${error.message}`,
      );
    }
  }

  @Patch(':appointment_id/cancel')
  @RequirePermission(Permission.VIEW_OWN_APPOINTMENTS)
  @ApiOperation({
    summary: 'Cancel patient appointment',
    description:
      'Allows an authenticated patient to cancel their own appointment. Only pending and future appointments can be cancelled. Patient ID is extracted from JWT token automatically.',
  })
  @ApiParam({
    name: 'appointment_id',
    description: 'ID of the appointment to cancel',
    type: String,
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  @ApiBody({
    type: CancelAppointmentDto,
    examples: {
      withReason: {
        summary: 'Cancel with reason',
        description: 'Cancelling appointment with a specific reason',
        value: {
          reason: 'No puedo asistir por motivos personales',
        },
      },
      withoutReason: {
        summary: 'Cancel without reason',
        description: 'Cancelling appointment without specifying a reason',
        value: {},
      },
      detailedReason: {
        summary: 'Cancel with detailed reason',
        description: 'Cancelling with a more detailed explanation',
        value: {
          reason:
            'Tengo una emergencia familiar y debo viajar fuera de la ciudad',
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Appointment cancelled successfully',
    content: {
      'application/json': {
        examples: {
          withReason: {
            summary: 'Cancelled with reason',
            value: {
              id: 'uuid-cita',
              status: 'cancelada',
              start: '2024-01-15T10:00:00Z',
              physician: {
                name: 'Santiago',
                last_name: 'P√©rez',
              },
              message: 'Cita cancelada exitosamente',
              cancelled_reason: 'No puedo asistir por motivos personales',
            },
          },
          withoutReason: {
            summary: 'Cancelled without reason',
            value: {
              id: 'uuid-cita',
              status: 'cancelada',
              start: '2024-01-15T10:00:00Z',
              physician: {
                name: 'Santiago',
                last_name: 'P√©rez',
              },
              message: 'Cita cancelada exitosamente',
              cancelled_reason: undefined,
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Bad Request - Various validation errors',
    content: {
      'application/json': {
        examples: {
          notPatient: {
            summary: 'User is not a patient',
            value: {
              statusCode: 400,
              message: 'Esta funcionalidad es solo para pacientes',
              error: 'Bad Request',
            },
          },
          notPending: {
            summary: 'Appointment is not pending',
            value: {
              statusCode: 400,
              message: 'Solo se pueden cancelar citas pendientes',
              error: 'Bad Request',
            },
          },
          pastAppointment: {
            summary: 'Appointment is in the past',
            value: {
              statusCode: 400,
              message: 'No se pueden cancelar citas pasadas',
              error: 'Bad Request',
            },
          },
          invalidData: {
            summary: 'Invalid input data',
            value: {
              statusCode: 400,
              message: ['La raz√≥n no puede exceder 500 caracteres'],
              error: 'Bad Request',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'Unauthorized - Invalid or missing JWT token',
  })
  @ApiResponse({
    status: HttpStatus.FORBIDDEN,
    description: 'Forbidden - Insufficient permissions to cancel appointments',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description:
      'Not Found - Appointment not found or no permission to cancel it',
    content: {
      'application/json': {
        example: {
          statusCode: 404,
          message: 'Cita no encontrada o no tienes permisos para cancelarla',
          error: 'Not Found',
        },
      },
    },
  })
  async cancelAppointment(
    @Param('appointment_id') appointmentId: string,
    @Body() cancelDto: CancelAppointmentDto,
    @Request() req?: any,
  ) {
    try {
      // Verificar que el usuario est√© autenticado
      if (!req.user || !req.user.id) {
        throw new BadRequestException('Usuario no autenticado');
      }

      // Verificar que sea un paciente
      if (req.user.role !== 'patient') {
        throw new BadRequestException(
          'Esta funcionalidad es solo para pacientes',
        );
      }

      const patientId = req.user.id;
      const userTenants = req.userTenants; // Tenants del JWT

      return await this.mobileAppointmentsService.cancelAppointment(
        appointmentId,
        patientId,
        cancelDto,
        userTenants,
      );
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error.status === HttpStatus.NOT_FOUND
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al cancelar la cita: ${error.message}`,
      );
    }
  }
}

================
File: src/mobile-functions/appointments/appointments.module.ts
================
import { Module } from '@nestjs/common';
import { MobileAppointmentsController } from './appointments.controller';
import { MobileAppointmentsService } from './appointments.service';
import { PrismaModule } from '../../prisma/prisma.module';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [PrismaModule, GuardAuthModule],
  controllers: [MobileAppointmentsController],
  providers: [MobileAppointmentsService],
  exports: [MobileAppointmentsService],
})
export class MobileAppointmentsModule {}

================
File: src/mobile-functions/appointments/appointments.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import {
  NextAppointmentResponseDto,
  AllAppointmentsResponseDto,
  AppointmentDto,
  GroupedAppointmentsDto,
} from './dto/mobile-appointments-response.dto';
import { CancelAppointmentDto } from './dto/cancel-appointment.dto';

@Injectable()
export class MobileAppointmentsService {
  constructor(private prisma: PrismaService) {}

  /**
   * Obtiene los tenant IDs del paciente de forma optimizada
   */
  private async getPatientTenantIds(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<string[]> {
    // Si los tenants vienen del JWT, usarlos directamente
    if (userTenants && userTenants.length > 0) {
      return userTenants.map((tenant) => tenant.id);
    }

    // Sino, buscar en la DB con el patient_id directamente
    const patientTenants = await this.prisma.patient_tenant.findMany({
      where: {
        patient: {
          user_id: patientId,
        },
        deleted: false,
      },
      select: { tenant_id: true },
    });

    return patientTenants.map((pt) => pt.tenant_id);
  }

  /**
   * Obtiene el pr√≥ximo turno pendiente del paciente seg√∫n sus tenants asociados
   */
  async getNextAppointment(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<NextAppointmentResponseDto> {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      if (tenantIds.length === 0) {
        return {
          next_appointment: undefined,
          message: 'No se encontraron organizaciones asociadas al paciente',
        };
      }

      // Buscar el pr√≥ximo turno pendiente
      const now = new Date();
      const nextAppointment = await this.prisma.appointment.findFirst({
        where: {
          patient_id: patientId,
          tenant_id: { in: tenantIds },
          status: 'pendiente',
          start: { gte: now },
          deleted: false,
        },
        orderBy: { start: 'asc' },
        select: {
          id: true,
          start: true,
          status: true,
          physician: {
            select: {
              id: true,
              name: true,
              last_name: true,
              image: true,
            },
          },
        },
      });

      if (!nextAppointment) {
        return {
          next_appointment: undefined,
          message: 'No se encontraron citas pendientes',
        };
      }

      // Obtener especialidad del m√©dico en una consulta optimizada con los datos preexistentes
      const physicianInfo = await this.prisma.physician.findUnique({
        where: { user_id: nextAppointment.physician.id },
        select: {
          physician_speciality: {
            select: {
              speciality: {
                select: {
                  name: true,
                },
              },
            },
            take: 1,
          },
        },
      });

      const specialty =
        physicianInfo?.physician_speciality?.[0]?.speciality?.name ||
        'Medicina General';

      const formattedAppointment = {
        id: nextAppointment.id,
        start: nextAppointment.start,
        status: nextAppointment.status,
        physician: {
          id: nextAppointment.physician.id,
          name: nextAppointment.physician.name,
          last_name: nextAppointment.physician.last_name,
          image: nextAppointment.physician.image,
          specialty: specialty,
        },
      };

      return {
        next_appointment: formattedAppointment,
        message: 'Pr√≥xima cita encontrada exitosamente',
      };
    } catch (error) {
      throw new BadRequestException(
        `Error al obtener el pr√≥ximo turno: ${error.message}`,
      );
    }
  }

  /**
   * Obtiene todos los turnos del paciente agrupados entre pendientes y pasados
   */
  async getAllAppointments(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<AllAppointmentsResponseDto> {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      if (tenantIds.length === 0) {
        const emptyResponse: GroupedAppointmentsDto = {
          pending: [],
          past: [],
          pending_count: 0,
          past_count: 0,
        };
        return {
          appointments: emptyResponse,
          message: 'No se encontraron organizaciones asociadas al paciente',
        };
      }

      // Obtener todas las citas del paciente
      const allAppointments = await this.prisma.appointment.findMany({
        where: {
          patient_id: patientId,
          tenant_id: { in: tenantIds },
          deleted: false,
        },
        orderBy: { start: 'desc' },
        select: {
          id: true,
          start: true,
          status: true,
          physician: {
            select: {
              id: true,
              name: true,
              last_name: true,
              image: true,
            },
          },
        },
      });

      // Obtener especialidades de m√©dicos √∫nicos en batch para optimizar
      const uniquePhysicianIds = [
        ...new Set(allAppointments.map((apt) => apt.physician.id)),
      ];
      const physiciansSpecialties = await this.prisma.physician.findMany({
        where: {
          user_id: { in: uniquePhysicianIds },
        },
        select: {
          user_id: true,
          physician_speciality: {
            select: {
              speciality: {
                select: {
                  name: true,
                },
              },
            },
            take: 1,
          },
        },
      });

      // Crear mapa de especialidades
      const specialtyMap = new Map();
      physiciansSpecialties.forEach((physician) => {
        const specialty =
          physician.physician_speciality?.[0]?.speciality?.name ||
          'Medicina General';
        specialtyMap.set(physician.user_id, specialty);
      });

      // Agrupar las citas entre pendientes y pasadas
      const now = new Date();
      const pending: AppointmentDto[] = [];
      const past: AppointmentDto[] = [];

      allAppointments.forEach((appointment) => {
        const specialty =
          specialtyMap.get(appointment.physician.id) || 'Medicina General';

        const formattedAppointment: AppointmentDto = {
          id: appointment.id,
          start: appointment.start,
          status: appointment.status,
          physician: {
            id: appointment.physician.id,
            name: appointment.physician.name,
            last_name: appointment.physician.last_name,
            image: appointment.physician.image,
            specialty: specialty,
          },
        };

        if (appointment.status === 'pendiente' && appointment.start >= now) {
          pending.push(formattedAppointment);
        } else {
          past.push(formattedAppointment);
        }
      });

      // Ordenar: pendientes por fecha ascendente, pasadas por fecha descendente
      pending.sort(
        (a, b) => new Date(a.start).getTime() - new Date(b.start).getTime(),
      );
      past.sort(
        (a, b) => new Date(b.start).getTime() - new Date(a.start).getTime(),
      );

      const groupedAppointments: GroupedAppointmentsDto = {
        pending,
        past,
        pending_count: pending.length,
        past_count: past.length,
      };

      return {
        appointments: groupedAppointments,
        message: 'Citas obtenidas exitosamente',
      };
    } catch (error) {
      throw new BadRequestException(
        `Error al obtener las citas: ${error.message}`,
      );
    }
  }

  /**
   * Cancela una cita del paciente
   */
  async cancelAppointment(
    appointmentId: string,
    patientId: string,
    cancelDto: CancelAppointmentDto,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      // Verificar que la cita existe y pertenece al paciente
      const appointment = await this.prisma.appointment.findFirst({
        where: {
          id: appointmentId,
          patient_id: patientId,
          tenant_id: { in: tenantIds },
          deleted: false,
        },
        include: {
          physician: {
            select: {
              name: true,
              last_name: true,
            },
          },
        },
      });

      if (!appointment) {
        throw new NotFoundException(
          'Cita no encontrada o no tienes permisos para cancelarla',
        );
      }

      // Verificar que la cita est√© pendiente
      if (appointment.status !== 'pendiente') {
        throw new BadRequestException(
          'Solo se pueden cancelar citas pendientes',
        );
      }

      // Verificar que la cita sea futura
      const now = new Date();
      if (appointment.start <= now) {
        throw new BadRequestException('No se pueden cancelar citas pasadas');
      }

      // Actualizar el estado de la cita a cancelada
      const updatedAppointment = await this.prisma.appointment.update({
        where: { id: appointmentId },
        data: {
          status: 'cancelada',
          // Usar el campo correcto para la raz√≥n de cancelaci√≥n
          ...(cancelDto.reason && { cancelation_reason: cancelDto.reason }),
        },
        include: {
          physician: {
            select: {
              name: true,
              last_name: true,
            },
          },
        },
      });

      return {
        id: updatedAppointment.id,
        status: updatedAppointment.status,
        start: updatedAppointment.start,
        physician: {
          name: updatedAppointment.physician.name,
          last_name: updatedAppointment.physician.last_name,
        },
        message: 'Cita cancelada exitosamente',
        cancelled_reason: cancelDto.reason,
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al cancelar la cita: ${error.message}`,
      );
    }
  }
}

================
File: src/mobile-functions/appointments/dto/cancel-appointment.dto.ts
================
import { IsString, IsOptional, Length } from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CancelAppointmentDto {
  @ApiProperty({
    description: 'Reason for canceling the appointment',
    example: 'No puedo asistir por motivos personales',
    required: false,
    maxLength: 500,
  })
  @IsOptional()
  @IsString({ message: 'La raz√≥n debe ser una cadena de texto' })
  @Length(0, 500, { message: 'La raz√≥n no puede exceder 500 caracteres' })
  reason?: string;
}

================
File: src/mobile-functions/appointments/dto/mobile-appointments-response.dto.ts
================
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';

export class PhysicianDto {
  @ApiProperty({
    description: 'ID √∫nico del m√©dico',
    example: 'b5191b80-2a8d-4eb2-9958-9273a0708025',
  })
  id: string;

  @ApiProperty({
    description: 'Nombre del m√©dico',
    example: 'Santiago',
  })
  name: string;

  @ApiProperty({
    description: 'Apellido del m√©dico',
    example: 'P√©rez',
  })
  last_name: string;

  @ApiPropertyOptional({
    description: 'URL de la imagen/foto del m√©dico',
    example: 'https://example.com/images/doctor.jpg',
  })
  image?: string;

  @ApiProperty({
    description: 'Especialidad m√©dica principal',
    example: 'Cardiolog√≠a',
  })
  specialty: string;
}

export class AppointmentDto {
  @ApiProperty({
    description: 'ID √∫nico de la cita',
    example: '3f08ebf8-7647-4150-a128-eaea6d8d22c9',
  })
  id: string;

  @ApiProperty({
    description: 'Fecha y hora de inicio de la cita en formato ISO',
    example: '2024-01-15T10:00:00.000Z',
  })
  start: Date;

  @ApiProperty({
    description: 'Estado actual de la cita',
    enum: ['pendiente', 'atendida', 'cancelada', 'reprogramada'],
    example: 'pendiente',
  })
  status: string;

  @ApiProperty({
    description: 'Informaci√≥n completa del m√©dico asignado',
    type: PhysicianDto,
  })
  physician: PhysicianDto;
}

export class NextAppointmentResponseDto {
  @ApiPropertyOptional({
    description:
      'Pr√≥xima cita pendiente del paciente. Ser√° undefined si no hay citas pendientes.',
    type: AppointmentDto,
  })
  next_appointment?: AppointmentDto;

  @ApiProperty({
    description: 'Mensaje descriptivo del resultado de la consulta',
    example: 'Pr√≥xima cita encontrada exitosamente',
  })
  message: string;
}

export class GroupedAppointmentsDto {
  @ApiProperty({
    description: 'Lista de citas pendientes (futuras)',
    type: [AppointmentDto],
    example: [],
  })
  pending: AppointmentDto[];

  @ApiProperty({
    description: 'Lista de citas pasadas (completadas o canceladas)',
    type: [AppointmentDto],
    example: [],
  })
  past: AppointmentDto[];

  @ApiProperty({
    description: 'N√∫mero total de citas pendientes',
    example: 2,
  })
  pending_count: number;

  @ApiProperty({
    description: 'N√∫mero total de citas pasadas',
    example: 5,
  })
  past_count: number;
}

export class AllAppointmentsResponseDto {
  @ApiProperty({
    description: 'Citas organizadas por estado temporal',
    type: GroupedAppointmentsDto,
  })
  appointments: GroupedAppointmentsDto;

  @ApiProperty({
    description: 'Mensaje descriptivo del resultado de la consulta',
    example: 'Citas obtenidas exitosamente',
  })
  message: string;
}

================
File: src/mobile-functions/mobile-functions.module.ts
================
import { Module } from '@nestjs/common';
import { SelfEvaluationEventModule } from './self-evaluation-event/self-evaluation-event.module';
import { MoodModule } from './mood/mood.module';
import { MobileAppointmentsModule } from './appointments/appointments.module';
import { PrescriptionsModule } from './prescriptions/prescriptions.module';

@Module({
  imports: [
    SelfEvaluationEventModule,
    MoodModule,
    MobileAppointmentsModule,
    PrescriptionsModule,
  ],
})
export class MobileFunctionsModule {}

================
File: src/mobile-functions/mood/dto/create-mood.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsInt, IsNotEmpty, Max, Min } from 'class-validator';

export class CreateMoodDto {
  @ApiProperty({
    description: 'Nivel de estado de √°nimo (1-5)',
    example: 4,
    type: Number,
    minimum: 1,
    maximum: 5,
  })
  @IsNotEmpty({ message: 'El nivel de estado de √°nimo es obligatorio' })
  @IsInt({ message: 'El nivel de estado de √°nimo debe ser un n√∫mero entero' })
  @Min(1, { message: 'El nivel m√≠nimo es 1 (Muy mal)' })
  @Max(5, { message: 'El nivel m√°ximo es 5 (Muy bien)' })
  mood_level: number;
}

================
File: src/mobile-functions/mood/mood.controller.ts
================
import {
  Body,
  Controller,
  Get,
  Post,
  UseGuards,
  HttpStatus,
} from '@nestjs/common';
import { MoodService } from './mood.service';
import { CreateMoodDto } from './dto/create-mood.dto';
import { GetUser } from '../../auth/decorators/get-user.decorator';
import { GetTenant } from '../../auth/decorators/get-tenant.decorator';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import {
  ApiOperation,
  ApiResponse,
  ApiTags,
  ApiBearerAuth,
  ApiHeader,
  ApiBody,
} from '@nestjs/swagger';

@ApiTags('Mood')
@ApiBearerAuth('access-token')
@ApiHeader({
  name: 'tenant-id',
  description: 'ID del tenant al que pertenece el usuario',
  required: true,
})
@Controller('mobile/mood')
@UseGuards(TenantAccessGuard)
export class MoodController {
  constructor(private readonly moodService: MoodService) {}
  @Post()
  @ApiOperation({
    summary: 'Registrar estado de √°nimo',
    description:
      'Guarda el estado de √°nimo actual del paciente (limitado a uno por d√≠a)',
  })
  @ApiBody({
    description: 'Datos del estado de √°nimo a registrar',
    type: CreateMoodDto,
  })
  @ApiResponse({
    status: HttpStatus.CREATED,
    description: 'Estado de √°nimo registrado correctamente',
  })
  @ApiResponse({
    status: HttpStatus.CONFLICT,
    description: 'Ya se ha registrado un estado de √°nimo hoy',
  })
  @ApiResponse({
    status: HttpStatus.UNAUTHORIZED,
    description: 'No autorizado',
  })
  async createMoodEntry(
    @Body() createMoodDto: CreateMoodDto,
    @GetUser() user,
    @GetTenant() tenant,
  ) {
    return this.moodService.createMoodEntry(user.id, tenant.id, createMoodDto);
  }

  @Get('today')
  @ApiOperation({
    summary: 'Obtener estado de √°nimo de hoy',
    description: 'Devuelve el estado de √°nimo registrado hoy por el paciente',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Estado de √°nimo obtenido correctamente',
  })
  @ApiResponse({
    status: HttpStatus.NOT_FOUND,
    description: 'No se ha registrado ning√∫n estado de √°nimo hoy',
  })
  async getTodayMoodEntry(@GetUser() user) {
    return this.moodService.getTodayMoodEntry(user.id);
  }

  @Get('history')
  @ApiOperation({
    summary: 'Obtener historial de estados de √°nimo',
    description: 'Devuelve el historial de estados de √°nimo del paciente',
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Historial obtenido correctamente',
  })
  async getMoodHistory(@GetUser() user) {
    return this.moodService.getMoodHistory(user.id);
  }
}

================
File: src/mobile-functions/mood/mood.module.ts
================
import { Module } from '@nestjs/common';
import { MoodService } from './mood.service';
import { MoodController } from './mood.controller';
import { PrismaModule } from '../../prisma/prisma.module';
import { GuardAuthModule } from '../../auth/guard-auth.module';

@Module({
  imports: [PrismaModule, GuardAuthModule],
  controllers: [MoodController],
  providers: [MoodService],
})
export class MoodModule {}

================
File: src/mobile-functions/mood/mood.service.ts
================
import {
  Injectable,
  ConflictException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateMoodDto } from './dto/create-mood.dto';
import { startOfDay, endOfDay } from 'date-fns';

@Injectable()
export class MoodService {
  constructor(private prisma: PrismaService) {}

  async createMoodEntry(
    userId: string,
    tenantId: string,
    createMoodDto: CreateMoodDto,
  ) {
    const today = new Date();
    const startOfToday = startOfDay(today);
    const endOfToday = endOfDay(today);

    const existingMoodEntry = await this.prisma.mood_entry.findFirst({
      where: {
        patient_id: userId,
        created_at: {
          gte: startOfToday,
          lte: endOfToday,
        },
      },
    });

    if (existingMoodEntry) {
      throw new ConflictException(
        'Ya has registrado tu estado de √°nimo hoy. Solo puedes registrar un estado de √°nimo por d√≠a.',
      );
    }

    // Crear el nuevo registro
    const moodEntry = await this.prisma.mood_entry.create({
      data: {
        patient_id: userId,
        tenant_id: tenantId,
        mood_level: createMoodDto.mood_level,
      },
    });

    return {
      id: moodEntry.id,
      mood_level: moodEntry.mood_level,
      created_at: moodEntry.created_at,
      message: '¬°Gracias por contarnos c√≥mo te sientes hoy!',
    };
  }

  async getTodayMoodEntry(userId: string) {
    const today = new Date();
    const startOfToday = startOfDay(today);
    const endOfToday = endOfDay(today);

    const moodEntry = await this.prisma.mood_entry.findFirst({
      where: {
        patient_id: userId,
        created_at: {
          gte: startOfToday,
          lte: endOfToday,
        },
      },
      orderBy: {
        created_at: 'desc',
      },
    });

    if (!moodEntry) {
      throw new NotFoundException('No has registrado tu estado de √°nimo hoy.');
    }

    return {
      id: moodEntry.id,
      mood_level: moodEntry.mood_level,
      created_at: moodEntry.created_at,
    };
  }

  async getMoodHistory(userId: string) {
    const moodEntries = await this.prisma.mood_entry.findMany({
      where: {
        patient_id: userId,
      },
      orderBy: {
        created_at: 'desc',
      },
    });

    return moodEntries;
  }
}

================
File: src/mobile-functions/prescriptions/dto/cancel-tracking.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { IsString, IsNumber, IsOptional } from 'class-validator';

export class CancelTrackingDto {
  @ApiProperty({
    description:
      'ID of the skip reason from the medication skip reason catalog',
    example: 1,
  })
  @IsNumber()
  skip_reason_id: number;

  @ApiProperty({
    description: 'Additional details about why tracking is being cancelled',
    example: 'Doctor recommended stopping the medication',
    required: false,
  })
  @IsString()
  @IsOptional()
  skip_reason_details?: string;
}

================
File: src/mobile-functions/prescriptions/dto/create-self-assigned-prescription.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsString,
  IsNotEmpty,
  IsNumber,
  IsEnum,
  IsDate,
  IsOptional,
} from 'class-validator';
import { Transform } from 'class-transformer';

export enum FrequencyType {
  EVERY_X_HOURS = 'EVERY_X_HOURS',
  TIMES_PER_DAY = 'TIMES_PER_DAY',
  ONCE_DAILY = 'ONCE_DAILY',
}

export class CreateSelfAssignedPrescriptionDto {
  @ApiProperty({
    description: 'Monodrug (active ingredient) name',
    example: 'Paracetamol',
  })
  @IsString()
  @IsNotEmpty()
  monodrug: string;

  @ApiProperty({
    description: 'Dose quantity',
    example: '500',
  })
  @IsString()
  @IsNotEmpty()
  dose: string;

  @ApiProperty({
    description: 'Dose units (mg, ml, etc.)',
    example: 'mg',
  })
  @IsString()
  @IsNotEmpty()
  dose_units: string;

  @ApiProperty({
    description: 'Type of frequency',
    enum: FrequencyType,
    example: FrequencyType.EVERY_X_HOURS,
  })
  @IsEnum(FrequencyType)
  @IsNotEmpty()
  frequency_type: FrequencyType;

  @ApiProperty({
    description: 'Frequency value (depends on frequency_type)',
    example: 8,
  })
  @IsNumber()
  @IsNotEmpty()
  frequency_value: number;

  @ApiProperty({
    description: 'Time of the first dose (ISO 8601 format)',
    example: '2025-06-01T08:00:00.000Z',
  })
  @IsDate()
  @Transform(({ value }) => new Date(value))
  @IsNotEmpty()
  first_dose_time: Date;

  @ApiProperty({
    description: 'Optional observations for this medication',
    example: 'Take with food',
    required: false,
  })
  @IsString()
  @IsOptional()
  observations?: string;
}

================
File: src/mobile-functions/prescriptions/dto/medication-dose-log.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  IsDate,
  IsOptional,
  IsString,
  IsNumber,
  IsEnum,
  IsUUID,
  IsNotEmpty,
} from 'class-validator';
import { Type } from 'class-transformer';

// Enum para el estado de la dosis (espec√≠fico para mobile)
export enum MobileMedicationDoseStatus {
  TAKEN = 'TAKEN',
  MISSED_REPORTED = 'MISSED_REPORTED',
  SKIPPED_BY_USER = 'SKIPPED_BY_USER',
}

// DTO para crear un nuevo registro de dosis desde mobile
export class CreateMedicationDoseLogDto {
  @ApiProperty({
    description: 'Prescription ID for which the dose is being recorded',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID()
  @IsNotEmpty()
  prescription_id: string;

  @ApiProperty({
    description:
      'Timestamp when the dose was scheduled (can be inferred or sent)',
    example: '2025-05-29T08:00:00.000Z',
    type: Date,
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  scheduled_time?: Date;

  @ApiProperty({
    description:
      'Timestamp when the dose was actually taken (required if status is TAKEN)',
    example: '2025-05-29T08:05:00.000Z',
    type: Date,
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  actual_taken_time?: Date;

  @ApiProperty({
    description: 'Status of the medication dose',
    enum: MobileMedicationDoseStatus,
    example: MobileMedicationDoseStatus.TAKEN,
  })
  @IsEnum(MobileMedicationDoseStatus)
  @IsNotEmpty()
  status: MobileMedicationDoseStatus;
}

// DTO para marcar dosis como omitida por usuario
export class SkipMedicationDoseDto {
  @ApiProperty({
    description: 'Reference to skip reason catalog',
    example: 1,
  })
  @IsNumber()
  @IsNotEmpty()
  skip_reason_id: number;

  @ApiProperty({
    description: 'Additional details about why the dose was skipped',
    example: 'Patient reported nausea after taking the medication',
    required: false,
  })
  @IsString()
  @IsOptional()
  skip_reason_details?: string;
}

// DTO para ajustar el tiempo de toma de dosis
export class AdjustDoseTimeDto {
  @ApiProperty({
    description: 'New actual taken time for the dose',
    example: '2025-05-29T08:30:00.000Z',
    type: Date,
  })
  @IsDate()
  @Type(() => Date)
  @IsNotEmpty()
  actual_taken_time: Date;
}

// DTO para respuesta del log de dosis
export class MedicationDoseLogResponseDto {
  @ApiProperty({
    description: 'Unique identifier for the dose log entry',
    example: 123,
  })
  id: number;

  @ApiProperty({
    description: 'Prescription ID',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  prescription_id: string;

  @ApiProperty({
    description: 'User ID who recorded the dose',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  user_id: string;

  @ApiProperty({
    description: 'Status of the medication dose',
    example: 'TAKEN',
  })
  status: string;

  @ApiProperty({
    description: 'Timestamp when the dose was scheduled',
    type: Date,
  })
  scheduled_time: Date;

  @ApiProperty({
    description: 'Timestamp when the dose was actually taken',
    type: Date,
    required: false,
  })
  actual_taken_time?: Date;

  @ApiProperty({
    description: 'Timestamp when the dose was reported',
    type: Date,
  })
  reported_at: Date;

  @ApiProperty({
    description: 'Skip reason information',
    required: false,
  })
  skip_reason?: {
    id: number;
    reason_text: string;
    category: string;
  };

  @ApiProperty({
    description: 'Additional details about why the dose was skipped',
    required: false,
  })
  skip_reason_details?: string;

  @ApiProperty({
    description: 'Timestamp when the record was created',
    type: Date,
  })
  created_at: Date;

  @ApiProperty({
    description: 'Timestamp when the record was last updated',
    type: Date,
  })
  updated_at: Date;
}

================
File: src/mobile-functions/prescriptions/dto/tracking.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import { BadRequestException } from '@nestjs/common';
import { IsDate, IsOptional, IsString, IsBoolean } from 'class-validator';
import { Transform } from 'class-transformer';

export class TrackingQueryDto {
  @ApiProperty({
    description: 'Date to get prescriptions for (YYYY-MM-DD)',
    example: '2025-06-01',
  })
  @IsString()
  @IsOptional()
  date?: string;
}

export class ActivateTrackingDto {
  @ApiProperty({
    description: 'Time of the first dose (ISO 8601 format)',
    example: '2025-06-01T08:00:00.000Z',
  })
  @IsDate()
  @Transform(({ value }) => {
    const date = new Date(value);
    if (isNaN(date.getTime())) {
      throw new BadRequestException(
        'Invalid date format for first_dose_taken_at',
      );
    }
    return date;
  })
  first_dose_taken_at: Date;
}

export class ToggleReminderDto {
  @ApiProperty({
    description: 'Whether reminders should be enabled',
    example: true,
  })
  @IsBoolean()
  reminder_enabled: boolean;
}

================
File: src/mobile-functions/prescriptions/prescriptions.controller.ts
================
import {
  Controller,
  Post,
  Body,
  Request,
  UseGuards,
  Get,
  Query,
  Patch,
  Param,
} from '@nestjs/common';
// Controller for handling prescription endpoints
import { PrescriptionsService } from './prescriptions.service';
import { CreateSelfAssignedPrescriptionDto } from './dto/create-self-assigned-prescription.dto';
import {
  ActivateTrackingDto,
  ToggleReminderDto,
  TrackingQueryDto,
} from './dto/tracking.dto';
import {
  CreateMedicationDoseLogDto,
  SkipMedicationDoseDto,
  AdjustDoseTimeDto,
} from './dto/medication-dose-log.dto';
import { CancelTrackingDto } from './dto/cancel-tracking.dto';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiSecurity,
  ApiHeader,
  ApiParam,
  ApiQuery,
} from '@nestjs/swagger';

@ApiTags('Mobile Prescriptions')
@ApiSecurity('bearer')
@ApiHeader({
  name: 'tenant_id',
  description: 'Tenant ID',
  required: true,
})
@Controller('mobile/prescriptions')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class PrescriptionsController {
  constructor(private readonly prescriptionsService: PrescriptionsService) {}
  @Post('self-assigned')
  @ApiOperation({ summary: 'Patient adds their own medication' })
  @ApiBody({ type: CreateSelfAssignedPrescriptionDto })
  @ApiResponse({
    status: 201,
    description: 'The prescription has been successfully created',
  })
  @ApiResponse({ status: 400, description: 'Bad Request' })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async createSelfAssigned(
    @Request() req,
    @Body() createDto: CreateSelfAssignedPrescriptionDto,
  ) {
    const patientId = req.user.id;
    return this.prescriptionsService.createSelfAssignedPrescription(
      patientId,
      createDto,
    );
  }
  @Get('tracking')
  @ApiOperation({ summary: 'Get prescriptions for tracking' })
  @ApiQuery({
    name: 'date',
    required: false,
    description: 'Date in YYYY-MM-DD format',
  })
  @ApiResponse({
    status: 200,
    description: 'Returns prescriptions with tracking status',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async getPrescriptionsForTracking(
    @Request() req,
    @Query() query: TrackingQueryDto,
  ) {
    const patientId = req.user.id;
    const userTenants = req.userTenants || [];
    return this.prescriptionsService.getPrescriptionsForTracking(
      patientId,
      query.date,
      userTenants,
    );
  }
  @Patch(':prescription_id/activate-tracking')
  @ApiOperation({ summary: 'Activate tracking for a prescription' })
  @ApiParam({
    name: 'prescription_id',
    description: 'Prescription ID to activate tracking for',
  })
  @ApiBody({ type: ActivateTrackingDto })
  @ApiResponse({
    status: 200,
    description: 'Tracking activated successfully',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input or tracking already active',
  })
  @ApiResponse({
    status: 404,
    description: 'Prescription not found',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async activateTracking(
    @Request() req,
    @Param('prescription_id') prescriptionId: string,
    @Body() activateDto: ActivateTrackingDto,
  ) {
    const patientId = req.user.id;
    const userTenants = req.userTenants || [];
    return this.prescriptionsService.activateTracking(
      prescriptionId,
      patientId,
      activateDto,
      userTenants,
    );
  }
  @Patch(':prescription_id/toggle-reminder')
  @ApiOperation({ summary: 'Toggle reminders for a prescription' })
  @ApiParam({
    name: 'prescription_id',
    description: 'Prescription ID to toggle reminder for',
  })
  @ApiBody({ type: ToggleReminderDto })
  @ApiResponse({
    status: 200,
    description: 'Reminder setting updated successfully',
  })
  @ApiResponse({
    status: 400,
    description:
      'Bad Request - Cannot toggle reminders for non-active tracking prescriptions',
  })
  @ApiResponse({
    status: 404,
    description: 'Prescription not found',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async toggleReminder(
    @Request() req,
    @Param('prescription_id') prescriptionId: string,
    @Body() toggleDto: ToggleReminderDto,
  ) {
    const patientId = req.user.id;
    const userTenants = req.userTenants || [];
    return this.prescriptionsService.toggleReminder(
      prescriptionId,
      patientId,
      toggleDto,
      userTenants,
    );
  }

  @Post('medication-dose-log')
  @ApiOperation({ summary: 'Create new medication dose record' })
  @ApiBody({ type: CreateMedicationDoseLogDto })
  @ApiResponse({
    status: 201,
    description: 'Medication dose log created successfully',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data',
  })
  @ApiResponse({
    status: 404,
    description: 'Active prescription not found for this patient',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async createMedicationDoseLog(
    @Request() req,
    @Body() createDto: CreateMedicationDoseLogDto,
  ) {
    const patientId = req.user.id;
    const userTenants = req.userTenants || [];
    return this.prescriptionsService.createMedicationDoseLog(
      patientId,
      createDto,
      userTenants,
    );
  }

  @Patch('medication-dose-log/:log_id/skip')
  @ApiOperation({ summary: 'Mark dose as skipped by user' })
  @ApiParam({
    name: 'log_id',
    description: 'Medication dose log ID to mark as skipped',
  })
  @ApiBody({ type: SkipMedicationDoseDto })
  @ApiResponse({
    status: 200,
    description: 'Dose marked as skipped successfully',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data',
  })
  @ApiResponse({
    status: 404,
    description: 'Dose log not found for this patient',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async skipMedicationDose(
    @Request() req,
    @Param('log_id') logId: string,
    @Body() skipDto: SkipMedicationDoseDto,
  ) {
    const patientId = req.user.id;
    return this.prescriptionsService.skipMedicationDose(
      patientId,
      logId,
      skipDto,
    );
  }
  @Patch('medication-dose-log/:log_id/adjust-time')
  @ApiOperation({ summary: 'Adjust actual taken time for a dose' })
  @ApiParam({
    name: 'log_id',
    description: 'Medication dose log ID to adjust time for',
  })
  @ApiBody({ type: AdjustDoseTimeDto })
  @ApiResponse({
    status: 200,
    description: 'Dose time adjusted successfully',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input data',
  })
  @ApiResponse({
    status: 404,
    description: 'Taken dose log not found for this patient',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async adjustDoseTime(
    @Request() req,
    @Param('log_id') logId: string,
    @Body() adjustDto: AdjustDoseTimeDto,
  ) {
    const patientId = req.user.id;
    return this.prescriptionsService.adjustDoseTime(
      patientId,
      logId,
      adjustDto,
    );
  }

  @Patch(':prescription_id/cancel-tracking')
  @ApiOperation({ summary: 'Cancel tracking for a prescription' })
  @ApiParam({
    name: 'prescription_id',
    description: 'Prescription ID to cancel tracking for',
  })
  @ApiBody({ type: CancelTrackingDto })
  @ApiResponse({
    status: 200,
    description: 'Tracking cancelled successfully',
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Invalid input or tracking not active',
  })
  @ApiResponse({
    status: 404,
    description: 'Prescription not found',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async cancelTracking(
    @Request() req,
    @Param('prescription_id') prescriptionId: string,
    @Body() cancelDto: CancelTrackingDto,
  ) {
    const patientId = req.user.id;
    const userTenants = req.userTenants || [];
    return this.prescriptionsService.cancelTracking(
      prescriptionId,
      patientId,
      cancelDto,
      userTenants,
    );
  }
  @Get('medication-skip-reasons')
  @ApiOperation({ summary: 'Get medication skip reasons catalog' })
  @ApiResponse({
    status: 200,
    description: 'Returns medication skip reasons catalog',
  })
  @RequirePermission(Permission.VIEW_OWN_PRESCRIPTIONS)
  async getMedicationSkipReasons() {
    return this.prescriptionsService.getMedicationSkipReasons();
  }
}

================
File: src/mobile-functions/prescriptions/prescriptions.module.ts
================
import { Module } from '@nestjs/common';
import { PrescriptionsService } from './prescriptions.service';
import { PrescriptionsController } from './prescriptions.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';
import { NotificationService } from '../../services/notification/notification.service';
import { EmailService } from '../../services/email/email.service';

@Module({
  imports: [GuardAuthModule],
  controllers: [PrescriptionsController],
  providers: [
    PrescriptionsService,
    PrismaService,
    NotificationService,
    EmailService,
  ],
  exports: [PrescriptionsService],
})
export class PrescriptionsModule {}

================
File: src/mobile-functions/prescriptions/prescriptions.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
// Service for handling prescription operations
import { PrismaService } from '../../prisma/prisma.service';
import {
  CreateSelfAssignedPrescriptionDto,
  FrequencyType,
} from './dto/create-self-assigned-prescription.dto';
import { ActivateTrackingDto, ToggleReminderDto } from './dto/tracking.dto';
import {
  CreateMedicationDoseLogDto,
  SkipMedicationDoseDto,
  AdjustDoseTimeDto,
} from './dto/medication-dose-log.dto';
import { CancelTrackingDto } from './dto/cancel-tracking.dto';
import { Prisma } from '@prisma/client';
import { NotificationService } from '../../services/notification/notification.service';
import { medicationCancellationHtml } from '../../services/email/templates/medicationCancellationHtml';

@Injectable()
export class PrescriptionsService {
  constructor(
    private prisma: PrismaService,
    private readonly notificationService: NotificationService,
  ) {}

  /**
   * Obtiene los tenant IDs del paciente de forma optimizada
   */
  private async getPatientTenantIds(
    patientId: string,
    userTenants?: { id: string; name: string; type: string }[],
  ): Promise<string[]> {
    // Si los tenants vienen del JWT, usarlos directamente
    if (userTenants && userTenants.length > 0) {
      return userTenants.map((tenant) => tenant.id);
    }

    // Sino, buscar en la DB con el patient_id directamente
    const patientTenants = await this.prisma.patient_tenant.findMany({
      where: {
        patient: {
          user_id: patientId,
        },
        deleted: false,
      },
      select: { tenant_id: true },
    });

    return patientTenants.map((pt) => pt.tenant_id);
  }

  async createSelfAssignedPrescription(
    patientId: string,
    createDto: CreateSelfAssignedPrescriptionDto,
  ) {
    try {
      // Calculate time_of_day_slots based on frequency and first dose
      const timeOfDaySlots = this.calculateTimeSlots(
        createDto.frequency_type,
        createDto.frequency_value,
        createDto.first_dose_time,
      );

      // Create the prescription record
      const prescription = await this.prisma.prescription.create({
        data: {
          patient_id: patientId,
          monodrug: createDto.monodrug,
          created_by_patient: true,
          is_tracking_active: true,
          reminder_enabled: true,
          first_dose_taken_at: createDto.first_dose_time,
          time_of_day_slots: timeOfDaySlots,
          // Las prescripciones creadas por el paciente no tienen tenant_id
          // ya que son auto-asignadas y no pertenecen a una organizaci√≥n espec√≠fica
        },
      });

      // Create the prescription modification history record
      await this.prisma.pres_mod_history.create({
        data: {
          prescription_id: prescription.id,
          physician_id: patientId, // In this case, the patient is the one creating it
          dose: createDto.dose,
          dose_units: createDto.dose_units,
          frecuency: this.formatFrequency(
            createDto.frequency_type,
            createDto.frequency_value,
          ),
          duration: '30', // Default duration
          duration_units: 'd√≠as',
          observations: createDto.observations || '',
        },
      });

      return prescription;
    } catch (error) {
      if (error instanceof Prisma.PrismaClientKnownRequestError) {
        throw new BadRequestException(
          'Error creating prescription: ' + error.message,
        );
      }
      throw error;
    }
  }

  async getPrescriptionsForTracking(
    patientId: string,
    date?: string,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    try {
      const targetDate = date ? new Date(date) : new Date();

      if (isNaN(targetDate.getTime())) {
        throw new BadRequestException('Invalid date format. Use YYYY-MM-DD');
      }

      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      // Get all prescriptions that are either:
      // 1. Active tracking (is_tracking_active = true)
      // 2. Prescribed by a physician but not yet activated (created_by_patient = false AND is_tracking_active = false)
      // Incluye tanto prescripciones de organizaciones (con tenant_id) como auto-asignadas (sin tenant_id)
      const prescriptions = await this.prisma.prescription.findMany({
        where: {
          patient_id: patientId,
          OR: [
            // Prescripciones con tracking activo (incluye auto-asignadas y de organizaciones)
            { is_tracking_active: true },
            // Prescripciones de m√©dicos no activadas de las organizaciones del paciente
            {
              created_by_patient: false,
              is_tracking_active: false,
              tenant_id: { in: tenantIds },
            },
          ],
        },
        include: {
          pres_mod_history: {
            orderBy: {
              mod_timestamp: 'desc',
            },
            take: 1,
          },
          medication_dose_logs: {
            where: {
              scheduled_time: {
                gte: new Date(targetDate.setHours(0, 0, 0, 0)),
                lt: new Date(targetDate.setHours(23, 59, 59, 999)),
              },
            },
          },
        },
      });

      // For each prescription, calculate the scheduled doses for the date
      const result = prescriptions.map((prescription) => {
        const latestModHistory = prescription.pres_mod_history[0];

        // Calculate scheduled doses for this day
        let scheduledDoses = [];
        if (
          prescription.is_tracking_active &&
          prescription.time_of_day_slots?.length > 0
        ) {
          scheduledDoses = this.calculateScheduledDosesForDate(
            prescription.time_of_day_slots,
            targetDate,
          );
        } else if (!prescription.is_tracking_active && latestModHistory) {
          // For non-active prescriptions, we'll just show the frequency from the history
          scheduledDoses = [
            {
              scheduledTime: null,
              status: 'PENDING_ACTIVATION',
              message: `Activar seguimiento (${latestModHistory.frecuency})`,
            },
          ];
        }

        // Map actual medication logs to the scheduled doses where they exist
        const dosesWithStatus = scheduledDoses.map((scheduledDose) => {
          // Handle case where medication_dose_logs might be undefined
          const medicationLogs = prescription.medication_dose_logs || [];

          const matchingLog = medicationLogs.find(
            (log) =>
              log.scheduled_time.getTime() ===
              scheduledDose.scheduledTime?.getTime(),
          );

          if (matchingLog) {
            return {
              ...scheduledDose,
              status: matchingLog.status,
              actualTakenTime: matchingLog.actual_taken_time,
              logId: matchingLog.id,
            };
          }

          return scheduledDose;
        });

        return {
          id: prescription.id,
          monodrug: prescription.monodrug,
          isTrackingActive: prescription.is_tracking_active,
          reminderEnabled: prescription.reminder_enabled,
          createdByPatient: prescription.created_by_patient,
          doseDetails: latestModHistory
            ? {
                dose: latestModHistory.dose,
                doseUnits: latestModHistory.dose_units,
                frequency: latestModHistory.frecuency,
              }
            : null,
          doses: dosesWithStatus,
        };
      });

      // Sort result by earliest scheduled dose time
      return result.sort((a, b) => {
        const aTime =
          a.doses[0]?.scheduledTime?.getTime() || Number.MAX_SAFE_INTEGER;
        const bTime =
          b.doses[0]?.scheduledTime?.getTime() || Number.MAX_SAFE_INTEGER;
        return aTime - bTime;
      });
    } catch (error) {
      if (error instanceof BadRequestException) {
        throw error;
      }
      throw new BadRequestException(
        'Error retrieving prescriptions: ' + error.message,
      );
    }
  }

  async activateTracking(
    prescriptionId: string,
    patientId: string,
    activateDto: ActivateTrackingDto,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    console.log('activateTracking', prescriptionId, patientId, activateDto);
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      const prescription = await this.prisma.prescription.findFirst({
        where: {
          id: prescriptionId,
          patient_id: patientId,
          OR: [
            // Prescripciones de organizaciones del paciente
            { tenant_id: { in: tenantIds } },
            // Prescripciones auto-asignadas (sin tenant_id)
            {
              created_by_patient: true,
              tenant_id: null,
            },
          ],
        },
        include: {
          pres_mod_history: {
            orderBy: {
              mod_timestamp: 'desc',
            },
            take: 1,
          },
        },
      });

      if (!prescription) {
        throw new NotFoundException('Prescription not found');
      }

      if (prescription.is_tracking_active) {
        throw new BadRequestException(
          'Tracking is already active for this prescription',
        );
      }
      const latestModHistory = prescription.pres_mod_history[0];
      if (!latestModHistory) {
        throw new BadRequestException('No prescription details found');
      }

      // Validate that the first dose time is a valid date
      if (isNaN(activateDto.first_dose_taken_at.getTime())) {
        throw new BadRequestException('Invalid first dose date format');
      }

      // Parse frequency to determine time slots
      const { frequencyType, frequencyValue } = this.parseFrequency(
        latestModHistory.frecuency,
      );

      // Calculate time slots based on first dose and frequency
      const timeOfDaySlots = this.calculateTimeSlots(
        frequencyType,
        frequencyValue,
        activateDto.first_dose_taken_at,
      );

      // Update the prescription
      const updatedPrescription = await this.prisma.prescription.update({
        where: {
          id: prescriptionId,
        },
        data: {
          is_tracking_active: true,
          first_dose_taken_at: activateDto.first_dose_taken_at,
          time_of_day_slots: timeOfDaySlots,
        },
      });

      // Create the first dose log as "TAKEN"
      await this.prisma.medication_dose_log.create({
        data: {
          prescription_id: prescriptionId,
          user_id: patientId,
          scheduled_time: activateDto.first_dose_taken_at,
          actual_taken_time: activateDto.first_dose_taken_at,
          status: 'TAKEN',
          reported_at: new Date(), // Explicitly set the reported time to now
        },
      });

      return {
        ...updatedPrescription,
        timeOfDaySlots,
        message: 'Tracking activated successfully',
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error activating tracking: ' + error.message,
      );
    }
  }

  async toggleReminder(
    prescriptionId: string,
    patientId: string,
    toggleDto: ToggleReminderDto,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      // Find the prescription for the patient
      const prescription = await this.prisma.prescription.findFirst({
        where: {
          id: prescriptionId,
          patient_id: patientId,
          OR: [
            // Prescripciones de organizaciones del paciente
            { tenant_id: { in: tenantIds } },
            // Prescripciones auto-asignadas (sin tenant_id)
            {
              created_by_patient: true,
              tenant_id: null,
            },
          ],
        },
      });

      // Verify the prescription exists
      if (!prescription) {
        throw new NotFoundException('Prescription not found');
      }

      // Verify tracking is active - we only allow reminder toggle for active prescriptions
      if (!prescription.is_tracking_active) {
        throw new BadRequestException(
          'Cannot toggle reminders for prescriptions without active tracking',
        );
      }

      // Update the reminder setting
      const updatedPrescription = await this.prisma.prescription.update({
        where: {
          id: prescriptionId,
        },
        data: {
          reminder_enabled: toggleDto.reminder_enabled,
        },
      });

      // Return the updated prescription with a success message
      return {
        ...updatedPrescription,
        message: toggleDto.reminder_enabled
          ? 'Reminders enabled successfully'
          : 'Reminders disabled successfully',
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error toggling reminders: ' + error.message,
      );
    }
  }
  /**
   * Create a new medication dose log entry
   */
  async createMedicationDoseLog(
    patientId: string,
    createDto: CreateMedicationDoseLogDto,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    try {
      // Obtener tenant IDs del paciente
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      // Verify the prescription belongs to the patient
      const prescription = await this.prisma.prescription.findFirst({
        where: {
          id: createDto.prescription_id,
          patient_id: patientId,
          is_tracking_active: true,
          OR: [
            // Prescripciones de organizaciones del paciente
            { tenant_id: { in: tenantIds } },
            // Prescripciones auto-asignadas (sin tenant_id)
            {
              created_by_patient: true,
              tenant_id: null,
            },
          ],
        },
      });

      if (!prescription) {
        throw new NotFoundException(
          'Active prescription not found for this patient',
        );
      }

      // If scheduled_time is not provided, we need to infer it from current time and time slots
      let scheduledTime = createDto.scheduled_time;
      if (!scheduledTime && prescription.time_of_day_slots?.length > 0) {
        scheduledTime = this.inferScheduledTime(prescription.time_of_day_slots);
      }

      if (!scheduledTime) {
        throw new BadRequestException(
          'scheduled_time is required when prescription has no time slots',
        );
      }

      // Validate that actual_taken_time is provided if status is TAKEN
      if (createDto.status === 'TAKEN' && !createDto.actual_taken_time) {
        throw new BadRequestException(
          'actual_taken_time is required when status is TAKEN',
        );
      }

      // Create the medication dose log
      const doseLog = await this.prisma.medication_dose_log.create({
        data: {
          prescription_id: createDto.prescription_id,
          user_id: patientId,
          scheduled_time: scheduledTime,
          actual_taken_time: createDto.actual_taken_time,
          status: createDto.status,
          reported_at: new Date(),
        },
        include: {
          skip_reason: true,
        },
      });

      // If status is TAKEN, reset reminders_sent_count to 0
      if (createDto.status === 'TAKEN') {
        await this.prisma.prescription.update({
          where: { id: createDto.prescription_id },
          data: { reminders_sent_count: 0 },
        });
      }

      return {
        id: doseLog.id,
        prescription_id: doseLog.prescription_id,
        user_id: doseLog.user_id,
        status: doseLog.status,
        scheduled_time: doseLog.scheduled_time,
        actual_taken_time: doseLog.actual_taken_time,
        reported_at: doseLog.reported_at,
        skip_reason: doseLog.skip_reason,
        skip_reason_details: doseLog.skip_reason_details,
        created_at: doseLog.created_at,
        updated_at: doseLog.updated_at,
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error creating medication dose log: ' + error.message,
      );
    }
  }

  /**
   * Infer scheduled time from current time and time slots
   */
  private inferScheduledTime(timeSlots: string[]): Date {
    const now = new Date();
    const currentTime = now.getHours() * 60 + now.getMinutes(); // Current time in minutes

    // Find the closest time slot
    let closestSlot = timeSlots[0];
    let minDifference = Infinity;

    for (const slot of timeSlots) {
      const [hours, minutes] = slot.split(':').map(Number);
      const slotTime = hours * 60 + minutes;
      const difference = Math.abs(currentTime - slotTime);

      if (difference < minDifference) {
        minDifference = difference;
        closestSlot = slot;
      }
    }

    // Create the scheduled time for today
    const [hours, minutes] = closestSlot.split(':').map(Number);
    const scheduledTime = new Date(now);
    scheduledTime.setHours(hours, minutes, 0, 0);

    return scheduledTime;
  }
  /**
   * Skip a medication dose by marking it as SKIPPED_BY_USER
   */
  async skipMedicationDose(
    patientId: string,
    logId: string,
    skipDto: SkipMedicationDoseDto,
  ) {
    try {
      // Find the dose log and verify it belongs to the patient
      const doseLog = await this.prisma.medication_dose_log.findFirst({
        where: {
          id: logId,
          user_id: patientId,
        },
        include: {
          prescription: true,
        },
      });

      if (!doseLog) {
        throw new NotFoundException('Dose log not found for this patient');
      }

      // Update the dose log with skip information
      const updatedDoseLog = await this.prisma.medication_dose_log.update({
        where: { id: logId },
        data: {
          status: 'SKIPPED_BY_USER',
          skip_reason_id: skipDto.skip_reason_id,
          skip_reason_details: skipDto.skip_reason_details,
          reported_at: new Date(),
        },
        include: {
          skip_reason: true,
        },
      });

      // Reset reminders_sent_count to 0 in the prescription
      await this.prisma.prescription.update({
        where: { id: doseLog.prescription_id },
        data: { reminders_sent_count: 0 },
      });

      return {
        id: updatedDoseLog.id,
        prescription_id: updatedDoseLog.prescription_id,
        user_id: updatedDoseLog.user_id,
        status: updatedDoseLog.status,
        scheduled_time: updatedDoseLog.scheduled_time,
        actual_taken_time: updatedDoseLog.actual_taken_time,
        reported_at: updatedDoseLog.reported_at,
        skip_reason: updatedDoseLog.skip_reason,
        skip_reason_details: updatedDoseLog.skip_reason_details,
        created_at: updatedDoseLog.created_at,
        updated_at: updatedDoseLog.updated_at,
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error skipping medication dose: ' + error.message,
      );
    }
  }
  /**
   * Adjust the actual taken time for a dose
   */
  async adjustDoseTime(
    patientId: string,
    logId: string,
    adjustDto: AdjustDoseTimeDto,
  ) {
    try {
      // Find the dose log and verify it belongs to the patient
      const doseLog = await this.prisma.medication_dose_log.findFirst({
        where: {
          id: logId,
          user_id: patientId,
          status: 'TAKEN', // Only allow adjusting taken doses
        },
      });

      if (!doseLog) {
        throw new NotFoundException(
          'Taken dose log not found for this patient',
        );
      }

      // Update the actual taken time
      const updatedDoseLog = await this.prisma.medication_dose_log.update({
        where: { id: logId },
        data: {
          actual_taken_time: adjustDto.actual_taken_time,
          updated_at: new Date(),
        },
        include: {
          skip_reason: true,
        },
      });

      // TODO: Recalculate adherence window if needed
      // This would involve checking if the new time affects adherence calculations

      return {
        id: updatedDoseLog.id,
        prescription_id: updatedDoseLog.prescription_id,
        user_id: updatedDoseLog.user_id,
        status: updatedDoseLog.status,
        scheduled_time: updatedDoseLog.scheduled_time,
        actual_taken_time: updatedDoseLog.actual_taken_time,
        reported_at: updatedDoseLog.reported_at,
        skip_reason: updatedDoseLog.skip_reason,
        skip_reason_details: updatedDoseLog.skip_reason_details,
        created_at: updatedDoseLog.created_at,
        updated_at: updatedDoseLog.updated_at,
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error adjusting dose time: ' + error.message,
      );
    }
  }

  // Helper methods

  private calculateTimeSlots(
    frequencyType: FrequencyType,
    frequencyValue: number,
    firstDoseTime: Date,
  ): string[] {
    const slots: string[] = [];
    const firstDose = new Date(firstDoseTime);

    // Add the first dose time
    slots.push(this.formatTimeSlot(firstDose));

    if (frequencyType === FrequencyType.ONCE_DAILY) {
      // Only one dose per day at the same time
      return slots;
    } else if (frequencyType === FrequencyType.EVERY_X_HOURS) {
      // Calculate doses every X hours
      const hoursToAdd = frequencyValue;
      const dosesPerDay = Math.floor(24 / hoursToAdd);

      let currentTime = new Date(firstDose);
      for (let i = 1; i < dosesPerDay; i++) {
        currentTime = new Date(
          currentTime.getTime() + hoursToAdd * 60 * 60 * 1000,
        );
        slots.push(this.formatTimeSlot(currentTime));
      }
    } else if (frequencyType === FrequencyType.TIMES_PER_DAY) {
      // Evenly distribute the doses throughout waking hours (8am-10pm)
      const wakingHours = 14; // 8am to 10pm
      const hoursInterval = wakingHours / (frequencyValue - 1);

      // Adjust the first dose to be within waking hours if needed
      const startHour = 8; // 8am
      let currentTime = new Date(firstDose);

      for (let i = 1; i < frequencyValue; i++) {
        currentTime = new Date(currentTime);
        currentTime.setHours(
          startHour + Math.round(hoursInterval * i),
          0,
          0,
          0,
        );
        slots.push(this.formatTimeSlot(currentTime));
      }
    }

    return slots;
  }

  private formatTimeSlot(date: Date): string {
    // Format as HH:MM
    return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
  }

  private formatFrequency(
    frequencyType: FrequencyType,
    frequencyValue: number,
  ): string {
    switch (frequencyType) {
      case FrequencyType.EVERY_X_HOURS:
        return `Cada ${frequencyValue} horas`;
      case FrequencyType.TIMES_PER_DAY:
        return `${frequencyValue} veces al d√≠a`;
      case FrequencyType.ONCE_DAILY:
        return 'Una vez al d√≠a';
      default:
        return `${frequencyValue} veces al d√≠a`;
    }
  }

  private parseFrequency(frequencyStr: string): {
    frequencyType: FrequencyType;
    frequencyValue: number;
  } {
    if (frequencyStr.includes('Cada') && frequencyStr.includes('horas')) {
      const value = parseInt(frequencyStr.replace(/[^0-9]/g, ''), 10);
      return {
        frequencyType: FrequencyType.EVERY_X_HOURS,
        frequencyValue: value,
      };
    } else if (frequencyStr.includes('veces al d√≠a')) {
      const value = parseInt(frequencyStr.replace(/[^0-9]/g, ''), 10);
      return {
        frequencyType: FrequencyType.TIMES_PER_DAY,
        frequencyValue: value,
      };
    } else if (frequencyStr.includes('Una vez al d√≠a')) {
      return {
        frequencyType: FrequencyType.ONCE_DAILY,
        frequencyValue: 1,
      };
    }

    // Default to once daily if we can't parse
    return {
      frequencyType: FrequencyType.ONCE_DAILY,
      frequencyValue: 1,
    };
  }

  private calculateScheduledDosesForDate(
    timeSlots: string[],
    date: Date,
  ): any[] {
    const targetDate = new Date(date);
    targetDate.setHours(0, 0, 0, 0);

    return timeSlots.map((slot) => {
      const [hours, minutes] = slot.split(':').map(Number);
      const scheduledTime = new Date(targetDate);
      scheduledTime.setHours(hours, minutes, 0, 0);

      const now = new Date();
      let status = 'PENDING';
      if (scheduledTime < now) {
        status = 'MISSED';
      }

      return {
        scheduledTime,
        status,
        timeSlot: slot,
      };
    });
  }
  async cancelTracking(
    prescriptionId: string,
    patientId: string,
    cancelDto: CancelTrackingDto,
    userTenants?: { id: string; name: string; type: string }[],
  ) {
    try {
      const tenantIds = await this.getPatientTenantIds(patientId, userTenants);

      const prescription = await this.prisma.prescription.findFirst({
        where: {
          id: prescriptionId,
          patient_id: patientId,
          OR: [
            { tenant_id: { in: tenantIds } },
            {
              created_by_patient: true,
              tenant_id: null,
            },
          ],
        },
        include: {
          pres_mod_history: {
            orderBy: {
              mod_timestamp: 'desc',
            },
            take: 1,
            include: {
              physician: {
                select: {
                  id: true,
                  email: true,
                  name: true,
                  last_name: true,
                },
              },
            },
          },
        },
      });

      if (!prescription) {
        throw new NotFoundException('Prescription not found');
      }

      // Verificar si la prescripci√≥n fue creada por un m√©dico y obtener datos para notificaci√≥n
      if (
        prescription.created_by_patient === false &&
        prescription.pres_mod_history.length > 0
      ) {
        const latestHistory = prescription.pres_mod_history[0];
        const physician = latestHistory.physician;

        if (physician && physician.email) {
          // Obtener datos del paciente
          const patient = await this.prisma.user.findUnique({
            where: { id: patientId },
            select: { name: true, last_name: true },
          });

          if (patient) {
            // Preparar datos para el email
            const physicianName = `${physician.name} ${physician.last_name}`;
            const patientName = `${patient.name} ${patient.last_name}`;
            const medicationName =
              prescription.monodrug || 'Medicaci√≥n no especificada';

            // Obtener la raz√≥n de cancelaci√≥n
            let cancelReason = 'No especificado';
            if (cancelDto.skip_reason_details) {
              cancelReason = cancelDto.skip_reason_details;
            } else if (cancelDto.skip_reason_id) {
              const skipReason =
                await this.prisma.medication_skip_reason_catalog.findUnique({
                  where: { id: cancelDto.skip_reason_id },
                  select: { reason_text: true },
                });
              if (skipReason) {
                cancelReason = skipReason.reason_text;
              }
            }

            const cancelDate = new Date().toLocaleDateString('es-ES');

            // Generar HTML del email
            const emailHtml = medicationCancellationHtml(
              physicianName,
              patientName,
              medicationName,
              cancelReason,
              cancelDate,
            );

            // Enviar notificaci√≥n por email
            try {
              await this.notificationService.sendEmail(
                physician.email,
                'Cancelaci√≥n de Seguimiento de Medicaci√≥n - Segimed',
                emailHtml,
              );
            } catch (emailError) {
              // Log del error pero no fallar la operaci√≥n principal
              console.error(
                'Error enviando notificaci√≥n al m√©dico:',
                emailError,
              );
            }
          }
        }
      }

      const updatedPrescription = await this.prisma.prescription.update({
        where: {
          id: prescriptionId,
        },
        data: {
          is_tracking_active: false,
          reminder_enabled: false,
          skip_reason_id: cancelDto.skip_reason_id,
          skip_reason_details: cancelDto.skip_reason_details,
        },
      });

      return {
        ...updatedPrescription,
        message: 'Tracking cancelled successfully',
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        'Error cancelling tracking: ' + error.message,
      );
    }
  }

  async getMedicationSkipReasons() {
    try {
      const skipReasons =
        await this.prisma.medication_skip_reason_catalog.findMany({
          orderBy: {
            category: 'asc',
          },
        });

      return skipReasons;
    } catch (error) {
      throw new BadRequestException(
        'Error retrieving medication skip reasons: ' + error.message,
      );
    }
  }
}

================
File: src/mobile-functions/self-evaluation-event/dto/create-self-evaluation-event.dto.ts
================
import {
  IsNotEmpty,
  IsUUID,
  IsArray,
  ValidateNested,
  ArrayNotEmpty,
  IsOptional,
} from 'class-validator';
import { Type } from 'class-transformer';
import { VitalSignDto } from '../../../medical-scheduling/modules/vital-signs/dto/create-vital-sign.dto';
import { ApiProperty } from '@nestjs/swagger';

export class CreateSelfEvaluationEventDto {
  @ApiProperty({
    description: 'ID del paciente que realiza la autoevaluaci√≥n',
    example: '123e4567-e89b-12d3-a456-426614174000',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del paciente debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del paciente es obligatorio' })
  patient_id: string;

  @ApiProperty({
    description: 'ID del evento m√©dico asociado a esta autoevaluaci√≥n',
    example: 'abcdef01-2345-6789-abcd-ef0123456789',
    format: 'uuid',
  })
  @IsUUID('4', { message: 'El ID del evento m√©dico debe ser un UUID v√°lido' })
  @IsNotEmpty({ message: 'El ID del evento m√©dico es obligatorio' })
  medical_event_id: string;

  @ApiProperty({
    description:
      'ID del inquilino (tenant) en el sistema (opcional para signos vitales propios del paciente)',
    example: 'tid_12345-6789-abcd-ef0123456789',
    format: 'uuid',
    required: false,
  })
  @IsOptional()
  @IsUUID('4', { message: 'El ID del inquilino debe ser un UUID v√°lido' })
  tenant_id?: string;

  @ApiProperty({
    description: 'Array de signos vitales registrados en la autoevaluaci√≥n',
    type: [VitalSignDto],
    example: [
      { vital_sign_id: 1, measure: 98.6 }, // Temperatura en ¬∞F
      { vital_sign_id: 2, measure: 120 }, // Presi√≥n sist√≥lica
    ],
  })
  @IsArray()
  @ArrayNotEmpty({ message: 'Debe proporcionar al menos un signo vital' })
  @ValidateNested({ each: true })
  @Type(() => VitalSignDto)
  vital_signs: VitalSignDto[];
}

// DTO simplificado para autoevaluaciones m√≥viles (solo signos vitales propios)
export class CreateMobileSelfEvaluationDto {
  @ApiProperty({
    description: 'Array de signos vitales registrados por el paciente',
    type: [VitalSignDto],
    example: [
      { vital_sign_id: 1, measure: 36.5 }, // Temperatura corporal en ¬∞C
      { vital_sign_id: 2, measure: 120 }, // Presi√≥n sist√≥lica en mmHg
      { vital_sign_id: 3, measure: 80 }, // Presi√≥n diast√≥lica en mmHg
      { vital_sign_id: 4, measure: 75 }, // Frecuencia card√≠aca en bpm
    ],
  })
  @IsArray({ message: 'vital_signs debe ser un array' })
  @ArrayNotEmpty({ message: 'Debe proporcionar al menos un signo vital' })
  @ValidateNested({ each: true })
  @Type(() => VitalSignDto)
  vital_signs: VitalSignDto[];
}

================
File: src/mobile-functions/self-evaluation-event/dto/latest-vital-signs-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';

export class MeasureUnitDto {
  @ApiProperty({
    description: 'ID of the measure unit',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Name of the measure unit',
    example: 'bpm',
  })
  name: string;

  @ApiProperty({
    description: 'Description of the measure unit',
    example: 'Latidos por minuto',
  })
  description: string;
}

export class VitalSignCatalogDto {
  @ApiProperty({
    description: 'ID of the vital sign catalog',
    example: 1,
  })
  id: number;

  @ApiProperty({
    description: 'Name of the vital sign',
    example: 'Frecuencia Card√≠aca',
  })
  name: string;

  @ApiProperty({
    description: 'Category of the vital sign',
    example: 'Cardiovascular',
  })
  category: string;

  @ApiProperty({
    description: 'Color associated with the vital sign',
    example: '#FF5733',
    nullable: true,
  })
  color?: string;

  @ApiProperty({
    description: 'Mini icon identifier',
    example: 'heart-mini',
    nullable: true,
  })
  mini_icon?: string;

  @ApiProperty({
    description: 'Icon identifier',
    example: 'heart-icon',
    nullable: true,
  })
  icon?: string;

  @ApiProperty({
    description: 'Background icon identifier',
    example: 'heart-background',
    nullable: true,
  })
  background_icon?: string;

  @ApiProperty({
    description: 'Normal minimum value',
    example: 60,
    nullable: true,
  })
  normal_min_value?: number;

  @ApiProperty({
    description: 'Normal maximum value',
    example: 100,
    nullable: true,
  })
  normal_max_value?: number;

  @ApiProperty({
    description: 'Slightly high value threshold',
    example: 120,
    nullable: true,
  })
  slightly_high_value?: number;

  @ApiProperty({
    description: 'High maximum value',
    example: 140,
    nullable: true,
  })
  high_max_value?: number;

  @ApiProperty({
    description: 'Critical maximum value',
    example: 180,
    nullable: true,
  })
  critical_max_value?: number;
}

export class LatestVitalSignDto {
  @ApiProperty({
    description: 'Vital sign catalog information',
    type: VitalSignCatalogDto,
  })
  vital_sign: VitalSignCatalogDto;

  @ApiProperty({
    description: 'Latest measured value or "Sin datos" if no data available',
    example: 98,
    oneOf: [{ type: 'number' }, { type: 'string', enum: ['Sin datos'] }],
  })
  measure: number | 'Sin datos';

  @ApiProperty({
    description: 'Date when the measurement was recorded',
    example: '2024-01-15T10:30:00.000Z',
    nullable: true,
  })
  created_at?: Date;

  @ApiProperty({
    description: 'Measure unit information',
    type: MeasureUnitDto,
    nullable: true,
  })
  cat_measure_unit?: MeasureUnitDto;
}

export class LatestVitalSignsResponseDto {
  @ApiProperty({
    description: 'Array of latest vital signs for all catalog types',
    type: [LatestVitalSignDto],
  })
  data: LatestVitalSignDto[];
}

================
File: src/mobile-functions/self-evaluation-event/dto/vital-sign-history-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';
import {
  VitalSignCatalogDto,
  MeasureUnitDto,
} from './latest-vital-signs-response.dto';

export class DayDataDto {
  @ApiProperty({
    description: 'Day of the month (1-31)',
    example: 15,
  })
  day: number;

  @ApiProperty({
    description: 'Average measure for the day or "Sin datos" if no records',
    example: 98.5,
    oneOf: [{ type: 'number' }, { type: 'string', enum: ['Sin datos'] }],
  })
  average_measure: number | 'Sin datos';

  @ApiProperty({
    description: 'Number of records for this day',
    example: 3,
  })
  records_count: number;
}

export class WeekDataDto {
  @ApiProperty({
    description: 'Week number in the month (1-6)',
    example: 2,
  })
  week_number: number;

  @ApiProperty({
    description: 'Start date of the week (Sunday)',
    example: '2023-10-08',
  })
  week_start: string;

  @ApiProperty({
    description: 'End date of the week (Saturday)',
    example: '2023-10-14',
  })
  week_end: string;

  @ApiProperty({
    description: 'Data for each day of the week (Sunday to Saturday)',
    type: [DayDataDto],
  })
  days: DayDataDto[];
}

export class MonthlyStatsDto {
  @ApiProperty({
    description: 'Last recorded value in the month',
    example: 102,
    nullable: true,
  })
  last_value?: number;

  @ApiProperty({
    description: 'Date of the last recorded value',
    example: '2023-10-28T14:30:00.000Z',
    nullable: true,
  })
  last_value_date?: Date;

  @ApiProperty({
    description: 'Maximum value recorded in the month',
    example: 110,
    nullable: true,
  })
  max_value?: number;

  @ApiProperty({
    description: 'Date of the maximum value',
    example: '2023-10-15T09:15:00.000Z',
    nullable: true,
  })
  max_value_date?: Date;

  @ApiProperty({
    description: 'Minimum value recorded in the month',
    example: 85,
    nullable: true,
  })
  min_value?: number;

  @ApiProperty({
    description: 'Date of the minimum value',
    example: '2023-10-03T07:45:00.000Z',
    nullable: true,
  })
  min_value_date?: Date;

  @ApiProperty({
    description: 'Average of all values recorded in the month',
    example: 96.8,
    nullable: true,
  })
  average_value?: number;

  @ApiProperty({
    description: 'Total number of records in the month',
    example: 25,
  })
  total_records: number;

  @ApiProperty({
    description: 'Number of records that exceeded critical thresholds (alerts)',
    example: 3,
  })
  alerts_count: number;
}

export class VitalSignHistoryResponseDto {
  @ApiProperty({
    description: 'Vital sign catalog information',
    type: VitalSignCatalogDto,
  })
  vital_sign: VitalSignCatalogDto;

  @ApiProperty({
    description: 'Measure unit information',
    type: MeasureUnitDto,
    nullable: true,
  })
  cat_measure_unit?: MeasureUnitDto;

  @ApiProperty({
    description: 'Requested month in YYYY-MM format',
    example: '2023-10',
  })
  month: string;

  @ApiProperty({
    description: 'Monthly statistics and analytics',
    type: MonthlyStatsDto,
  })
  monthly_stats: MonthlyStatsDto;

  @ApiProperty({
    description: 'Weekly data organization (Sunday to Saturday)',
    type: [WeekDataDto],
  })
  weekly_data: WeekDataDto[];
}

================
File: src/mobile-functions/self-evaluation-event/self-evaluation-event.controller.ts
================
import {
  Controller,
  Post,
  Body,
  Request,
  UseGuards,
  BadRequestException,
  Get,
  Param,
  Query,
  ParseIntPipe,
} from '@nestjs/common';
import { SelfEvaluationEventService } from './self-evaluation-event.service';
import {
  CreateSelfEvaluationEventDto,
  CreateMobileSelfEvaluationDto,
} from './dto/create-self-evaluation-event.dto';
import { RequirePermission } from '../../auth/decorators/require-permission.decorator';
import { Permission } from '../../auth/permissions/permission.enum';
import { PermissionGuard } from '../../auth/guards/permission.guard';
import { TenantAccessGuard } from '../../auth/guards/tenant-access.guard';
import { LatestVitalSignsResponseDto } from './dto/latest-vital-signs-response.dto';
import { VitalSignHistoryResponseDto } from './dto/vital-sign-history-response.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiBearerAuth,
  ApiHeader,
  ApiParam,
  ApiQuery,
} from '@nestjs/swagger';

@ApiTags('Mobile - Self-Evaluation Events (Signos Vitales)')
@ApiBearerAuth('access-token')
@Controller('mobile/self-evaluation-event')
@UseGuards(TenantAccessGuard, PermissionGuard)
export class SelfEvaluationEventController {
  constructor(
    private readonly selfEvaluationEventService: SelfEvaluationEventService,
  ) {}

  @Post()
  @RequirePermission(Permission.VIEW_PATIENT_DETAILS)
  @ApiHeader({
    name: 'tenant-id',
    description: 'ID del tenant',
    required: true,
  })
  @ApiOperation({
    summary: 'Crear un evento de autoevaluaci√≥n (para profesionales)',
    description:
      'Crea un nuevo evento de autoevaluaci√≥n con los signos vitales registrados asociado a un evento m√©dico espec√≠fico. Este endpoint est√° destinado a profesionales de la salud.',
  })
  @ApiBody({ type: CreateSelfEvaluationEventDto })
  @ApiResponse({
    status: 201,
    description: 'El evento de autoevaluaci√≥n ha sido creado exitosamente.',
  })
  @ApiResponse({
    status: 400,
    description:
      'Solicitud inv√°lida (datos faltantes, incorrectos o inconsistencia de tenant/paciente).',
  })
  @ApiResponse({
    status: 403,
    description:
      'Forbidden - No tiene permisos para crear eventos de autoevaluaci√≥n.',
  })
  async create(
    @Body() createSelfEvaluationEventDto: CreateSelfEvaluationEventDto,
    @Request() req,
  ) {
    // Verificar que el tenant_id en el DTO coincide con el tenant del request (solo si se proporciona)
    // Los signos vitales propios del paciente pueden no tener tenant_id asociado
    if (
      createSelfEvaluationEventDto.tenant_id &&
      createSelfEvaluationEventDto.tenant_id !== req.tenant?.id
    ) {
      throw new BadRequestException(
        'El tenant_id no coincide con el tenant del usuario',
      );
    }

    // Verificar que el patient_id en el DTO coincide con el usuario autenticado o tiene permisos
    if (
      createSelfEvaluationEventDto.patient_id !== req.user?.id &&
      !req.user?.is_superadmin &&
      req.user?.role !== 'physician'
    ) {
      throw new BadRequestException('No tiene permisos para crear este evento');
    }

    return this.selfEvaluationEventService.create(createSelfEvaluationEventDto);
  }

  @Post('vital-signs')
  @RequirePermission(Permission.REGISTER_OWN_VITAL_SIGNS)
  @ApiOperation({
    summary: 'Registrar signos vitales propios (para pacientes)',
    description:
      'Permite a los pacientes registrar sus propios signos vitales desde la aplicaci√≥n m√≥vil. El ID del paciente se extrae autom√°ticamente del JWT token. No requiere medical_event_id ni tenant_id ya que son datos propios del paciente.',
  })
  @ApiBody({
    type: CreateMobileSelfEvaluationDto,
    examples: {
      basic: {
        summary: 'Registro b√°sico de signos vitales',
        value: {
          vital_signs: [
            { vital_sign_id: 1, measure: 36.5 }, // Temperatura corporal
            { vital_sign_id: 2, measure: 120 }, // Presi√≥n sist√≥lica
            { vital_sign_id: 3, measure: 80 }, // Presi√≥n diast√≥lica
          ],
        },
      },
      complete: {
        summary: 'Registro completo de signos vitales',
        value: {
          vital_signs: [
            { vital_sign_id: 1, measure: 36.8 }, // Temperatura corporal
            { vital_sign_id: 2, measure: 125 }, // Presi√≥n sist√≥lica
            { vital_sign_id: 3, measure: 82 }, // Presi√≥n diast√≥lica
            { vital_sign_id: 4, measure: 78 }, // Frecuencia card√≠aca
            { vital_sign_id: 5, measure: 98 }, // Saturaci√≥n de ox√≠geno
            { vital_sign_id: 6, measure: 70.5 }, // Peso
          ],
        },
      },
    },
  })
  @ApiResponse({
    status: 201,
    description: 'Signos vitales registrados exitosamente.',
    content: {
      'application/json': {
        example: {
          id: 'uuid-evento',
          patient_id: 'uuid-paciente',
          medical_event_id: null,
          created_at: '2024-01-15T10:30:00Z',
          vital_signs: [
            {
              id: 'uuid-signo',
              measure: 36.5,
              vital_sign_name: 'Temperatura Corporal',
              measure_unit: '¬∞C',
              created_at: '2024-01-15T10:30:00Z',
            },
          ],
          message: 'Signos vitales registrados exitosamente',
        },
      },
    },
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Usuario no es paciente o datos inv√°lidos.',
    content: {
      'application/json': {
        examples: {
          notPatient: {
            summary: 'Usuario no es paciente',
            value: {
              statusCode: 400,
              message: 'Esta funcionalidad es solo para pacientes',
              error: 'Bad Request',
            },
          },
          invalidData: {
            summary: 'Datos de entrada inv√°lidos',
            value: {
              statusCode: 400,
              message: ['Debe proporcionar al menos un signo vital'],
              error: 'Bad Request',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: 401,
    description: 'Unauthorized - Token JWT inv√°lido o faltante.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - No tiene permisos para registrar signos vitales.',
  })
  async createMobileVitalSigns(
    @Body() createMobileSelfEvaluationDto: CreateMobileSelfEvaluationDto,
    @Request() req,
  ) {
    // Verificar que el usuario est√© autenticado
    if (!req.user || !req.user.id) {
      throw new BadRequestException('Usuario no autenticado');
    }

    // Verificar que sea un paciente
    if (req.user.role !== 'patient') {
      throw new BadRequestException(
        'Esta funcionalidad es solo para pacientes',
      );
    }

    const patientId = req.user.id;

    return this.selfEvaluationEventService.createMobileSelfEvaluation(
      patientId,
      createMobileSelfEvaluationDto,
    );
  }

  @Get('latest-vital-signs/all')
  @RequirePermission(Permission.VIEW_OWN_VITAL_SIGNS)
  @ApiOperation({
    summary: 'Obtener √∫ltimo registro de todos los signos vitales propios',
    description:
      'Obtiene el √∫ltimo valor registrado para cada tipo de signo vital del cat√°logo para el paciente autenticado. Incluye tanto signos vitales registrados por el propio paciente como los registrados por m√©dicos durante consultas. El ID del paciente se extrae autom√°ticamente del JWT token.',
  })
  @ApiResponse({
    status: 200,
    description: '√öltimos signos vitales obtenidos exitosamente.',
    type: LatestVitalSignsResponseDto,
  })
  @ApiResponse({
    status: 400,
    description: 'Bad Request - Usuario no es paciente.',
    content: {
      'application/json': {
        example: {
          statusCode: 400,
          message: 'Esta funcionalidad es solo para pacientes',
          error: 'Bad Request',
        },
      },
    },
  })
  @ApiResponse({
    status: 401,
    description: 'Unauthorized - Token JWT inv√°lido o faltante.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - No tiene permisos para ver esta informaci√≥n.',
  })
  @ApiResponse({
    status: 404,
    description: 'Not Found - Paciente no encontrado.',
  })
  async getLatestVitalSignsForAllCatalog(
    @Request() req,
  ): Promise<LatestVitalSignsResponseDto> {
    // Verificar que el usuario est√© autenticado
    if (!req.user || !req.user.id) {
      throw new BadRequestException('Usuario no autenticado');
    }

    // Verificar que sea un paciente
    if (req.user.role !== 'patient') {
      throw new BadRequestException(
        'Esta funcionalidad es solo para pacientes',
      );
    }

    const patientId = req.user.id;

    return this.selfEvaluationEventService.getLatestVitalSignsForAllCatalog(
      patientId,
    );
  }

  @Get('vital-signs/:vitalSignTypeId/history')
  @RequirePermission(Permission.VIEW_OWN_VITAL_SIGNS)
  @ApiOperation({
    summary:
      'Obtener historial y anal√≠tica de un signo vital espec√≠fico propio',
    description:
      'Obtiene un historial detallado y estad√≠sticas mensuales para un tipo de signo vital espec√≠fico del paciente autenticado. Incluye registros tanto del propio paciente como de m√©dicos durante consultas. Los datos est√°n organizados por semanas. El ID del paciente se extrae autom√°ticamente del JWT token.',
  })
  @ApiParam({
    name: 'vitalSignTypeId',
    type: 'number',
    description: 'ID del tipo de signo vital del cat√°logo (cat_vital_signs.id)',
    example: 1,
  })
  @ApiQuery({
    name: 'month',
    type: 'string',
    description: 'Mes para el cual se solicita el historial en formato YYYY-MM',
    example: '2023-10',
  })
  @ApiResponse({
    status: 200,
    description: 'Historial y estad√≠sticas obtenidas exitosamente.',
    type: VitalSignHistoryResponseDto,
  })
  @ApiResponse({
    status: 400,
    description:
      'Bad Request - Usuario no es paciente, formato de mes incorrecto o par√°metros faltantes.',
    content: {
      'application/json': {
        examples: {
          notPatient: {
            summary: 'Usuario no es paciente',
            value: {
              statusCode: 400,
              message: 'Esta funcionalidad es solo para pacientes',
              error: 'Bad Request',
            },
          },
          invalidMonth: {
            summary: 'Formato de mes inv√°lido',
            value: {
              statusCode: 400,
              message: 'El formato del mes debe ser YYYY-MM (ej. 2023-10)',
              error: 'Bad Request',
            },
          },
        },
      },
    },
  })
  @ApiResponse({
    status: 401,
    description: 'Unauthorized - Token JWT inv√°lido o faltante.',
  })
  @ApiResponse({
    status: 403,
    description: 'Forbidden - No tiene permisos para ver esta informaci√≥n.',
  })
  @ApiResponse({
    status: 404,
    description: 'Not Found - Paciente o tipo de signo vital no encontrado.',
  })
  async getVitalSignHistory(
    @Param('vitalSignTypeId', ParseIntPipe) vitalSignTypeId: number,
    @Query('month') month: string,
    @Request() req,
  ): Promise<VitalSignHistoryResponseDto> {
    // Verificar que el usuario est√© autenticado
    if (!req.user || !req.user.id) {
      throw new BadRequestException('Usuario no autenticado');
    }

    // Verificar que sea un paciente
    if (req.user.role !== 'patient') {
      throw new BadRequestException(
        'Esta funcionalidad es solo para pacientes',
      );
    }

    if (!month) {
      throw new BadRequestException('El par√°metro month es requerido');
    }

    const patientId = req.user.id;

    return this.selfEvaluationEventService.getVitalSignHistory(
      patientId,
      vitalSignTypeId,
      month,
    );
  }
}

================
File: src/mobile-functions/self-evaluation-event/self-evaluation-event.module.ts
================
import { Module } from '@nestjs/common';
import { SelfEvaluationEventService } from './self-evaluation-event.service';
import { SelfEvaluationEventController } from './self-evaluation-event.controller';
import { PrismaService } from '../../prisma/prisma.service';
import { GuardAuthModule } from '../../auth/guard-auth.module';
import { VitalSignsModule } from '../../medical-scheduling/modules/vital-signs/vital-signs.module';

@Module({
  imports: [GuardAuthModule, VitalSignsModule],
  controllers: [SelfEvaluationEventController],
  providers: [SelfEvaluationEventService, PrismaService],
})
export class SelfEvaluationEventModule {}

================
File: src/mobile-functions/self-evaluation-event/self-evaluation-event.service.ts
================
import {
  Injectable,
  BadRequestException,
  NotFoundException,
} from '@nestjs/common';
import { PrismaService } from '../../prisma/prisma.service';
import { CreateSelfEvaluationEventDto } from './dto/create-self-evaluation-event.dto';
import { CreateMobileSelfEvaluationDto } from './dto/create-self-evaluation-event.dto';
import { VitalSignsService } from '../../medical-scheduling/modules/vital-signs/vital-signs.service';
import {
  LatestVitalSignsResponseDto,
  LatestVitalSignDto,
} from './dto/latest-vital-signs-response.dto';
import {
  VitalSignHistoryResponseDto,
  MonthlyStatsDto,
  WeekDataDto,
  DayDataDto,
} from './dto/vital-sign-history-response.dto';

@Injectable()
export class SelfEvaluationEventService {
  constructor(
    private prisma: PrismaService,
    private vitalSignsService: VitalSignsService,
  ) {}

  /**
   * Crea un evento de autoevaluaci√≥n con sus signos vitales asociados
   * @param createSelfEvaluationEventDto Datos para crear el evento
   */
  async create(createSelfEvaluationEventDto: CreateSelfEvaluationEventDto) {
    const { patient_id, medical_event_id, vital_signs } =
      createSelfEvaluationEventDto;

    try {
      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patient_id },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      // Verificar que el evento m√©dico existe y pertenece al paciente
      const medicalEvent = await this.prisma.medical_event.findUnique({
        where: { id: medical_event_id },
        include: {
          patient: true,
        },
      });

      if (!medicalEvent) {
        throw new NotFoundException('Evento m√©dico no encontrado');
      }

      if (medicalEvent.patient_id !== patient.patient.id) {
        throw new BadRequestException(
          'El paciente no coincide con el evento m√©dico',
        );
      }

      return this.prisma.$transaction(async (tx) => {
        const selfEvaluationEvent = await tx.self_evaluation_event.create({
          data: {
            patient_id,
            medical_event_id,
          },
        });

        // Crear los signos vitales asociados
        if (vital_signs && vital_signs.length > 0) {
          await this.vitalSignsService.create({
            patient_id,
            self_evaluation_event_id: selfEvaluationEvent.id,
            vital_signs,
          });
        }

        // Obtener el evento completo con los signos vitales
        return await tx.self_evaluation_event.findUnique({
          where: { id: selfEvaluationEvent.id },
          include: {
            vital_signs: {
              include: {
                vital_sign: true,
              },
            },
          },
        });
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al crear evento de autoevaluaci√≥n: ${error.message}`,
      );
    }
  }

  /**
   * Crea una autoevaluaci√≥n m√≥vil con signos vitales propios del paciente
   * Este m√©todo no requiere medical_event_id ni tenant_id ya que son signos vitales independientes
   * @param patientId ID del paciente extra√≠do del JWT
   * @param createMobileSelfEvaluationDto Datos de signos vitales
   */
  async createMobileSelfEvaluation(
    patientId: string,
    createMobileSelfEvaluationDto: CreateMobileSelfEvaluationDto,
  ) {
    try {
      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patientId },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      const { vital_signs } = createMobileSelfEvaluationDto;

      return this.prisma.$transaction(async (tx) => {
        // Crear el evento de autoevaluaci√≥n sin medical_event_id ni tenant_id
        // Esto representa signos vitales propios del paciente, no de una consulta m√©dica
        const selfEvaluationEvent = await tx.self_evaluation_event.create({
          data: {
            patient_id: patientId,
            medical_event_id: null, // Campo opcional para autoevaluaciones
            tenant_id: null, // Campo opcional para signos vitales propios del paciente
          },
        });
        console.log('selfEvaluationEvent', selfEvaluationEvent);
        // Crear los signos vitales asociados directamente en la transacci√≥n
        if (vital_signs && vital_signs.length > 0) {
          for (const vs of vital_signs) {
            await tx.vital_signs.create({
              data: {
                patient_id: patientId,
                self_evaluation_event_id: selfEvaluationEvent.id,
                vital_sign_id: vs.vital_sign_id,
                measure: vs.measure,
                // tenant_id se omite (queda como null para signos vitales propios del paciente)
              },
            });
          }
        }

        // Obtener el evento completo con los signos vitales
        const result = await tx.self_evaluation_event.findUnique({
          where: { id: selfEvaluationEvent.id },
          include: {
            vital_signs: {
              include: {
                vital_sign: {
                  include: {
                    cat_measure_unit: true,
                  },
                },
              },
            },
          },
        });

        return {
          id: result.id,
          patient_id: result.patient_id,
          medical_event_id: result.medical_event_id,
          created_at: result.created_at,
          vital_signs: result.vital_signs.map((vs) => ({
            id: vs.id,
            measure: vs.measure,
            vital_sign_name: vs.vital_sign.name,
            measure_unit: vs.vital_sign.cat_measure_unit?.name,
            created_at: vs.created_at,
          })),
          message: 'Signos vitales registrados exitosamente',
        };
      });
    } catch (error) {
      if (
        error instanceof BadRequestException ||
        error instanceof NotFoundException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al registrar signos vitales: ${error.message}`,
      );
    }
  }

  /**
   * Obtiene el √∫ltimo registro de todos los signos vitales del cat√°logo para un paciente
   * @param patientId ID del paciente
   * @returns Array con el √∫ltimo valor de cada tipo de signo vital del cat√°logo
   */
  async getLatestVitalSignsForAllCatalog(
    patientId: string,
  ): Promise<LatestVitalSignsResponseDto> {
    try {
      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patientId },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      // Obtener todos los tipos de signos vitales del cat√°logo
      const vitalSignsCatalog = await this.prisma.cat_vital_signs.findMany({
        include: {
          cat_measure_unit: true,
        },
        orderBy: {
          name: 'asc',
        },
      });

      // Obtener los √∫ltimos registros de signos vitales usando una consulta optimizada
      // Usar DISTINCT ON para obtener el √∫ltimo registro de cada tipo de signo vital
      const latestVitalSignsRaw = (await this.prisma.$queryRaw`
        SELECT DISTINCT ON (vs.vital_sign_id)
          vs.id, vs.measure, vs.created_at, vs.vital_sign_id
        FROM vital_signs vs
        WHERE vs.patient_id = ${patientId} AND vs.deleted = FALSE
        ORDER BY vs.vital_sign_id, vs.created_at DESC
      `) as Array<{
        id: string;
        measure: string;
        created_at: Date;
        vital_sign_id: number;
      }>;

      // Crear un Map para acceso r√°pido a los registros por vital_sign_id
      const latestRecordsMap = new Map<
        number,
        {
          id: string;
          measure: string;
          created_at: Date;
          vital_sign_id: number;
        }
      >();

      latestVitalSignsRaw.forEach((record) => {
        latestRecordsMap.set(record.vital_sign_id, record);
      });

      const latestVitalSigns: LatestVitalSignDto[] = [];

      // Para cada tipo de signo vital del cat√°logo, combinar con los datos obtenidos
      for (const catalogItem of vitalSignsCatalog) {
        // Preparar la informaci√≥n del cat√°logo (excluyendo specialties como se especifica)
        const vitalSignCatalogInfo = {
          id: catalogItem.id,
          name: catalogItem.name,
          category: catalogItem.category,
          color: catalogItem.color,
          mini_icon: catalogItem.mini_icon,
          icon: catalogItem.icon,
          background_icon: catalogItem.background_icon,
          normal_min_value: catalogItem.normal_min_value,
          normal_max_value: catalogItem.normal_max_value,
          slightly_high_value: catalogItem.slightly_high_value,
          high_max_value: catalogItem.high_max_value,
          critical_max_value: catalogItem.critical_max_value,
        };

        // Buscar el registro m√°s reciente en el Map
        const latestRecord = latestRecordsMap.get(catalogItem.id);

        if (latestRecord) {
          // Si se encontr√≥ un registro, incluir los datos
          latestVitalSigns.push({
            vital_sign: vitalSignCatalogInfo,
            measure: parseFloat(latestRecord.measure) || 0,
            created_at: latestRecord.created_at,
            cat_measure_unit: catalogItem.cat_measure_unit
              ? {
                  id: catalogItem.cat_measure_unit.id,
                  name: catalogItem.cat_measure_unit.name,
                  description: catalogItem.cat_measure_unit.description,
                }
              : undefined,
          });
        } else {
          // Si no se encontr√≥ registro, marcar como "Sin datos"
          latestVitalSigns.push({
            vital_sign: vitalSignCatalogInfo,
            measure: 'Sin datos',
            created_at: undefined,
            cat_measure_unit: catalogItem.cat_measure_unit
              ? {
                  id: catalogItem.cat_measure_unit.id,
                  name: catalogItem.cat_measure_unit.name,
                  description: catalogItem.cat_measure_unit.description,
                }
              : undefined,
          });
        }
      }

      return {
        data: latestVitalSigns,
      };
    } catch (error) {
      if (error instanceof NotFoundException) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener los √∫ltimos signos vitales: ${error.message}`,
      );
    }
  }

  /**
   * Obtiene el historial y anal√≠tica de un signo vital espec√≠fico para un mes determinado
   * @param patientId ID del paciente
   * @param vitalSignTypeId ID del tipo de signo vital del cat√°logo
   * @param month Mes en formato YYYY-MM
   * @returns Historial detallado con estad√≠sticas mensuales y datos semanales
   */
  async getVitalSignHistory(
    patientId: string,
    vitalSignTypeId: number,
    month: string,
  ): Promise<VitalSignHistoryResponseDto> {
    try {
      // Validar formato del mes
      const monthRegex = /^\d{4}-\d{2}$/;
      if (!monthRegex.test(month)) {
        throw new BadRequestException(
          'El formato del mes debe ser YYYY-MM (ej. 2023-10)',
        );
      }

      // Verificar que el paciente existe
      const patient = await this.prisma.user.findUnique({
        where: { id: patientId },
        include: { patient: true },
      });

      if (!patient || !patient.patient) {
        throw new NotFoundException('Paciente no encontrado');
      }

      // Verificar que el tipo de signo vital existe
      const vitalSignType = await this.prisma.cat_vital_signs.findUnique({
        where: { id: vitalSignTypeId },
        include: {
          cat_measure_unit: true,
        },
      });

      if (!vitalSignType) {
        throw new NotFoundException('Tipo de signo vital no encontrado');
      }

      // Calcular fechas del mes
      const [year, monthNum] = month.split('-').map(Number);
      const startDate = new Date(year, monthNum - 1, 1);
      const endDate = new Date(year, monthNum, 0, 23, 59, 59, 999);

      // Obtener todos los registros del mes para este tipo de signo vital
      // NOTA: No filtramos por tenant_id intencionalmente
      // Los signos vitales propios del paciente (self-evaluation) no tienen tenant_id
      // y deben ser incluidos junto con los de consultas m√©dicas
      const monthlyRecords = await this.prisma.vital_signs.findMany({
        where: {
          patient_id: patientId,
          vital_sign_id: vitalSignTypeId,
          deleted: false,
          created_at: {
            gte: startDate,
            lte: endDate,
          },
        },
        orderBy: {
          created_at: 'asc',
        },
      });

      // Calcular estad√≠sticas mensuales
      const monthlyStats = this.calculateMonthlyStats(
        monthlyRecords,
        vitalSignType,
      );

      // Organizar datos por semanas
      const weeklyData = this.organizeWeeklyData(
        monthlyRecords,
        year,
        monthNum - 1,
      );

      // Preparar informaci√≥n del cat√°logo
      const vitalSignCatalogInfo = {
        id: vitalSignType.id,
        name: vitalSignType.name,
        category: vitalSignType.category,
        color: vitalSignType.color,
        mini_icon: vitalSignType.mini_icon,
        icon: vitalSignType.icon,
        background_icon: vitalSignType.background_icon,
        normal_min_value: vitalSignType.normal_min_value,
        normal_max_value: vitalSignType.normal_max_value,
        slightly_high_value: vitalSignType.slightly_high_value,
        high_max_value: vitalSignType.high_max_value,
        critical_max_value: vitalSignType.critical_max_value,
      };

      return {
        vital_sign: vitalSignCatalogInfo,
        cat_measure_unit: vitalSignType.cat_measure_unit
          ? {
              id: vitalSignType.cat_measure_unit.id,
              name: vitalSignType.cat_measure_unit.name,
              description: vitalSignType.cat_measure_unit.description,
            }
          : undefined,
        month,
        monthly_stats: monthlyStats,
        weekly_data: weeklyData,
      };
    } catch (error) {
      if (
        error instanceof NotFoundException ||
        error instanceof BadRequestException
      ) {
        throw error;
      }
      throw new BadRequestException(
        `Error al obtener el historial del signo vital: ${error.message}`,
      );
    }
  }

  /**
   * Calcula las estad√≠sticas mensuales de los registros
   */
  private calculateMonthlyStats(
    records: any[],
    vitalSignType: any,
  ): MonthlyStatsDto {
    if (records.length === 0) {
      return {
        last_value: undefined,
        last_value_date: undefined,
        max_value: undefined,
        max_value_date: undefined,
        min_value: undefined,
        min_value_date: undefined,
        average_value: undefined,
        total_records: 0,
        alerts_count: 0,
      };
    }

    // Ordenar por fecha para obtener el √∫ltimo
    const sortedRecords = [...records].sort(
      (a, b) =>
        new Date(b.created_at).getTime() - new Date(a.created_at).getTime(),
    );

    const lastRecord = sortedRecords[0];
    const measures = records.map((r) => r.measure);

    // Calcular estad√≠sticas b√°sicas
    const maxValue = Math.max(...measures);
    const minValue = Math.min(...measures);
    const averageValue =
      measures.reduce((sum, val) => sum + val, 0) / measures.length;

    // Encontrar registros con valores m√°ximo y m√≠nimo
    const maxRecord = records.find((r) => r.measure === maxValue);
    const minRecord = records.find((r) => r.measure === minValue);

    // Contar alertas (valores que superan el umbral cr√≠tico)
    let alertsCount = 0;
    if (vitalSignType.critical_max_value !== null) {
      alertsCount = records.filter(
        (r) => r.measure > vitalSignType.critical_max_value,
      ).length;
    }

    return {
      last_value: lastRecord.measure,
      last_value_date: lastRecord.created_at,
      max_value: maxValue,
      max_value_date: maxRecord.created_at,
      min_value: minValue,
      min_value_date: minRecord.created_at,
      average_value: Math.round(averageValue * 100) / 100, // Redondear a 2 decimales
      total_records: records.length,
      alerts_count: alertsCount,
    };
  }

  /**
   * Organiza los datos por semanas (domingo a s√°bado)
   */
  private organizeWeeklyData(
    records: any[],
    year: number,
    month: number,
  ): WeekDataDto[] {
    const weeks: WeekDataDto[] = [];
    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);

    // Agrupar registros por d√≠a
    const recordsByDay = new Map<number, any[]>();
    records.forEach((record) => {
      const day = new Date(record.created_at).getDate();
      if (!recordsByDay.has(day)) {
        recordsByDay.set(day, []);
      }
      recordsByDay.get(day)!.push(record);
    });

    // Encontrar el primer domingo del mes o anterior
    let currentDate: Date = new Date(firstDay);
    while (currentDate.getDay() !== 0) {
      currentDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000); // Restar un d√≠a
    }

    let weekNumber = 1;

    while (currentDate <= lastDay || currentDate.getMonth() === month) {
      const weekStart = new Date(currentDate);
      const weekEnd = new Date(currentDate);
      weekEnd.setDate(weekEnd.getDate() + 6);

      const days: DayDataDto[] = [];

      // Generar datos para cada d√≠a de la semana (domingo a s√°bado)
      for (let i = 0; i < 7; i++) {
        const dayDate = new Date(weekStart);
        dayDate.setDate(dayDate.getDate() + i);
        const day = dayDate.getDate();

        // Solo incluir d√≠as que pertenecen al mes solicitado
        if (dayDate.getMonth() === month) {
          const dayRecords = recordsByDay.get(day) || [];

          let averageMeasure: number | 'Sin datos' = 'Sin datos';
          if (dayRecords.length > 0) {
            const sum = dayRecords.reduce(
              (acc, record) => acc + record.measure,
              0,
            );
            averageMeasure = Math.round((sum / dayRecords.length) * 100) / 100;
          }

          days.push({
            day,
            average_measure: averageMeasure,
            records_count: dayRecords.length,
          });
        }
      }

      // Solo agregar la semana si tiene d√≠as del mes solicitado
      if (days.length > 0) {
        weeks.push({
          week_number: weekNumber,
          week_start: weekStart.toISOString().split('T')[0],
          week_end: weekEnd.toISOString().split('T')[0],
          days,
        });
        weekNumber++;
      }

      // Avanzar a la siguiente semana
      currentDate = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000); // Avanzar 7 d√≠as

      // Salir si ya pasamos el mes y no hay m√°s d√≠as del mes en la semana actual
      if (currentDate.getMonth() > month) {
        break;
      }
    }

    return weeks;
  }
}

================
File: src/prisma/prisma.module.ts
================
import { Module } from '@nestjs/common';
import { PrismaService } from './prisma.service';

@Module({
  providers: [PrismaService],
  exports: [PrismaService],
})
export class PrismaModule {}

================
File: src/prisma/prisma.service.ts
================
import {
  Injectable,
  OnModuleInit,
  OnModuleDestroy,
  Logger,
} from '@nestjs/common';
import { PrismaClient } from '@prisma/client';
import { ClsService } from 'nestjs-cls';
import { tenantPrismaMiddleware } from 'src/utils/middlewares/tenantPrismaMiddleware';
import { loggingPrismaMiddleware } from 'src/utils/middlewares/loggingPrismaMiddleware';

@Injectable()
export class PrismaService
  extends PrismaClient
  implements OnModuleInit, OnModuleDestroy
{
  private readonly logger = new Logger(PrismaService.name);

  constructor(private readonly clsService: ClsService) {
    super({
      log: ['query', 'info', 'warn', 'error'],
    });
  }

  async onModuleInit() {
    await this.$connect();

    // Configurar event listeners para los logs usando any para evitar problemas de tipos
    (this as any).$on('query', (e: any) => {
      this.logger.debug(`Query: ${e.query}`);
      this.logger.debug(`Params: ${e.params}`);
      this.logger.debug(`Duration: ${e.duration}ms`);
    });

    (this as any).$on('info', (e: any) => {
      this.logger.log(e.message);
    });

    (this as any).$on('warn', (e: any) => {
      this.logger.warn(e.message);
    });

    (this as any).$on('error', (e: any) => {
      this.logger.error(e.message);
    });

    // Middleware de logging detallado (solo en desarrollo)
    if (process.env.NODE_ENV === 'development') {
      this.$use(loggingPrismaMiddleware());
      this.logger.log(
        'Prisma detailed logging middleware enabled (development only)',
      );
    }

    // Middleware refactorizado con soporte multi-tenant y CLS
    this.$use(tenantPrismaMiddleware(this.clsService));

    this.logger.log('Prisma connected with logging enabled');
    this.logger.log(
      'Prisma middleware registered with multi-tenant support and CLS',
    );
  }

  async onModuleDestroy() {
    await this.$disconnect();
  }
}

================
File: src/queues/notification-queue.module.ts
================
import { BullModule } from '@nestjs/bullmq';
import { Module } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { NotificationQueueService } from './notification-queue.service';
import { NotificationProcessor } from './notification.processor';
import { EmailService } from '../services/email/email.service';
import { TwilioService } from '../services/twilio/twilio.service';

export const NOTIFICATION_QUEUE = 'notification';

@Module({
  imports: [
    BullModule.forRootAsync({
      imports: [ConfigModule],
      useFactory: async (configService: ConfigService) => ({
        connection: {
          host: configService.get('REDIS_HOST', 'localhost'),
          port: configService.get('REDIS_PORT', 6379),
          password: configService.get('REDIS_PASSWORD'),
          db: configService.get('REDIS_DB', 0),
        },
        defaultJobOptions: {
          removeOnComplete: 50, // Keep last 50 completed jobs
          removeOnFail: 100, // Keep last 100 failed jobs
          attempts: 3,
          backoff: {
            type: 'exponential',
            delay: 2000,
          },
        },
      }),
      inject: [ConfigService],
    }),
    BullModule.registerQueue({
      name: NOTIFICATION_QUEUE,
      defaultJobOptions: {
        removeOnComplete: 50,
        removeOnFail: 100,
        attempts: 3,
        backoff: {
          type: 'exponential',
          delay: 2000,
        },
      },
    }),
  ],
  providers: [
    NotificationQueueService,
    NotificationProcessor,
    EmailService,
    TwilioService,
  ],
  exports: [NotificationQueueService],
})
export class NotificationQueueModule {}

================
File: src/queues/notification-queue.service.ts
================
import { InjectQueue } from '@nestjs/bullmq';
import { Injectable, Logger } from '@nestjs/common';
import { Queue } from 'bullmq';
import { NOTIFICATION_QUEUE } from './notification-queue.module';
import {
  PatientNotificationData,
  MedicalOrderData,
  MedicalOrderTypeData,
} from '../services/notification/notification.service';
import { MedicationItemInterface } from '../medical-scheduling/modules/prescription/prescription.service';

export enum NotificationJobType {
  MEDICAL_ORDER = 'medical-order',
  MEDICATION_UPDATE = 'medication-update',
}

export interface MedicalOrderNotificationJobData {
  type: NotificationJobType.MEDICAL_ORDER;
  patient: PatientNotificationData;
  order: MedicalOrderData;
  orderType: MedicalOrderTypeData;
  physicianName?: string;
  medications?: MedicationItemInterface[];
}

export interface MedicationUpdateNotificationJobData {
  type: NotificationJobType.MEDICATION_UPDATE;
  patient: PatientNotificationData;
  medications: MedicationItemInterface[];
  physicianName?: string;
  fileUrl?: string;
}

export type NotificationJobData =
  | MedicalOrderNotificationJobData
  | MedicationUpdateNotificationJobData;

@Injectable()
export class NotificationQueueService {
  private readonly logger = new Logger(NotificationQueueService.name);

  constructor(
    @InjectQueue(NOTIFICATION_QUEUE) private notificationQueue: Queue,
  ) {}

  /**
   * Enqueue a medical order notification
   */
  async enqueueMedicalOrderNotification(
    patient: PatientNotificationData,
    order: MedicalOrderData,
    orderType: MedicalOrderTypeData,
    physicianName?: string,
    medications?: MedicationItemInterface[],
    priority: number = 0,
    delay?: number,
  ): Promise<void> {
    try {
      const jobData: MedicalOrderNotificationJobData = {
        type: NotificationJobType.MEDICAL_ORDER,
        patient,
        order,
        orderType,
        physicianName,
        medications,
      };

      const job = await this.notificationQueue.add(
        NotificationJobType.MEDICAL_ORDER,
        jobData,
        {
          priority,
          delay,
          // Add unique job ID to prevent duplicates
          jobId: `medical-order-${order.id}-${patient.id}-${Date.now()}`,
        },
      );

      this.logger.log(
        `Medical order notification job enqueued: ${job.id} for patient ${patient.id}`,
      );
    } catch (error) {
      this.logger.error(
        `Failed to enqueue medical order notification for patient ${patient.id}:`,
        error,
      );
      throw error;
    }
  }

  /**
   * Enqueue a medication update notification
   */
  async enqueueMedicationUpdateNotification(
    patient: PatientNotificationData,
    medications: MedicationItemInterface[],
    physicianName?: string,
    fileUrl?: string,
    priority: number = 0,
    delay?: number,
  ): Promise<void> {
    try {
      const jobData: MedicationUpdateNotificationJobData = {
        type: NotificationJobType.MEDICATION_UPDATE,
        patient,
        medications,
        physicianName,
        fileUrl,
      };

      const job = await this.notificationQueue.add(
        NotificationJobType.MEDICATION_UPDATE,
        jobData,
        {
          priority,
          delay,
          // Add unique job ID to prevent duplicates
          jobId: `medication-update-${patient.id}-${Date.now()}`,
        },
      );

      this.logger.log(
        `Medication update notification job enqueued: ${job.id} for patient ${patient.id}`,
      );
    } catch (error) {
      this.logger.error(
        `Failed to enqueue medication update notification for patient ${patient.id}:`,
        error,
      );
      throw error;
    }
  }

  /**
   * Get queue statistics
   */
  async getQueueStats() {
    const waiting = await this.notificationQueue.getWaiting();
    const active = await this.notificationQueue.getActive();
    const completed = await this.notificationQueue.getCompleted();
    const failed = await this.notificationQueue.getFailed();

    return {
      waiting: waiting.length,
      active: active.length,
      completed: completed.length,
      failed: failed.length,
    };
  }

  /**
   * Clean old jobs from the queue
   */
  async cleanOldJobs() {
    try {
      await this.notificationQueue.clean(24 * 60 * 60 * 1000, 100, 'completed'); // Remove completed jobs older than 24h
      await this.notificationQueue.clean(7 * 24 * 60 * 60 * 1000, 50, 'failed'); // Remove failed jobs older than 7 days
      this.logger.log('Old notification jobs cleaned successfully');
    } catch (error) {
      this.logger.error('Failed to clean old notification jobs:', error);
    }
  }

  /**
   * Pause the queue
   */
  async pauseQueue(): Promise<void> {
    await this.notificationQueue.pause();
    this.logger.warn('Notification queue paused');
  }

  /**
   * Resume the queue
   */
  async resumeQueue(): Promise<void> {
    await this.notificationQueue.resume();
    this.logger.log('Notification queue resumed');
  }
}

================
File: src/queues/notification.processor.ts
================
import { Processor, WorkerHost } from '@nestjs/bullmq';
import { Logger } from '@nestjs/common';
import { Job } from 'bullmq';
import { NOTIFICATION_QUEUE } from './notification-queue.module';
import {
  NotificationJobData,
  NotificationJobType,
  MedicalOrderNotificationJobData,
  MedicationUpdateNotificationJobData,
} from './notification-queue.service';
import { EmailService } from '../services/email/email.service';
import { TwilioService } from '../services/twilio/twilio.service';
import { medicalOrderHtml } from '../services/email/templates/medicalOrderHtml';
import { medicationHtml } from '../services/email/templates/medicationHtml';

@Processor(NOTIFICATION_QUEUE)
export class NotificationProcessor extends WorkerHost {
  private readonly logger = new Logger(NotificationProcessor.name);

  constructor(
    private readonly emailService: EmailService,
    private readonly twilioService: TwilioService,
  ) {
    super();
  }

  async process(job: Job<NotificationJobData>): Promise<void> {
    this.logger.log(
      `Processing notification job: ${job.id}, type: ${job.data.type}`,
    );

    try {
      switch (job.data.type) {
        case NotificationJobType.MEDICAL_ORDER:
          await this.processMedicalOrderNotification(job.data);
          break;
        case NotificationJobType.MEDICATION_UPDATE:
          await this.processMedicationUpdateNotification(job.data);
          break;
        default:
          throw new Error(
            `Unknown notification job type: ${(job.data as any).type}`,
          );
      }

      this.logger.log(`Notification job ${job.id} completed successfully`);
    } catch (error) {
      this.logger.error(`Notification job ${job.id} failed:`, error);
      throw error; // This will mark the job as failed and trigger retry
    }
  }

  private async processMedicalOrderNotification(
    data: MedicalOrderNotificationJobData,
  ): Promise<void> {
    const { patient, order, orderType, physicianName, medications } = data;

    try {
      // Determine email content and subject based on order type
      let emailContent: string;
      let emailSubject: string;

      if (
        orderType.name === 'medication' ||
        orderType.name === 'medication-authorization'
      ) {
        emailContent = medicationHtml(
          patient.name,
          patient.last_name || '',
          medications || [],
          physicianName || 'su m√©dico',
        );
        emailSubject = `Nuevas medicaciones prescritas`;
      } else {
        emailContent = medicalOrderHtml(
          patient.name,
          patient.last_name || '',
          orderType.description,
          new Date(order.request_date).toLocaleDateString(),
          physicianName || 'No especificado',
          order.description_type,
          order.url,
        );
        emailSubject = `Nueva orden m√©dica: ${orderType.description}`;
      }

      // Prepare attachments if there's a document URL
      let attachments = [];
      if (order.url) {
        try {
          const attachment = await this.emailService.getAttachmentFromUrl(
            order.url,
          );
          attachments = [attachment];
        } catch (attachmentError) {
          this.logger.warn(
            `Error preparing attachment for job ${order.id}:`,
            attachmentError,
          );
          // Continue without attachment if there's an error
        }
      }

      // Send email notification
      if (patient.email) {
        try {
          await this.emailService.sendMail(
            patient.email,
            emailSubject,
            emailContent,
            attachments.length > 0 ? attachments : undefined,
          );
          this.logger.log(`Email sent successfully to ${patient.email}`);
        } catch (emailError) {
          this.logger.error(
            `Error sending email to ${patient.email}:`,
            emailError,
          );
          // Don't throw error here, continue with other notifications
        }
      }

      // Send WhatsApp notification if available
      if (patient.phone && patient.is_phone_verified) {
        try {
          let whatsappMessage: string;

          if (
            orderType.name === 'medication' ||
            orderType.name === 'medication-authorization'
          ) {
            const medicationListText = (medications || [])
              .map(
                (med) =>
                  `‚Ä¢ ${med.monodrug}: ${med.dose} ${med.dose_units}, ${med.frecuency}, por ${med.duration} ${med.duration_units}` +
                  (med.observations
                    ? `\n  _Observaciones: ${med.observations}_`
                    : ''),
              )
              .join('\n');

            whatsappMessage = `Hola ${patient.name},

Durante su consulta, el Dr./Dra. ${physicianName || 'su m√©dico'} ha prescrito las siguientes medicaciones:

${medicationListText}

Por favor, siga las indicaciones de su m√©dico y tome sus medicamentos seg√∫n lo prescrito.

SEGIMED - Sistema de Gesti√≥n M√©dica`;
          } else {
            whatsappMessage = `Hola ${patient.name},
Se ha generado una nueva orden m√©dica de tipo *${orderType.description}* para usted.

*Detalles de la orden:*
‚Ä¢ Fecha: ${new Date(order.request_date).toLocaleDateString()}
‚Ä¢ M√©dico: ${physicianName || 'No especificado'}
${order.description_type ? `‚Ä¢ Descripci√≥n: ${order.description_type}` : ''}

Si tiene alguna pregunta, contacte a su m√©dico.

SEGIMED - Sistema de Gesti√≥n M√©dica`;
          }

          // Send WhatsApp with or without media attachment
          if (order.url) {
            await this.twilioService.sendWhatsAppWithMedia(
              patient.phone,
              whatsappMessage,
              order.url,
            );
          } else {
            await this.twilioService.sendOtp(patient.phone, whatsappMessage);
          }

          this.logger.log(`WhatsApp sent successfully to ${patient.phone}`);
        } catch (whatsappError) {
          this.logger.error(
            `Error sending WhatsApp to ${patient.phone}:`,
            whatsappError,
          );
          // Don't throw error here, continue with processing
        }
      }
    } catch (error) {
      this.logger.error(`Error processing medical order notification:`, error);
      throw error;
    }
  }

  private async processMedicationUpdateNotification(
    data: MedicationUpdateNotificationJobData,
  ): Promise<void> {
    const { patient, medications, physicianName, fileUrl } = data;

    try {
      // Prepare attachments if there's a file URL
      let attachments = [];
      if (fileUrl) {
        try {
          const attachment =
            await this.emailService.getAttachmentFromUrl(fileUrl);
          attachments = [attachment];
        } catch (attachmentError) {
          this.logger.warn(
            `Error preparing attachment for medication update:`,
            attachmentError,
          );
          // Continue without attachment if there's an error
        }
      }

      // Send email notification
      if (patient.email) {
        try {
          const emailContent = medicationHtml(
            patient.name,
            patient.last_name || '',
            medications,
            physicianName || 'su m√©dico',
          );
          await this.emailService.sendMail(
            patient.email,
            `Nuevas medicaciones prescritas`,
            emailContent,
            attachments.length > 0 ? attachments : undefined,
          );
          this.logger.log(`Medication update email sent to ${patient.email}`);
        } catch (emailError) {
          this.logger.error(
            `Error sending medication update email to ${patient.email}:`,
            emailError,
          );
          // Don't throw error here, continue with other notifications
        }
      }

      // Send WhatsApp notification if available
      if (patient.phone && patient.is_phone_verified) {
        try {
          const medicationListText = medications
            .map(
              (med) =>
                `‚Ä¢ ${med.monodrug}: ${med.dose} ${med.dose_units}, ${med.frecuency}, por ${med.duration} ${med.duration_units}` +
                (med.observations
                  ? `\n  _Observaciones: ${med.observations}_`
                  : ''),
            )
            .join('\n');

          const whatsappMessage = `Hola ${patient.name},

Durante su consulta, el Dr./Dra. ${physicianName || 'su m√©dico'} ha prescrito las siguientes medicaciones:

${medicationListText}

Por favor, siga las indicaciones de su m√©dico y tome sus medicamentos seg√∫n lo prescrito.

SEGIMED - Sistema de Gesti√≥n M√©dica`;

          // Send WhatsApp with or without media attachment
          if (fileUrl) {
            await this.twilioService.sendWhatsAppWithMedia(
              patient.phone,
              whatsappMessage,
              fileUrl,
            );
          } else {
            await this.twilioService.sendOtp(patient.phone, whatsappMessage);
          }

          this.logger.log(
            `Medication update WhatsApp sent to ${patient.phone}`,
          );
        } catch (whatsappError) {
          this.logger.error(
            `Error sending medication update WhatsApp to ${patient.phone}:`,
            whatsappError,
          );
          // Don't throw error here, continue with processing
        }
      }
    } catch (error) {
      this.logger.error(
        `Error processing medication update notification:`,
        error,
      );
      throw error;
    }
  }
}

================
File: src/scripts/test-scheduler.ts
================
// Test script para verificar el MedicationSchedulerService
import { NestFactory } from '@nestjs/core';
import { AppModule } from '../app.module';
import { MedicationSchedulerService } from '../services/medication-scheduler/medication-scheduler.service';

async function testScheduler() {
  console.log('üöÄ Iniciando test del MedicationSchedulerService...');

  try {
    const app = await NestFactory.createApplicationContext(AppModule);
    const schedulerService = app.get(MedicationSchedulerService);

    console.log('‚úÖ Servicio obtenido correctamente');

    // Test manual del m√©todo principal
    console.log('üîÑ Ejecutando processScheduledReminders...');
    await schedulerService.processScheduledReminders();
    console.log('‚úÖ processScheduledReminders ejecutado exitosamente');

    await app.close();
    console.log('üéâ Test completado exitosamente');
  } catch (error) {
    console.error('‚ùå Error durante el test:', error);
    process.exit(1);
  }
}

testScheduler();

================
File: src/services/email/email.module.ts
================
import { Global, Module } from '@nestjs/common';
import { EmailService } from './email.service';
@Global()
@Module({
  providers: [EmailService],
  exports: [EmailService],
  controllers: [],
})
export class EmailModule {}

================
File: src/services/email/email.service.ts
================
import { Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { google } from 'googleapis';
import * as path from 'path';
import * as nodeFetch from 'node-fetch';

interface Attachment {
  filename: string;
  content: string; // Base64 encoded content
  mimeType: string;
}

@Injectable()
export class EmailService {
  private oauth2Client;
  private gmail;
  constructor(private configService: ConfigService) {
    const MAIL_CLIENT_ID = this.configService.get<string>('MAIL_CLIENT_ID');
    const MAIL_CLIENT_SECRET =
      this.configService.get<string>('MAIL_CLIENT_SECRET');
    const MAIL_REFRESH_TOKEN =
      this.configService.get<string>('MAIL_REFRESH_TOKEN');

    this.oauth2Client = new google.auth.OAuth2(
      MAIL_CLIENT_ID,
      MAIL_CLIENT_SECRET,
    );

    this.oauth2Client.setCredentials({
      refresh_token: MAIL_REFRESH_TOKEN,
    });

    this.gmail = google.gmail({ version: 'v1', auth: this.oauth2Client });
  }

  private encodeBase64URL(str: string) {
    return Buffer.from(str, 'utf8')
      .toString('base64')
      .replace(/\+/g, '-')
      .replace(/\//g, '_')
      .replace(/=+$/, '');
  }

  private encodeMIMEHeader(text: string) {
    return `=?UTF-8?B?${Buffer.from(text, 'utf8').toString('base64')}?=`;
  }

  async sendMail(
    destination: string,
    mailSubject: string,
    mailBody: string,
    attachments?: Attachment[],
  ) {
    const encodedSubject = this.encodeMIMEHeader(mailSubject);
    const boundary = 'boundary_' + Date.now().toString();

    let message = [
      `To: ${destination}`,
      `From: ${this.configService.get('SENDER_MAIL_ADDRESS')}`,
      `Subject: ${encodedSubject}`,
      'MIME-Version: 1.0',
    ];

    if (attachments && attachments.length > 0) {
      // Mensaje con adjuntos
      message = [
        ...message,
        `Content-Type: multipart/mixed; boundary=${boundary}`,
        '',
        `--${boundary}`,
        'Content-Type: text/html; charset=utf-8',
        'Content-Transfer-Encoding: base64',
        '',
        Buffer.from(mailBody).toString('base64'),
      ];

      // Agregar cada adjunto
      for (const attachment of attachments) {
        message = [
          ...message,
          `--${boundary}`,
          `Content-Type: ${attachment.mimeType}`,
          'Content-Transfer-Encoding: base64',
          `Content-Disposition: attachment; filename="${attachment.filename}"`,
          '',
          attachment.content,
        ];
      }

      // Cerrar el boundary
      message = [...message, `--${boundary}--`];
    } else {
      // Mensaje sin adjuntos
      message = [
        ...message,
        'Content-Type: text/html; charset=utf-8',
        '',
        mailBody,
      ];
    }

    const encodedMessage = this.encodeBase64URL(message.join('\n'));

    try {
      const response = await this.gmail.users.messages.send({
        userId: 'me',
        resource: {
          raw: encodedMessage,
        },
      });

      return response.data;
    } catch (error) {
      console.error('Error al enviar el correo:', error);
      throw new Error('Error al enviar el correo');
    }
  }

  /**
   * Descarga un archivo desde una URL y lo convierte a base64
   * @param url URL del archivo a descargar
   * @returns Objeto con el contenido en base64, nombre de archivo y tipo MIME
   */
  async getAttachmentFromUrl(url: string): Promise<Attachment> {
    try {
      const response = await nodeFetch(url);

      if (!response.ok) {
        throw new Error(
          `Error al descargar el archivo: ${response.statusText}`,
        );
      }

      const buffer = await response.buffer();
      const contentType =
        response.headers.get('content-type') || 'application/octet-stream';
      const filename = path.basename(url).split('?')[0]; // Obtener el nombre del archivo de la URL

      return {
        filename,
        content: buffer.toString('base64'),
        mimeType: contentType,
      };
    } catch (error) {
      console.error('Error al obtener el archivo adjunto:', error);
      throw new Error('Error al obtener el archivo adjunto');
    }
  }
}

================
File: src/services/email/templates/credentialsHtml.ts
================
export const sendCredentialsHtml = (
  email: string,
  password: string,
): string => {
  return `<!DOCTYPE html>
  <html>
    <head>
      <meta
        name="viewport"
        content="width=device-width,initial-scale=1,maximum-scale=2,shrink-to-fit=no" />
      <title>Credenciales de acceso</title>
      <style>
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }
        body {
          font-family: "Poppins", sans-serif;
          background-color: #fafafc;
          margin: 0;
          padding: 0;
          width: 600px;
        }
        .container {
          width: 100%;
          padding: 20px 0;
          text-align: center;
          background-color: #fafafc;
        }
        .email-content {
          width: 90%;
          padding: 0 15px;
          max-width: 600px;
          margin: 0 auto;
          background-color: #fff;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .logo-container {
          padding: 20px 0;
        }
        .logo-container img {
          display: block;
          margin: 0 auto;
          width: 180px;
        }
        .content {
          padding: 45px 0 20px 0;
          text-align: center;
          color: #808080;
          font-size: 16px;
          width: 100%;
          margin: 0 auto;
        }
        .content h1 {
          font-size: 32px;
          color: #487ffa;
          font-weight: 500;
          margin-bottom: 30px;
        }
        .credentials {
          font-size: 18px;
          background-color: #f4f4f4;
          padding: 15px;
          border-radius: 5px;
          display: inline-block;
          margin-top: 10px;
        }
        .footer {
          padding: 40px 0;
          font-size: 14px;
          color: #808080;
          width: 60%;
          margin: 0 auto;
          text-align: center;
        }
        @media only screen and (max-width: 600px) {
          body {
            width: 90%;
          }
          .email-content {
            width: 100% !important;
            box-shadow: none;
          }
          .logo-container img {
            width: 150px;
          }
          .content {
            padding: 30px 10px 10px 10px;
            font-size: 18px;
            width: 100%;
          }
          .content h1 {
            font-size: 28px;
          }
          .footer {
            padding: 20px 0;
            font-size: 12px;
            width: 100%;
          }
        }
      </style>
    </head>
    <body>
      <table class="container" cellpadding="0" cellspacing="0" width="100%">
        <tr>
          <td align="center" class="logo-container">
            <img
              src="https://res.cloudinary.com/dya1ekkd5/image/upload/v1721930541/oidzxqlccwuewq2daqoa.png"
              alt="Logo" />
          </td>
        </tr>
        <tr>
          <td align="center">
            <table
              class="email-content"
              cellpadding="0"
              cellspacing="0"
              width="100%">
              <tr>
                <td class="content">
                  <h1>Bienvenido a nuestra plataforma</h1>
                  <p>Estas son tus credenciales de acceso:</p>
                  <p class="credentials"><strong>Email:</strong> ${email}</p>
                  <p class="credentials"><strong>Contrase√±a:</strong> ${password}</p>
                  <p>Te recomendamos cambiar tu contrase√±a despu√©s de iniciar sesi√≥n.</p>
                </td>
              </tr>
              <tr>
                <td class="footer">
                  <p>
                    Si no solicitaste estas credenciales, por favor ignora este correo.
                  </p>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </body>
  </html>
    `;
};

================
File: src/services/email/templates/medicalOrderHtml.ts
================
export const medicalOrderHtml = (
  patientName: string,
  patientLastName: string,
  orderType: string,
  orderDate: string,
  physicianName: string,
  description?: string,
  url?: string,
): string => {
  return `<!DOCTYPE html>
<html>
  <head>
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=2,shrink-to-fit=no" />
    <title>Nueva Orden M√©dica</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: "Poppins", sans-serif;
        background-color: #fafafc;
        margin: 0;
        padding: 0;
        width: 600px;
      }
      .container {
        width: 100%;
        padding: 20px 0;
        text-align: center;
        background-color: #fafafc;
      }
      .email-content {
        width: 90%;
        padding: 0 15px;
        max-width: 600px;
        margin: 0 auto;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .logo-container {
        padding: 20px 0;
      }
      .logo-container img {
        display: block;
        margin: 0 auto;
        width: 180px;
      }
      .content {
        padding: 45px 0 20px 0;
        text-align: center;
        color: #808080;
        font-size: 16px;
        width: 100%;
        margin: 0 auto;
      }
      .content h1 {
        font-size: 32px;
        color: #487ffa;
        font-weight: 500;
        margin-bottom: 30px;
      }
      .content p {
        margin-bottom: 20px;
      }
      .detail-list {
        text-align: left;
        margin: 20px auto;
        width: 80%;
      }
      .detail-list li {
        padding: 10px 0;
        border-bottom: 1px solid #eee;
      }
      .footer {
        padding: 40px 0;
        font-size: 14px;
        color: #808080;
        width: 60%;
        margin: 0 auto;
        text-align: center;
      }
      @media only screen and (max-width: 600px) {
        body {
          width: 90%;
        }
        .email-content {
          width: 100% !important;
          box-shadow: none;
        }
        .logo-container img {
          width: 150px;
        }
        .content {
          padding: 30px 10px 10px 10px;
          font-size: 18px;
          width: 100%;
        }
        .content h1 {
          font-size: 28px;
        }
        .detail-list {
          width: 90%;
        }
        .footer {
          padding: 20px 0;
          font-size: 12px;
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <table class="container" cellpadding="0" cellspacing="0" width="100%">
      <tr>
        <td align="center" class="logo-container">
          <img
            src="https://res.cloudinary.com/dya1ekkd5/image/upload/v1721930541/oidzxqlccwuewq2daqoa.png"
            alt="Logo" />
        </td>
      </tr>
      <tr>
        <td align="center">
          <table
            class="email-content"
            cellpadding="0"
            cellspacing="0"
            width="100%">
            <tr>
              <td class="content">
                <h1>Nueva Orden M√©dica</h1>
                <p>Estimado/a ${patientName} ${patientLastName || ''},</p>
                <p>Se ha generado una nueva orden m√©dica de tipo <strong>${orderType}</strong> para usted.</p>
                <div class="detail-list">
                  <ul>
                    <li><strong>Fecha de solicitud:</strong> ${orderDate}</li>
                    <li><strong>M√©dico:</strong> ${physicianName || 'No especificado'}</li>
                    ${description ? `<li><strong>Descripci√≥n:</strong> ${description}</li>` : ''}
                    ${url ? `<li><strong>Puede descargar su orden:</strong> <a href="${url}">aqu√≠</a></li>` : ''}
                  </ul>
                </div>
                <p>Si tiene alguna pregunta o requiere m√°s informaci√≥n, por favor contacte a su m√©dico.</p>
              </td>
            </tr>
            <tr>
              <td class="footer">
                <p>Este es un mensaje autom√°tico, por favor no responda a este correo.</p>
                <p>¬© ${new Date().getFullYear()} SEGIMED - Sistema de Gesti√≥n M√©dica</p>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </body>
</html>
`;
};

================
File: src/services/email/templates/medicationCancellationHtml.ts
================
export const medicationCancellationHtml = (
  physicianName: string,
  patientName: string,
  medicationName: string,
  cancelReason: string,
  cancelDate: string,
) => {
  return `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>Cancelaci√≥n de Seguimiento de Medicaci√≥n</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 600px;
                margin: 0 auto;
                padding: 20px;
            }
            .header {
                background-color: #f8f9fa;
                padding: 20px;
                border-radius: 8px;
                margin-bottom: 20px;
            }
            .content {
                background-color: #ffffff;
                padding: 20px;
                border: 1px solid #dee2e6;
                border-radius: 8px;
            }
            .medication-details {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 5px;
                padding: 15px;
                margin: 15px 0;
            }
            .medication-details h3 {
                margin-top: 0;
                color: #856404;
            }
            ul {
                list-style-type: none;
                padding-left: 0;
            }
            li {
                margin: 8px 0;
                padding: 5px 0;
                border-bottom: 1px solid #eee;
            }
            .footer {
                margin-top: 30px;
                text-align: center;
                color: #666;
                font-size: 12px;
            }
        </style>
    </head>
    <body>
        <div class="header">
            <h2 style="margin: 0; color: #495057;">Notificaci√≥n Segimed - Cancelaci√≥n de Seguimiento</h2>
        </div>
        
        <div class="content">
            <p>Estimado/a Dr./Dra. <strong>${physicianName}</strong>,</p>
            
            <p>Le informamos que el paciente <strong>${patientName}</strong> ha cancelado el seguimiento de una medicaci√≥n que usted prescribi√≥.</p>
            
            <div class="medication-details">
                <h3>Detalles de la Cancelaci√≥n:</h3>
                <ul>
                    <li><strong>Medicaci√≥n:</strong> ${medicationName}</li>
                    <li><strong>Paciente:</strong> ${patientName}</li>
                    <li><strong>Fecha de cancelaci√≥n:</strong> ${cancelDate}</li>
                    <li><strong>Motivo:</strong> ${cancelReason || 'No especificado'}</li>
                </ul>
            </div>
            
            <p>Le recomendamos revisar el historial del paciente en la plataforma Segimed para evaluar si es necesario tomar alguna acci√≥n adicional o programar una consulta de seguimiento.</p>
            
            <p>Si tiene alguna duda o necesita m√°s informaci√≥n, no dude en contactarnos.</p>
            
            <p>Atentamente,<br><strong>Equipo Segimed</strong></p>
        </div>
        
        <div class="footer">
            <p>Este es un mensaje autom√°tico del sistema Segimed. Por favor, no responda a este correo.</p>
        </div>
    </body>
    </html>
  `;
};

================
File: src/services/email/templates/medicationHtml.ts
================
export const medicationHtml = (
  patientName: string,
  patientLastName: string,
  medications: any[],
  physicianName: string,
): string => {
  // Generar lista de medicamentos HTML
  const medicationListHtml = medications
    .map(
      (med) => `
    <li style="padding: 10px 0; border-bottom: 1px solid #eee;">
      <strong>${med.monodrug}:</strong> ${med.dose} ${med.dose_units}, ${med.frecuency}, por ${med.duration} ${med.duration_units}${
        med.observations
          ? `<br><span style="font-style: italic; color: #666;">Observaciones: ${med.observations}</span>`
          : ''
      }
    </li>
  `,
    )
    .join('');

  return `<!DOCTYPE html>
<html>
  <head>
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=2,shrink-to-fit=no" />
    <title>Medicaciones Prescritas</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: "Poppins", sans-serif;
        background-color: #fafafc;
        margin: 0;
        padding: 0;
        width: 600px;
      }
      .container {
        width: 100%;
        padding: 20px 0;
        text-align: center;
        background-color: #fafafc;
      }
      .email-content {
        width: 90%;
        padding: 0 15px;
        max-width: 600px;
        margin: 0 auto;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .logo-container {
        padding: 20px 0;
      }
      .logo-container img {
        display: block;
        margin: 0 auto;
        width: 180px;
      }
      .content {
        padding: 45px 0 20px 0;
        text-align: center;
        color: #808080;
        font-size: 16px;
        width: 100%;
        margin: 0 auto;
      }
      .content h1 {
        font-size: 32px;
        color: #487ffa;
        font-weight: 500;
        margin-bottom: 30px;
      }
      .content p {
        margin-bottom: 20px;
      }
      .medications-list {
        text-align: left;
        margin: 20px auto;
        width: 80%;
        list-style-type: none;
      }
      .footer {
        padding: 40px 0;
        font-size: 14px;
        color: #808080;
        width: 60%;
        margin: 0 auto;
        text-align: center;
      }
      @media only screen and (max-width: 600px) {
        body {
          width: 90%;
        }
        .email-content {
          width: 100% !important;
          box-shadow: none;
        }
        .logo-container img {
          width: 150px;
        }
        .content {
          padding: 30px 10px 10px 10px;
          font-size: 18px;
          width: 100%;
        }
        .content h1 {
          font-size: 28px;
        }
        .medications-list {
          width: 90%;
        }
        .footer {
          padding: 20px 0;
          font-size: 12px;
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <table class="container" cellpadding="0" cellspacing="0" width="100%">
      <tr>
        <td align="center" class="logo-container">
          <img
            src="https://res.cloudinary.com/dya1ekkd5/image/upload/v1721930541/oidzxqlccwuewq2daqoa.png"
            alt="Logo" />
        </td>
      </tr>
      <tr>
        <td align="center">
          <table
            class="email-content"
            cellpadding="0"
            cellspacing="0"
            width="100%">
            <tr>
              <td class="content">
                <h1>Medicaciones Prescritas</h1>
                <p>Estimado/a ${patientName} ${patientLastName || ''},</p>
                <p>Durante su consulta, el Dr./Dra. ${
                  physicianName || 'su m√©dico'
                } ha prescrito las siguientes medicaciones:</p>
                <ul class="medications-list">
                  ${medicationListHtml}
                </ul>
                <p>Por favor, siga las indicaciones de su m√©dico y tome sus medicamentos seg√∫n lo prescrito.</p>
              </td>
            </tr>
            <tr>
              <td class="footer">
                <p>Este es un mensaje autom√°tico, por favor no responda a este correo.</p>
                <p>¬© ${new Date().getFullYear()} SEGIMED - Sistema de Gesti√≥n M√©dica</p>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </body>
</html>
`;
};

================
File: src/services/email/templates/recoverPasswordHtml.ts
================
export const recoverPasswordHtml = (link: string): string => {
  return `<!DOCTYPE html>
<html>
  <head>
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=2,shrink-to-fit=no" />
    <title>Recuperar contrase√±a</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: "Poppins", sans-serif;
        background-color: #fafafc;
        margin: 0;
        padding: 0;
        width: 600px;
      }
      .container {
        width: 100%;
        padding: 20px 0;
        text-align: center;
        background-color: #fafafc;
      }
      .email-content {
        width: 90%;
        padding: 0 15px;
        max-width: 600px;
        margin: 0 auto;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .logo-container {
        padding: 20px 0;
      }
      .logo-container img {
        display: block;
        margin: 0 auto;
        width: 180px;
      }
      .content {
        padding: 45px 0 20px 0;
        text-align: center;
        color: #808080;
        font-size: 16px;
        width: 100%;
        margin: 0 auto;
      }
      .content h1 {
        font-size: 32px;
        color: #487ffa;
        font-weight: 500;
        margin-bottom: 30px;
      }
      .content h2 {
        font-size: 42px;
        color: #487ffa;
        font-weight: 500;
      }
      .content p {
        margin-bottom: 20px;
      }
      .button {
        text-align: center;
        color: #808080;
        font-size: 16px;
        width: 60%;
        margin: 0 auto;
      }
      .footer {
        padding: 40px 0;
        font-size: 14px;
        color: #808080;
        width: 60%;
        margin: 0 auto;
        text-align: center;
      }
      @media only screen and (max-width: 600px) {
        body {
          width: 90%;
        }
        .email-content {
          width: 100% !important;
          box-shadow: none;
        }
        .logo-container img {
          width: 150px;
        }
        .content {
          padding: 30px 10px 10px 10px;
          font-size: 18px;
          width: 100%;
        }
        .content h1 {
          font-size: 28px;
        }
        .button {
          padding-top: 10px;
          padding-bottom: 25px;
        }
        .footer {
          padding: 20px 0;
          font-size: 12px;
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <table class="container" cellpadding="0" cellspacing="0" width="100%">
      <tr>
        <td align="center" class="logo-container">
          <img
            src="https://res.cloudinary.com/dya1ekkd5/image/upload/v1721930541/oidzxqlccwuewq2daqoa.png"
            alt="Logo" />
        </td>
      </tr>
      <tr>
        <td align="center">
          <table
            class="email-content"
            cellpadding="0"
            cellspacing="0"
            width="100%">
            <tr>
              <td class="content">
                <h1>Tu link para cambiar contrase√±a</h1>
                <p>
                  Entra al siguiente
                  <a style="color: #808080; font-weight: 700" href="${link}"
                    >link</a
                  >
                  o presiona el bot√≥n para poder cambiar tu contrase√±a.
                </p>
              </td>
            </tr>
            <tr>
              <td class="button">
                <a
                  href="${link}"
                  style="
                    padding: 15px 20px;
                    border-radius: 10px;
                    text-decoration: none;
                    background: #487ffa;
                    color: white;
                    font-weight: 700;
                  ">
                  Cambiar contrase√±a
                </a>
              </td>
            </tr>
            <tr>
              <td class="footer">
                <p>
                  Si no solicitaste cambiar tu contrase√±a, puedes ignorar este
                  correo. Solo las personas con acceso a tu email cambiar tu contrase√±a.
                </p>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </body>
</html>


`;
};

================
File: src/services/email/templates/welcomeEmailHtml.ts
================
const welcomeEmailHtml = (name: string): string => {
  return `<!DOCTYPE html>
  <html>
    <head>
      <title>Confirmar email</title>
      <meta
        name="viewport"
        content="width=device-width,initial-scale=1,maximum-scale=2,shrink-to-fit=no" />
      <style>
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }
        body {
          font-family: "Poppins", sans-serif;
          background-color: #fafafc;
          margin: 0;
          padding: 0;
          width: 600px;
        }
        .container {
          width: 100%;
          padding: 20px 0;
          text-align: center;
          background-color: #fafafc;
        }
        .email-content {
          width: 90%;
          padding: 0 15px;
          max-width: 600px;
          margin: 0 auto;
          background-color: #fff;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .logo-container {
          padding: 20px 0;
        }
        .logo-container img {
          display: block;
          margin: 0 auto;
          width: 180px;
        }
        .content {
          padding: 35px 0 10px 0;
          text-align: center;
          color: #808080;
          font-size: 16px;
          width: 100%;
          margin: 0 auto;
        }
        .content h1 {
          font-size: 32px;
          color: #487ffa;
          font-weight: 500;
          margin-bottom: 10px;
        }
        .content h2 {
          font-size: 42px;
          color: #487ffa;
          font-weight: 500;
        }
        .content p {
          margin-bottom: 20px;
        }
        .body {
          text-align: center;
          color: #808080;
          font-size: 20px;
          width: 60%;
        }
        .body p {
          margin-bottom: 20px;
        }
        .footer {
          padding: 10px 0 20px 0;
          font-size: 20px;
          color: #808080;
          width: 60%;
          margin: 0 auto;
          text-align: center;
        }
        @media only screen and (max-width: 600px) {
          body {
            width: 90%;
          }
          .email-content {
            width: 100% !important;
            box-shadow: none;
          }
          .logo-container img {
            width: 150px;
          }
          .content {
            padding: 20px 10px 10px 10px;
            font-size: 18px;
            width: 100%;
          }
          .content h1 {
            font-size: 28px;
          }
          .body {
            padding-top: 10px;
            padding-bottom: 25px;
          }
          .footer {
            padding: 20px 0;
            font-size: 20px;
            width: 100%;
          }
        }
      </style>
    </head>
    <body>
      <table class="container" cellpadding="0" cellspacing="0" width="100%">
        <tr>
          <td align="center" class="logo-container">
            <img
              src="https://res.cloudinary.com/dya1ekkd5/image/upload/v1721930541/oidzxqlccwuewq2daqoa.png"
              alt="Logo" />
          </td>
        </tr>
        <tr>
          <td align="center">
            <table
              class="email-content"
              cellpadding="0"
              cellspacing="0"
              width="100%">
              <tr>
                <td class="content">
                  <h1>¬°Bienvenido a Segimed!</h1>
                </td>
              </tr>
              <tr>
                <td class="body">
                  <p>Hola ${name},</p>
                  <p>
                    ¬°Nos alegra mucho darte la bienvenida a Segimed! Estamos
                    encantados de que te unas a nosotros.
                  </p>
                  <p>
                    En Segimed, nos esforzamos por ofrecerte la mejor experiencia
                    posible. Si tenes alguna pregunta o necesitas ayuda, no dudes
                    en ponerte en contacto con nuestro equipo de soporte. Estamos
                    para ayudarte en cada paso.
                  </p>
                </td>
              </tr>
              <tr>
                <td class="footer">
                  <p>-El equipo de Segimed.</p>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </body>
  </html>`;
};

export default welcomeEmailHtml;

================
File: src/services/medication-scheduler/medication-scheduler.module.ts
================
import { Module } from '@nestjs/common';
import { ScheduleModule } from '@nestjs/schedule';
import { MedicationSchedulerService } from './medication-scheduler.service';
import { PrismaService } from '../../prisma/prisma.service';
import { NotificationService } from '../notification/notification.service';
import { EmailService } from '../email/email.service';
import { TwilioService } from '../twilio/twilio.service';

@Module({
  imports: [ScheduleModule.forRoot()],
  providers: [
    MedicationSchedulerService,
    PrismaService,
    NotificationService,
    EmailService,
    TwilioService,
  ],
  exports: [MedicationSchedulerService],
})
export class MedicationSchedulerModule {}

================
File: src/services/medication-scheduler/medication-scheduler.service.ts
================
import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { PrismaService } from 'src/prisma/prisma.service';
import { NotificationService } from '../notification/notification.service';

@Injectable()
export class MedicationSchedulerService {
  private readonly logger = new Logger(MedicationSchedulerService.name);

  constructor(
    private readonly prisma: PrismaService,
    private readonly notificationService: NotificationService,
  ) {}

  @Cron(CronExpression.EVERY_5_MINUTES)
  async processScheduledReminders(): Promise<void> {
    this.logger.log(
      'Iniciando procesamiento de recordatorios de medicaci√≥n...',
    );

    try {
      const activePrescriptions = await this.getActivePrescriptions();
      this.logger.log(
        `Encontradas ${activePrescriptions.length} prescriptions activas`,
      );

      for (const prescription of activePrescriptions) {
        await this.processPrescriptionReminder(prescription);
      }

      this.logger.log('Procesamiento de recordatorios completado exitosamente');
    } catch (error) {
      this.logger.error('Error procesando recordatorios de medicaci√≥n:', error);
    }
  }
  private async getActivePrescriptions() {
    return await this.prisma.prescription.findMany({
      where: {
        is_tracking_active: true,
        reminder_enabled: true,
      },
      include: {
        user: {
          include: {
            patient: true,
          },
        },
      },
    });
  }

  private async processPrescriptionReminder(prescription: any): Promise<void> {
    try {
      if (
        !prescription.time_of_day_slots ||
        prescription.time_of_day_slots.length === 0
      ) {
        this.logger.debug(
          `Prescription ${prescription.id}: sin time_of_day_slots configurados`,
        );
        return;
      }

      const nextReminderTime = this.calculateNextReminderTime(
        prescription.time_of_day_slots,
      );

      if (!nextReminderTime) {
        this.logger.debug(
          `Prescription ${prescription.id}: no hay pr√≥xima hora de recordatorio`,
        );
        return;
      }

      const currentTime = new Date();
      const timeDiff = Math.abs(
        currentTime.getTime() - nextReminderTime.getTime(),
      );
      const toleranceMs = 2.5 * 60 * 1000;

      if (timeDiff <= toleranceMs) {
        await this.handleReminderTime(prescription);
      } else {
        await this.checkForMissedDoses(prescription);
      }
    } catch (error) {
      this.logger.error(
        `Error procesando prescription ${prescription.id}:`,
        error,
      );
    }
  }

  private calculateNextReminderTime(timeSlots: string[]): Date | null {
    if (!timeSlots || timeSlots.length === 0) {
      return null;
    }

    const now = new Date();
    const currentTime = now.getHours() * 60 + now.getMinutes();

    const slotsInMinutes = timeSlots
      .map((slot) => {
        const [hours, minutes] = slot.split(':').map(Number);
        return hours * 60 + minutes;
      })
      .sort((a, b) => a - b);

    const nextSlotToday = slotsInMinutes.find((slot) => slot > currentTime);

    if (nextSlotToday) {
      const nextTime = new Date(now);
      nextTime.setHours(
        Math.floor(nextSlotToday / 60),
        nextSlotToday % 60,
        0,
        0,
      );
      return nextTime;
    } else {
      const firstSlot = slotsInMinutes[0];
      const nextTime = new Date(now);
      nextTime.setDate(nextTime.getDate() + 1);
      nextTime.setHours(Math.floor(firstSlot / 60), firstSlot % 60, 0, 0);
      return nextTime;
    }
  }

  private async handleReminderTime(prescription: any): Promise<void> {
    try {
      if (prescription.last_reminder_sent_at) {
        const timeSinceLastReminder =
          Date.now() - new Date(prescription.last_reminder_sent_at).getTime();
        const minIntervalMs = 5 * 60 * 1000;

        if (timeSinceLastReminder < minIntervalMs) {
          this.logger.debug(
            `Prescription ${prescription.id}: recordatorio ya enviado recientemente`,
          );
          return;
        }
      }

      await this.sendPushNotification(prescription);

      await this.prisma.prescription.update({
        where: { id: prescription.id },
        data: {
          reminders_sent_count: (prescription.reminders_sent_count || 0) + 1,
          last_reminder_sent_at: new Date(),
        },
      });

      this.logger.log(
        `Recordatorio enviado para prescription ${prescription.id}, contador: ${(prescription.reminders_sent_count || 0) + 1}`,
      );
    } catch (error) {
      this.logger.error(
        `Error enviando recordatorio para prescription ${prescription.id}:`,
        error,
      );
    }
  }

  private async checkForMissedDoses(prescription: any): Promise<void> {
    const maxRetries =
      prescription.user?.patient?.medication_reminder_max_retries || 3;
    const currentReminders = prescription.reminders_sent_count || 0;

    if (currentReminders >= maxRetries && prescription.last_reminder_sent_at) {
      const intervalMinutes =
        prescription.user?.patient?.medication_reminder_interval_minutes || 30;
      const timeSinceLastReminder =
        Date.now() - new Date(prescription.last_reminder_sent_at).getTime();
      const maxWaitTimeMs = intervalMinutes * 60 * 1000;

      if (timeSinceLastReminder > maxWaitTimeMs) {
        await this.createMissedDoseLog(prescription);
      }
    }
  }
  private async createMissedDoseLog(prescription: any): Promise<void> {
    try {
      await this.prisma.medication_dose_log.create({
        data: {
          prescription_id: prescription.id,
          user_id: prescription.user.patient.id,
          scheduled_time: prescription.last_reminder_sent_at,
          status: 'MISSED_AUTOMATIC',
          reported_at: new Date(),
        },
      });

      await this.prisma.prescription.update({
        where: { id: prescription.id },
        data: {
          reminders_sent_count: 0,
        },
      });

      this.logger.log(
        `Dosis marcada como perdida autom√°ticamente para prescription ${prescription.id}`,
      );
    } catch (error) {
      this.logger.error(
        `Error creando log de dosis perdida para prescription ${prescription.id}:`,
        error,
      );
    }
  }

  private async sendPushNotification(prescription: any): Promise<void> {
    try {
      const medicationName = prescription.monodrug;
      const user = prescription.user;

      if (!user) {
        this.logger.warn(
          `No se encontr√≥ usuario para prescription ${prescription.id}`,
        );
        return;
      }

      const medications = [
        {
          monodrug: medicationName,
          dose: '',
          dose_units: '',
          frecuency: '',
          duration: '',
          duration_units: '',
          observations: 'Recordatorio autom√°tico de medicaci√≥n',
        },
      ];

      if (user.phone && user.is_phone_verified) {
        await this.notificationService.sendMedicationUpdateNotification(
          user,
          medications,
          'Sistema Segimed',
        );

        this.logger.log(
          `Notificaci√≥n de recordatorio enviada para prescription ${prescription.id}`,
        );
      } else {
        this.logger.warn(
          `User ${user.id} no tiene tel√©fono verificado para enviar recordatorio`,
        );
      }
    } catch (error) {
      this.logger.error(
        `Error enviando notificaci√≥n de recordatorio para prescription ${prescription.id}:`,
        error,
      );
    }
  }
}

================
File: src/services/notification/async-notification.service.ts
================
import { Injectable, Logger } from '@nestjs/common';
import { NotificationService } from './notification.service';
import { NotificationQueueService } from '../../queues/notification-queue.service';
import {
  PatientNotificationData,
  MedicalOrderData,
  MedicalOrderTypeData,
} from './notification.service';
import { MedicationItemInterface } from '../../medical-scheduling/modules/prescription/prescription.service';

@Injectable()
export class AsyncNotificationService {
  private readonly logger = new Logger(AsyncNotificationService.name);

  constructor(
    private readonly notificationService: NotificationService,
    private readonly notificationQueueService: NotificationQueueService,
  ) {}

  /**
   * Send medical order notification synchronously (immediate processing)
   * Use for critical notifications that must be sent immediately
   */
  async sendMedicalOrderNotificationSync(
    patient: PatientNotificationData,
    order: MedicalOrderData,
    orderType: MedicalOrderTypeData,
    physicianName?: string,
    medications?: MedicationItemInterface[],
  ): Promise<void> {
    this.logger.log(
      `Sending medical order notification synchronously for patient ${patient.id}`,
    );

    return this.notificationService.sendMedicalOrderNotification(
      patient,
      order,
      orderType,
      physicianName,
      medications,
    );
  }

  /**
   * Send medical order notification asynchronously (queued processing)
   * Recommended for most use cases to avoid blocking the main thread
   */
  async sendMedicalOrderNotificationAsync(
    patient: PatientNotificationData,
    order: MedicalOrderData,
    orderType: MedicalOrderTypeData,
    physicianName?: string,
    medications?: MedicationItemInterface[],
    options?: {
      priority?: number; // Higher numbers = higher priority
      delay?: number; // Delay in milliseconds
    },
  ): Promise<void> {
    this.logger.log(
      `Queuing medical order notification for patient ${patient.id}`,
    );

    try {
      await this.notificationQueueService.enqueueMedicalOrderNotification(
        patient,
        order,
        orderType,
        physicianName,
        medications,
        options?.priority,
        options?.delay,
      );
    } catch (error) {
      this.logger.error(
        `Failed to queue medical order notification for patient ${patient.id}:`,
        error,
      );
      // Fallback to synchronous processing if queue fails
      this.logger.warn(
        `Falling back to synchronous processing for patient ${patient.id}`,
      );
      await this.sendMedicalOrderNotificationSync(
        patient,
        order,
        orderType,
        physicianName,
        medications,
      );
    }
  }

  /**
   * Send medication update notification synchronously
   */
  async sendMedicationUpdateNotificationSync(
    patient: PatientNotificationData,
    medications: MedicationItemInterface[],
    physicianName?: string,
    fileUrl?: string,
  ): Promise<void> {
    this.logger.log(
      `Sending medication update notification synchronously for patient ${patient.id}`,
    );

    return this.notificationService.sendMedicationUpdateNotification(
      patient,
      medications,
      physicianName,
      fileUrl,
    );
  }

  /**
   * Send medication update notification asynchronously (queued processing)
   * Recommended for most use cases to avoid blocking the main thread
   */
  async sendMedicationUpdateNotificationAsync(
    patient: PatientNotificationData,
    medications: MedicationItemInterface[],
    physicianName?: string,
    fileUrl?: string,
    options?: {
      priority?: number;
      delay?: number;
    },
  ): Promise<void> {
    this.logger.log(
      `Queuing medication update notification for patient ${patient.id}`,
    );

    try {
      await this.notificationQueueService.enqueueMedicationUpdateNotification(
        patient,
        medications,
        physicianName,
        fileUrl,
        options?.priority,
        options?.delay,
      );
    } catch (error) {
      this.logger.error(
        `Failed to queue medication update notification for patient ${patient.id}:`,
        error,
      );
      // Fallback to synchronous processing if queue fails
      this.logger.warn(
        `Falling back to synchronous processing for patient ${patient.id}`,
      );
      await this.sendMedicationUpdateNotificationSync(
        patient,
        medications,
        physicianName,
        fileUrl,
      );
    }
  }

  /**
   * Convenience method that defaults to async processing
   * This can be used as a drop-in replacement for the original methods
   */
  async sendMedicalOrderNotification(
    patient: PatientNotificationData,
    order: MedicalOrderData,
    orderType: MedicalOrderTypeData,
    physicianName?: string,
    medications?: MedicationItemInterface[],
  ): Promise<void> {
    return this.sendMedicalOrderNotificationAsync(
      patient,
      order,
      orderType,
      physicianName,
      medications,
    );
  }

  /**
   * Convenience method that defaults to async processing
   */
  async sendMedicationUpdateNotification(
    patient: PatientNotificationData,
    medications: MedicationItemInterface[],
    physicianName?: string,
    fileUrl?: string,
  ): Promise<void> {
    return this.sendMedicationUpdateNotificationAsync(
      patient,
      medications,
      physicianName,
      fileUrl,
    );
  }

  /**
   * Get notification queue statistics
   */
  async getQueueStats() {
    return this.notificationQueueService.getQueueStats();
  }

  /**
   * Admin methods for queue management
   */
  async pauseNotificationQueue(): Promise<void> {
    await this.notificationQueueService.pauseQueue();
  }

  async resumeNotificationQueue(): Promise<void> {
    await this.notificationQueueService.resumeQueue();
  }

  async cleanOldNotificationJobs(): Promise<void> {
    await this.notificationQueueService.cleanOldJobs();
  }
}

================
File: src/services/notification/notification.module.ts
================
import { Module } from '@nestjs/common';
import { NotificationService } from './notification.service';
import { EmailModule } from '../email/email.module';
import { TwilioModule } from '../twilio/twilio.module';

@Module({
  imports: [EmailModule, TwilioModule],
  providers: [NotificationService],
  exports: [NotificationService],
})
export class NotificationModule {}

================
File: src/services/notification/notification.service.ts
================
import { Injectable } from '@nestjs/common';
import { EmailService } from '../email/email.service';
import { TwilioService } from '../twilio/twilio.service';
import { medicalOrderHtml } from '../email/templates/medicalOrderHtml';
import { medicationHtml } from '../email/templates/medicationHtml';
import { MedicationItemInterface } from '../../medical-scheduling/modules/prescription/prescription.service';

export interface PatientNotificationData {
  id: string;
  name: string;
  last_name?: string;
  email?: string;
  phone?: string;
  is_phone_verified?: boolean;
}

export interface MedicalOrderData {
  id: string;
  url?: string;
  request_date: Date;
  description_type?: string;
}

export interface MedicalOrderTypeData {
  name: string;
  description: string;
}

@Injectable()
export class NotificationService {
  constructor(
    private readonly emailService: EmailService,
    private readonly twilioService: TwilioService,
  ) {}

  /**
   * Env√≠a notificaciones para √≥rdenes m√©dicas
   */
  async sendMedicalOrderNotification(
    patient: PatientNotificationData,
    order: MedicalOrderData,
    orderType: MedicalOrderTypeData,
    physicianName?: string,
    medications?: MedicationItemInterface[],
  ): Promise<void> {
    try {
      // Determinar qu√© plantilla usar seg√∫n el tipo de orden
      let emailContent: string;
      let emailSubject: string;

      if (
        orderType.name === 'medication' ||
        orderType.name === 'medication-authorization'
      ) {
        emailContent = medicationHtml(
          patient.name,
          patient.last_name || '',
          medications || [],
          physicianName || 'su m√©dico',
        );
        emailSubject = `Nuevas medicaciones prescritas`;
      } else {
        emailContent = medicalOrderHtml(
          patient.name,
          patient.last_name || '',
          orderType.description,
          new Date(order.request_date).toLocaleDateString(),
          physicianName || 'No especificado',
          order.description_type,
          order.url,
        );
        emailSubject = `Nueva orden m√©dica: ${orderType.description}`;
      }

      // Preparar adjuntos si hay una URL del documento
      let attachments = [];
      if (order.url) {
        try {
          const attachment = await this.emailService.getAttachmentFromUrl(
            order.url,
          );
          attachments = [attachment];
        } catch (attachmentError) {
          console.error(
            'Error al preparar el archivo adjunto:',
            attachmentError,
          );
          // Continuar sin adjunto si hay error
        }
      }

      // Enviar email
      if (patient.email) {
        try {
          await this.emailService.sendMail(
            patient.email,
            emailSubject,
            emailContent,
            attachments.length > 0 ? attachments : undefined,
          );
        } catch (emailError) {
          console.error('Error sending email notification:', emailError);
          // No lanzar error, seguir con el flujo
        }
      }

      // Enviar WhatsApp si est√° disponible
      if (patient.phone && patient.is_phone_verified) {
        try {
          let whatsappMessage: string;

          if (
            orderType.name === 'medication' ||
            orderType.name === 'medication-authorization'
          ) {
            const medicationListText = (medications || [])
              .map(
                (med) =>
                  `‚Ä¢ ${med.monodrug}: ${med.dose} ${med.dose_units}, ${med.frecuency}, por ${med.duration} ${med.duration_units}` +
                  (med.observations
                    ? `\n  _Observaciones: ${med.observations}_`
                    : ''),
              )
              .join('\n');

            whatsappMessage = `Hola ${patient.name},

Durante su consulta, el Dr./Dra. ${physicianName || 'su m√©dico'} ha prescrito las siguientes medicaciones:

${medicationListText}

Por favor, siga las indicaciones de su m√©dico y tome sus medicamentos seg√∫n lo prescrito.

SEGIMED - Sistema de Gesti√≥n M√©dica`;
          } else {
            whatsappMessage = `Hola ${patient.name},
Se ha generado una nueva orden m√©dica de tipo *${orderType.description}* para usted.

*Detalles de la orden:*
‚Ä¢ Fecha: ${new Date(order.request_date).toLocaleDateString()}
‚Ä¢ M√©dico: ${physicianName || 'No especificado'}
${order.description_type ? `‚Ä¢ Descripci√≥n: ${order.description_type}` : ''}

Si tiene alguna pregunta, contacte a su m√©dico.

SEGIMED - Sistema de Gesti√≥n M√©dica`;
          }

          // Si hay URL del documento, enviar con archivo adjunto
          if (order.url) {
            await this.twilioService.sendWhatsAppWithMedia(
              patient.phone,
              whatsappMessage,
              order.url,
            );
          } else {
            await this.twilioService.sendOtp(patient.phone, whatsappMessage);
          }
        } catch (whatsappError) {
          console.error('Error sending WhatsApp notification:', whatsappError);
          // No lanzar error, seguir con el flujo
        }
      }
    } catch (error) {
      console.error('Error en notificaciones de orden m√©dica:', error);
      // Continuamos con el flujo normal aunque fallen las notificaciones
    }
  }

  /**
   * Env√≠a notificaciones espec√≠ficas para actualizaciones de medicaci√≥n
   */
  async sendMedicationUpdateNotification(
    patient: PatientNotificationData,
    medications: MedicationItemInterface[],
    physicianName?: string,
    fileUrl?: string,
  ): Promise<void> {
    try {
      // Preparar adjuntos si hay una URL del documento
      let attachments = [];
      if (fileUrl) {
        try {
          const attachment =
            await this.emailService.getAttachmentFromUrl(fileUrl);
          attachments = [attachment];
        } catch (attachmentError) {
          console.error(
            'Error al preparar el archivo adjunto:',
            attachmentError,
          );
          // Continuar sin adjunto si hay error
        }
      }

      // Enviar email
      if (patient.email) {
        try {
          const emailContent = medicationHtml(
            patient.name,
            patient.last_name || '',
            medications,
            physicianName || 'su m√©dico',
          );
          await this.emailService.sendMail(
            patient.email,
            `Nuevas medicaciones prescritas`,
            emailContent,
            attachments.length > 0 ? attachments : undefined,
          );
        } catch (emailError) {
          console.error('Error sending email notification:', emailError);
          // No lanzar error, seguir con el flujo
        }
      }

      // Enviar WhatsApp si est√° disponible
      if (patient.phone && patient.is_phone_verified) {
        try {
          const medicationListText = medications
            .map(
              (med) =>
                `‚Ä¢ ${med.monodrug}: ${med.dose} ${med.dose_units}, ${med.frecuency}, por ${med.duration} ${med.duration_units}` +
                (med.observations
                  ? `\n  _Observaciones: ${med.observations}_`
                  : ''),
            )
            .join('\n');

          const whatsappMessage = `Hola ${patient.name},

Durante su consulta, el Dr./Dra. ${physicianName || 'su m√©dico'} ha prescrito las siguientes medicaciones:

${medicationListText}

Por favor, siga las indicaciones de su m√©dico y tome sus medicamentos seg√∫n lo prescrito.

SEGIMED - Sistema de Gesti√≥n M√©dica`;

          // Si hay URL del documento, enviar con archivo adjunto
          if (fileUrl) {
            await this.twilioService.sendWhatsAppWithMedia(
              patient.phone,
              whatsappMessage,
              fileUrl,
            );
          } else {
            await this.twilioService.sendOtp(patient.phone, whatsappMessage);
          }
        } catch (whatsappError) {
          console.error('Error sending WhatsApp notification:', whatsappError);
          // No lanzar error, seguir con el flujo
        }
      }
    } catch (error) {
      console.error('Error en notificaciones de medicaci√≥n:', error);
      // Continuamos con el flujo normal aunque fallen las notificaciones
    }
  }

  /**
   * Env√≠a un email simple a trav√©s del servicio de notificaciones
   */
  async sendEmail(
    destination: string,
    subject: string,
    htmlContent: string,
  ): Promise<void> {
    try {
      await this.emailService.sendMail(destination, subject, htmlContent);
    } catch (error) {
      console.error('Error sending email:', error);
      throw error;
    }
  }
}

================
File: src/services/twilio/twilio.module.ts
================
import { Global, Module } from '@nestjs/common';
import { TwilioService } from './twilio.service';

@Global()
@Module({
  providers: [TwilioService],
  exports: [TwilioService],
})
export class TwilioModule {}

================
File: src/services/twilio/twilio.service.ts
================
import { Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { Twilio } from 'twilio';

@Injectable()
export class TwilioService {
  private twilioClient: Twilio;

  constructor(private configService: ConfigService) {
    this.twilioClient = new Twilio(
      this.configService.get<string>('TWILIO_ACCOUNT_SID'),
      this.configService.get<string>('TWILIO_AUTH_TOKEN'),
    );
  }

  async sendOtp(phoneNumber: string, otp: string): Promise<void> {
    const message = `Tu c√≥digo de verificaci√≥n es: ${otp}`;

    await this.twilioClient.messages.create({
      body: message,
      from: `whatsapp:${this.configService.get<string>('TWILIO_WHATSAPP_FROM')}`,
      to: `whatsapp:${phoneNumber}`,
    });
  }

  /**
   * Env√≠a un mensaje de WhatsApp con un archivo adjunto
   * @param phoneNumber N√∫mero de tel√©fono del destinatario
   * @param message Mensaje a enviar
   * @param mediaUrl URL p√∫blica del archivo a adjuntar
   */
  async sendWhatsAppWithMedia(
    phoneNumber: string,
    message: string,
    mediaUrl: string,
  ): Promise<void> {
    try {
      await this.twilioClient.messages.create({
        body: message,
        from: `whatsapp:${this.configService.get<string>('TWILIO_WHATSAPP_FROM')}`,
        to: `whatsapp:${phoneNumber}`,
        mediaUrl: [mediaUrl], // Twilio acepta un array de URLs
      });
    } catch (error) {
      console.error('Error al enviar mensaje de WhatsApp con archivo:', error);
      throw new Error('Error al enviar mensaje de WhatsApp con archivo');
    }
  }

  generateOtp(): string {
    return Math.floor(100000 + Math.random() * 900000).toString();
  }
}

================
File: src/utils/auth.helper.ts
================
import * as bcrypt from 'bcrypt';
import * as jwt from 'jsonwebtoken';

export class AuthHelper {
  static async hashPassword(
    password: string,
    saltRounds: number,
  ): Promise<string> {
    const salt = await bcrypt.genSalt(saltRounds);
    return bcrypt.hash(password, salt);
  }

  static async comparePasswords(
    plainPassword: string,
    hashedPassword: string,
  ): Promise<boolean> {
    return bcrypt.compare(plainPassword, hashedPassword);
  }

  static generateToken(payload: object, expiresIn: string = '7d'): string {
    const secret = process.env.JWT_SECRET || 'defaultSecret';
    return jwt.sign(payload, secret, { expiresIn });
  }

  static verifyToken(token: string): string | jwt.JwtPayload {
    const secret = process.env.JWT_SECRET || 'defaultSecret';
    return jwt.verify(token, secret);
  }
}

================
File: src/utils/cloudinary.ts
================
import { v2 as cloudinary } from 'cloudinary';
import { config as dontenvcongif } from 'dotenv';

dontenvcongif({ path: '.env.development' });

export const CloudinaryConfig = {
  provide: 'CLOUDINARY',
  useFactory: () => {
    return cloudinary.config({
      cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
      api_key: process.env.CLOUDINARY_API_KEY,
      api_secret: process.env.CLOUDINARY_API_SECRET,
    });
  },
};

================
File: src/utils/file_upload/dto/file-upload-response.dto.ts
================
import { ApiProperty } from '@nestjs/swagger';

export class FileUploadResponse {
  @ApiProperty({
    description: 'URL segura del archivo subido',
    example:
      'https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg',
  })
  url: string;

  @ApiProperty({
    description: 'Tipo de archivo (image o pdf)',
    example: 'image',
    enum: ['image', 'pdf'],
  })
  type: string;
}

================
File: src/utils/file_upload/file_upload.controller.ts
================
import {
  Controller,
  Post,
  UploadedFile,
  UseInterceptors,
  ParseFilePipe,
  MaxFileSizeValidator,
  FileTypeValidator,
  HttpStatus,
} from '@nestjs/common';
import { FileInterceptor } from '@nestjs/platform-express';
import { FileUploadService } from './file_upload.service';
import {
  ApiTags,
  ApiOperation,
  ApiConsumes,
  ApiBody,
  ApiResponse,
} from '@nestjs/swagger';
import { Multer } from 'multer';

@Controller('files')
@ApiTags('Upload File')
export class FileUploadController {
  constructor(private readonly fileUploadService: FileUploadService) {}
  @Post('upload')
  @ApiOperation({
    summary: 'Subir archivo',
    description: 'Permite subir un archivo (imagen o PDF) a Cloudinary',
  })
  @ApiConsumes('multipart/form-data')
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        file: {
          type: 'string',
          format: 'binary',
          description: 'Archivo a subir (imagen o PDF)',
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.OK,
    description: 'Archivo subido exitosamente',
    schema: {
      type: 'object',
      properties: {
        url: {
          type: 'string',
          description: 'URL segura del archivo subido',
          example:
            'https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg',
        },
        type: {
          type: 'string',
          description: 'Tipo de archivo (image o pdf)',
          example: 'image',
        },
      },
    },
  })
  @ApiResponse({
    status: HttpStatus.BAD_REQUEST,
    description: 'Archivo inv√°lido o excede el tama√±o m√°ximo permitido',
  })
  @ApiResponse({
    status: HttpStatus.INTERNAL_SERVER_ERROR,
    description: 'Error al subir el archivo',
  })
  @UseInterceptors(FileInterceptor('file'))
  async uploadFile(
    @UploadedFile(
      new ParseFilePipe({
        validators: [
          new MaxFileSizeValidator({
            maxSize: 10 * 1024 * 1024, // 10MB para PDF, 5MB para im√°genes
            message:
              'File exceeds the maximum size of 10MB for PDFs or 5MB for images',
          }),
          new FileTypeValidator({
            fileType: /^(image\/(jpg|jpeg|png|webp|svg)|application\/pdf)$/i,
          }),
        ],
      }),
    )
    file: Multer.File,
  ) {
    try {
      const result = await this.fileUploadService.uploadFile(file);
      return result; // Retorna la URL y el tipo
    } catch (error) {
      throw new Error('File upload failed: ' + error.message); // Maneja errores aqu√≠
    }
  }
}

================
File: src/utils/file_upload/file_upload.module.ts
================
import { Module } from '@nestjs/common';
import { FileUploadController } from './file_upload.controller';
import { FileUploadService } from './file_upload.service';
import { CloudinaryConfig } from '../cloudinary';
import { FileUploadRepository } from './file_upload.repository';

@Module({
  imports: [],
  controllers: [FileUploadController],
  providers: [FileUploadService, CloudinaryConfig, FileUploadRepository],
})
export class FileUploadModule {}

================
File: src/utils/file_upload/file_upload.repository.ts
================
import { Injectable } from '@nestjs/common';
import { v2 as cloudinary } from 'cloudinary';
import { Multer } from 'multer';
import { ConfigService } from '@nestjs/config';

@Injectable()
export class FileUploadRepository {
  constructor(private configService: ConfigService) {
    cloudinary.config({
      cloud_name: this.configService.get('CLOUDINARY_CLOUD_NAME'),
      api_key: this.configService.get('CLOUDINARY_API_KEY'),
      api_secret: this.configService.get('CLOUDINARY_API_SECRET'),
    });
  }

  async uploadFile(file: Multer.File): Promise<any> {
    try {
      // Convertir el buffer a base64
      const base64String = `data:${file.mimetype};base64,${file.buffer.toString('base64')}`;
      console.log(base64String);
      console.log(file);

      // Determinar el tipo de recurso
      let resourceType = 'auto';
      if (file.mimetype.startsWith('image/')) {
        resourceType = 'image';
      } else if (file.mimetype === 'application/pdf') {
        resourceType = 'auto';
      }

      // Subir a Cloudinary
      const uploadResult = await cloudinary.uploader.upload(base64String, {
        resource_type: resourceType as 'auto' | 'image' | 'raw',
        folder: resourceType === 'image' ? 'images' : 'documents',
      });

      return uploadResult;
    } catch (error) {
      console.error('Error al subir el archivo a Cloudinary:', error);
      throw new Error('Error al subir el archivo a Cloudinary');
    }
  }

  /**
   * Sube un archivo a Cloudinary a partir de un DATA URI en base64
   * @param dataUri DATA URI en formato base64 (ej: data:application/pdf;base64,JVBERi0...)
   * @param filename Nombre del archivo (opcional)
   * @returns Resultado de la subida a Cloudinary
   */
  async uploadBase64File(dataUri: string, filename?: string): Promise<any> {
    try {
      if (!dataUri || !dataUri.includes('base64')) {
        throw new Error('El formato del DATA URI no es v√°lido');
      }

      // Determinar el tipo de recurso a partir del DATA URI
      let resourceType = 'auto';
      const mimeMatch = dataUri.match(/^data:([^;]+);base64,/);
      const mimeType = mimeMatch ? mimeMatch[1] : 'application/octet-stream';

      if (mimeType.startsWith('image/')) {
        resourceType = 'image';
      } else if (mimeType === 'application/pdf') {
        resourceType = 'auto';
      }

      // Configurar opciones de subida
      const uploadOptions: any = {
        resource_type: resourceType as 'auto' | 'image' | 'raw',
        folder: resourceType === 'image' ? 'images' : 'documents',
      };

      // A√±adir nombre de archivo si est√° disponible
      if (filename) {
        uploadOptions.public_id = filename.replace(/\.[^/.]+$/, ''); // Quitar extensi√≥n
      }

      // Subir a Cloudinary
      const uploadResult = await cloudinary.uploader.upload(
        dataUri,
        uploadOptions,
      );

      return uploadResult;
    } catch (error) {
      console.error('Error al subir el archivo base64 a Cloudinary:', error);
      throw new Error('Error al subir el archivo a Cloudinary');
    }
  }
}

================
File: src/utils/file_upload/file_upload.service.ts
================
import { Injectable } from '@nestjs/common';
import { FileUploadRepository } from './file_upload.repository';
import { Multer } from 'multer';

@Injectable()
export class FileUploadService {
  constructor(private readonly fileUploadRepository: FileUploadRepository) {}

  async uploadFile(file: Multer.File): Promise<{ url: string; type: string }> {
    const result = await this.fileUploadRepository.uploadFile(file);

    return {
      url: result.secure_url,
      type: file.mimetype.startsWith('image/') ? 'image' : 'pdf',
    };
  }

  /**
   * Sube un archivo a Cloudinary a partir de un DATA URI en base64
   * @param dataUri DATA URI en formato base64 (ej: data:application/pdf;base64,JVBERi0...)
   * @param filename Nombre del archivo (opcional)
   * @returns Objeto con la URL y el tipo de archivo
   */
  async uploadBase64File(
    dataUri: string,
    filename?: string,
  ): Promise<{ url: string; type: string }> {
    const result = await this.fileUploadRepository.uploadBase64File(
      dataUri,
      filename,
    );

    // Determinar el tipo de archivo a partir del DATA URI
    const mimeMatch = dataUri.match(/^data:([^;]+);base64,/);
    const mimeType = mimeMatch ? mimeMatch[1] : 'application/octet-stream';

    return {
      url: result.secure_url,
      type: mimeType.startsWith('image/') ? 'image' : 'pdf',
    };
  }
}

================
File: src/utils/fuctions.ts
================
export function calculateAge(birthDate: Date): number {
  if (!birthDate) return 0;

  const today = new Date();

  const birth = new Date(birthDate);

  if (isNaN(birth.getTime())) return 0;

  let age = today.getFullYear() - birthDate.getFullYear();
  const monthDiff = today.getMonth() - birthDate.getMonth();

  if (
    monthDiff < 0 ||
    (monthDiff === 0 && today.getDate() < birthDate.getDate())
  ) {
    age--;
  }
  return age;
}

================
File: src/utils/middlewares/loggingPrismaMiddleware.ts
================
import { Prisma } from '@prisma/client';

export function loggingPrismaMiddleware() {
  return async (params: Prisma.MiddlewareParams, next: Prisma.Middleware) => {
    const start = Date.now();

    // Log antes de ejecutar la consulta
    console.log(`\nüîç [PRISMA QUERY] ${params.model}.${params.action}`);
    console.log(`üìä Args:`, JSON.stringify(params.args, null, 2));

    const result = await next(params, params.args);

    const end = Date.now();
    const duration = end - start;

    // Log despu√©s de ejecutar la consulta
    console.log(`‚è±Ô∏è  Duration: ${duration}ms`);

    // Log del n√∫mero de resultados si es aplicable
    if (Array.isArray(result)) {
      console.log(`üìã Results count: ${result.length}`);
    } else if (result && typeof result === 'object') {
      console.log(`üìÑ Single result returned`);
    } else if (result === null) {
      console.log(`‚ùå No result found`);
    }

    // Advertir sobre consultas lentas
    if (duration > 1000) {
      console.log(`‚ö†Ô∏è  SLOW QUERY WARNING: ${duration}ms`);
    }

    console.log(`‚úÖ [QUERY COMPLETED] ${params.model}.${params.action}\n`);

    return result;
  };
}

================
File: src/utils/middlewares/tenantMiddleware.ts
================
import {
  Injectable,
  NestMiddleware,
  UnauthorizedException,
} from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { PrismaService } from 'src/prisma/prisma.service';
import { AuthHelper } from '../auth.helper';
import { RequestContextService } from '../../auth/services/request-context.service';

@Injectable()
export class TenantMiddleware implements NestMiddleware {
  constructor(
    private readonly prisma: PrismaService,
    private readonly requestContext: RequestContextService,
  ) {}

  async use(req: Request, res: Response, next: NextFunction) {
    try {
      // Permitir acceso a la documentaci√≥n de Swagger sin autenticaci√≥n
      const isSwaggerRequest =
        req.path === '/api' ||
        req.path.startsWith('/api/') ||
        req.originalUrl === '/api' ||
        req.originalUrl.startsWith('/api/');

      // Si es una petici√≥n de Swagger o relacionada con la documentaci√≥n, permitir sin autenticaci√≥n
      if (isSwaggerRequest || req.headers['referer']?.includes('/api')) {
        return next();
      }

      const authorization = req.headers['authorization'];
      if (!authorization) {
        throw new UnauthorizedException('Authorization header missing');
      }

      const token = authorization.replace('Bearer ', '');
      let payload: any;

      try {
        payload = AuthHelper.verifyToken(token);
      } catch (error) {
        console.log(error);
        throw new UnauthorizedException(`Invalid token: ${error.message}`);
      }

      // Establecer informaci√≥n del usuario en el contexto
      this.requestContext.setUser({
        id: payload.userId || payload.id,
        role: payload.role,
        tenant_id: payload.tenant_id,
        tenants: payload.tenants,
      });

      // Check if this is a patient with multiple tenants
      if (
        payload.role === 'patient' &&
        payload.tenants &&
        Array.isArray(payload.tenants) &&
        payload.tenants.length > 0
      ) {
        // Store tenants info for patients
        this.requestContext.setUserTenants(payload.tenants);

        // If there's a tenant_id in the header/request and it's in the list of
        // patient's tenants, use that one
        const requestTenantId =
          (req.headers['x-tenant-id'] as string) ||
          (req.query.tenantId as string) ||
          (req.body && req.body.tenantId);

        if (requestTenantId) {
          const matchingTenant = payload.tenants.find(
            (t) => t.id === requestTenantId,
          );
          if (matchingTenant) {
            // If the requested tenant is in the patient's tenants, set it as the current tenant
            const tenant = await this.prisma.tenant.findUnique({
              where: { id: requestTenantId },
            });
            if (tenant) {
              this.requestContext.setTenantId(requestTenantId);
              this.requestContext.setTenant({
                id: tenant.id,
                type: tenant.type,
                db_name: tenant.db_name,
              });
              // Mantener compatibilidad con req para otros middlewares
              req['tenant_id'] = requestTenantId;
              req['tenant'] = tenant;
              next();
              return;
            }
          }
        }

        // If no specific tenant is requested but the patient has tenants, use the first one
        const firstTenantId = payload.tenants[0].id;
        const tenant = await this.prisma.tenant.findUnique({
          where: { id: firstTenantId },
        });
        if (tenant) {
          this.requestContext.setTenantId(firstTenantId);
          this.requestContext.setTenant({
            id: tenant.id,
            type: tenant.type,
            db_name: tenant.db_name,
          });
          // Mantener compatibilidad con req para otros middlewares
          req['tenant_id'] = firstTenantId;
          req['tenant'] = tenant;
          next();
          return;
        }
      } else {
        // Regular handling for non-patient users
        const tenant_id = payload?.tenant_id;
        if (!tenant_id) {
          throw new UnauthorizedException('Tenant ID not found in token');
        }

        const tenant = await this.prisma.tenant.findUnique({
          where: {
            id: tenant_id,
          },
        });
        if (!tenant) {
          throw new UnauthorizedException('Invalid tenant');
        }

        // Establecer en el contexto CLS
        this.requestContext.setTenantId(tenant_id);
        this.requestContext.setTenant({
          id: tenant.id,
          type: tenant.type,
          db_name: tenant.db_name,
        });

        // Mantener compatibilidad con req para otros middlewares
        req['tenant_id'] = tenant_id;
        req['tenant'] = tenant;
      }

      next();
    } catch (error) {
      console.log(error);
      next(error);
    }
  }
}

================
File: src/utils/middlewares/tenantPrismaMiddleware.ts
================
import { Prisma } from '@prisma/client';
import { ClsService } from 'nestjs-cls';

export function tenantPrismaMiddleware(clsService?: ClsService) {
  return async (params: Prisma.MiddlewareParams, next: Prisma.Middleware) => {
    const tenantRules: Record<
      string,
      { actions: string[]; requireTenantId: boolean }
    > = {
      user: { actions: ['findMany'], requireTenantId: true },
      appointment: {
        actions: ['create', 'findMany', 'findFirst'],
        requireTenantId: true,
      },
      medical_event: {
        actions: ['findMany', 'create', 'update'],
        requireTenantId: true,
      },
      prescription: {
        actions: ['findMany', 'create', 'update'],
        requireTenantId: false,
      },
      transaction: { actions: ['findMany', 'create'], requireTenantId: true },
      organization: { actions: ['update'], requireTenantId: true },
      patient_tenant: { actions: ['create', 'delete'], requireTenantId: true },
    };

    const modelRules = tenantRules[params.model];

    if (!modelRules || !modelRules.actions.includes(params.action)) {
      return next(params, params.args);
    }

    try {
      // Intentar obtener tenant_id del contexto CLS primero, luego fallback a global
      let tenant_id = params.args?.tenant_id;

      if (!tenant_id && clsService) {
        try {
          tenant_id = clsService.get('tenantId');
        } catch {
          // Si CLS no est√° disponible, usar global como fallback
          tenant_id = global.tenant_id;
        }
      } else if (!tenant_id) {
        tenant_id = global.tenant_id;
      }

      // Verificar si ya hay un filtro multi-tenant en el where
      const hasMultiTenantFilter =
        params.args?.where?.tenant_id &&
        typeof params.args.where.tenant_id === 'object' &&
        params.args.where.tenant_id.in;

      // Si ya tiene filtro multi-tenant, permitir la consulta sin modificar
      if (hasMultiTenantFilter) {
        // Solo log en desarrollo para debugging
        if (process.env.NODE_ENV === 'development') {
          console.log(
            `Multi-tenant query detected for ${params.model}, skipping middleware tenant filter`,
          );
        }
        return next(params, params.args);
      }

      if (modelRules.requireTenantId && !tenant_id) {
        throw new Error(
          `Tenant verification failed: missing tenant_id for ${params.model} in ${params.action} action.`,
        );
      }

      if (['create'].includes(params.action)) {
        params.args.data = {
          ...params.args.data,
          tenant_id: tenant_id,
        };
      }

      if (['findMany', 'findFirst', 'findUnique'].includes(params.action)) {
        // Para prescripciones, no aplicar filtro autom√°tico de tenant si ya hay l√≥gica OR
        // que incluye consultas multitenant o auto-asignadas
        if (
          params.model === 'prescription' &&
          params.args?.where?.OR &&
          Array.isArray(params.args.where.OR)
        ) {
          // Si ya hay l√≥gica OR en la consulta de prescripciones, no modificar
          // (esto indica que es una consulta multitenant manejada manualmente)
          return next(params, params.args);
        }

        params.args.where = {
          ...params.args.where,
          tenant_id: tenant_id,
        };
      }

      return next(params, params.args);
    } catch (error) {
      console.error('Error in tenantPrismaMiddleware:', error);
      throw new Error(`Middleware error: ${error.message}`);
    }
  };
}

================
File: src/utils/pagination.helper.ts
================
export interface PaginationParams {
  page?: number | string;
  pageSize?: number | string;
  orderBy?: string;
  orderDirection?: 'asc' | 'desc';
}

export function parsePaginationAndSorting(params: PaginationParams) {
  const page = params.page && Number(params.page) > 0 ? Number(params.page) : 1;
  const pageSize =
    params.pageSize && Number(params.pageSize) > 0
      ? Number(params.pageSize)
      : 10;
  const skip = (page - 1) * pageSize;
  const take = pageSize;

  const orderBy = params.orderBy || 'id';
  const orderDirection = params.orderDirection || 'asc';

  return { skip, take, orderBy, orderDirection };
}

================
File: test/app.e2e-spec.ts
================
import { Test, TestingModule } from '@nestjs/testing';
import { INestApplication } from '@nestjs/common';
import * as request from 'supertest';
import { AppModule } from './../src/app.module';

describe('AppController (e2e)', () => {
  let app: INestApplication;

  beforeEach(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    await app.init();
  });

  it('/ (GET)', () => {
    return request(app.getHttpServer())
      .get('/')
      .expect(200)
      .expect('Hello World!');
  });
});

================
File: test/jest-e2e.json
================
{
  "moduleFileExtensions": ["js", "json", "ts"],
  "rootDir": ".",
  "testEnvironment": "node",
  "testRegex": ".e2e-spec.ts$",
  "transform": {
    "^.+\\.(t|j)s$": "ts-jest"
  }
}

================
File: tsconfig.build.json
================
{
  "extends": "./tsconfig.json",
  "exclude": ["node_modules", "test", "dist", "**/*spec.ts"]
}

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "ES6",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./",
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": false,
    "noImplicitAny": false,
    "strictBindCallApply": false,
    "forceConsistentCasingInFileNames": false,
    "noFallthroughCasesInSwitch": false
  }
}



================================================================
End of Codebase
================================================================
